v8-version,9,4,146,19,-node.13,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7800e0000,0x7ff783c2c000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ffd09330000,0x7ffd09544000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ffd07f60000,0x7ffd08022000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ffd06a90000,0x7ffd06e2d000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ffd080e0000,0x7ffd08151000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ffd07100000,0x7ffd07215000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ffd04100000,0x7ffd0432e000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ffd080d0000,0x7ffd080d8000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ffd067a0000,0x7ffd068b1000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ffd07970000,0x7ffd07a1e000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ffd07220000,0x7ffd075aa000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ffd078c0000,0x7ffd07967000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ffd088e0000,0x7ffd08984000,0
shared-library,C:\\WINDOWS\\System32\\OLEAUT32.dll,0x7ffd08800000,0x7ffd088d7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ffd05240000,0x7ffd0526d000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ffd05c50000,0x7ffd05c78000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ffd06e30000,0x7ffd06eca000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ffd081d0000,0x7ffd0837a000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ffd06a60000,0x7ffd06a86000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ffd09280000,0x7ffd092a9000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ffd068c0000,0x7ffd069d2000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ffd06ed0000,0x7ffd07036000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ffcfc680000,0x7ffcfc6b4000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\bcrypt.dll,0x7ffd05fe0000,0x7ffd06008000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ffd05ea0000,0x7ffd05eac000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ffd07a20000,0x7ffd07a52000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ffd06600000,0x7ffd0664d000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ffd065e0000,0x7ffd065f3000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ffd03920000,0x7ffd039cb000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ffd05bb0000,0x7ffd05c19000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ffd05760000,0x7ffd05778000,0
shared-library,C:\\WINDOWS\\System32\\bcryptPrimitives.dll,0x7ffd069e0000,0x7ffd06a5b000,0
shared-library-end
profiler,begin,1000
tick,0x7ff780319da0,242470,0,0x0,6
new,CodeRange,0x12200000000,0
new,MemoryChunk,0xc6f6080000,262144
new,MemoryChunk,0x2a0b3f40000,262144
new,MemoryChunk,0x2114240000,262144
new,MemoryChunk,0xe1b08c0000,262144
new,MemoryChunk,0x16031bc0000,262144
heap-capacity,1031072
heap-available,4346136384
new,MemoryChunk,0xaefa100000,262144
new,MemoryChunk,0x13234ec0000,262144
new,MemoryChunk,0x32fd2240000,262144
new,MemoryChunk,0x3644b640000,262144
new,MemoryChunk,0x9b193c0000,262144
new,MemoryChunk,0x32763ac0000,262144
new,MemoryChunk,0x3ef52480000,262144
new,MemoryChunk,0x12200040000,262144
new,MemoryChunk,0x1cf0fa80000,262144
code-creation,Builtin,2,246582,0x7ff780c468c4,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,246606,0x7ff780c46e24,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,246614,0x7ff780c47004,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,246621,0x7ff780c47284,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,246627,0x7ff780c47364,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,246635,0x7ff780c474e4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,246641,0x7ff780c47584,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,246647,0x7ff780c475c4,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,246654,0x7ff780c47744,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,246706,0x7ff780c47904,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,246716,0x7ff780c47ac4,104,CallBoundFunction
code-creation,Builtin,2,246723,0x7ff780c47b44,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,246729,0x7ff780c47bc4,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,246737,0x7ff780c47c44,120,Call_ReceiverIsAny
code-creation,Builtin,2,246743,0x7ff780c47cc4,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,246750,0x7ff780c480c4,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,246757,0x7ff780c484c4,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,246764,0x7ff780c48904,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,246771,0x7ff780c48d44,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,246778,0x7ff780c49184,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,246785,0x7ff780c495c4,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,246792,0x7ff780c49984,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,246799,0x7ff780c49d44,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,246805,0x7ff780c4a104,736,CallProxy
code-creation,Builtin,2,246812,0x7ff780c4a404,148,CallVarargs
code-creation,Builtin,2,246817,0x7ff780c4a4a4,944,CallWithSpread
code-creation,Builtin,2,246824,0x7ff780c4a864,1956,CallWithSpread_Baseline
code-creation,Builtin,2,246830,0x7ff780c4b024,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,246837,0x7ff780c4b7c4,864,CallWithArrayLike
code-creation,Builtin,2,246843,0x7ff780c4bb44,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,246849,0x7ff780c4c264,156,CallForwardVarargs
code-creation,Builtin,2,246856,0x7ff780c4c304,156,CallFunctionForwardVarargs
code-creation,Builtin,2,246862,0x7ff780c4c3a4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,246868,0x7ff780c4c444,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,246875,0x7ff780c4c544,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,246882,0x7ff780c4c684,28,ConstructFunction
code-creation,Builtin,2,246888,0x7ff780c4c6a4,104,ConstructBoundFunction
code-creation,Builtin,2,246895,0x7ff780c4c724,28,ConstructedNonConstructable
code-creation,Builtin,2,246901,0x7ff780c4c744,100,Construct
code-creation,Builtin,2,246907,0x7ff780c4c7c4,148,ConstructVarargs
code-creation,Builtin,2,246914,0x7ff780c4c864,968,ConstructWithSpread
code-creation,Builtin,2,246920,0x7ff780c4cc44,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,246927,0x7ff780c4d324,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,246933,0x7ff780c4da24,924,ConstructWithArrayLike
code-creation,Builtin,2,246940,0x7ff780c4ddc4,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,246946,0x7ff780c4e444,196,ConstructForwardVarargs
code-creation,Builtin,2,246953,0x7ff780c4e524,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,246960,0x7ff780c4e604,804,Construct_Baseline
code-creation,Builtin,2,246966,0x7ff780c4e944,820,Construct_WithFeedback
code-creation,Builtin,2,246972,0x7ff780c4ec84,476,JSConstructStubGeneric
code-creation,Builtin,2,246979,0x7ff780c4ee64,376,JSBuiltinsConstructStub
code-creation,Builtin,2,246985,0x7ff780c4efe4,676,FastNewObject
code-creation,Builtin,2,246991,0x7ff780c4f2a4,292,FastNewClosure
code-creation,Builtin,2,246998,0x7ff780c4f3e4,720,ConstructProxy
code-creation,Builtin,2,247004,0x7ff780c4f6c4,360,JSEntry
code-creation,Builtin,2,247010,0x7ff780c4f844,360,JSConstructEntry
code-creation,Builtin,2,247016,0x7ff780c4f9c4,360,JSRunMicrotasksEntry
code-creation,Builtin,2,247022,0x7ff780c4fb44,96,JSEntryTrampoline
code-creation,Builtin,2,247028,0x7ff780c4fbc4,96,JSConstructEntryTrampoline
code-creation,Builtin,2,247035,0x7ff780c4fc44,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,247042,0x7ff780c4fd64,1116,StringCodePointAt
code-creation,Builtin,2,247048,0x7ff780c501c4,1552,StringFromCodePointAt
code-creation,Builtin,2,247055,0x7ff780c507e4,544,StringEqual
code-creation,Builtin,2,247084,0x7ff780c50a24,276,StringGreaterThan
code-creation,Builtin,2,247093,0x7ff780c50b44,276,StringGreaterThanOrEqual
code-creation,Builtin,2,247100,0x7ff780c50c64,276,StringLessThan
code-creation,Builtin,2,247106,0x7ff780c50d84,276,StringLessThanOrEqual
code-creation,Builtin,2,247112,0x7ff780c50ea4,2492,StringSubstring
code-creation,Builtin,2,247118,0x7ff780c51864,80,OrderedHashTableHealIndex
code-creation,Builtin,2,247125,0x7ff780c518c4,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,247131,0x7ff780c51d64,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,247138,0x7ff780c51dc4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,247145,0x7ff780c51e24,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,247151,0x7ff780c51e84,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,247158,0x7ff780c51ee4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,247165,0x7ff780c51f44,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,247172,0x7ff780c51fa4,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,247178,0x7ff780c52004,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,247185,0x7ff780c520e4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,247192,0x7ff780c52124,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,247198,0x7ff780c52384,56,BaselineOnStackReplacement
code-creation,Builtin,2,247204,0x7ff780c523c4,84,BaselineLeaveFrame
code-creation,Builtin,2,247210,0x7ff780c52424,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,247217,0x7ff780c52504,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,247224,0x7ff780c52604,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,247231,0x7ff780c526e4,1004,CompileLazy
code-creation,Builtin,2,247237,0x7ff780c52ae4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,247244,0x7ff780c52b44,252,InstantiateAsmJs
code-creation,Builtin,2,247250,0x7ff780c52c44,32,NotifyDeoptimized
code-creation,Builtin,2,247256,0x7ff780c52c84,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,247263,0x7ff780c52fa4,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,247269,0x7ff780c532c4,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,247276,0x7ff780c535e4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,247282,0x7ff780c53904,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,247289,0x7ff780c53944,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,247295,0x7ff780c53984,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,247305,0x7ff780c539c4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,247312,0x7ff780c53a24,288,CallApiCallback
code-creation,Builtin,2,247318,0x7ff780c53b64,268,CallApiGetter
code-creation,Builtin,2,247325,0x7ff780c53c84,12,HandleApiCall
code-creation,Builtin,2,247331,0x7ff780c53ca4,12,HandleApiCallAsFunction
code-creation,Builtin,2,247338,0x7ff780c53cc4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,247346,0x7ff780c53ce4,64,AllocateInYoungGeneration
code-creation,Builtin,2,247356,0x7ff780c53d44,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,247366,0x7ff780c53d84,64,AllocateInOldGeneration
code-creation,Builtin,2,247376,0x7ff780c53de4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,247386,0x7ff780c53e24,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,247393,0x7ff780c53fe4,496,GrowFastDoubleElements
code-creation,Builtin,2,247399,0x7ff780c541e4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,247406,0x7ff780c54384,388,DebugBreakTrampoline
code-creation,Builtin,2,247412,0x7ff780c54524,180,ToNumber
code-creation,Builtin,2,247418,0x7ff780c545e4,292,ToNumber_Baseline
code-creation,Builtin,2,247424,0x7ff780c54724,360,ToNumeric_Baseline
code-creation,Builtin,2,247431,0x7ff780c548a4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,247437,0x7ff780c54924,212,ToNumberConvertBigInt
code-creation,Builtin,2,247443,0x7ff780c54a04,132,Typeof
code-creation,Builtin,2,247449,0x7ff780c54aa4,104,BigIntToI64
code-creation,Builtin,2,247457,0x7ff780c54b24,4,BigIntToI32Pair
code-creation,Builtin,2,247464,0x7ff780c54b44,232,I64ToBigInt
code-creation,Builtin,2,247470,0x7ff780c54c44,4,I32PairToBigInt
code-creation,Builtin,2,247476,0x7ff780c54c64,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,247483,0x7ff780c54ce4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,247489,0x7ff780c55d84,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,247495,0x7ff780c59b84,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,247502,0x7ff780c59ca4,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,247508,0x7ff780c59ce4,12,LoadIC_StringLength
code-creation,Builtin,2,247514,0x7ff780c59d04,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,247521,0x7ff780c59d24,3056,LoadIC_NoFeedback
code-creation,Builtin,2,247527,0x7ff780c5a924,32,StoreGlobalIC_Slow
code-creation,Builtin,2,247533,0x7ff780c5a964,7332,StoreIC_NoFeedback
code-creation,Builtin,2,247539,0x7ff780c5c624,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,247546,0x7ff780c5c6e4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,247553,0x7ff780c5c744,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,247560,0x7ff780c5c844,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,247567,0x7ff780c5c944,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,247575,0x7ff780c5ca44,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,247582,0x7ff780c5cb44,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,247589,0x7ff780c60364,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,247596,0x7ff780c62904,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,247603,0x7ff780c65d44,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,247610,0x7ff780c67524,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,247617,0x7ff780c69664,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,247625,0x7ff780c6e224,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,247632,0x7ff780c70364,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,247639,0x7ff780c72e84,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,247646,0x7ff780c731a4,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,247652,0x7ff780c73264,72,HasIndexedInterceptorIC
code-creation,Builtin,2,247658,0x7ff780c732c4,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,247665,0x7ff780c73344,224,DynamicCheckMaps
code-creation,Builtin,2,247672,0x7ff780c73444,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,247678,0x7ff780c734c4,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,247685,0x7ff780c73584,152,EnqueueMicrotask
code-creation,Builtin,2,247691,0x7ff780c73624,8,RunMicrotasksTrampoline
code-creation,Builtin,2,247697,0x7ff780c73644,3476,RunMicrotasks
code-creation,Builtin,2,247704,0x7ff780c743e4,2636,HasProperty
code-creation,Builtin,2,247710,0x7ff780c74e44,1156,DeleteProperty
code-creation,Builtin,2,247716,0x7ff780c752e4,1972,CopyDataProperties
code-creation,Builtin,2,247722,0x7ff780c75aa4,9184,SetDataProperties
code-creation,Builtin,2,247728,0x7ff780c77ea4,28,Abort
code-creation,Builtin,2,247734,0x7ff780c77ec4,28,AbortCSAAssert
code-creation,Builtin,2,247740,0x7ff780c77ee4,12,EmptyFunction
code-creation,Builtin,2,247746,0x7ff780c77f04,12,Illegal
code-creation,Builtin,2,247752,0x7ff780c77f24,12,StrictPoisonPillThrower
code-creation,Builtin,2,247758,0x7ff780c77f44,12,UnsupportedThrower
code-creation,Builtin,2,247764,0x7ff780c77f64,64,ReturnReceiver
code-creation,Builtin,2,247771,0x7ff780c77fc4,28,ArrayConstructor
code-creation,Builtin,2,247777,0x7ff780c77fe4,404,ArrayConstructorImpl
code-creation,Builtin,2,247784,0x7ff780c78184,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,247791,0x7ff780c78264,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,247798,0x7ff780c78344,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,247828,0x7ff780c78404,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,247838,0x7ff780c784c4,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,247846,0x7ff780c78584,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,247853,0x7ff780c78644,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,247860,0x7ff780c78704,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,247868,0x7ff780c787c4,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,247875,0x7ff780c789e4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,247882,0x7ff780c78be4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,247889,0x7ff780c78da4,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,247896,0x7ff780c78f44,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,247904,0x7ff780c79104,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,247911,0x7ff780c792a4,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,247919,0x7ff780c79484,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,247927,0x7ff780c79624,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,247933,0x7ff780c79684,12,ArrayConcat
code-creation,Builtin,2,247939,0x7ff780c796a4,12,ArrayPrototypeFill
code-creation,Builtin,2,247945,0x7ff780c796c4,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,247951,0x7ff780c79a84,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,247959,0x7ff780c79b24,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,247970,0x7ff780c79c04,548,ArrayIncludes
code-creation,Builtin,2,248017,0x7ff780c79e44,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,248027,0x7ff780c7a1a4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,248038,0x7ff780c7a224,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,248047,0x7ff780c7a2a4,552,ArrayIndexOf
code-creation,Builtin,2,248055,0x7ff780c7a4e4,12,ArrayPop
code-creation,Builtin,2,248063,0x7ff780c7a504,616,ArrayPrototypePop
code-creation,Builtin,2,248071,0x7ff780c7a784,12,ArrayPush
code-creation,Builtin,2,248078,0x7ff780c7a7a4,2424,ArrayPrototypePush
code-creation,Builtin,2,248086,0x7ff780c7b124,12,ArrayShift
code-creation,Builtin,2,248094,0x7ff780c7b144,12,ArrayUnshift
code-creation,Builtin,2,248102,0x7ff780c7b164,956,CloneFastJSArray
code-creation,Builtin,2,248111,0x7ff780c7b524,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,248120,0x7ff780c7bdc4,976,ExtractFastJSArray
code-creation,Builtin,2,248128,0x7ff780c7c1a4,260,ArrayPrototypeEntries
code-creation,Builtin,2,248136,0x7ff780c7c2c4,248,ArrayPrototypeKeys
code-creation,Builtin,2,248145,0x7ff780c7c3c4,260,ArrayPrototypeValues
code-creation,Builtin,2,248153,0x7ff780c7c4e4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,248162,0x7ff780c7d644,4168,FlattenIntoArray
code-creation,Builtin,2,248173,0x7ff780c7e6a4,4172,FlatMapIntoArray
code-creation,Builtin,2,248181,0x7ff780c7f704,372,ArrayPrototypeFlat
code-creation,Builtin,2,248189,0x7ff780c7f884,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,248197,0x7ff780c7fa44,12,ArrayBufferConstructor
code-creation,Builtin,2,248206,0x7ff780c7fa64,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,248214,0x7ff780c7fa84,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,248222,0x7ff780c7faa4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,248231,0x7ff780c7fac4,804,AsyncFunctionEnter
code-creation,Builtin,2,248239,0x7ff780c7fe04,132,AsyncFunctionReject
code-creation,Builtin,2,248247,0x7ff780c7fea4,128,AsyncFunctionResolve
code-creation,Builtin,2,248255,0x7ff780c7ff44,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,248264,0x7ff780c7ff64,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,248273,0x7ff780c80a64,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,248283,0x7ff780c81564,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,248291,0x7ff780c81624,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,248301,0x7ff780c816e4,12,BigIntConstructor
code-creation,Builtin,2,248313,0x7ff780c81704,12,BigIntAsUintN
code-creation,Builtin,2,248321,0x7ff780c81724,12,BigIntAsIntN
code-creation,Builtin,2,248329,0x7ff780c81744,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,248337,0x7ff780c81764,12,BigIntPrototypeToString
code-creation,Builtin,2,248346,0x7ff780c81784,12,BigIntPrototypeValueOf
code-creation,Builtin,2,248354,0x7ff780c817a4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,248362,0x7ff780c817c4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,248371,0x7ff780c817e4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,248380,0x7ff780c81804,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,248389,0x7ff780c81824,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,248397,0x7ff780c81844,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,248406,0x7ff780c81864,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,248414,0x7ff780c81884,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,248423,0x7ff780c818a4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,248431,0x7ff780c818c4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,248440,0x7ff780c818e4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,248451,0x7ff780c81904,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,248460,0x7ff780c81924,12,CallSitePrototypeGetThis
code-creation,Builtin,2,248468,0x7ff780c81944,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,248477,0x7ff780c81964,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,248485,0x7ff780c81984,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,248494,0x7ff780c819a4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,248502,0x7ff780c819c4,12,CallSitePrototypeIsNative
code-creation,Builtin,2,248510,0x7ff780c819e4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,248518,0x7ff780c81a04,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,248526,0x7ff780c81a24,12,CallSitePrototypeToString
code-creation,Builtin,2,248534,0x7ff780c81a44,12,ConsoleDebug
code-creation,Builtin,2,248542,0x7ff780c81a64,12,ConsoleError
code-creation,Builtin,2,248550,0x7ff780c81a84,12,ConsoleInfo
code-creation,Builtin,2,248559,0x7ff780c81aa4,12,ConsoleLog
code-creation,Builtin,2,248566,0x7ff780c81ac4,12,ConsoleWarn
code-creation,Builtin,2,248575,0x7ff780c81ae4,12,ConsoleDir
code-creation,Builtin,2,248586,0x7ff780c81b04,12,ConsoleDirXml
code-creation,Builtin,2,248594,0x7ff780c81b24,12,ConsoleTable
code-creation,Builtin,2,248601,0x7ff780c81b44,12,ConsoleTrace
code-creation,Builtin,2,248609,0x7ff780c81b64,12,ConsoleGroup
code-creation,Builtin,2,248617,0x7ff780c81b84,12,ConsoleGroupCollapsed
code-creation,Builtin,2,248626,0x7ff780c81ba4,12,ConsoleGroupEnd
code-creation,Builtin,2,248633,0x7ff780c81bc4,12,ConsoleClear
code-creation,Builtin,2,248641,0x7ff780c81be4,12,ConsoleCount
code-creation,Builtin,2,248649,0x7ff780c81c04,12,ConsoleCountReset
code-creation,Builtin,2,248657,0x7ff780c81c24,12,ConsoleAssert
code-creation,Builtin,2,248665,0x7ff780c81c44,12,ConsoleProfile
code-creation,Builtin,2,248673,0x7ff780c81c64,12,ConsoleProfileEnd
code-creation,Builtin,2,248681,0x7ff780c81c84,12,ConsoleTime
code-creation,Builtin,2,248689,0x7ff780c81ca4,12,ConsoleTimeLog
code-creation,Builtin,2,248697,0x7ff780c81cc4,12,ConsoleTimeEnd
code-creation,Builtin,2,248705,0x7ff780c81ce4,12,ConsoleTimeStamp
code-creation,Builtin,2,248716,0x7ff780c81d04,12,ConsoleContext
code-creation,Builtin,2,248724,0x7ff780c81d24,12,DataViewConstructor
code-creation,Builtin,2,248732,0x7ff780c81d44,12,DateConstructor
code-creation,Builtin,2,248740,0x7ff780c81d64,216,DatePrototypeGetDate
code-creation,Builtin,2,248749,0x7ff780c81e44,216,DatePrototypeGetDay
code-creation,Builtin,2,248757,0x7ff780c81f24,216,DatePrototypeGetFullYear
code-creation,Builtin,2,248767,0x7ff780c82004,216,DatePrototypeGetHours
code-creation,Builtin,2,248776,0x7ff780c820e4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,248785,0x7ff780c821c4,216,DatePrototypeGetMinutes
code-creation,Builtin,2,248793,0x7ff780c822a4,216,DatePrototypeGetMonth
code-creation,Builtin,2,248802,0x7ff780c82384,216,DatePrototypeGetSeconds
code-creation,Builtin,2,248810,0x7ff780c82464,124,DatePrototypeGetTime
code-creation,Builtin,2,248819,0x7ff780c824e4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,248827,0x7ff780c825c4,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,248835,0x7ff780c826a4,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,248844,0x7ff780c82784,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,248855,0x7ff780c82864,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,248864,0x7ff780c82944,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,248872,0x7ff780c82a24,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,248881,0x7ff780c82b04,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,248889,0x7ff780c82be4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,248897,0x7ff780c82cc4,124,DatePrototypeValueOf
code-creation,Builtin,2,248905,0x7ff780c82d44,352,DatePrototypeToPrimitive
code-creation,Builtin,2,248914,0x7ff780c82ec4,12,DatePrototypeGetYear
code-creation,Builtin,2,248922,0x7ff780c82ee4,12,DatePrototypeSetYear
code-creation,Builtin,2,248930,0x7ff780c82f04,12,DateNow
code-creation,Builtin,2,248938,0x7ff780c82f24,12,DateParse
code-creation,Builtin,2,248947,0x7ff780c82f44,12,DatePrototypeSetDate
code-creation,Builtin,2,248955,0x7ff780c82f64,12,DatePrototypeSetFullYear
code-creation,Builtin,2,248963,0x7ff780c82f84,12,DatePrototypeSetHours
code-creation,Builtin,2,248970,0x7ff780c82fa4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,248979,0x7ff780c82fc4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,248987,0x7ff780c82fe4,12,DatePrototypeSetMonth
code-creation,Builtin,2,248998,0x7ff780c83004,12,DatePrototypeSetSeconds
code-creation,Builtin,2,249006,0x7ff780c83024,12,DatePrototypeSetTime
code-creation,Builtin,2,249015,0x7ff780c83044,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,249023,0x7ff780c83064,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,249031,0x7ff780c83084,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,249039,0x7ff780c830a4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,249048,0x7ff780c830c4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,249056,0x7ff780c830e4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,249065,0x7ff780c83104,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,249073,0x7ff780c83124,12,DatePrototypeToDateString
code-creation,Builtin,2,249081,0x7ff780c83144,12,DatePrototypeToISOString
code-creation,Builtin,2,249090,0x7ff780c83164,12,DatePrototypeToUTCString
code-creation,Builtin,2,249098,0x7ff780c83184,12,DatePrototypeToString
code-creation,Builtin,2,249106,0x7ff780c831a4,12,DatePrototypeToTimeString
code-creation,Builtin,2,249114,0x7ff780c831c4,12,DatePrototypeToJson
code-creation,Builtin,2,249123,0x7ff780c831e4,12,DateUTC
code-creation,Builtin,2,249133,0x7ff780c83204,12,ErrorConstructor
code-creation,Builtin,2,249142,0x7ff780c83224,12,ErrorCaptureStackTrace
code-creation,Builtin,2,249150,0x7ff780c83244,12,ErrorPrototypeToString
code-creation,Builtin,2,249158,0x7ff780c83264,12,FunctionConstructor
code-creation,Builtin,2,249166,0x7ff780c83284,68,FunctionPrototypeApply
code-creation,Builtin,2,249174,0x7ff780c832e4,12,FunctionPrototypeBind
code-creation,Builtin,2,249183,0x7ff780c83304,32,FunctionPrototypeCall
code-creation,Builtin,2,249191,0x7ff780c83344,12,FunctionPrototypeToString
code-creation,Builtin,2,249199,0x7ff780c83364,192,CreateIterResultObject
code-creation,Builtin,2,249207,0x7ff780c83444,788,CreateGeneratorObject
code-creation,Builtin,2,249215,0x7ff780c83764,12,GeneratorFunctionConstructor
code-creation,Builtin,2,249224,0x7ff780c83784,412,GeneratorPrototypeNext
code-creation,Builtin,2,249232,0x7ff780c83924,420,GeneratorPrototypeReturn
code-creation,Builtin,2,249243,0x7ff780c83ae4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,249253,0x7ff780c83ca4,12,AsyncFunctionConstructor
code-creation,Builtin,2,249262,0x7ff780c83cc4,372,SuspendGeneratorBaseline
code-creation,Builtin,2,249273,0x7ff780c83e44,88,ResumeGeneratorBaseline
code-creation,Builtin,2,249281,0x7ff780c83ea4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,249290,0x7ff780c83ee4,12,GlobalDecodeURI
code-creation,Builtin,2,249299,0x7ff780c83f04,12,GlobalDecodeURIComponent
code-creation,Builtin,2,249307,0x7ff780c83f24,12,GlobalEncodeURI
code-creation,Builtin,2,249315,0x7ff780c83f44,12,GlobalEncodeURIComponent
code-creation,Builtin,2,249323,0x7ff780c83f64,12,GlobalEscape
code-creation,Builtin,2,249331,0x7ff780c83f84,12,GlobalUnescape
code-creation,Builtin,2,249338,0x7ff780c83fa4,12,GlobalEval
code-creation,Builtin,2,249346,0x7ff780c83fc4,132,GlobalIsFinite
code-creation,Builtin,2,249354,0x7ff780c84064,124,GlobalIsNaN
code-creation,Builtin,2,249362,0x7ff780c840e4,12,JsonParse
code-creation,Builtin,2,249370,0x7ff780c84104,12,JsonStringify
code-creation,Builtin,2,249377,0x7ff780c84124,4608,LoadIC
code-creation,Builtin,2,249386,0x7ff780c85344,4296,LoadIC_Megamorphic
code-creation,Builtin,2,249396,0x7ff780c86424,4520,LoadIC_Noninlined
code-creation,Builtin,2,249407,0x7ff780c875e4,44,LoadICTrampoline
code-creation,Builtin,2,249415,0x7ff780c87624,24,LoadICBaseline
code-creation,Builtin,2,249423,0x7ff780c87644,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,249432,0x7ff780c87684,7380,LoadSuperIC
code-creation,Builtin,2,249439,0x7ff780c89364,24,LoadSuperICBaseline
code-creation,Builtin,2,249447,0x7ff780c89384,8148,KeyedLoadIC
code-creation,Builtin,2,249455,0x7ff780c8b364,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,249463,0x7ff780c8e6a4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,249471,0x7ff780c8e6e4,24,KeyedLoadICBaseline
code-creation,Builtin,2,249479,0x7ff780c8e704,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,249488,0x7ff780c8e744,5104,StoreGlobalIC
code-creation,Builtin,2,249496,0x7ff780c8fb44,44,StoreGlobalICTrampoline
code-creation,Builtin,2,249504,0x7ff780c8fb84,24,StoreGlobalICBaseline
code-creation,Builtin,2,249512,0x7ff780c8fba4,5340,StoreIC
code-creation,Builtin,2,249520,0x7ff780c91084,44,StoreICTrampoline
code-creation,Builtin,2,249529,0x7ff780c910c4,24,StoreICBaseline
code-creation,Builtin,2,249540,0x7ff780c910e4,5780,KeyedStoreIC
code-creation,Builtin,2,249548,0x7ff780c92784,44,KeyedStoreICTrampoline
code-creation,Builtin,2,249556,0x7ff780c927c4,24,KeyedStoreICBaseline
code-creation,Builtin,2,249564,0x7ff780c927e4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,249572,0x7ff780c92984,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,249581,0x7ff780c929a4,140,LookupContextBaseline
code-creation,Builtin,2,249589,0x7ff780c92a44,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,249598,0x7ff780c92ae4,3244,LoadGlobalIC
code-creation,Builtin,2,249606,0x7ff780c937a4,3224,LoadGlobalICInsideTypeof
code-creation,Builtin,2,249614,0x7ff780c94444,44,LoadGlobalICTrampoline
code-creation,Builtin,2,249622,0x7ff780c94484,24,LoadGlobalICBaseline
code-creation,Builtin,2,249630,0x7ff780c944a4,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,249638,0x7ff780c944e4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,249647,0x7ff780c94504,140,LookupGlobalICBaseline
code-creation,Builtin,2,249655,0x7ff780c945a4,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,249664,0x7ff780c94644,2064,CloneObjectIC
code-creation,Builtin,2,249675,0x7ff780c94e64,24,CloneObjectICBaseline
code-creation,Builtin,2,249683,0x7ff780c94e84,1988,CloneObjectIC_Slow
code-creation,Builtin,2,249691,0x7ff780c95664,2756,KeyedHasIC
code-creation,Builtin,2,249699,0x7ff780c96144,24,KeyedHasICBaseline
code-creation,Builtin,2,249707,0x7ff780c96164,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,249715,0x7ff780c96bc4,1436,IterableToList
code-creation,Builtin,2,249723,0x7ff780c97164,1240,IterableToFixedArray
code-creation,Builtin,2,249760,0x7ff780c97644,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,249772,0x7ff780c97944,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,249781,0x7ff780c97984,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,249790,0x7ff780c97a04,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,249799,0x7ff780c97de4,1616,StringListFromIterable
code-creation,Builtin,2,249807,0x7ff780c98444,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,249815,0x7ff780c98924,4156,MapConstructor
code-creation,Builtin,2,249823,0x7ff780c99964,1996,MapPrototypeSet
code-creation,Builtin,2,249832,0x7ff780c9a144,1524,MapPrototypeDelete
code-creation,Builtin,2,249842,0x7ff780c9a744,204,MapPrototypeGet
code-creation,Builtin,2,249851,0x7ff780c9a824,164,MapPrototypeHas
code-creation,Builtin,2,249859,0x7ff780c9a8e4,12,MapPrototypeClear
code-creation,Builtin,2,249867,0x7ff780c9a904,284,MapPrototypeEntries
code-creation,Builtin,2,249875,0x7ff780c9aa24,144,MapPrototypeGetSize
code-creation,Builtin,2,249883,0x7ff780c9aac4,492,MapPrototypeForEach
code-creation,Builtin,2,249891,0x7ff780c9acc4,284,MapPrototypeKeys
code-creation,Builtin,2,249899,0x7ff780c9ade4,284,MapPrototypeValues
code-creation,Builtin,2,249908,0x7ff780c9af04,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,249916,0x7ff780c9b324,1168,MapIteratorToList
code-creation,Builtin,2,249924,0x7ff780c9b7c4,12,NumberPrototypeToExponential
code-creation,Builtin,2,249932,0x7ff780c9b7e4,12,NumberPrototypeToFixed
code-creation,Builtin,2,249941,0x7ff780c9b804,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,249949,0x7ff780c9b824,12,NumberPrototypeToPrecision
code-creation,Builtin,2,249957,0x7ff780c9b844,328,SameValue
code-creation,Builtin,2,249966,0x7ff780c9b9a4,204,SameValueNumbersOnly
code-creation,Builtin,2,249977,0x7ff780c9ba84,792,Add_Baseline
code-creation,Builtin,2,249985,0x7ff780c9bda4,828,Subtract_Baseline
code-creation,Builtin,2,249993,0x7ff780c9c0e4,808,Multiply_Baseline
code-creation,Builtin,2,250002,0x7ff780c9c424,832,Divide_Baseline
code-creation,Builtin,2,250010,0x7ff780c9c784,764,Modulus_Baseline
code-creation,Builtin,2,250018,0x7ff780c9ca84,808,Exponentiate_Baseline
code-creation,Builtin,2,250026,0x7ff780c9cdc4,708,BitwiseAnd_Baseline
code-creation,Builtin,2,250034,0x7ff780c9d0a4,700,BitwiseOr_Baseline
code-creation,Builtin,2,250042,0x7ff780c9d364,708,BitwiseXor_Baseline
code-creation,Builtin,2,250051,0x7ff780c9d644,720,ShiftLeft_Baseline
code-creation,Builtin,2,250059,0x7ff780c9d924,720,ShiftRight_Baseline
code-creation,Builtin,2,250067,0x7ff780c9dc04,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,250076,0x7ff780c9df64,720,Add_WithFeedback
code-creation,Builtin,2,250084,0x7ff780c9e244,780,Subtract_WithFeedback
code-creation,Builtin,2,250092,0x7ff780c9e564,776,Multiply_WithFeedback
code-creation,Builtin,2,250101,0x7ff780c9e884,804,Divide_WithFeedback
code-creation,Builtin,2,250113,0x7ff780c9ebc4,724,Modulus_WithFeedback
code-creation,Builtin,2,250121,0x7ff780c9eea4,764,Exponentiate_WithFeedback
code-creation,Builtin,2,250130,0x7ff780c9f1a4,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,250138,0x7ff780c9f464,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,250146,0x7ff780c9f724,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,250155,0x7ff780c9f9e4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,250163,0x7ff780c9fca4,692,ShiftRight_WithFeedback
code-creation,Builtin,2,250171,0x7ff780c9ff64,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,250180,0x7ff780ca02a4,1696,Equal_Baseline
code-creation,Builtin,2,250188,0x7ff780ca0964,908,StrictEqual_Baseline
code-creation,Builtin,2,250196,0x7ff780ca0d04,1264,LessThan_Baseline
code-creation,Builtin,2,250204,0x7ff780ca1204,1264,GreaterThan_Baseline
code-creation,Builtin,2,250212,0x7ff780ca1704,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,250221,0x7ff780ca1c04,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,250229,0x7ff780ca2104,1620,Equal_WithFeedback
code-creation,Builtin,2,250238,0x7ff780ca2764,940,StrictEqual_WithFeedback
code-creation,Builtin,2,250251,0x7ff780ca2b24,1240,LessThan_WithFeedback
code-creation,Builtin,2,250261,0x7ff780ca3004,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,250269,0x7ff780ca34e4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,250278,0x7ff780ca39c4,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,250285,0x7ff780ca3ea4,332,BitwiseNot_Baseline
code-creation,Builtin,2,250293,0x7ff780ca4004,460,Decrement_Baseline
code-creation,Builtin,2,250301,0x7ff780ca41e4,464,Increment_Baseline
code-creation,Builtin,2,250310,0x7ff780ca43c4,488,Negate_Baseline
code-creation,Builtin,2,250317,0x7ff780ca45c4,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,250326,0x7ff780ca4704,440,Decrement_WithFeedback
code-creation,Builtin,2,250334,0x7ff780ca48c4,444,Increment_WithFeedback
code-creation,Builtin,2,250342,0x7ff780ca4a84,472,Negate_WithFeedback
code-creation,Builtin,2,250350,0x7ff780ca4c64,252,ObjectAssign
code-creation,Builtin,2,250358,0x7ff780ca4d64,864,ObjectCreate
code-creation,Builtin,2,250366,0x7ff780ca50e4,12,ObjectDefineGetter
code-creation,Builtin,2,250374,0x7ff780ca5104,12,ObjectDefineProperties
code-creation,Builtin,2,250383,0x7ff780ca5124,12,ObjectDefineProperty
code-creation,Builtin,2,250394,0x7ff780ca5144,12,ObjectDefineSetter
code-creation,Builtin,2,250403,0x7ff780ca5164,1516,ObjectEntries
code-creation,Builtin,2,250412,0x7ff780ca5764,12,ObjectFreeze
code-creation,Builtin,2,250420,0x7ff780ca5784,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,250428,0x7ff780ca6d84,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,250437,0x7ff780ca6da4,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,250445,0x7ff780ca7004,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,250454,0x7ff780ca7024,164,ObjectHasOwn
code-creation,Builtin,2,250462,0x7ff780ca70e4,388,ObjectIs
code-creation,Builtin,2,250470,0x7ff780ca7284,12,ObjectIsFrozen
code-creation,Builtin,2,250478,0x7ff780ca72a4,12,ObjectIsSealed
code-creation,Builtin,2,250486,0x7ff780ca72c4,536,ObjectKeys
code-creation,Builtin,2,250494,0x7ff780ca74e4,12,ObjectLookupGetter
code-creation,Builtin,2,250502,0x7ff780ca7504,12,ObjectLookupSetter
code-creation,Builtin,2,250512,0x7ff780ca7524,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,250521,0x7ff780ca7e24,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,250532,0x7ff780ca7f04,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,250541,0x7ff780ca7f24,12,ObjectPrototypeGetProto
code-creation,Builtin,2,250550,0x7ff780ca7f44,12,ObjectPrototypeSetProto
code-creation,Builtin,2,250558,0x7ff780ca7f64,12,ObjectSeal
code-creation,Builtin,2,250566,0x7ff780ca7f84,1108,ObjectToString
code-creation,Builtin,2,250574,0x7ff780ca83e4,1284,ObjectValues
code-creation,Builtin,2,250582,0x7ff780ca8904,280,OrdinaryHasInstance
code-creation,Builtin,2,250590,0x7ff780ca8a24,344,InstanceOf
code-creation,Builtin,2,250598,0x7ff780ca8b84,632,InstanceOf_WithFeedback
code-creation,Builtin,2,250606,0x7ff780ca8e04,648,InstanceOf_Baseline
code-creation,Builtin,2,250615,0x7ff780ca90a4,268,ForInEnumerate
code-creation,Builtin,2,250623,0x7ff780ca91c4,148,ForInPrepare
code-creation,Builtin,2,250631,0x7ff780ca9264,2584,ForInFilter
code-creation,Builtin,2,250639,0x7ff780ca9c84,52,ReflectApply
code-creation,Builtin,2,250646,0x7ff780ca9cc4,60,ReflectConstruct
code-creation,Builtin,2,250655,0x7ff780ca9d04,12,ReflectDefineProperty
code-creation,Builtin,2,250666,0x7ff780ca9d24,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,250675,0x7ff780ca9d44,12,ReflectOwnKeys
code-creation,Builtin,2,250683,0x7ff780ca9d64,12,ReflectSet
code-creation,Builtin,2,250691,0x7ff780ca9d84,12,RegExpCapture1Getter
code-creation,Builtin,2,250699,0x7ff780ca9da4,12,RegExpCapture2Getter
code-creation,Builtin,2,250707,0x7ff780ca9dc4,12,RegExpCapture3Getter
code-creation,Builtin,2,250715,0x7ff780ca9de4,12,RegExpCapture4Getter
code-creation,Builtin,2,250723,0x7ff780ca9e04,12,RegExpCapture5Getter
code-creation,Builtin,2,250731,0x7ff780ca9e24,12,RegExpCapture6Getter
code-creation,Builtin,2,250740,0x7ff780ca9e44,12,RegExpCapture7Getter
code-creation,Builtin,2,250750,0x7ff780ca9e64,12,RegExpCapture8Getter
code-creation,Builtin,2,250760,0x7ff780ca9e84,12,RegExpCapture9Getter
code-creation,Builtin,2,250768,0x7ff780ca9ea4,2212,RegExpConstructor
code-creation,Builtin,2,250777,0x7ff780caa764,12,RegExpInputGetter
code-creation,Builtin,2,250785,0x7ff780caa784,12,RegExpInputSetter
code-creation,Builtin,2,250793,0x7ff780caa7a4,12,RegExpLastMatchGetter
code-creation,Builtin,2,250804,0x7ff780caa7c4,12,RegExpLastParenGetter
code-creation,Builtin,2,250813,0x7ff780caa7e4,12,RegExpLeftContextGetter
code-creation,Builtin,2,250821,0x7ff780caa804,908,RegExpPrototypeCompile
code-creation,Builtin,2,250830,0x7ff780caaba4,12,RegExpPrototypeToString
code-creation,Builtin,2,250838,0x7ff780caabc4,12,RegExpRightContextGetter
code-creation,Builtin,2,250847,0x7ff780caabe4,252,RegExpExecAtom
code-creation,Builtin,2,250853,0x7ff780caace4,1040,RegExpExecInternal
code-creation,Builtin,2,250860,0x7ff780cab104,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,250867,0x7ff780cab124,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,250873,0x7ff780cab144,2684,SetConstructor
code-creation,Builtin,2,250879,0x7ff780cabbc4,1284,SetPrototypeHas
code-creation,Builtin,2,250886,0x7ff780cac0e4,1736,SetPrototypeAdd
code-creation,Builtin,2,250892,0x7ff780cac7c4,1476,SetPrototypeDelete
code-creation,Builtin,2,250899,0x7ff780cacda4,12,SetPrototypeClear
code-creation,Builtin,2,250907,0x7ff780cacdc4,284,SetPrototypeEntries
code-creation,Builtin,2,250919,0x7ff780cacee4,144,SetPrototypeGetSize
code-creation,Builtin,2,250931,0x7ff780cacf84,444,SetPrototypeForEach
code-creation,Builtin,2,250943,0x7ff780cad144,284,SetPrototypeValues
code-creation,Builtin,2,250956,0x7ff780cad264,988,SetIteratorPrototypeNext
code-creation,Builtin,2,250968,0x7ff780cad644,1112,SetOrSetIteratorToList
code-creation,Builtin,2,250981,0x7ff780cadaa4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,251021,0x7ff780cadac4,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,251037,0x7ff780cadae4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,251050,0x7ff780cadb04,1280,AtomicsLoad
code-creation,Builtin,2,251063,0x7ff780cae024,1008,AtomicsStore
code-creation,Builtin,2,251096,0x7ff780cae424,1704,AtomicsExchange
code-creation,Builtin,2,251109,0x7ff780caeae4,2092,AtomicsCompareExchange
code-creation,Builtin,2,251121,0x7ff780caf324,1804,AtomicsAdd
code-creation,Builtin,2,251132,0x7ff780cafa44,1804,AtomicsSub
code-creation,Builtin,2,251143,0x7ff780cb0164,1804,AtomicsAnd
code-creation,Builtin,2,251154,0x7ff780cb0884,1804,AtomicsOr
code-creation,Builtin,2,251165,0x7ff780cb0fa4,1804,AtomicsXor
code-creation,Builtin,2,251174,0x7ff780cb16c4,12,AtomicsNotify
code-creation,Builtin,2,251185,0x7ff780cb16e4,12,AtomicsIsLockFree
code-creation,Builtin,2,251196,0x7ff780cb1704,12,AtomicsWait
code-creation,Builtin,2,251207,0x7ff780cb1724,12,AtomicsWaitAsync
code-creation,Builtin,2,251218,0x7ff780cb1744,12,StringFromCodePoint
code-creation,Builtin,2,251230,0x7ff780cb1764,1428,StringFromCharCode
code-creation,Builtin,2,251241,0x7ff780cb1d04,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,251253,0x7ff780cb1d24,4360,StringPrototypeMatchAll
code-creation,Builtin,2,251269,0x7ff780cb2e44,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,251279,0x7ff780cb2e64,1228,StringPrototypeReplace
code-creation,Builtin,2,251290,0x7ff780cb3344,2900,StringPrototypeSplit
code-creation,Builtin,2,251302,0x7ff780cb3ea4,12,StringRaw
code-creation,Builtin,2,251312,0x7ff780cb3ec4,12,SymbolConstructor
code-creation,Builtin,2,251324,0x7ff780cb3ee4,12,SymbolFor
code-creation,Builtin,2,251335,0x7ff780cb3f04,12,SymbolKeyFor
code-creation,Builtin,2,251347,0x7ff780cb3f24,88,TypedArrayBaseConstructor
code-creation,Builtin,2,251359,0x7ff780cb3f84,256,TypedArrayConstructor
code-creation,Builtin,2,251371,0x7ff780cb40a4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,251383,0x7ff780cb40c4,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,251395,0x7ff780cb4444,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,251413,0x7ff780cb45c4,584,TypedArrayPrototypeLength
code-creation,Builtin,2,251430,0x7ff780cb4824,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,251443,0x7ff780cb4844,12,TypedArrayPrototypeFill
code-creation,Builtin,2,251454,0x7ff780cb4864,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,251466,0x7ff780cb4884,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,251481,0x7ff780cb48a4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,251497,0x7ff780cb48c4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,251510,0x7ff780cb48e4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,251522,0x7ff780cb4a24,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,251535,0x7ff780cb73e4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,251548,0x7ff780cb7704,148,WasmCompileLazy
code-creation,Builtin,2,251560,0x7ff780cb77a4,168,WasmDebugBreak
code-creation,Builtin,2,251572,0x7ff780cb7864,16,WasmOnStackReplace
code-creation,Builtin,2,251584,0x7ff780cb7884,140,WasmFloat32ToNumber
code-creation,Builtin,2,251596,0x7ff780cb7924,152,WasmFloat64ToNumber
code-creation,Builtin,2,251608,0x7ff780cb79c4,4,WasmI32AtomicWait32
code-creation,Builtin,2,251620,0x7ff780cb79e4,4,WasmI64AtomicWait32
code-creation,Builtin,2,251633,0x7ff780cb7a04,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,251646,0x7ff780cb7a24,4320,WeakMapConstructor
code-creation,Builtin,2,251658,0x7ff780cb8b24,196,WeakMapLookupHashIndex
code-creation,Builtin,2,251671,0x7ff780cb8c04,220,WeakMapGet
code-creation,Builtin,2,251684,0x7ff780cb8ce4,176,WeakMapPrototypeHas
code-creation,Builtin,2,251700,0x7ff780cb8da4,204,WeakMapPrototypeSet
code-creation,Builtin,2,251713,0x7ff780cb8e84,144,WeakMapPrototypeDelete
code-creation,Builtin,2,251726,0x7ff780cb8f24,2876,WeakSetConstructor
code-creation,Builtin,2,251739,0x7ff780cb9a64,176,WeakSetPrototypeHas
code-creation,Builtin,2,251753,0x7ff780cb9b24,204,WeakSetPrototypeAdd
code-creation,Builtin,2,251766,0x7ff780cb9c04,144,WeakSetPrototypeDelete
code-creation,Builtin,2,251779,0x7ff780cb9ca4,372,WeakCollectionDelete
code-creation,Builtin,2,251792,0x7ff780cb9e24,764,WeakCollectionSet
code-creation,Builtin,2,251804,0x7ff780cba124,296,AsyncGeneratorResolve
code-creation,Builtin,2,251816,0x7ff780cba264,100,AsyncGeneratorReject
code-creation,Builtin,2,251828,0x7ff780cba2e4,2760,AsyncGeneratorYield
code-creation,Builtin,2,251861,0x7ff780cbadc4,2872,AsyncGeneratorReturn
code-creation,Builtin,2,251869,0x7ff780cbb904,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,251877,0x7ff780cbba44,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,251886,0x7ff780cbba64,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,251898,0x7ff780cbbe64,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,251906,0x7ff780cbc284,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,251915,0x7ff780cbc6a4,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,251935,0x7ff780cbd164,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,251944,0x7ff780cbdc24,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,251954,0x7ff780cbdca4,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,251962,0x7ff780cbdd44,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,251971,0x7ff780cbddc4,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,251980,0x7ff780cbde44,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,251988,0x7ff780cbdec4,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,251997,0x7ff780cbdf64,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,252006,0x7ff780cbe5a4,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,252014,0x7ff780cbec64,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,252024,0x7ff780cbf324,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,252035,0x7ff780cbf3a4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,252044,0x7ff780cbf4a4,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,252054,0x7ff780cbf5a4,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,252066,0x7ff780cbf684,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,252077,0x7ff780cbf824,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,252086,0x7ff780cbf9c4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,252096,0x7ff780cbfac4,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,252103,0x7ff780cbfbc4,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,252112,0x7ff780cbfcc4,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,252121,0x7ff780cbfe64,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,252131,0x7ff780cc0004,4,DirectCEntry
code-creation,Builtin,2,252139,0x7ff780cc0024,1096,StringAdd_CheckNone
code-creation,Builtin,2,252147,0x7ff780cc0484,2484,SubString
code-creation,Builtin,2,252156,0x7ff780cc0e44,16,StackCheck
code-creation,Builtin,2,252164,0x7ff780cc0e64,84,DoubleToI
code-creation,Builtin,2,252172,0x7ff780cc0ec4,2236,GetProperty
code-creation,Builtin,2,252181,0x7ff780cc1784,2308,GetPropertyWithReceiver
code-creation,Builtin,2,252192,0x7ff780cc20a4,16004,SetProperty
code-creation,Builtin,2,252200,0x7ff780cc5f44,13480,SetPropertyInLiteral
code-creation,Builtin,2,252208,0x7ff780cc9404,8,MemCopyUint8Uint8
code-creation,Builtin,2,252216,0x7ff780cc9424,8,MemMove
code-creation,Builtin,2,252224,0x7ff780cc9444,12,IsTraceCategoryEnabled
code-creation,Builtin,2,252233,0x7ff780cc9464,12,Trace
code-creation,Builtin,2,252240,0x7ff780cc9484,12,FinalizationRegistryUnregister
code-creation,Builtin,2,252249,0x7ff780cc94a4,416,AsyncModuleEvaluate
code-creation,Builtin,2,252257,0x7ff780cc9664,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,252265,0x7ff780cc9684,12,CallAsyncModuleRejected
code-creation,Builtin,2,252274,0x7ff780cc96a4,260,AggregateErrorConstructor
code-creation,Builtin,2,252282,0x7ff780cc97c4,856,ArrayPrototypeAt
code-creation,Builtin,2,252290,0x7ff780cc9b24,656,ArrayPrototypeConcat
code-creation,Builtin,2,252298,0x7ff780cc9dc4,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,252307,0x7ff780ccb4a4,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,252316,0x7ff780ccb584,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,252327,0x7ff780ccb804,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,252336,0x7ff780ccc504,1464,ArrayEvery
code-creation,Builtin,2,252345,0x7ff780cccac4,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,252353,0x7ff780cccbe4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,252362,0x7ff780cccfc4,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,252370,0x7ff780ccddc4,4260,ArrayFilter
code-creation,Builtin,2,252379,0x7ff780ccee84,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,252387,0x7ff780ccef64,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,252396,0x7ff780ccefa4,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,252405,0x7ff780ccf0e4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,252413,0x7ff780ccf304,1460,ArrayPrototypeFind
code-creation,Builtin,2,252421,0x7ff780ccf8c4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,252430,0x7ff780ccf9a4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,252440,0x7ff780ccf9e4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,252450,0x7ff780ccfb24,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,252459,0x7ff780ccfd44,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,252470,0x7ff780cd0304,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,252478,0x7ff780cd04e4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,252487,0x7ff780cd0ba4,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,252495,0x7ff780cd0d84,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,252504,0x7ff780cd1444,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,252513,0x7ff780cd1524,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,252523,0x7ff780cd1604,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,252532,0x7ff780cd2264,1328,ArrayForEach
code-creation,Builtin,2,252539,0x7ff780cd27a4,3572,ArrayFrom
code-creation,Builtin,2,252548,0x7ff780cd35a4,148,ArrayIsArray
code-creation,Builtin,2,252556,0x7ff780cd3644,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,252565,0x7ff780cd37e4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,252574,0x7ff780cd3824,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,252583,0x7ff780cd38c4,312,ConvertToLocaleString
code-creation,Builtin,2,252591,0x7ff780cd3a04,752,JoinStackPush
code-creation,Builtin,2,252599,0x7ff780cd3d04,272,JoinStackPop
code-creation,Builtin,2,252608,0x7ff780cd3e24,6628,ArrayPrototypeJoin
code-creation,Builtin,2,252619,0x7ff780cd5824,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,252628,0x7ff780cd6d24,236,ArrayPrototypeToString
code-creation,Builtin,2,252636,0x7ff780cd6e24,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,252644,0x7ff780cd8564,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,252653,0x7ff780cd9784,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,252662,0x7ff780cda684,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,252670,0x7ff780cda7a4,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,252679,0x7ff780cda8a4,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,252687,0x7ff780cdaac4,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,252696,0x7ff780cdb744,3912,ArrayMap
code-creation,Builtin,2,252704,0x7ff780cdc6a4,1000,ArrayOf
code-creation,Builtin,2,252712,0x7ff780cdcaa4,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,252721,0x7ff780cdcc64,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,252730,0x7ff780cdcd44,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,252738,0x7ff780cdce24,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,252748,0x7ff780cddac4,2000,ArrayReduceRight
code-creation,Builtin,2,252759,0x7ff780cde2a4,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,252768,0x7ff780cde364,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,252777,0x7ff780cde444,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,252785,0x7ff780cde524,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,252794,0x7ff780cdf1e4,1604,ArrayReduce
code-creation,Builtin,2,252802,0x7ff780cdf844,3216,ArrayPrototypeReverse
code-creation,Builtin,2,252810,0x7ff780ce04e4,3592,ArrayPrototypeShift
code-creation,Builtin,2,252818,0x7ff780ce1304,5220,ArrayPrototypeSlice
code-creation,Builtin,2,252826,0x7ff780ce2784,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,252835,0x7ff780ce2864,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,252843,0x7ff780ce2ac4,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,252852,0x7ff780ce37c4,1448,ArraySome
code-creation,Builtin,2,252860,0x7ff780ce3d84,14216,ArrayPrototypeSplice
code-creation,Builtin,2,252869,0x7ff780ce7524,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,252877,0x7ff780ce8204,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,252886,0x7ff780ce8364,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,252897,0x7ff780ce84c4,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,252906,0x7ff780ce85a4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,252915,0x7ff780ce8704,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,252923,0x7ff780ce87e4,96,ArrayBufferIsView
code-creation,Builtin,2,252932,0x7ff780ce8864,396,ToInteger
code-creation,Builtin,2,252940,0x7ff780ce8a04,3084,FastCreateDataProperty
code-creation,Builtin,2,252948,0x7ff780ce9624,676,CheckNumberInRange
code-creation,Builtin,2,252956,0x7ff780ce98e4,584,CheckSameObject
code-creation,Builtin,2,252965,0x7ff780ce9b44,904,BooleanConstructor
code-creation,Builtin,2,252974,0x7ff780ce9ee4,164,BooleanPrototypeToString
code-creation,Builtin,2,252984,0x7ff780ce9fa4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,252992,0x7ff780cea044,1184,BigIntAddNoThrow
code-creation,Builtin,2,253001,0x7ff780cea504,1280,BigIntAdd
code-creation,Builtin,2,253008,0x7ff780ceaa24,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,253016,0x7ff780ceaee4,1280,BigIntSubtract
code-creation,Builtin,2,253025,0x7ff780ceb404,284,BigIntUnaryMinus
code-creation,Builtin,2,253036,0x7ff780ceb524,1360,ToString
code-creation,Builtin,2,253044,0x7ff780ceba84,156,StringPrototypeToString
code-creation,Builtin,2,253053,0x7ff780cebb24,156,StringPrototypeValueOf
code-creation,Builtin,2,253061,0x7ff780cebbc4,2480,StringToList
code-creation,Builtin,2,253070,0x7ff780cec584,1012,StringPrototypeCharAt
code-creation,Builtin,2,253080,0x7ff780cec984,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,253088,0x7ff780cecc44,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,253097,0x7ff780ced164,400,StringPrototypeConcat
code-creation,Builtin,2,253106,0x7ff780ced304,992,StringConstructor
code-creation,Builtin,2,253114,0x7ff780ced704,1436,StringAddConvertLeft
code-creation,Builtin,2,253122,0x7ff780cedca4,1464,StringAddConvertRight
code-creation,Builtin,2,253130,0x7ff780cee264,816,StringCharAt
code-creation,Builtin,2,253139,0x7ff780cee5a4,16,FastNewClosureBaseline
code-creation,Builtin,2,253147,0x7ff780cee5c4,196,FastNewFunctionContextEval
code-creation,Builtin,2,253155,0x7ff780cee6a4,196,FastNewFunctionContextFunction
code-creation,Builtin,2,253164,0x7ff780cee784,248,CreateRegExpLiteral
code-creation,Builtin,2,253176,0x7ff780cee884,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,253184,0x7ff780ceecc4,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,253193,0x7ff780ceeec4,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,253201,0x7ff780cef5a4,384,ObjectConstructor
code-creation,Builtin,2,253209,0x7ff780cef744,176,CreateEmptyLiteralObject
code-creation,Builtin,2,253218,0x7ff780cef804,536,NumberConstructor
code-creation,Builtin,2,253226,0x7ff780cefa24,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,253234,0x7ff780cefa84,64,StringToNumber
code-creation,Builtin,2,253242,0x7ff780cefae4,184,NonNumberToNumber
code-creation,Builtin,2,253250,0x7ff780cefba4,240,NonNumberToNumeric
code-creation,Builtin,2,253259,0x7ff780cefca4,36,ToNumeric
code-creation,Builtin,2,253266,0x7ff780cefce4,1184,NumberToString
code-creation,Builtin,2,253275,0x7ff780cf01a4,92,ToBoolean
code-creation,Builtin,2,253282,0x7ff780cf0204,96,ToBooleanForBaselineJump
code-creation,Builtin,2,253291,0x7ff780cf0284,728,ToLength
code-creation,Builtin,2,253299,0x7ff780cf0564,1312,ToName
code-creation,Builtin,2,253310,0x7ff780cf0aa4,756,ToObject
code-creation,Builtin,2,253318,0x7ff780cf0da4,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,253326,0x7ff780cf0e84,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,253335,0x7ff780cf0f64,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,253343,0x7ff780cf1044,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,253352,0x7ff780cf1184,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,253360,0x7ff780cf12c4,216,FastConsoleAssert
code-creation,Builtin,2,253369,0x7ff780cf13a4,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,253377,0x7ff780cf1464,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,253385,0x7ff780cf15c4,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,253394,0x7ff780cf1724,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,253402,0x7ff780cf1964,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,253410,0x7ff780cf1ba4,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,253418,0x7ff780cf1e44,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,253427,0x7ff780cf20e4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,253436,0x7ff780cf2424,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,253447,0x7ff780cf26e4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,253456,0x7ff780cf2a44,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,253465,0x7ff780cf2de4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,253475,0x7ff780cf31c4,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,253484,0x7ff780cf35c4,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,253492,0x7ff780cf3984,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,253500,0x7ff780cf3d44,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,253509,0x7ff780cf4164,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,253517,0x7ff780cf4584,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,253526,0x7ff780cf49c4,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,253534,0x7ff780cf4e04,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,253542,0x7ff780cf5224,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,253551,0x7ff780cf5684,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,253560,0x7ff780cf5a44,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,253568,0x7ff780cf5e04,828,FinalizationRegistryConstructor
code-creation,Builtin,2,253577,0x7ff780cf6144,1152,FinalizationRegistryRegister
code-creation,Builtin,2,253588,0x7ff780cf65e4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,253597,0x7ff780cf6884,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,253606,0x7ff780cf69e4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,253614,0x7ff780cf6d84,88,IncBlockCounter
code-creation,Builtin,2,253622,0x7ff780cf6de4,228,GetTemplateObject
code-creation,Builtin,2,253630,0x7ff780cf6ee4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,253639,0x7ff780cf6f04,92,ForInNext
code-creation,Builtin,2,253647,0x7ff780cf6f64,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,253655,0x7ff780cf7004,116,GetIteratorWithFeedback
code-creation,Builtin,2,253664,0x7ff780cf7084,100,GetIteratorBaseline
code-creation,Builtin,2,253672,0x7ff780cf7104,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,253681,0x7ff780cf7224,1084,CallIteratorWithFeedback
code-creation,Builtin,2,253689,0x7ff780cf7664,288,MathAbs
code-creation,Builtin,2,253698,0x7ff780cf77a4,428,MathCeil
code-creation,Builtin,2,253705,0x7ff780cf7964,432,MathFloor
code-creation,Builtin,2,253714,0x7ff780cf7b24,488,MathRound
code-creation,Builtin,2,253724,0x7ff780cf7d24,428,MathTrunc
code-creation,Builtin,2,253732,0x7ff780cf7ee4,368,MathPow
code-creation,Builtin,2,253740,0x7ff780cf8064,396,MathMax
code-creation,Builtin,2,253748,0x7ff780cf8204,404,MathMin
code-creation,Builtin,2,253756,0x7ff780cf83a4,320,MathAcos
code-creation,Builtin,2,253764,0x7ff780cf8504,320,MathAcosh
code-creation,Builtin,2,253772,0x7ff780cf8664,320,MathAsin
code-creation,Builtin,2,253779,0x7ff780cf87c4,320,MathAsinh
code-creation,Builtin,2,253787,0x7ff780cf8924,320,MathAtan
code-creation,Builtin,2,253795,0x7ff780cf8a84,416,MathAtan2
code-creation,Builtin,2,253803,0x7ff780cf8c44,320,MathAtanh
code-creation,Builtin,2,253811,0x7ff780cf8da4,320,MathCbrt
code-creation,Builtin,2,253819,0x7ff780cf8f04,168,MathClz32
code-creation,Builtin,2,253827,0x7ff780cf8fc4,320,MathCos
code-creation,Builtin,2,253835,0x7ff780cf9124,320,MathCosh
code-creation,Builtin,2,253843,0x7ff780cf9284,320,MathExp
code-creation,Builtin,2,253854,0x7ff780cf93e4,320,MathExpm1
code-creation,Builtin,2,253862,0x7ff780cf9544,272,MathFround
code-creation,Builtin,2,253870,0x7ff780cf9664,304,MathImul
code-creation,Builtin,2,253877,0x7ff780cf97a4,320,MathLog
code-creation,Builtin,2,253886,0x7ff780cf9904,320,MathLog1p
code-creation,Builtin,2,253894,0x7ff780cf9a64,320,MathLog10
code-creation,Builtin,2,253902,0x7ff780cf9bc4,320,MathLog2
code-creation,Builtin,2,253911,0x7ff780cf9d24,320,MathSin
code-creation,Builtin,2,253919,0x7ff780cf9e84,180,MathSign
code-creation,Builtin,2,253927,0x7ff780cf9f44,320,MathSinh
code-creation,Builtin,2,253935,0x7ff780cfa0a4,268,MathSqrt
code-creation,Builtin,2,253942,0x7ff780cfa1c4,320,MathTan
code-creation,Builtin,2,253950,0x7ff780cfa324,320,MathTanh
code-creation,Builtin,2,253958,0x7ff780cfa484,1060,MathHypot
code-creation,Builtin,2,253967,0x7ff780cfa8c4,332,MathRandom
code-creation,Builtin,2,253975,0x7ff780cfaa24,2956,NumberPrototypeToString
code-creation,Builtin,2,254026,0x7ff780cfb5c4,136,NumberIsFinite
code-creation,Builtin,2,254038,0x7ff780cfb664,340,NumberIsInteger
code-creation,Builtin,2,254046,0x7ff780cfb7c4,116,NumberIsNaN
code-creation,Builtin,2,254054,0x7ff780cfb844,372,NumberIsSafeInteger
code-creation,Builtin,2,254062,0x7ff780cfb9c4,156,NumberPrototypeValueOf
code-creation,Builtin,2,254070,0x7ff780cfba64,196,NumberParseFloat
code-creation,Builtin,2,254078,0x7ff780cfbb44,248,ParseInt
code-creation,Builtin,2,254086,0x7ff780cfbc44,84,NumberParseInt
code-creation,Builtin,2,254094,0x7ff780cfbca4,860,Add
code-creation,Builtin,2,254102,0x7ff780cfc004,424,Subtract
code-creation,Builtin,2,254110,0x7ff780cfc1c4,608,Multiply
code-creation,Builtin,2,254117,0x7ff780cfc444,532,Divide
code-creation,Builtin,2,254125,0x7ff780cfc664,592,Modulus
code-creation,Builtin,2,254133,0x7ff780cfc8c4,524,Exponentiate
code-creation,Builtin,2,254141,0x7ff780cfcae4,344,Negate
code-creation,Builtin,2,254149,0x7ff780cfcc44,112,BitwiseNot
code-creation,Builtin,2,254160,0x7ff780cfccc4,112,Decrement
code-creation,Builtin,2,254168,0x7ff780cfcd44,112,Increment
code-creation,Builtin,2,254176,0x7ff780cfcdc4,392,ShiftLeft
code-creation,Builtin,2,254184,0x7ff780cfcf64,392,ShiftRight
code-creation,Builtin,2,254192,0x7ff780cfd104,508,ShiftRightLogical
code-creation,Builtin,2,254201,0x7ff780cfd304,388,BitwiseAnd
code-creation,Builtin,2,254209,0x7ff780cfd4a4,388,BitwiseOr
code-creation,Builtin,2,254217,0x7ff780cfd644,388,BitwiseXor
code-creation,Builtin,2,254225,0x7ff780cfd7e4,796,LessThan
code-creation,Builtin,2,254232,0x7ff780cfdb04,796,LessThanOrEqual
code-creation,Builtin,2,254240,0x7ff780cfde24,796,GreaterThan
code-creation,Builtin,2,254248,0x7ff780cfe144,796,GreaterThanOrEqual
code-creation,Builtin,2,254256,0x7ff780cfe464,860,Equal
code-creation,Builtin,2,254264,0x7ff780cfe7c4,348,StrictEqual
code-creation,Builtin,2,254272,0x7ff780cfe924,3132,ObjectFromEntries
code-creation,Builtin,2,254280,0x7ff780cff564,756,CreateObjectWithoutProperties
code-creation,Builtin,2,254292,0x7ff780cff864,144,ObjectIsExtensible
code-creation,Builtin,2,254300,0x7ff780cff904,148,ObjectPreventExtensions
code-creation,Builtin,2,254309,0x7ff780cff9a4,144,ObjectGetPrototypeOf
code-creation,Builtin,2,254317,0x7ff780cffa44,300,ObjectSetPrototypeOf
code-creation,Builtin,2,254325,0x7ff780cffb84,80,ObjectPrototypeToString
code-creation,Builtin,2,254333,0x7ff780cffbe4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,254341,0x7ff780cffc64,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,254349,0x7ff780cffd24,868,FulfillPromise
code-creation,Builtin,2,254357,0x7ff780d000a4,988,RejectPromise
code-creation,Builtin,2,254365,0x7ff780d00484,2416,NewPromiseCapability
code-creation,Builtin,2,254374,0x7ff780d00e04,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,254382,0x7ff780d00ec4,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,254391,0x7ff780d00f64,1416,PerformPromiseThen
code-creation,Builtin,2,254399,0x7ff780d01504,648,PromiseReject
code-creation,Builtin,2,254407,0x7ff780d017a4,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,254416,0x7ff780d018c4,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,254427,0x7ff780d01944,4560,PromiseAll
code-creation,Builtin,2,254436,0x7ff780d02b24,4880,PromiseAllSettled
code-creation,Builtin,2,254444,0x7ff780d03e44,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,254452,0x7ff780d042a4,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,254461,0x7ff780d04824,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,254470,0x7ff780d04da4,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,254478,0x7ff780d05244,2368,PromiseAny
code-creation,Builtin,2,254486,0x7ff780d05ba4,2908,PromiseConstructor
code-creation,Builtin,2,254494,0x7ff780d06704,296,PromisePrototypeCatch
code-creation,Builtin,2,254503,0x7ff780d06844,88,PromiseValueThunkFinally
code-creation,Builtin,2,254511,0x7ff780d068a4,84,PromiseThrowerFinally
code-creation,Builtin,2,254519,0x7ff780d06904,904,PromiseCatchFinally
code-creation,Builtin,2,254529,0x7ff780d06ca4,904,PromiseThenFinally
code-creation,Builtin,2,254537,0x7ff780d07044,1700,PromisePrototypeFinally
code-creation,Builtin,2,254545,0x7ff780d07704,1336,PromiseRace
code-creation,Builtin,2,254553,0x7ff780d07c44,268,PromiseFulfillReactionJob
code-creation,Builtin,2,254562,0x7ff780d07d64,364,PromiseRejectReactionJob
code-creation,Builtin,2,254573,0x7ff780d07ee4,156,PromiseResolveTrampoline
code-creation,Builtin,2,254582,0x7ff780d07f84,656,PromiseResolve
code-creation,Builtin,2,254589,0x7ff780d08224,712,ResolvePromise
code-creation,Builtin,2,254598,0x7ff780d08504,2224,PromisePrototypeThen
code-creation,Builtin,2,254606,0x7ff780d08dc4,1144,PromiseResolveThenableJob
code-creation,Builtin,2,254614,0x7ff780d09244,448,ProxyConstructor
code-creation,Builtin,2,254622,0x7ff780d09424,1760,ProxyDeleteProperty
code-creation,Builtin,2,254630,0x7ff780d09b24,2112,ProxyGetProperty
code-creation,Builtin,2,254638,0x7ff780d0a384,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,254646,0x7ff780d0a7c4,1668,ProxyHasProperty
code-creation,Builtin,2,254654,0x7ff780d0ae64,760,ProxyIsExtensible
code-creation,Builtin,2,254662,0x7ff780d0b164,800,ProxyPreventExtensions
code-creation,Builtin,2,254671,0x7ff780d0b4a4,1148,ProxyRevocable
code-creation,Builtin,2,254679,0x7ff780d0b924,120,ProxyRevoke
code-creation,Builtin,2,254686,0x7ff780d0b9a4,2216,ProxySetProperty
code-creation,Builtin,2,254695,0x7ff780d0c264,1292,ProxySetPrototypeOf
code-creation,Builtin,2,254706,0x7ff780d0c784,208,ReflectIsExtensible
code-creation,Builtin,2,254715,0x7ff780d0c864,212,ReflectPreventExtensions
code-creation,Builtin,2,254723,0x7ff780d0c944,188,ReflectGetPrototypeOf
code-creation,Builtin,2,254731,0x7ff780d0ca04,292,ReflectSetPrototypeOf
code-creation,Builtin,2,254739,0x7ff780d0cb44,284,ReflectGet
code-creation,Builtin,2,254747,0x7ff780d0cc64,160,ReflectDeleteProperty
code-creation,Builtin,2,254755,0x7ff780d0cd24,148,ReflectHas
code-creation,Builtin,2,254763,0x7ff780d0cdc4,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,254772,0x7ff780d0e1e4,5104,RegExpPrototypeExec
code-creation,Builtin,2,254780,0x7ff780d0f5e4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,254788,0x7ff780d0ff24,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,254797,0x7ff780d12404,8840,RegExpMatchFast
code-creation,Builtin,2,254805,0x7ff780d146a4,3600,RegExpPrototypeMatch
code-creation,Builtin,2,254813,0x7ff780d154c4,6328,RegExpReplace
code-creation,Builtin,2,254821,0x7ff780d16d84,524,RegExpPrototypeReplace
code-creation,Builtin,2,254830,0x7ff780d16fa4,1424,RegExpSearchFast
code-creation,Builtin,2,254841,0x7ff780d17544,1640,RegExpPrototypeSearch
code-creation,Builtin,2,254849,0x7ff780d17bc4,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,254857,0x7ff780d17ca4,5872,RegExpSplit
code-creation,Builtin,2,254865,0x7ff780d193a4,476,RegExpPrototypeSplit
code-creation,Builtin,2,254874,0x7ff780d19584,2252,RegExpPrototypeTest
code-creation,Builtin,2,254882,0x7ff780d19e64,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,254890,0x7ff780d1a3c4,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,254898,0x7ff780d1a4c4,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,254907,0x7ff780d1a5c4,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,254916,0x7ff780d1a6c4,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,254925,0x7ff780d1a7c4,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,254933,0x7ff780d1a8c4,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,254941,0x7ff780d1a9c4,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,254950,0x7ff780d1aae4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,254958,0x7ff780d1ac04,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,254967,0x7ff780d1b4e4,1500,StringPrototypeAt
code-creation,Builtin,2,254978,0x7ff780d1bac4,3008,StringPrototypeEndsWith
code-creation,Builtin,2,254986,0x7ff780d1c6a4,480,CreateHTML
code-creation,Builtin,2,254994,0x7ff780d1c8a4,164,StringPrototypeAnchor
code-creation,Builtin,2,255003,0x7ff780d1c964,128,StringPrototypeBig
code-creation,Builtin,2,255013,0x7ff780d1ca04,128,StringPrototypeBlink
code-creation,Builtin,2,255023,0x7ff780d1caa4,128,StringPrototypeBold
code-creation,Builtin,2,255031,0x7ff780d1cb44,168,StringPrototypeFontcolor
code-creation,Builtin,2,255039,0x7ff780d1cc04,168,StringPrototypeFontsize
code-creation,Builtin,2,255048,0x7ff780d1ccc4,128,StringPrototypeFixed
code-creation,Builtin,2,255056,0x7ff780d1cd64,128,StringPrototypeItalics
code-creation,Builtin,2,255063,0x7ff780d1ce04,168,StringPrototypeLink
code-creation,Builtin,2,255072,0x7ff780d1cec4,128,StringPrototypeSmall
code-creation,Builtin,2,255080,0x7ff780d1cf64,128,StringPrototypeStrike
code-creation,Builtin,2,255088,0x7ff780d1d004,128,StringPrototypeSub
code-creation,Builtin,2,255096,0x7ff780d1d0a4,128,StringPrototypeSup
code-creation,Builtin,2,255104,0x7ff780d1d144,1028,StringPrototypeIncludes
code-creation,Builtin,2,255116,0x7ff780d1d564,628,StringPrototypeIndexOf
code-creation,Builtin,2,255124,0x7ff780d1d7e4,344,StringPrototypeIterator
code-creation,Builtin,2,255132,0x7ff780d1d944,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,255141,0x7ff780d1e144,1304,StringPrototypeMatch
code-creation,Builtin,2,255149,0x7ff780d1e664,1304,StringPrototypeSearch
code-creation,Builtin,2,255157,0x7ff780d1eb84,824,StringPrototypePadStart
code-creation,Builtin,2,255165,0x7ff780d1eec4,824,StringPrototypePadEnd
code-creation,Builtin,2,255173,0x7ff780d1f204,120,StringRepeat
code-creation,Builtin,2,255181,0x7ff780d1f284,400,StringPrototypeRepeat
code-creation,Builtin,2,255189,0x7ff780d1f424,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,255197,0x7ff780d21fe4,3388,StringPrototypeSlice
code-creation,Builtin,2,255205,0x7ff780d22d24,3028,StringPrototypeStartsWith
code-creation,Builtin,2,255214,0x7ff780d23904,3328,StringPrototypeSubstr
code-creation,Builtin,2,255222,0x7ff780d24624,3260,StringPrototypeSubstring
code-creation,Builtin,2,255230,0x7ff780d252e4,6916,StringPrototypeTrim
code-creation,Builtin,2,255240,0x7ff780d26e04,6332,StringPrototypeTrimStart
code-creation,Builtin,2,255251,0x7ff780d286c4,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,255259,0x7ff780d29da4,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,255267,0x7ff780d29e64,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,255276,0x7ff780d29f04,172,SymbolPrototypeToString
code-creation,Builtin,2,255286,0x7ff780d29fc4,156,SymbolPrototypeValueOf
code-creation,Builtin,2,255294,0x7ff780d2a064,832,TypedArrayPrototypeAt
code-creation,Builtin,2,255302,0x7ff780d2a3c4,10064,CreateTypedArray
code-creation,Builtin,2,255311,0x7ff780d2cb24,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,255319,0x7ff780d2cf24,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,255328,0x7ff780d2d0a4,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,255336,0x7ff780d2de64,996,TypedArrayPrototypeFind
code-creation,Builtin,2,255345,0x7ff780d2e264,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,255354,0x7ff780d2e664,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,255362,0x7ff780d2e824,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,255370,0x7ff780d2ece4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,255380,0x7ff780d2eea4,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,255391,0x7ff780d2f384,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,255399,0x7ff780d2f704,2352,TypedArrayFrom
code-creation,Builtin,2,255407,0x7ff780d30044,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,255416,0x7ff780d301c4,1028,TypedArrayOf
code-creation,Builtin,2,255424,0x7ff780d305e4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,255433,0x7ff780d309a4,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,255441,0x7ff780d30d64,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,255449,0x7ff780d31744,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,255458,0x7ff780d32344,992,TypedArrayPrototypeSome
code-creation,Builtin,2,255466,0x7ff780d32744,1060,TypedArrayMergeSort
code-creation,Builtin,2,255474,0x7ff780d32b84,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,255484,0x7ff780d331e4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,255494,0x7ff780d33ca4,372,TypedArrayPrototypeValues
code-creation,Builtin,2,255502,0x7ff780d33e24,952,WeakRefConstructor
code-creation,Builtin,2,255510,0x7ff780d341e4,184,WeakRefDeref
code-creation,Builtin,2,255519,0x7ff780d342a4,680,NewSloppyArgumentsElements
code-creation,Builtin,2,255530,0x7ff780d34564,296,NewStrictArgumentsElements
code-creation,Builtin,2,255539,0x7ff780d346a4,320,NewRestArgumentsElements
tick,0x7ffd0935721f,255549,0,0x0,6
code-creation,Builtin,2,255576,0x7ff780d34804,1388,FastNewSloppyArguments
code-creation,Builtin,2,255596,0x7ff780d34d84,524,FastNewStrictArguments
code-creation,Builtin,2,255604,0x7ff780d34fa4,556,FastNewRestArguments
code-creation,Builtin,2,255610,0x7ff780d351e4,676,StringSlowFlatten
code-creation,Builtin,2,255617,0x7ff780d354a4,2068,StringIndexOf
code-creation,Builtin,2,255623,0x7ff780d35cc4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,255629,0x7ff780d35ce4,20,TestHelperPlus1
code-creation,Builtin,2,255635,0x7ff780d35d04,20,TestHelperPlus2
code-creation,Builtin,2,255640,0x7ff780d35d24,96,NewSmiBox
code-creation,Builtin,2,255646,0x7ff780d35da4,24,ReturnTwoValues
code-creation,Builtin,2,255652,0x7ff780d35dc4,32,Load_FastSmiElements_0
code-creation,Builtin,2,255658,0x7ff780d35e04,32,Load_FastObjectElements_0
code-creation,Builtin,2,255665,0x7ff780d35e44,144,Load_FastDoubleElements_0
code-creation,Builtin,2,255671,0x7ff780d35ee4,32,Store_FastSmiElements_0
code-creation,Builtin,2,255678,0x7ff780d35f24,96,Store_FastObjectElements_0
code-creation,Builtin,2,255685,0x7ff780d35fa4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,255691,0x7ff780d35fe4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,255697,0x7ff780d36024,36,Delete_FastObjectElements_0
code-creation,Builtin,2,255703,0x7ff780d36064,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,255710,0x7ff780d360a4,308,SortCompareDefault
code-creation,Builtin,2,255716,0x7ff780d361e4,92,SortCompareUserFn
code-creation,Builtin,2,255722,0x7ff780d36244,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,255729,0x7ff780d36264,312,Copy
code-creation,Builtin,2,255735,0x7ff780d363a4,5776,MergeAt
code-creation,Builtin,2,255740,0x7ff780d37a44,792,GallopLeft
code-creation,Builtin,2,255747,0x7ff780d37d64,832,GallopRight
code-creation,Builtin,2,255753,0x7ff780d380c4,3832,ArrayTimSort
code-creation,Builtin,2,255759,0x7ff780d38fc4,2112,ArrayPrototypeSort
code-creation,Builtin,2,255765,0x7ff780d39824,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,255772,0x7ff780d398a4,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,255778,0x7ff780d39924,76,WasmTaggedToFloat64
code-creation,Builtin,2,255784,0x7ff780d39984,72,WasmMemoryGrow
code-creation,Builtin,2,255790,0x7ff780d399e4,100,WasmTableInit
code-creation,Builtin,2,255796,0x7ff780d39a64,100,WasmTableCopy
code-creation,Builtin,2,255802,0x7ff780d39ae4,84,WasmTableFill
code-creation,Builtin,2,255808,0x7ff780d39b44,72,WasmTableGrow
code-creation,Builtin,2,255814,0x7ff780d39ba4,144,WasmTableGet
code-creation,Builtin,2,255820,0x7ff780d39c44,236,WasmTableSet
code-creation,Builtin,2,255826,0x7ff780d39d44,88,WasmRefFunc
code-creation,Builtin,2,255831,0x7ff780d39da4,144,WasmAllocateFixedArray
code-creation,Builtin,2,255837,0x7ff780d39e44,44,WasmThrow
code-creation,Builtin,2,255843,0x7ff780d39e84,52,WasmRethrow
code-creation,Builtin,2,255849,0x7ff780d39ec4,44,WasmTriggerTierUp
code-creation,Builtin,2,255855,0x7ff780d39f04,32,WasmStackGuard
code-creation,Builtin,2,255861,0x7ff780d39f44,32,WasmStackOverflow
code-creation,Builtin,2,255867,0x7ff780d39f84,40,WasmTraceMemory
code-creation,Builtin,2,255873,0x7ff780d39fc4,32,WasmTraceEnter
code-creation,Builtin,2,255879,0x7ff780d3a004,40,WasmTraceExit
code-creation,Builtin,2,255885,0x7ff780d3a044,332,WasmAllocateJSArray
code-creation,Builtin,2,255891,0x7ff780d3a1a4,104,WasmAllocatePair
code-creation,Builtin,2,255897,0x7ff780d3a224,64,WasmAllocateRtt
code-creation,Builtin,2,255903,0x7ff780d3a284,72,WasmAllocateFreshRtt
code-creation,Builtin,2,255912,0x7ff780d3a2e4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,255920,0x7ff780d3a364,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,255927,0x7ff780d3a404,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,255934,0x7ff780d3a4c4,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,255940,0x7ff780d3a584,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,255946,0x7ff780d3a604,60,WasmArrayCopy
code-creation,Builtin,2,255953,0x7ff780d3a644,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,255960,0x7ff780d3a744,52,WasmSubtypeCheck
code-creation,Builtin,2,255966,0x7ff780d3a784,8,WasmInt32ToNumber
code-creation,Builtin,2,255973,0x7ff780d3a7a4,116,WasmUint32ToNumber
code-creation,Builtin,2,255979,0x7ff780d3a824,144,UintPtr53ToNumber
code-creation,Builtin,2,255985,0x7ff780d3a8c4,96,WasmAtomicNotify
code-creation,Builtin,2,255991,0x7ff780d3a944,116,WasmI32AtomicWait64
code-creation,Builtin,2,255997,0x7ff780d3a9c4,116,WasmI64AtomicWait64
code-creation,Builtin,2,256003,0x7ff780d3aa44,580,WasmGetOwnProperty
code-creation,Builtin,2,256009,0x7ff780d3aca4,40,WasmTrap
code-creation,Builtin,2,256015,0x7ff780d3ace4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,256021,0x7ff780d3ad04,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,256028,0x7ff780d3ad24,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,256034,0x7ff780d3ad44,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,256041,0x7ff780d3ad64,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,256047,0x7ff780d3ad84,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,256053,0x7ff780d3ada4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,256060,0x7ff780d3adc4,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,256067,0x7ff780d3ade4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,256073,0x7ff780d3ae04,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,256080,0x7ff780d3ae24,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,256086,0x7ff780d3ae44,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,256093,0x7ff780d3ae64,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,256099,0x7ff780d3ae84,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,256105,0x7ff780d3aea4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,256111,0x7ff780d3aec4,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,256118,0x7ff780d3aee4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,256125,0x7ff780d3afa4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,256132,0x7ff780d3afc4,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,256138,0x7ff780d3b044,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,256145,0x7ff780d3b0c4,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,256151,0x7ff780d3b0e4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,256158,0x7ff780d3b1c4,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,256165,0x7ff780d3b2c4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,256172,0x7ff780d3b2e4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,256178,0x7ff780d3b304,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,256185,0x7ff780d3b324,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,256192,0x7ff780d3b344,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,256198,0x7ff780d3b3e4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,256204,0x7ff780d3b404,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,256212,0x7ff780d3b444,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,256219,0x7ff780d3b484,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,256226,0x7ff780d3b4c4,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,256233,0x7ff780d3bf44,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,256239,0x7ff780d3bf64,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,256246,0x7ff780d3bfa4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,256256,0x7ff780d3bfc4,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,256263,0x7ff780d3c084,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,256270,0x7ff780d3c144,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,256276,0x7ff780d3c1c4,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,256284,0x7ff780d3c204,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,256290,0x7ff780d3c2a4,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,256297,0x7ff780d3c324,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,256304,0x7ff780d3c344,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,256311,0x7ff780d3c3e4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,256317,0x7ff780d3c404,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,256324,0x7ff780d3c424,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,256331,0x7ff780d3c6a4,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,256338,0x7ff780d3c784,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,256345,0x7ff780d3c7c4,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,256352,0x7ff780d3c8a4,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,256359,0x7ff780d3c9a4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,256366,0x7ff780d3c9e4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,256372,0x7ff780d3cac4,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,256379,0x7ff780d3cae4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,256385,0x7ff780d3cb04,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,256392,0x7ff780d3cbc4,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,256399,0x7ff780d3cbe4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,256406,0x7ff780d3cc04,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,256412,0x7ff780d3ccc4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,256419,0x7ff780d3cce4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,256425,0x7ff780d3cd04,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,256432,0x7ff780d3cdc4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,256439,0x7ff780d3cde4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,256445,0x7ff780d3ce04,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,256452,0x7ff780d3cec4,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,256459,0x7ff780d3cf64,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,256466,0x7ff780d3d024,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,256472,0x7ff780d3d0e4,12,CollatorConstructor
code-creation,Builtin,2,256479,0x7ff780d3d104,12,CollatorInternalCompare
code-creation,Builtin,2,256485,0x7ff780d3d124,12,CollatorPrototypeCompare
code-creation,Builtin,2,256491,0x7ff780d3d144,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,256497,0x7ff780d3d164,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,256504,0x7ff780d3d184,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,256511,0x7ff780d3d1a4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,256517,0x7ff780d3d1c4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,256523,0x7ff780d3d1e4,12,DateTimeFormatConstructor
code-creation,Builtin,2,256530,0x7ff780d3d204,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,256536,0x7ff780d3d224,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,256542,0x7ff780d3d244,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,256549,0x7ff780d3d264,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,256556,0x7ff780d3d284,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,256564,0x7ff780d3d2a4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,256570,0x7ff780d3d2c4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,256578,0x7ff780d3d2e4,12,DisplayNamesConstructor
code-creation,Builtin,2,256585,0x7ff780d3d304,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,256591,0x7ff780d3d324,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,256597,0x7ff780d3d344,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,256604,0x7ff780d3d364,12,IntlGetCanonicalLocales
code-creation,Builtin,2,256610,0x7ff780d3d384,12,ListFormatConstructor
code-creation,Builtin,2,256617,0x7ff780d3d3a4,224,ListFormatPrototypeFormat
code-creation,Builtin,2,256623,0x7ff780d3d4a4,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,256629,0x7ff780d3d5a4,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,256636,0x7ff780d3d5c4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,256642,0x7ff780d3d5e4,12,LocaleConstructor
code-creation,Builtin,2,256648,0x7ff780d3d604,12,LocalePrototypeBaseName
code-creation,Builtin,2,256654,0x7ff780d3d624,12,LocalePrototypeCalendar
code-creation,Builtin,2,256661,0x7ff780d3d644,12,LocalePrototypeCalendars
code-creation,Builtin,2,256667,0x7ff780d3d664,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,256673,0x7ff780d3d684,12,LocalePrototypeCollation
code-creation,Builtin,2,256681,0x7ff780d3d6a4,12,LocalePrototypeCollations
code-creation,Builtin,2,256687,0x7ff780d3d6c4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,256693,0x7ff780d3d6e4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,256700,0x7ff780d3d704,12,LocalePrototypeLanguage
code-creation,Builtin,2,256706,0x7ff780d3d724,12,LocalePrototypeMaximize
code-creation,Builtin,2,256712,0x7ff780d3d744,12,LocalePrototypeMinimize
code-creation,Builtin,2,256719,0x7ff780d3d764,12,LocalePrototypeNumeric
code-creation,Builtin,2,256725,0x7ff780d3d784,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,256731,0x7ff780d3d7a4,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,256738,0x7ff780d3d7c4,12,LocalePrototypeRegion
code-creation,Builtin,2,256744,0x7ff780d3d7e4,12,LocalePrototypeScript
code-creation,Builtin,2,256750,0x7ff780d3d804,12,LocalePrototypeTextInfo
code-creation,Builtin,2,256756,0x7ff780d3d824,12,LocalePrototypeTimeZones
code-creation,Builtin,2,256763,0x7ff780d3d844,12,LocalePrototypeToString
code-creation,Builtin,2,256769,0x7ff780d3d864,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,256776,0x7ff780d3d884,12,NumberFormatConstructor
code-creation,Builtin,2,256782,0x7ff780d3d8a4,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,256788,0x7ff780d3d8c4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,256795,0x7ff780d3d8e4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,256801,0x7ff780d3d904,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,256808,0x7ff780d3d924,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,256815,0x7ff780d3d944,12,PluralRulesConstructor
code-creation,Builtin,2,256821,0x7ff780d3d964,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,256828,0x7ff780d3d984,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,256834,0x7ff780d3d9a4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,256840,0x7ff780d3d9c4,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,256846,0x7ff780d3d9e4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,256853,0x7ff780d3da04,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,256859,0x7ff780d3da24,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,256866,0x7ff780d3da44,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,256873,0x7ff780d3da64,12,SegmenterConstructor
code-creation,Builtin,2,256879,0x7ff780d3da84,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,256885,0x7ff780d3daa4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,256892,0x7ff780d3dac4,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,256898,0x7ff780d3dae4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,256904,0x7ff780d3db04,12,SegmentsPrototypeContaining
code-creation,Builtin,2,256911,0x7ff780d3db24,12,SegmentsPrototypeIterator
code-creation,Builtin,2,256920,0x7ff780d3db44,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,256927,0x7ff780d3db64,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,256934,0x7ff780d3db84,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,256940,0x7ff780d3dba4,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,256946,0x7ff780d3dc84,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,256953,0x7ff780d3dca4,636,StringToLowerCaseIntl
code-creation,Builtin,2,256959,0x7ff780d3df24,12,V8BreakIteratorConstructor
code-creation,Builtin,2,256966,0x7ff780d3df44,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,256973,0x7ff780d3df64,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,256979,0x7ff780d3df84,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,256986,0x7ff780d3dfa4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,256992,0x7ff780d3dfc4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,256998,0x7ff780d3dfe4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,257005,0x7ff780d3e004,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,257011,0x7ff780d3e024,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,257018,0x7ff780d3e044,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,257025,0x7ff780d3e064,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,257032,0x7ff780d3e084,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,257038,0x7ff780d3e0a4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,257045,0x7ff780d3e0c4,24,Wide
code-creation,BytecodeHandler,0,257052,0x7ff780d3e0e4,24,ExtraWide
code-creation,BytecodeHandler,0,257059,0x7ff780d3e104,104,DebugBreakWide
code-creation,BytecodeHandler,0,257065,0x7ff780d3e184,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,257072,0x7ff780d3e204,164,DebugBreak0
code-creation,BytecodeHandler,0,257078,0x7ff780d3e2c4,104,DebugBreak1
code-creation,BytecodeHandler,0,257085,0x7ff780d3e344,104,DebugBreak2
code-creation,BytecodeHandler,0,257091,0x7ff780d3e3c4,104,DebugBreak3
code-creation,BytecodeHandler,0,257097,0x7ff780d3e444,104,DebugBreak4
code-creation,BytecodeHandler,0,257104,0x7ff780d3e4c4,104,DebugBreak5
code-creation,BytecodeHandler,0,257110,0x7ff780d3e544,104,DebugBreak6
code-creation,BytecodeHandler,0,257116,0x7ff780d3e5c4,32,Ldar
code-creation,BytecodeHandler,0,257122,0x7ff780d3e604,68,LdaZero
code-creation,BytecodeHandler,0,257128,0x7ff780d3e664,76,LdaSmi
code-creation,BytecodeHandler,0,257134,0x7ff780d3e6c4,68,LdaUndefined
code-creation,BytecodeHandler,0,257140,0x7ff780d3e724,68,LdaNull
code-creation,BytecodeHandler,0,257146,0x7ff780d3e784,68,LdaTheHole
code-creation,BytecodeHandler,0,257153,0x7ff780d3e7e4,20,LdaTrue
code-creation,BytecodeHandler,0,257159,0x7ff780d3e804,20,LdaFalse
code-creation,BytecodeHandler,0,257165,0x7ff780d3e824,76,LdaConstant
code-creation,BytecodeHandler,0,257171,0x7ff780d3e884,132,LdaContextSlot
code-creation,BytecodeHandler,0,257177,0x7ff780d3e924,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,257184,0x7ff780d3e9c4,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,257191,0x7ff780d3ea24,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,257198,0x7ff780d3ea84,32,Star
code-creation,BytecodeHandler,0,257204,0x7ff780d3eac4,40,Mov
code-creation,BytecodeHandler,0,257209,0x7ff780d3eb04,40,PushContext
code-creation,BytecodeHandler,0,257216,0x7ff780d3eb44,36,PopContext
code-creation,BytecodeHandler,0,257222,0x7ff780d3eb84,48,TestReferenceEqual
code-creation,BytecodeHandler,0,257229,0x7ff780d3ebc4,52,TestUndetectable
code-creation,BytecodeHandler,0,257235,0x7ff780d3ec04,36,TestNull
code-creation,BytecodeHandler,0,257242,0x7ff780d3ec44,36,TestUndefined
code-creation,BytecodeHandler,0,257248,0x7ff780d3ec84,336,TestTypeOf
code-creation,BytecodeHandler,0,257254,0x7ff780d3ede4,6036,LdaGlobal
code-creation,BytecodeHandler,0,257260,0x7ff780d40584,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,257267,0x7ff780d41744,168,StaGlobal
code-creation,BytecodeHandler,0,257273,0x7ff780d41804,160,StaContextSlot
code-creation,BytecodeHandler,0,257282,0x7ff780d418c4,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,257290,0x7ff780d41944,124,LdaLookupSlot
code-creation,BytecodeHandler,0,257297,0x7ff780d419c4,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,257303,0x7ff780d41ac4,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,257309,0x7ff780d42d84,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,257316,0x7ff780d42e04,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,257323,0x7ff780d42f04,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,257331,0x7ff780d441a4,220,StaLookupSlot
code-creation,BytecodeHandler,0,257337,0x7ff780d44284,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,257344,0x7ff780d45704,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,257350,0x7ff780d457c4,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,257357,0x7ff780d458a4,160,LdaModuleVariable
code-creation,BytecodeHandler,0,257363,0x7ff780d45964,292,StaModuleVariable
code-creation,BytecodeHandler,0,257370,0x7ff780d45aa4,172,StaNamedProperty
code-creation,BytecodeHandler,0,257376,0x7ff780d45b64,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,257382,0x7ff780d45c24,164,StaKeyedProperty
code-creation,BytecodeHandler,0,257389,0x7ff780d45ce4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,257396,0x7ff780d45da4,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,257403,0x7ff780d45e84,160,CollectTypeProfile
code-creation,BytecodeHandler,0,257409,0x7ff780d45f44,1028,Add
code-creation,BytecodeHandler,0,257415,0x7ff780d46364,1064,Sub
code-creation,BytecodeHandler,0,257421,0x7ff780d467a4,1024,Mul
code-creation,BytecodeHandler,0,257427,0x7ff780d46bc4,988,Div
code-creation,BytecodeHandler,0,257433,0x7ff780d46fa4,912,Mod
code-creation,BytecodeHandler,0,257440,0x7ff780d47344,964,Exp
code-creation,BytecodeHandler,0,257446,0x7ff780d47724,876,BitwiseOr
code-creation,BytecodeHandler,0,257452,0x7ff780d47aa4,888,BitwiseXor
code-creation,BytecodeHandler,0,257458,0x7ff780d47e24,888,BitwiseAnd
code-creation,BytecodeHandler,0,257464,0x7ff780d481a4,900,ShiftLeft
code-creation,BytecodeHandler,0,257470,0x7ff780d48544,900,ShiftRight
code-creation,BytecodeHandler,0,257477,0x7ff780d488e4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,257483,0x7ff780d48ce4,960,AddSmi
code-creation,BytecodeHandler,0,257490,0x7ff780d490c4,1000,SubSmi
code-creation,BytecodeHandler,0,257496,0x7ff780d494c4,916,MulSmi
code-creation,BytecodeHandler,0,257502,0x7ff780d49864,920,DivSmi
code-creation,BytecodeHandler,0,257508,0x7ff780d49c04,816,ModSmi
code-creation,BytecodeHandler,0,257514,0x7ff780d49f44,872,ExpSmi
code-creation,BytecodeHandler,0,257520,0x7ff780d4a2c4,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,257526,0x7ff780d4a4c4,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,257533,0x7ff780d4a6c4,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,257539,0x7ff780d4a8c4,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,257545,0x7ff780d4aac4,488,ShiftRightSmi
code-creation,BytecodeHandler,0,257552,0x7ff780d4acc4,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,257558,0x7ff780d4af64,656,Inc
code-creation,BytecodeHandler,0,257564,0x7ff780d4b204,656,Dec
code-creation,BytecodeHandler,0,257570,0x7ff780d4b4a4,640,Negate
code-creation,BytecodeHandler,0,257576,0x7ff780d4b744,480,BitwiseNot
code-creation,BytecodeHandler,0,257582,0x7ff780d4b944,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,257589,0x7ff780d4b9c4,36,LogicalNot
code-creation,BytecodeHandler,0,257595,0x7ff780d4ba04,208,TypeOf
code-creation,BytecodeHandler,0,257601,0x7ff780d4bae4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,257608,0x7ff780d4bb64,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,257614,0x7ff780d4bbe4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,257620,0x7ff780d4bc24,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,257627,0x7ff780d4c0a4,1132,CallProperty
code-creation,BytecodeHandler,0,257633,0x7ff780d4c524,1012,CallProperty0
code-creation,BytecodeHandler,0,257641,0x7ff780d4c924,1028,CallProperty1
code-creation,BytecodeHandler,0,257648,0x7ff780d4cd44,1040,CallProperty2
code-creation,BytecodeHandler,0,257654,0x7ff780d4d164,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,257660,0x7ff780d4d564,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,257667,0x7ff780d4d984,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,257674,0x7ff780d4dd84,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,257680,0x7ff780d4e1a4,1132,CallWithSpread
code-creation,BytecodeHandler,0,257687,0x7ff780d4e624,124,CallRuntime
code-creation,BytecodeHandler,0,257693,0x7ff780d4e6a4,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,257700,0x7ff780d4e744,80,CallJSRuntime
code-creation,BytecodeHandler,0,257706,0x7ff780d4e7a4,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,257712,0x7ff780d4ec84,1020,Construct
code-creation,BytecodeHandler,0,257718,0x7ff780d4f084,536,ConstructWithSpread
code-creation,BytecodeHandler,0,257725,0x7ff780d4f2a4,1936,TestEqual
code-creation,BytecodeHandler,0,257731,0x7ff780d4fa44,1064,TestEqualStrict
code-creation,BytecodeHandler,0,257738,0x7ff780d4fe84,1624,TestLessThan
code-creation,BytecodeHandler,0,257744,0x7ff780d504e4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,257751,0x7ff780d50b44,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,257758,0x7ff780d511a4,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,257765,0x7ff780d51804,860,TestInstanceOf
code-creation,BytecodeHandler,0,257771,0x7ff780d51b64,156,TestIn
code-creation,BytecodeHandler,0,257777,0x7ff780d51c04,112,ToName
code-creation,BytecodeHandler,0,257784,0x7ff780d51c84,212,ToNumber
code-creation,BytecodeHandler,0,257790,0x7ff780d51d64,232,ToNumeric
code-creation,BytecodeHandler,0,257796,0x7ff780d51e64,112,ToObject
code-creation,BytecodeHandler,0,257802,0x7ff780d51ee4,116,ToString
code-creation,BytecodeHandler,0,257809,0x7ff780d51f64,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,257815,0x7ff780d52104,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,257822,0x7ff780d526c4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,257828,0x7ff780d52724,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,257835,0x7ff780d52a44,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,257842,0x7ff780d532a4,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,257849,0x7ff780d533a4,168,CloneObject
code-creation,BytecodeHandler,0,257855,0x7ff780d53464,212,GetTemplateObject
code-creation,BytecodeHandler,0,257862,0x7ff780d53544,328,CreateClosure
code-creation,BytecodeHandler,0,257868,0x7ff780d536a4,120,CreateBlockContext
code-creation,BytecodeHandler,0,257875,0x7ff780d53724,132,CreateCatchContext
code-creation,BytecodeHandler,0,257881,0x7ff780d537c4,256,CreateFunctionContext
code-creation,BytecodeHandler,0,257888,0x7ff780d538e4,256,CreateEvalContext
code-creation,BytecodeHandler,0,257894,0x7ff780d53a04,132,CreateWithContext
code-creation,BytecodeHandler,0,257901,0x7ff780d53aa4,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,257908,0x7ff780d540e4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,257915,0x7ff780d54344,632,CreateRestParameter
code-creation,BytecodeHandler,0,257921,0x7ff780d545c4,424,JumpLoop
code-creation,BytecodeHandler,0,257927,0x7ff780d54784,44,Jump
code-creation,BytecodeHandler,0,257933,0x7ff780d547c4,56,JumpConstant
code-creation,BytecodeHandler,0,257939,0x7ff780d54804,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,257946,0x7ff780d54864,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,257953,0x7ff780d548c4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,257959,0x7ff780d54924,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,257966,0x7ff780d54984,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,257972,0x7ff780d549e4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,257979,0x7ff780d54a44,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,257985,0x7ff780d54aa4,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,257993,0x7ff780d54b04,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,258001,0x7ff780d54ba4,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,258008,0x7ff780d54c44,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,258014,0x7ff780d54ce4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,258021,0x7ff780d54d84,64,JumpIfTrue
code-creation,BytecodeHandler,0,258027,0x7ff780d54de4,64,JumpIfFalse
code-creation,BytecodeHandler,0,258034,0x7ff780d54e44,64,JumpIfNull
code-creation,BytecodeHandler,0,258040,0x7ff780d54ea4,64,JumpIfNotNull
code-creation,BytecodeHandler,0,258046,0x7ff780d54f04,64,JumpIfUndefined
code-creation,BytecodeHandler,0,258053,0x7ff780d54f64,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,258059,0x7ff780d54fc4,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,258066,0x7ff780d55024,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,258072,0x7ff780d55084,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,258078,0x7ff780d55104,464,ForInEnumerate
code-creation,BytecodeHandler,0,258085,0x7ff780d552e4,252,ForInPrepare
code-creation,BytecodeHandler,0,258091,0x7ff780d553e4,60,ForInContinue
code-creation,BytecodeHandler,0,258097,0x7ff780d55424,256,ForInNext
code-creation,BytecodeHandler,0,258104,0x7ff780d55544,48,ForInStep
code-creation,BytecodeHandler,0,258110,0x7ff780d55584,36,SetPendingMessage
code-creation,BytecodeHandler,0,258117,0x7ff780d555c4,116,Throw
code-creation,BytecodeHandler,0,258123,0x7ff780d55644,116,ReThrow
code-creation,BytecodeHandler,0,258129,0x7ff780d556c4,112,Return
code-creation,BytecodeHandler,0,258135,0x7ff780d55744,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,258142,0x7ff780d55824,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,258148,0x7ff780d558c4,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,258155,0x7ff780d55964,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,258162,0x7ff780d55a04,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,258169,0x7ff780d55a84,512,SuspendGenerator
code-creation,BytecodeHandler,0,258175,0x7ff780d55ca4,128,ResumeGenerator
code-creation,BytecodeHandler,0,258181,0x7ff780d55d44,152,GetIterator
code-creation,BytecodeHandler,0,258188,0x7ff780d55de4,116,Debugger
code-creation,BytecodeHandler,0,258194,0x7ff780d55e64,124,IncBlockCounter
code-creation,BytecodeHandler,0,258201,0x7ff780d55ee4,56,Abort
code-creation,BytecodeHandler,0,258207,0x7ff780d55f24,32,Star0
code-creation,BytecodeHandler,0,258214,0x7ff780d55f64,60,Illegal
code-creation,BytecodeHandler,0,258221,0x7ff780d55fa4,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,258228,0x7ff780d56024,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,258234,0x7ff780d560a4,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,258241,0x7ff780d56124,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,258247,0x7ff780d561a4,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,258254,0x7ff780d56224,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,258260,0x7ff780d562a4,32,Ldar.Wide
code-creation,BytecodeHandler,0,258267,0x7ff780d562e4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,258273,0x7ff780d56324,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,258280,0x7ff780d56364,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,258286,0x7ff780d563c4,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,258293,0x7ff780d56424,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,258300,0x7ff780d56464,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,258307,0x7ff780d564a4,32,Star.Wide
code-creation,BytecodeHandler,0,258314,0x7ff780d564e4,40,Mov.Wide
code-creation,BytecodeHandler,0,258320,0x7ff780d56524,40,PushContext.Wide
code-creation,BytecodeHandler,0,258327,0x7ff780d56564,36,PopContext.Wide
code-creation,BytecodeHandler,0,258333,0x7ff780d565a4,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,258340,0x7ff780d565e4,4668,LdaGlobal.Wide
code-creation,BytecodeHandler,0,258346,0x7ff780d57824,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,258354,0x7ff780d58a24,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,258362,0x7ff780d58ae4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,258370,0x7ff780d58ba4,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,258378,0x7ff780d58c24,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,258384,0x7ff780d58cc4,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,258391,0x7ff780d58dc4,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,258398,0x7ff780d5a0c4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,258405,0x7ff780d5a164,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,258412,0x7ff780d5a264,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,258419,0x7ff780d5b544,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,258426,0x7ff780d5b624,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,258433,0x7ff780d5caa4,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,258440,0x7ff780d5cb64,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,258447,0x7ff780d5cc24,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,258453,0x7ff780d5cce4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,258460,0x7ff780d5ce24,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,258468,0x7ff780d5cee4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,258474,0x7ff780d5cfa4,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,258482,0x7ff780d5d064,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,258489,0x7ff780d5d124,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,258496,0x7ff780d5d204,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,258502,0x7ff780d5d2c4,984,Add.Wide
code-creation,BytecodeHandler,0,258509,0x7ff780d5d6a4,1020,Sub.Wide
code-creation,BytecodeHandler,0,258515,0x7ff780d5daa4,972,Mul.Wide
code-creation,BytecodeHandler,0,258521,0x7ff780d5de84,988,Div.Wide
code-creation,BytecodeHandler,0,258527,0x7ff780d5e264,916,Mod.Wide
code-creation,BytecodeHandler,0,258533,0x7ff780d5e604,988,Exp.Wide
code-creation,BytecodeHandler,0,258539,0x7ff780d5e9e4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,258546,0x7ff780d5ed84,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,258552,0x7ff780d5f124,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,258559,0x7ff780d5f4c4,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,258565,0x7ff780d5f884,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,258572,0x7ff780d5fc44,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,258578,0x7ff780d60064,916,AddSmi.Wide
code-creation,BytecodeHandler,0,258585,0x7ff780d60404,960,SubSmi.Wide
code-creation,BytecodeHandler,0,258591,0x7ff780d607e4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,258597,0x7ff780d60b84,920,DivSmi.Wide
code-creation,BytecodeHandler,0,258603,0x7ff780d60f24,816,ModSmi.Wide
code-creation,BytecodeHandler,0,258609,0x7ff780d61264,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,258616,0x7ff780d615e4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,258623,0x7ff780d617e4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,258629,0x7ff780d619e4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,258636,0x7ff780d61be4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,258643,0x7ff780d61de4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,258650,0x7ff780d61fe4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,258656,0x7ff780d62284,616,Inc.Wide
code-creation,BytecodeHandler,0,258663,0x7ff780d62504,616,Dec.Wide
code-creation,BytecodeHandler,0,258669,0x7ff780d62784,648,Negate.Wide
code-creation,BytecodeHandler,0,258675,0x7ff780d62a24,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,258681,0x7ff780d62c24,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,258689,0x7ff780d62ca4,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,258696,0x7ff780d62d24,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,258702,0x7ff780d62d64,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,258710,0x7ff780d631e4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,258717,0x7ff780d63664,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,258723,0x7ff780d63a64,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,258730,0x7ff780d63e84,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,258737,0x7ff780d642a4,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,258744,0x7ff780d646a4,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,258751,0x7ff780d64ac4,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,258758,0x7ff780d64ee4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,258765,0x7ff780d65304,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,258771,0x7ff780d65784,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,258778,0x7ff780d65824,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,258785,0x7ff780d658e4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,258791,0x7ff780d65944,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,258798,0x7ff780d65e24,968,Construct.Wide
code-creation,BytecodeHandler,0,258804,0x7ff780d66204,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,258811,0x7ff780d663e4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,258818,0x7ff780d66ba4,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,258824,0x7ff780d66fe4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,258832,0x7ff780d675e4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,258838,0x7ff780d67be4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,258845,0x7ff780d681e4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,258852,0x7ff780d687e4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,258859,0x7ff780d68b64,160,TestIn.Wide
code-creation,BytecodeHandler,0,258865,0x7ff780d68c24,116,ToName.Wide
code-creation,BytecodeHandler,0,258872,0x7ff780d68ca4,216,ToNumber.Wide
code-creation,BytecodeHandler,0,258878,0x7ff780d68d84,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,258884,0x7ff780d68e84,116,ToObject.Wide
code-creation,BytecodeHandler,0,258892,0x7ff780d68f04,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,258899,0x7ff780d690a4,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,258906,0x7ff780d69624,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,258913,0x7ff780d69944,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,258920,0x7ff780d6a144,172,CloneObject.Wide
code-creation,BytecodeHandler,0,258926,0x7ff780d6a204,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,258933,0x7ff780d6a2c4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,258940,0x7ff780d6a424,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,258947,0x7ff780d6a4a4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,258954,0x7ff780d6a544,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,258961,0x7ff780d6a664,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,258967,0x7ff780d6a784,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,258974,0x7ff780d6a824,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,258981,0x7ff780d6a9e4,44,Jump.Wide
code-creation,BytecodeHandler,0,258987,0x7ff780d6aa24,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,258993,0x7ff780d6aa64,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,259000,0x7ff780d6aac4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,259007,0x7ff780d6ab24,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,259014,0x7ff780d6ab84,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,259023,0x7ff780d6abe4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,259031,0x7ff780d6ac44,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,259037,0x7ff780d6aca4,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,259044,0x7ff780d6ad04,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,259051,0x7ff780d6ad64,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,259060,0x7ff780d6ae04,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,259067,0x7ff780d6aea4,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,259075,0x7ff780d6af44,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,259081,0x7ff780d6afe4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,259088,0x7ff780d6b044,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,259095,0x7ff780d6b0a4,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,259101,0x7ff780d6b104,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,259107,0x7ff780d6b164,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,259114,0x7ff780d6b1c4,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,259121,0x7ff780d6b224,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,259128,0x7ff780d6b284,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,259135,0x7ff780d6b2e4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,259142,0x7ff780d6b364,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,259148,0x7ff780d6b544,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,259155,0x7ff780d6b644,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,259161,0x7ff780d6b684,260,ForInNext.Wide
code-creation,BytecodeHandler,0,259168,0x7ff780d6b7a4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,259174,0x7ff780d6b7e4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,259181,0x7ff780d6b884,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,259188,0x7ff780d6b944,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,259195,0x7ff780d6b9c4,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,259202,0x7ff780d6bbe4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,259209,0x7ff780d6bc84,156,GetIterator.Wide
code-creation,BytecodeHandler,0,259215,0x7ff780d6bd24,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,259222,0x7ff780d6bdc4,56,Abort.Wide
code-creation,BytecodeHandler,0,259228,0x7ff780d6be04,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,259235,0x7ff780d6be84,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,259242,0x7ff780d6bf04,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,259249,0x7ff780d6bf84,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,259256,0x7ff780d6c004,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,259262,0x7ff780d6c084,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,259270,0x7ff780d6c104,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,259276,0x7ff780d6c144,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,259283,0x7ff780d6c164,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,259290,0x7ff780d6c1a4,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259297,0x7ff780d6c204,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259304,0x7ff780d6c264,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259311,0x7ff780d6c2a4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259318,0x7ff780d6c2e4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,259325,0x7ff780d6c304,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,259331,0x7ff780d6c344,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,259338,0x7ff780d6c384,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,259344,0x7ff780d6c3c4,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,259353,0x7ff780d6c404,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,259360,0x7ff780d6d644,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,259367,0x7ff780d6e844,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,259374,0x7ff780d6e904,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259380,0x7ff780d6e9a4,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259387,0x7ff780d6ea24,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,259394,0x7ff780d6eac4,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,259401,0x7ff780d6ebc4,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,259410,0x7ff780d6fec4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,259419,0x7ff780d6ff64,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,259426,0x7ff780d70064,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,259456,0x7ff780d71344,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,259463,0x7ff780d71424,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,259470,0x7ff780d72884,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,259477,0x7ff780d72944,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,259484,0x7ff780d729e4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,259491,0x7ff780d72aa4,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,259498,0x7ff780d72be4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,259505,0x7ff780d72ca4,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,259511,0x7ff780d72d64,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,259518,0x7ff780d72e24,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,259525,0x7ff780d72ee4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,259533,0x7ff780d72fc4,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,259540,0x7ff780d73084,980,Add.ExtraWide
code-creation,BytecodeHandler,0,259546,0x7ff780d73464,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,259552,0x7ff780d73864,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,259559,0x7ff780d73c44,988,Div.ExtraWide
code-creation,BytecodeHandler,0,259565,0x7ff780d74024,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,259571,0x7ff780d743c4,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,259577,0x7ff780d747a4,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,259584,0x7ff780d74b44,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,259591,0x7ff780d74ee4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,259598,0x7ff780d75284,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,259605,0x7ff780d75644,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,259611,0x7ff780d75a04,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,259618,0x7ff780d75e24,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,259625,0x7ff780d761c4,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,259631,0x7ff780d765a4,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,259638,0x7ff780d76944,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,259644,0x7ff780d76ce4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,259651,0x7ff780d77024,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,259658,0x7ff780d773a4,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,259665,0x7ff780d775a4,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,259671,0x7ff780d777a4,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,259678,0x7ff780d779a4,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,259685,0x7ff780d77ba4,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,259692,0x7ff780d77da4,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,259699,0x7ff780d78044,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,259705,0x7ff780d782c4,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,259712,0x7ff780d78544,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,259718,0x7ff780d787e4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,259725,0x7ff780d789e4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,259732,0x7ff780d78a64,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,259739,0x7ff780d78ae4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,259746,0x7ff780d78b24,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,259753,0x7ff780d78fa4,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,259760,0x7ff780d79424,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,259767,0x7ff780d79824,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,259776,0x7ff780d79c44,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,259784,0x7ff780d7a064,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,259791,0x7ff780d7a464,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,259798,0x7ff780d7a884,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,259805,0x7ff780d7ac84,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,259813,0x7ff780d7b0a4,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,259820,0x7ff780d7b524,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,259826,0x7ff780d7b5c4,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,259833,0x7ff780d7b684,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,259841,0x7ff780d7b6e4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,259848,0x7ff780d7bbc4,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,259855,0x7ff780d7bfa4,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,259862,0x7ff780d7c184,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,259869,0x7ff780d7c944,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,259876,0x7ff780d7cd84,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,259883,0x7ff780d7d384,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,259890,0x7ff780d7d984,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,259897,0x7ff780d7df84,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,259904,0x7ff780d7e584,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,259911,0x7ff780d7e904,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,259917,0x7ff780d7e9a4,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,259924,0x7ff780d7ea24,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,259931,0x7ff780d7eb04,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,259937,0x7ff780d7ec04,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,259944,0x7ff780d7ec84,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,259951,0x7ff780d7ee24,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,259958,0x7ff780d7f3a4,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,259965,0x7ff780d7f6c4,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,259972,0x7ff780d7fec4,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,259979,0x7ff780d7ff84,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,259987,0x7ff780d80044,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,259993,0x7ff780d801a4,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,260000,0x7ff780d80224,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,260007,0x7ff780d802c4,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,260014,0x7ff780d803e4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,260021,0x7ff780d80504,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,260028,0x7ff780d805a4,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,260035,0x7ff780d80764,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,260041,0x7ff780d807a4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,260048,0x7ff780d807e4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,260055,0x7ff780d80844,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,260062,0x7ff780d808a4,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,260069,0x7ff780d80904,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,260076,0x7ff780d80964,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,260084,0x7ff780d809c4,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,260091,0x7ff780d80a24,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,260098,0x7ff780d80a84,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,260105,0x7ff780d80ae4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,260152,0x7ff780d80b84,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,260163,0x7ff780d80c24,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,260170,0x7ff780d80cc4,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,260177,0x7ff780d80d64,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,260184,0x7ff780d80dc4,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,260191,0x7ff780d80e24,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,260197,0x7ff780d80e84,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,260204,0x7ff780d80ee4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,260211,0x7ff780d80f44,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,260217,0x7ff780d80fa4,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,260224,0x7ff780d81004,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,260231,0x7ff780d81064,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,260238,0x7ff780d810e4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,260245,0x7ff780d812c4,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,260252,0x7ff780d813c4,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,260259,0x7ff780d81404,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,260265,0x7ff780d81524,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,260272,0x7ff780d81564,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,260279,0x7ff780d81604,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,260286,0x7ff780d816c4,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,260294,0x7ff780d81744,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,260301,0x7ff780d81964,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,260309,0x7ff780d819e4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,260316,0x7ff780d81a84,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,260322,0x7ff780d81b04,56,Abort.ExtraWide
new,MemoryChunk,0x22b1e4c0000,262144
new,MemoryChunk,0x12c30700000,262144
new,MemoryChunk,0x2f4ccfc0000,262144
tick,0x7ff7807de769,263281,0,0x0,5
new,MemoryChunk,0x14466600000,262144
code-creation,Eval,10,265294,0x1446663b4ee,5, node:internal/main/run_main_module:1:1,0x1446663b3a8,~
script-source,91,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x1446663b4ee,91,0,649,C0O0C4O649,,
code-creation,Function,10,265371,0x1446663b596,58, node:internal/main/run_main_module:1:1,0x1446663b468,~
code-source-info,0x1446663b596,91,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,265626,0x1446663b7d6,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0xaefa10fca0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n  */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x1446663b7d6,9,10646,10999,C0O10656C2O10667C4O10663C9O10684C13O10705C14O10728C19O10741C24O10745C29O10745C35O10889C37O10899C47O10947C60O10905C65O10899C66O10969C71O10969C75O10996,,
code-creation,LazyCompile,10,266298,0x1446663c4e6,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0xaefa10fbd0,~
code-source-info,0x1446663c4e6,9,9826,10409,C0O9845C6O9860C12O9890C16O9898C17O9929C22O9938C23O9951C30O9997C37O10028C45O9997C63O10130C70O10130C75O10166C89O10201C103O10158C108O10241C109O10253C124O10285C126O10298C141O10321C152O10340C160O10372C165O10321C170O10396C174O10404,,
code-creation,Eval,10,266685,0x1446663d46e,5, node:internal/bootstrap/pre_execution:1:1,0x1446663d0c8,~
script-source,92,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  noGlobalSearchPaths\x2C\x0d\n  shouldNotRegisterESMLoader\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  // TODO(joyeecheung): snapshot fast APIs (which need to work with\x0d\n  // array buffers\x2C whose connection with C++ needs to be rebuilt after\x0d\n  // deserialization).\x0d\n  const {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x0d\n  } = require('internal/process/per_thread').getFastAPIs(binding);\x0d\n\x0d\n  process.hrtime = hrtime;\x0d\n  process.hrtime.bigint = hrtimeBigInt;\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {}\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x1446663d46e,92,0,16480,C0O0C4O16480,,
code-creation,Function,10,267455,0x1446663df76,435, node:internal/bootstrap/pre_execution:1:1,0x1446663d3e8,~
code-source-info,0x1446663df76,92,0,16480,C0O0C193O28C199O47C205O72C211O84C217O100C223O130C229O250C235O250C240O174C246O193C252O217C258O316C264O316C269O288C275O366C281O366C286O355C292O428C298O428C303O454C308O394C314O478C320O478C324O478C326O16065C333O16087C339O16110C345O16133C351O16157C357O16175C363O16194C369O16225C375O16252C381O16276C387O16307C393O16340C399O16363C405O16391C411O16415C417O16436C423O16460C429O16080C434O16479,,
code-creation,Eval,10,267793,0x1446663f87e,5, node:internal/options:1:1,0x1446663f6c8,~
script-source,93,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getOptions\x2C\x0d\n  noGlobalSearchPaths\x2C\x0d\n  shouldNotRegisterESMLoader\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\n\x0d\n// getOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  noGlobalSearchPaths\x2C\x0d\n  shouldNotRegisterESMLoader\x2C\x0d\n};\x0d\n
code-source-info,0x1446663f87e,93,0,1730,C0O0C4O1730,,
code-creation,Function,10,267922,0x1446663fc0e,150, node:internal/options:1:1,0x1446663f7f8,~
code-source-info,0x1446663fc0e,93,0,1730,C0O0C43O100C46O100C51O28C57O43C62O67C67O161C68O161C70O174C71O174C73O191C74O191C76O1483C83O1629C89O1648C95O1673C101O1697C144O1498C149O1729,,
new,MemoryChunk,0x2784a840000,262144
code-creation,LazyCompile,10,268189,0x2784a8411ce,69,internalBinding node:internal/bootstrap/loaders:164:45,0xaefa10f720,~
code-source-info,0x2784a8411ce,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,268449,0x2784a841936,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:23:36,0x1446663d4a0,~
code-source-info,0x2784a841936,92,544,2490,C10O690C15O690C18O795C21O795C25O831C28O831C31O861C34O861C37O882C40O882C43O908C46O908C49O1116C52O1128C57O1132C63O1157C66O1165C77O1222C82O1226C87O1195C91O1186C95O1257C98O1257C101O1352C104O1352C107O1461C110O1461C113O1484C116O1484C119O1545C122O1545C125O1875C128O1875C131O1953C134O1953C137O2155C140O2155C143O2184C146O2184C149O2219C152O2219C155O2248C158O2248C161O2269C164O2269C167O2295C170O2295C173O2341C179O2341C184O2384C189O2402C195O2384C199O2433C202O2433C205O2458C208O2458C212O2489,,
code-creation,LazyCompile,10,268588,0x2784a842b66,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x32fd2272fe8,~
script-source,19,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0x2784a842b66,19,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
code-creation,LazyCompile,10,270448,0x2784a8453b6,432,patchProcessObject node:internal/bootstrap/pre_execution:82:28,0x1446663d4f0,~
code-source-info,0x2784a8453b
code-creation,LazyCompile,10,270650,0x2784a845a4e,113,getFastAPIs node:internal/process/per_thread:57:21,0x32fd227f748,~
script-source,23,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nfunction getFastAPIs(binding) {\x0d\n  const {\x0d\n    hrtime: _hrtime\x0d\n  } = binding.getFastAPIs();\x0d\n\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  const hrValues = new Uint32Array(_hrtime.buffer);\x0d\n\x0d\n  function hrtime(time) {\x0d\n    _hrtime.hrtime();\x0d\n\x0d\n    if (time !== undefined) {\x0d\n      validateArray(time\x2C 'time');\x0d\n      if (time.length !== 2) {\x0d\n        throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n      }\x0d\n\x0d\n      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n      const nsec = hrValues[2] - time[1];\x0d\n      const needsBorrow = nsec < 0;\x0d\n      return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n    }\x0d\n\x0d\n    return [\x0d\n      hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n      hrValues[2]\x2C\x0d\n    ];\x0d\n  }\x0d\n\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  const hrBigintValues = new BigUint64Array(_hrtime.buffer\x2C 0\x2C 1);\x0d\n  function hrtimeBigInt() {\x0d\n    _hrtime.hrtimeBigInt();\x0d\n    return hrBigintValues[0];\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  getFastAPIs\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x0d\n};\x0d\n
code-source-info,0x2784a845a4e,23,1285,2511,C0O1285C24O1344C29O1344C34O1321C40O1564C50O1588C57O1564C62O1564C64O2321C74O2348C86O2321C91O2321C93O2462C100O2476C106O2489C112O2508,,
code-creation,LazyCompile,10,271567,0x2784a847256,832,resolve node:path:158:10,0x3644b669668,~
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instancee\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x2784a
code-creation,LazyCompile,10,274557,0x2784a84a86e,30,validateString node:internal/validators:117:24,0x32fd225a8e0,~
script-source,17,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0x2784a84a86e,17,3514,3626,C0O3533C6O3569C22O3575C27O3569C29O3625,,
code-creation,LazyCompile,10,274987,0x2784a84b1d6,17,isPathSeparator node:path:52:25,0x3644b6690e8,~
code-source-info,0x2784a84b1d6,35,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,LazyCompile,10,275027,0x2784a84b2d6,35,isWindowsDeviceRoot node:path:60:29,0x3644b669560,~
code-source-info,0x2784a84b2d6,35,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,275083,0x2784a84b3f6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x3ef52493f60,~
script-source,90,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x2784a84b3f6,90,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,275388,0x2784a84ba5e,442,normalizeString node:path:66:25,0x3644b6695b0,~
code-source-info,0x2784a84ba5e
code-creation,LazyCompile,10,275564,0x2784a84c17e,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:130:33,0x1446663d540,~
code-source-info,0x2784a84c17e,92,4445,4680,C16O4498C21O4498C26O4525C28O4543C36O4573C43O4639C49O4658C56O4543C62O4679,,
code-creation,LazyCompile,10,275626,0x2784a84c2fe,82,getOptionValue node:internal/options:32:24,0x1446663f950,~
code-source-info,0x2784a84c2fe,93,751,998,C0O785C3O785C7O828C15O828C22O879C30O901C38O901C43O888C47O879C53O917C55O942C60O948C61O972C66O972C74O987C81O995,,
code-creation,LazyCompile,10,275675,0x2784a84c67e,33,getOptionsFromBinding node:internal/options:18:31,0x1446663f8b0,~
code-source-info,0x2784a84c67e,93,484,587,C0O492C6O516C11O543C15O528C28O566C32O584,,
code-creation,LazyCompile,10,275983,0x2784a84ca5e,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:222:33,0x1446663d7e8,~
code-source-info,0x2784a84ca5e,92,7005,7236,C0O7048C6O7048C11O7021C16O7121C22O7121C27O7092C32O7164C35O7189C40O7164C45O7235,,
code-creation,LazyCompile,10,276045,0x2784a84cbf6,77,toggleTraceCategoryState node:internal/process/per_thread:385:34,0x32fd227fd38,~
code-source-info,0x2784a84cbf6,23,11424,11731,C0O11449C4O11479C10O11515C16O11547C21O11591C26O11592C33O11536C39O11618C44O11639C49O11639C55O11659C61O11692C66O11713C71O11713C76O11730,,
code-creation,LazyCompile,10,276092,0x2784a84cda6,42,setupPerfHooks node:internal/bootstrap/pre_execution:228:24,0x1446663d838,~
code-source-info,0x2784a84cda6,92,7263,7386,C0O7271C6O7271C11O7307C16O7308C20O7332C26O7332C31O7362C36O7363C41O7385,,
code-creation,LazyCompile,10,276147,0x2784a84cf26,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x32763aca000,~
script-source,70,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x2784a84cf26,70,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
code-creation,LazyCompile,10,276422,0x2784a84d636,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x3644b67d260,~
script-source,41,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0x2784a84d636,41,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,276507,0x2784a84d8a6,62,setupInspectorHooks node:internal/bootstrap/pre_execution:233:29,0x1446663d888,~
code-source-info,0x2784a84d8a6,92,7418,7984,C0O7767C6O7771C11O7796C17O7865C23O7865C28O7833C33O7848C38O7912C44O7912C49O7940C54O7941C61O7983,,
code-creation,Eval,10,276631,0x2784a84dc56,5, node:internal/inspector_async_hook:1:1,0x2784a84daa0,~
script-source,94,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0x2784a84dc56,94,0,2048,C0O0C4O2048,,
code-creation,Function,10,276759,0x2784a84de76,79, node:internal/inspector_async_hook:1:1,0x2784a84dbd0,~
code-source-info,0x2784a84de76,94,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,276865,0x2784a84e36e,69,setupWarningHandler node:internal/bootstrap/pre_execution:142:29,0x1446663d590,~
code-source-info,0x2784a84e36e,92,4712,4917,C0O4750C6O4750C11O4733C16O4790C24O4794C33O4839C38O4843C45O4860C50O4876C53O4884C61O4884C68O4916,,
code-creation,LazyCompile,10,276974,0x2784a84e4ce,20,addListener node:events:486:58,0xaefa133ed8,~
script-source,13,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catcheable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {}\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {}\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0x2784a84e4ce,13,14677,14751,C0O14699C14O14706C19O14748,,
code-creation,LazyCompile,10,278480,0x2784a85072e,387,_addListener node:events:418:22,0xaefa133e38,~
code-source-info,0x2784a85072e
code-creation,LazyCompile,10,278581,0x2784a850a66,15,checkListener node:events:127:23,0xaefa133798,~
code-source-info,0x2784a850a66,13,3796,3854,C0O3812C8O3812C14O3853,,
code-creation,LazyCompile,10,278619,0x2784a850b56,30, node:internal/validators:235:42,0x32fd225ad78,~
code-source-info,0x2784a850b56,17,7441,7560,C0O7463C6O7501C22O7507C27O7501C29O7559,,
code-creation,LazyCompile,10,278744,0x2784a850dd6,380,emit node:events:340:44,0xaefa133d78,~
code-source-info,0x2784a850dd
tick,0x7ff7811db1e1,278931,0,0x0,3,0x7ff78081b5d0,0x2784a85077b,0x2784a84e4dc,0x2784a84e3ab,0x2784a841964,0x1446663b5a5
code-creation,LazyCompile,10,279024,0x2784a85117e,172,startListeningIfSignal node:internal/process/signal:22:32,0x3ef52492d20,~
script-source,89,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0x2784a85117e,89,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,279243,0x2784a85153e,19,isSignal node:internal/process/signal:17:18,0x3ef52492b68,~
code-source-info,0x2784a85153e,89,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,LazyCompile,10,279329,0x2784a8516de,75,setupDebugEnv node:internal/bootstrap/pre_execution:194:23,0x1446663d6f8,~
code-source-info,0x2784a8516de,92,6227,6442,C0O6235C6O6235C11O6268C19O6296C24O6300C29O6269C34O6316C42O6320C48O6365C54O6365C59O6402C64O6415C69O6416C74O6441,,
code-creation,LazyCompile,10,279461,0x2784a851a76,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x3644b67c5e8,~
script-source,40,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0x2784a851a76,40,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x12200080000,262144
code-creation,Function,11,279932,0x12200083060,572,getOptionValue node:internal/options:32:24,0x1446663f950,^
code-source-info,0x12200083060,93,751,998,,,
code-creation,Function,11,279977,0x12200083300,216,isPathSeparator node:path:52:25,0x3644b6690e8,^
code-source-info,0x12200083300,35,1794,1876,,,
code-creation,Function,11,280064,0x12200083440,3076,normalizeString node:path:66:25,0x3644b6695b0,^
code-source-info,0x12200083440,35,2226,4212,,,
code-creation,LazyCompile,10,280153,0x2784a8523ce,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:173:40,0x1446663d630,~
code-source-info,0x2784a8523ce,92,5770,5964,C0O5778C8O5783C14O5824C15O5831C16O5867C22O5867C27O5848C32O5919C38O5953C43O5953C48O5963,,
code-creation,LazyCompile,10,280245,0x2784a85263e,62,initializeReport node:internal/bootstrap/pre_execution:183:26,0x1446663d680,~
code-source-info,0x2784a85263e,92,5993,6201,C0O5993C8O6020C16O6020C21O6009C27O6059C42O6080C47O6155C55O6059C61O6200,,
code-creation,Eval,10,280477,0x2784a852bbe,5, node:internal/process/report:1:1,0x2784a8529b8,~
script-source,95,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined && typeof file !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\x0d\n    } else if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0x2784a852bbe,95,0,2743,C0O0C4O2743,,
code-creation,Function,10,280759,0x2784a8536d6,315, node:internal/process/report:1:1,0x2784a852b38,~
code-source-info,0x2784a8536d6,95,0,2743,C0O0C51O70C54O70C59O96C64O26C70O51C76O199C79O199C84O116C90O136C96O155C102O178C108O243C111O243C115O243C117O282C123O327C128O332C136O786C290O2688C297O2710C303O2731C309O2703C314O2742,,
code-creation,LazyCompile,10,281046,0x2784a855416,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:202:40,0x1446663d748,~
code-source-info,0x2784a855416,92,6546,6646,C0O6583C6O6583C11O6562C16O6624C20O6645,,
code-creation,LazyCompile,10,281134,0x2784a85555e,57,addSignalHandler node:internal/process/report:97:26,0x2784a852bf0,~
code-source-info,0x2784a85555e,95,2318,2471,C0O2329C5O2336C10O2336C16O2367C22O2403C27O2412C32O2412C38O2432C41O2440C49O2440C56O2470,,
code-creation,LazyCompile,10,281224,0x2784a855b1e,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:208:46,0x1446663d798,~
code-source-info,0x2784a855b1e,92,6695,6969,C0O6695C8O6718C18O6718C23O6764C25O6782C26O6789C27O6795C35O6795C40O6825C45O6826C50O6887C58O6887C63O6865C69O6907C74O6915C79O6918C84O6915C91O6968,,
code-creation,LazyCompile,10,281333,0x2784a855dae,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:338:37,0x1446663d968,~
code-source-info,0x2784a855dae,92,10839,11385,C0O10847C3O10859C8O10863C14O10902C20O10902C25O10948C33O10971C38O10975C46O10948C52O11002C53O11012C57O11002C61O11096C64O11111C73O11172C76O11180C81O11184C90O11232C93O11247C102O11291C108O11291C113O11315C118O11316C124O11356C127O11371C132O11356C137O11384,,
code-creation,LazyCompile,10,281450,0x2784a855f3e,21,assert node:internal/assert:11:16,0x32fd2258098,~
script-source,16,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x2784a855f3e,16,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,Eval,10,282303,0x2784a856dee,5, node:child_process:1:1,0x2784a856918,~
script-source,96,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath /* \x2C args\x2C options */) {\x0d\n  validateString(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n  let options = {};\x0d\n  let args = [];\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] != null) {\x0d\n    if (typeof arguments[pos] !== 'object') {\x0d\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\x0d\n    }\x0d\n\x0d\n    options = { ...arguments[pos++] };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file /* \x2C args\x2C options\x2C callback */) {\x0d\n  let args = [];\x0d\n  let callback;\x0d\n  let options;\x0d\n\x0d\n  // Parse the optional positional parameters.\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'object') {\x0d\n    options = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'function') {\x0d\n    callback = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (!callback && pos < arguments.length && arguments[pos] != null) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C arguments[pos]);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x2784a856dee,96,0,25580,C0O0C4O25580,,
code-creation,Function,10,284506,0x2784a85784e,748, node:child_process:1:1,0x2784a856d68,~
code-source-info,0x2784a85784e
code-creation,LazyCompile,10,285152,0x2784a859e26,82,debuglog node:internal/util/debuglog:71:18,0x3644b67c920,~
code-source-info,0x2784a859e26,40,2302,3390,C0O2302C28O2432C32O2432C34O2878C35O2878C37O2901C41O2901C43O2994C48O3231C58O3252C63O3278C74O3231C79O3373C81O3387,,
code-creation,Eval,10,286093,0x2784a85cde6,5, node:internal/child_process:1:1,0x2784a85c6f8,~
script-source,97,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    target.emit(event\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0x2784a85cde6,97,0,31901,C0O0C4O31901,,
code-creation,Function,10,288760,0x2784a85e3f6,1253, node:internal/child_process:1:1,0x2784a85cd60,~
code-source-info,0x2784a85e3f
code-creation,Function,10,289402,0x2784a85eb5e,35,<instance_members_initializer> node:internal/child_process:524:3,0x2784a85dac0,~
code-source-info,0x2784a85eb5e,97,14177,14236,C3O14188C16O14205C26O14231C34O14236,,
code-creation,Eval,10,290744,0x2784a862d0e,5, node:net:1:1,0x2784a862530,~
script-source,98,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  let self = handle[owner_symbol];\x0d\n\x0d\n  if (self.constructor.name === 'ReusedHandle') {\x0d\n    self = self.handle;\x0d\n  }\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0x2784a862d0e,98,0,49543,C0O0C4O49543,,
code-creation,Function,10,294814,0x2784a865bde,2513, node:net:1:1,0x2784a862c88,~
code-source-info,0x2784a865bde,98,0,49543,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33238C1831O33266C1843O33290C1852O33238C1862O33303C1868O33303C1878O37424C1881O37431C1892O37450C1900O38954C1903O38961C1916O38978C1924O43047C1930O43075C1951O43109C1963O43047C1973O43207C1976O43214C1989O43232C1997O44354C2000O44361C2013O44386C2021O45183C2024O45190C2037O45206C2045O46117C2048O46124C2061O46154C2069O46654C2072O46661C2084O46684C2097O46708C2105O47041C2111O47066C2132O47091C2144O47132C2156O47041C2166O47182C2172O47210C2189O47237C2201O47273C2213O47182C2223O47318C2226O47325C2239O47348C2247O47603C2250O47610C2263O47624C2271O47736C2274O47743C2287O47759C2295O47876C2297O47932C2298O47932C2300O47941C2311O47965C2312O47965C2314O47991C2323O48721C2328O49003C2338O49046C2348O49085C2358O49103C2368O49371C2378O49401C2388O49413C2398O49436C2408O49453C2418O49472C2428O49483C2438O49494C2448O49513C2503O49018C2512O49542,,
tick,0x7ff7811c036a,295466,1,0x7ff7802a73d0,3,0x7ff780bec0b0,0x1446663c52c,0x1446663b81d,0x2784a85e5e1,0x1446663c54d,0x1446663b81d,0x2784a857a92,0x1446663c54d,0x1446663b81d,0x2784a855e1a,0x2784a8419b6,0x1446663b5a5
code-creation,Eval,10,296048,0x2784a86b3ce,5, node:internal/net:1:1,0x2784a86b208,~
script-source,99,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0x2784a86b3ce,99,0,1818,C0O0C4O1818,,
code-creation,Function,10,296289,0x2784a86b7be,617, node:internal/net:1:1,0x2784a86b348,~
code-source-info,0x2784a86b7be,99,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
code-creation,Eval,10,296863,0x2784a86d1b6,5, node:internal/dtrace:1:1,0x2784a86d070,~
script-source,100,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0x2784a86d1b6,100,0,589,C0O0C4O589,,
code-creation,Function,10,296946,0x2784a86d68e,140, node:internal/dtrace:1:1,0x2784a86d130,~
code-source-info,0x2784a86d68e,100,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
code-creation,LazyCompile,10,297376,0x2784a86e536,34,protoGetter node:net:718:21,0x2784a863150,~
code-source-info,0x2784a86e536,98,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
code-creation,Eval,10,298560,0x2784a87388e,5, node:dgram:1:1,0x2784a873328,~
script-source,101,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n  // Check if the udp handle was connected and set the state accordingly\x0d\n  if (isConnected(self))\x0d\n    state.connectState = CONNECT_STATE_CONNECTED;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    // Check if the udp handle was connected and set the state accordingly\x0d\n    if (isConnected(this))\x0d\n      state.connectState = CONNECT_STATE_CONNECTED;\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\nfunction isConnected(self) {\x0d\n  try {\x0d\n    self.remoteAddress();\x0d\n    return true;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0x2784a87388e,101,0,28537,C0O0C4O28537,,
code-creation,Function,10,301607,0x2784a8757ee,1498, node:dgram:1:1,0x2784a873808,~
code-source-info,0x2784a8757ee
code-creation,Eval,10,302488,0x2784a878c56,5, node:internal/dgram:1:1,0x2784a878a50,~
script-source,102,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0x2784a878c56,102,0,1941,C0O0C4O1941,,
code-creation,Function,10,302730,0x2784a878f1e,196, node:internal/dgram:1:1,0x2784a878bd0,~
code-source-info,0x2784a878f1e,102,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,303369,0x2784a87b7fe,152,deprecate node:internal/util:96:19,0xaefa12aa70,~
script-source,12,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0x2784a87b7fe,12,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
code-creation,Function,11,305099,0x122000840c0,1344,deprecate node:internal/util:96:19,0xaefa12aa70,^
code-source-info,0x122000840c0,12,2503,3720,,,
code-creation,Function,11,305166,0x12200084660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0xaefa10fca0,^
code-source-info,0x12200084660,9,10646,10999,,,
code-creation,Function,11,305233,0x12200084960,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0xaefa10fbd0,^
code-source-info,0x12200084960,9,9826,10409,,,
code-creation,Function,11,305287,0x12200084ec0,548,internalBinding node:internal/bootstrap/loaders:164:45,0xaefa10f720,^
code-source-info,0x12200084ec0,9,5278,5523,,,
code-creation,Eval,10,306473,0x2784a87e086,5, node:internal/socket_list:1:1,0x2784a87df30,~
script-source,103,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x2784a87e086,103,0,2813,C0O0C4O2813,,
code-creation,Function,10,306854,0x2784a87e6c6,126, node:internal/socket_list:1:1,0x2784a87e000,~
code-source-info,0x2784a87e6c6,103,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
new,MemoryChunk,0xa48ae00000,262144
code-creation,LazyCompile,10,307303,0x2784a87f16e,14,customPromiseExecFunction node:child_process:231:35,0x2784a8573d0,~
code-source-info,0x2784a87f16e,96,6835,7215,C0O6835C9O6850C13O7212,,
code-creation,LazyCompile,10,307415,0xa48ae030ee,129,_forkChild node:child_process:170:20,0x2784a856e70,~
code-source-info,0xa48ae030ee,96,5090,5572,C0O5090C8O5154C19O5163C22O5177C29O5154C35O5188C40O5188C45O5203C50O5203C54O5231C72O5231C77O5231C79O5279C84O5287C97O5287C103O5422C108O5430C121O5430C128O5571,,
tick,0x7ffd093cf4c4,310989,1,0x7ff780223b70,6,0x7ff780bec0b0,0xa48ae03116,0x2784a855e24,0x2784a8419b6,0x1446663b5a5
code-creation,LazyCompile,10,320760,0xa48ae03a8e,374,setupChannel node:internal/child_process:569:22,0x2784a85d098,~
code-source-info,0xa48ae03a8e
code-creation,LazyCompile,10,320884,0xa48ae0613e,56,Control node:internal/child_process:528:14,0x2784a85d8c8,~
code-source-info,0xa48ae0613e,97,14254,14314,C3O14271C11O14271C40O14285C48O14299C55O14313,,
code-creation,LazyCompile,10,320927,0xa48ae0625e,21,EventEmitter node:events:84:22,0xaefa132d48,~
code-source-info,0xa48ae0625e,13,2562,2612,C0O2574C3O2587C8O2592C13O2592C20O2611,,
code-creation,LazyCompile,10,320996,0xa48ae063a6,149,EventEmitter.init node:events:194:29,0xaefa133a48,~
code-source-info,0xa48ae063a6,13,5772,6380,C0O5795C6O5832C13O5844C16O5844C21O5870C25O5840C30O5887C32O5902C37O5902C41O5900C45O5927C46O5945C50O5986C60O5979C64O6021C71O6029C80O6057C85O6078C93O6057C98O6132C100O6137C105O6149C108O6162C113O6149C117O6147C123O6322C125O6327C131O6352C138O6362C140O6361C143O6337C148O6379,,
code-creation,Eval,10,321290,0xa48ae06c2e,5, node:internal/child_process/serialization:1:1,0xa48ae06948,~
script-source,104,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0xa48ae06c2e,104,0,4335,C0O0C4O4335,,
code-creation,Function,10,321538,0xa48ae07496,369, node:internal/child_process/serialization:1:1,0xa48ae06ba8,~
code-source-info,0xa48ae07496,104,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
code-creation,LazyCompile,10,321735,0xa48ae07f76,23,initMessageChannel node:internal/child_process/serialization:100:21,0xa48ae06e90,~
code-source-info,0xa48ae07f76,104,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,321834,0xa48ae086ce,19,_getMaxListeners node:events:271:26,0xaefa133c18,~
code-source-info,0xa48ae086ce,13,8039,8167,C0O8060C6O8094C9O8114C13O8134C14O8150C18O8164,,
code-creation,LazyCompile,10,321872,0xa48ae087c6,5,get node:events:133:16,0xaefa133838,~
code-source-info,0xa48ae087c6,13,3955,3997,C0O3965C4O3992,,
code-creation,LazyCompile,10,321929,0xa48ae08a26,322,arrayClone node:events:747:20,0xaefa1344e0,~
code-source-info,0xa48ae08a26,13,21902,22367,C0O22044C42O22067C50O22078C62O22086C71O22091C72O22105C80O22116C92O22124C104O22132C113O22137C114O22151C122O22162C134O22170C146O22178C158O22186C167O22191C168O22205C176O22216C188O22224C200O22232C212O22240C224O22248C233O22253C234O22267C242O22278C254O22286C266O22294C278O22302C290O22310C302O22318C311O22323C312O22332C317O22339C321O22364,,
code-creation,LazyCompile,10,321999,0xa48ae08cb6,30,onNewListener node:child_process:176:51,0xa48ae02fa8,~
code-source-info,0xa48ae08cb6,96,5327,5416,C0O5341C2O5350C9O5372C14O5390C19O5398C24O5398C29O5415,,
code-creation,LazyCompile,10,322126,0xa48ae09006,455,initializePolicy node:internal/bootstrap/pre_execution:366:26,0x1446663da08,~
code-source-info,0xa48ae
code-creation,LazyCompile,10,322244,0xa48ae093d6,63,initializeClusterIPC node:internal/bootstrap/pre_execution:357:30,0x1446663d9b8,~
code-source-info,0xa48ae093d6,92,11418,11666,C0O11426C3O11438C10O11442C18O11457C23O11461C29O11500C35O11500C40O11533C45O11533C49O11624C52O11639C62O11665,,
code-creation,LazyCompile,10,322318,0xa48ae09546,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:461:38,0x1446663db48,~
code-source-info,0xa48ae09546,92,15279,15432,C0O15325C6O15325C11O15295C16O15377C21O15406C26O15431,,
code-creation,Eval,10,322572,0xa48ae09e7e,5, node:internal/source_map/source_map_cache:1:1,0xa48ae09b18,~
script-source,105,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae09e7e,105,0,7905,C0O0C4O7905,,
code-creation,Function,10,322971,0xa48ae0a4f6,435, node:internal/source_map/source_map_cache:1:1,0xa48ae09df8,~
code-source-info,0xa48ae0a4f6,105,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
code-creation,Eval,10,323239,0xa48ae0b536,5, node:internal/util/iterable_weak_map:1:1,0xa48ae0b2e8,~
script-source,106,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae0b536,106,0,2042,C0O0C4O2042,,
code-creation,Function,10,323373,0xa48ae0bc96,196, node:internal/util/iterable_weak_map:1:1,0xa48ae0b4b0,~
code-source-info,0xa48ae0bc96,106,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,323400,0xa48ae0be16,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0xa48ae0b7c0,~
code-source-info,0xa48ae0be16,106,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,323708,0xa48ae0ca4e,5, node:internal/modules/cjs/helpers:1:1,0xa48ae0c798,~
script-source,107,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae0ca4e,107,0,6975,C0O0C4O6975,,
code-creation,Function,10,324117,0xa48ae0cfce,536, node:internal/modules/cjs/helpers:1:1,0xa48ae0c9c8,~
code-source-info,0xa48ae0cfce,107,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
code-creation,LazyCompile,10,324324,0xa48ae0dc0e,27,SafeSet node:internal/per_context/primordials:364:16,0xaefa10a168,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0xa48ae0dc0e,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
code-creation,LazyCompile,10,325055,0xa48ae0ea4e,27,SafeMap node:internal/per_context/primordials:351:16,0xaefa109fe0,~
code-source-info,0xa48ae0ea4e,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,325121,0xa48ae0ebc6,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0xa48ae0b5b8,~
code-source-info,0xa48ae0ebc6,106,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,325159,0xa48ae0ef4e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0xaefa10a0a0,~
code-source-info,0xa48ae0ef4e,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
code-creation,LazyCompile,10,325200,0xa48ae0f056,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0xaefa10a2f0,~
code-source-info,0xa48ae0f056,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
code-creation,LazyCompile,10,325358,0xa48ae0f8c6,492,initializeDeprecations node:internal/bootstrap/pre_execution:251:32,0x1446663d8d8,~
code-source-info,0xa48ae0f8c
code-creation,LazyCompile,10,325503,0xa48ae0fe1e,53,initializeWASI node:internal/bootstrap/pre_execution:415:24,0x1446663da58,~
code-source-info,0xa48ae0fe1e,92,13567,13778,C0O13600C6O13600C11O13583C16O13667C21O13671C29O13671C35O13687C37O13719C43O13719C47O13712C52O13777,,
code-creation,LazyCompile,10,325564,0xa48ae0ffee,57,initializeCJSLoader node:internal/bootstrap/pre_execution:422:29,0x1446663daa8,~
code-source-info,0xa48ae0ffee,92,13810,14112,C0O13836C6O13836C11O13879C17O13922C22O13929C27O13929C31O14028C42O14050C47O14086C51O14043C56O14111,,
tick,0x7ff780a1688e,326502,1,0x7ff7802a73d0,3,0x7ff780bec0b0,0x12200084b9b,0x122000848e5,0xa48ae0fff4,0x2784a8419da,0x1446663b5a5
code-creation,Eval,10,326744,0xa48ae11f26,5, node:internal/modules/cjs/loader:1:1,0xa48ae11640,~
script-source,108,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {}\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xa48ae11f26,108,0,41471,C0O0C4O41471,,
code-creation,Function,10,329751,0xa48ae13cc6,2547, node:internal/modules/cjs/loader:1:1,0xa48ae11ea0,~
code-source-info,0xa48ae13cc
code-creation,Eval,10,330648,0xa48ae17d76,5, node:internal/modules/package_json_reader:1:1,0xa48ae17bd0,~
script-source,109,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xa48ae17d76,109,0,1024,C0O0C4O1024,,
code-creation,Function,10,330797,0xa48ae17ec6,113, node:internal/modules/package_json_reader:1:1,0xa48ae17cf0,~
code-source-info,0xa48ae17ec6,109,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
code-creation,Eval,10,331118,0xa48ae1872e,5, node:internal/process/esm_loader:1:1,0xa48ae18538,~
script-source,110,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0xa48ae1872e,110,0,2982,C0O0C4O2982,,
code-creation,Function,10,331392,0xa48ae189ce,182, node:internal/process/esm_loader:1:1,0xa48ae186a8,~
code-source-info,0xa48ae189ce,110,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
code-creation,Eval,10,331996,0xa48ae19a36,5, node:internal/modules/esm/loader:1:1,0xa48ae19638,~
script-source,111,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }) => {\x0d\n          return this.import(specifier\x2C url);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(this\x2C url\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  async getModuleJob(specifier\x2C parentURL) {\x0d\n    const { format\x2C url } = await this.resolve(specifier\x2C parentURL);\x0d\n    let job = this.moduleMap.get(url);\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') this.moduleMap.set(url\x2C job = job());\x0d\n\x0d\n    if (job !== undefined) return job;\x0d\n\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(url\x2C { format });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module\x0d\n   * @param {string} [parentURL] Path of the parent importing the module\x0d\n   * @returns {object | object[]} A list of module export(s)\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {Object} context Metadata about the module\x0d\n   * @returns {Object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const preload = this.#globalPreloaders[i]();\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\n      FunctionPrototypeCall(preloadInit\x2C globalThis\x2C (builtinName) => {\x0d\n        if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n          return require(builtinName);\x0d\n        }\x0d\n        throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   * be resolved\x0d\n   * @param {String} parentURL The URL path of the module's parent\x0d\n   * @returns {{ url: String }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n    if (typeof url !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0xa48ae19a36,111,0,12388,C0O0C4O12388,,
code-creation,Function,10,333057,0xa48ae1a17e,530, node:internal/modules/esm/loader:1:1,0xa48ae199b0,~
code-source-info,0xa48ae1a17e,111,0,12388,C0O0C104O82C110O82C114O136C120O146C126O163C132O186C138O209C144O235C150O261C156O278C161O303C167O318C173O342C179O364C185O380C191O606C197O606C202O632C207O424C213O449C219O475C225O508C231O546C237O575C243O682C249O682C254O649C260O664C266O764C272O764C277O719C283O740C289O815C295O815C299O815C301O878C307O878C311O878C313O980C319O980C324O936C330O955C336O1046C342O1046C347O1030C353O1109C359O1109C364O1093C370O1186C376O1186C381O1167C510O12335C517O12304C522O12356C524O12374C529O12387,,
code-creation,Function,10,333153,0xa48ae1a576,139,<instance_members_initializer> node:internal/modules/esm/loader:59:3,0xa48ae19d38,~
code-source-info,0xa48ae1a576,111,1669,2500,C3O1689C17O1851C28O1858C45O2040C56O2047C73O2146C80O2146C94O2269C104O2361C111O2361C125O2489C138O2500,,
code-creation,Eval,10,333472,0xa48ae1b93e,5, node:internal/modules/esm/module_map:1:1,0xa48ae1b770,~
script-source,112,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst {\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.get(url);\x0d\n  }\x0d\n  set(url\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} in ModuleMap`);\x0d\n    return super.set(url\x2C job);\x0d\n  }\x0d\n  has(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.has(url);\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0xa48ae1b93e,112,0,989,C0O0C4O989,,
code-creation,Function,10,333596,0xa48ae1bd5e,149, node:internal/modules/esm/module_map:1:1,0xa48ae1b8b8,~
code-source-info,0xa48ae1bd5e,112,0,989,C0O0C17O35C20O35C24O35C26O91C31O131C34O131C39O164C52O165C58O131C60O245C63O245C68O271C73O220C79O307C82O307C87O288C97O420C141O960C143O975C148O988,,
code-creation,Eval,10,333984,0xa48ae1c786,5, node:internal/modules/esm/module_job:1:1,0xa48ae1c4a0,~
script-source,113,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        const { format } = await this.loader.load(childFileURL);\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0xa48ae1c786,113,0,7906,C0O0C4O7906,,
code-creation,Function,10,334659,0xa48ae1cc76,334, node:internal/modules/esm/module_job:1:1,0xa48ae1c700,~
code-source-info,0xa48ae1cc76,113,0,7906,C0O0C85O28C91O51C97O73C103O96C109O119C114O141C119O166C125O181C130O200C136O226C142O243C148O267C154O289C160O301C166O329C172O354C178O381C184O406C190O477C196O477C201O462C207O543C213O543C218O520C224O608C230O608C235O581C241O673C247O673C251O673C253O726C256O726C258O760C260O760C262O803C263O803C265O835C269O835C271O960C275O960C314O7858C321O7827C326O7877C328O7892C333O7905,,
code-creation,Eval,10,336303,0xa48ae1f9ce,5, node:internal/modules/esm/resolve:1:1,0xa48ae1f2d8,~
script-source,114,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormat(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%2C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {}\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern)\x0d\n    return new URL(RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C\x0d\n                                                () => subpath));\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolved === undefined)\x0d\n        continue;\x0d\n      if (resolved === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolved;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolved === undefined)\x0d\n          continue;\x0d\n        return resolved;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                          bestMatchSubpath\x2C bestMatch\x2C base\x2C\x0d\n                                          pattern\x2C false\x2C conditions);\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    if (!pattern)\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved !== null)\x0d\n          return { resolved\x2C exact: true };\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                bestMatchSubpath\x2C bestMatch\x2C\x0d\n                                                base\x2C pattern\x2C true\x2C\x0d\n                                                conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // separators.\x0d\n  for (let i = 0; i < packageName.length; i++) {\x0d\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\x0d\n      validPackageName = false;\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    if (packageSubpath === '.')\x0d\n      return legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base);\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  let parsed;\x0d\n  try {\x0d\n    parsed = new URL(specifier);\x0d\n    if (parsed.protocol === 'data:') {\x0d\n      return {\x0d\n        url: specifier\x0d\n      };\x0d\n    }\x0d\n  } catch {}\x0d\n  if (parsed && parsed.protocol === 'node:')\x0d\n    return { url: specifier };\x0d\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n    return {\x0d\n      url: 'node:' + specifier\x0d\n    };\x0d\n  }\x0d\n  if (parentURL && StringPrototypeStartsWith(parentURL\x2C 'data:')) {\x0d\n    // This is gonna blow up\x2C we want the error\x0d\n    new URL(specifier\x2C parentURL);\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\x0d\n    const urlPath = fileURLToPath(url);\x0d\n    const real = realpathSync(urlPath\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const old = url;\x0d\n    url = pathToFileURL(\x0d\n      real + (StringPrototypeEndsWith(urlPath\x2C sep) ? '/' : ''));\x0d\n    url.search = old.search;\x0d\n    url.hash = old.hash;\x0d\n  }\x0d\n\x0d\n  return { url: `${url}` };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0xa48ae1f9ce,114,0,37562,C0O0C4O37562,,
code-creation,Function,10,338764,0xa48ae2096e,1086, node:internal/modules/esm/resolve:1:1,0xa48ae1f948,~
code-source-info,0xa48ae2096e
code-creation,Eval,10,339288,0xa48ae23b56,5, node:internal/modules/esm/get_format:1:1,0xa48ae23930,~
script-source,115,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null];\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:'(parsed\x2C url) {\x0d\n    const ext = extname(parsed.pathname);\x0d\n    let format;\x0d\n\x0d\n    if (ext === '.js') {\x0d\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\x0d\n    } else {\x0d\n      format = extensionFormatMap[ext];\x0d\n    }\x0d\n    if (!format) {\x0d\n      if (experimentalSpecifierResolution === 'node') {\x0d\n        process.emitWarning(\x0d\n          'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n          'ExperimentalWarning');\x0d\n        format = legacyExtensionFormatMap[ext];\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return format || null;\x0d\n  }\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C url) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae23b56,115,0,2723,C0O0C4O2723,,
code-creation,Function,10,339508,0xa48ae23f86,314, node:internal/modules/esm/get_format:1:1,0xa48ae23ad0,~
code-source-info,0xa48ae23f86,115,0,2723,C0O0C53O26C58O43C63O60C69O94C75O154C78O154C83O142C89O199C92O199C97O180C102O263C105O263C109O263C111O354C114O354C118O354C120O442C123O442C127O442C129O517C132O517C137O498C143O590C146O590C151O567C157O572C163O655C166O655C171O681C176O624C182O719C186O719C188O846C192O846C194O990C198O1022C207O1086C213O1050C217O1099C221O1131C230O1195C236O1159C240O1233C242O1246C252O1271C260O1701C268O2361C276O1233C281O1233C283O2626C290O2648C296O2669C302O2692C308O2641C313O2722,,
code-creation,Eval,10,339736,0xa48ae247d6,5, node:internal/modules/esm/load:1:1,0xa48ae24660,~
script-source,116,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { translators } = require('internal/modules/esm/translators');\x0d\n\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (!translators.has(format)) format = defaultGetFormat(url);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae247d6,116,0,675,C0O0C4O675,,
code-creation,Function,10,339802,0xa48ae2491e,80, node:internal/modules/esm/load:1:1,0xa48ae24750,~
code-source-info,0xa48ae2491e,116,0,675,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O189C50O189C55O173C61O635C68O657C74O650C79O674,,
code-creation,Eval,10,339952,0xa48ae24e86,5, node:internal/modules/esm/get_source:1:1,0xa48ae24cb0,~
script-source,117,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0xa48ae24e86,117,0,1394,C0O0C4O1394,,
code-creation,Function,10,340078,0xa48ae24ff6,169, node:internal/modules/esm/get_source:1:1,0xa48ae24e00,~
code-source-info,0xa48ae24ff6,117,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
code-creation,Eval,10,340871,0xa48ae2633e,5, node:internal/fs/promises:1:1,0xa48ae25ba0,~
script-source,118,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = buffer.byteLength;\x0d\n    position = bufferOrOptions.position || null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae2633e,118,0,23714,C0O0C4O23714,,
code-creation,Function,10,342409,0xa48ae28a76,1659, node:internal/fs/promises:1:1,0xa48ae262b8,~
code-source-info,0xa48ae28a
code-creation,Function,10,342597,0xa48ae29426,27,<instance_members_initializer> node:internal/fs/promises:189:3,0xa48ae27918,~
code-source-info,0xa48ae29426,118,4390,5219,C0O4390C12O4398C26O5219,,
tick,0x7ff7801ebf6e,342632,1,0x7ff7802a73d0,3,0x7ff780bec0b0,0x12200084b9b,0x122000848e5,0xa48ae2505a,0x12200084c63,0x122000848e5,0xa48ae24942,0x12200084c63,0x122000848e5,0xa48ae1a2d4,0x12200084c63,0x122000848e5,0xa48ae18a1c,0x12200084c63,0x122000848e5,0xa48ae14171,0x12200084c63,0x122000848e5,0xa48ae0fff4,0x2784a8419da,0x1446663b5a5
code-creation,Eval,10,343056,0xa48ae2bec6,5, node:internal/fs/rimraf:1:1,0xa48ae2bb60,~
script-source,119,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0xa48ae2bec6,119,0,7392,C0O0C4O7392,,
code-creation,Function,10,343509,0xa48ae2c4c6,409, node:internal/fs/rimraf:1:1,0xa48ae2be40,~
code-source-info,0xa48ae2c4c6,119,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
code-creation,LazyCompile,10,343818,0xa48ae2d35e,188,from node:buffer:295:28,0x32fd22659e0,~
script-source,18,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xa48ae2d35e,18,8700,9683,C3O8739C9O8775C12O8782C17O8818C18O8824C28O8880C33O8884C39O8916C51O8923C56O8972C57O9002C63O9019C68O9019C73O9035C78O9075C95O9168C104O9175C109O9215C110O9240C113O9240C118O9264C120O9278C122O9287C123O9295C125O9312C127O9311C134O9374C136O9380C138O9379C145O9398C151O9417C155O9463C158O9470C163O9510C164O9537C182O9543C187O9537,,
code-creation,LazyCompile,10,345919,0xa48ae2fd36,110,fromString node:buffer:431:20,0x32fd2265dc8,~
code-source-info,0xa48ae2fd36,18,12887,13336,C0O12915C2O12923C8O12968C14O12975C19O13000C25O13007C30O13021C35O13028C40O13045C41O13051C46O13069C51O13080C56O13119C59O13125C64O13156C66O13186C73O13192C78O13186C79O13244C85O13251C90O13265C95O13272C100O13289C101O13298C104O13305C109O13333,,
code-creation,LazyCompile,10,346048,0xa48ae2feee,177,fromStringFast node:buffer:412:24,0x32fd2265d28,~
code-source-info,0xa48ae2feee,18,12324,12864,C0O12362C5O12362C11O12387C14O12409C18O12418C21O12398C26O12431C31O12467C36O12438C41O12480C42O12486C44O12500C49O12511C51O12509C54O12497C59O12529C62O12529C65O12554C72O12569C77O12580C85O12554C91O12623C110O12623C116O12655C118O12666C123O12752C130O12771C135O12782C143O12756C149O12811C156O12825C162O12822C168O12836C171O12836C174O12852C176O12861,,
code-creation,LazyCompile,10,346140,0xa48ae300de,36,FastBuffer node:internal/buffer:958:14,0x32fd2272d30,~
code-source-info,0xa48ae300de,19,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,346186,0xa48ae301de,23,write node:buffer:592:12,0x32fd2266138,~
code-source-info,0xa48ae301de,18,17116,17180,C0O17150C17O17150C22O17180,,
code-creation,LazyCompile,10,346261,0xa48ae302ce,42,alignPool node:buffer:158:19,0x32fd2265760,~
code-source-info,0xa48ae302ce,18,4155,4265,C0O4191C4O4206C9O4220C19O4231C25O4244C34O4254C41O4264,,
code-creation,LazyCompile,10,346550,0xa48ae3068e,251,promisify node:internal/util:324:19,0xaefa12b1e8,~
code-source-info,0xa48ae3068e,12,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,346890,0xa48ae30b1e,65,EventEmitterMixin node:internal/event_target:827:27,0x3644b677eb8,~
script-source,38,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n  }\x0d\n\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae30b1e,38,24249,24683,C0O24302C23O24493C30O24525C33O24538C38O24493C43O24553C47O24587C52O24628C57O24587C62O24655C64O24680,,
code-creation,Eval,10,348818,0xa48ae3351e,5, node:internal/modules/esm/translators:1:1,0xa48ae33068,~
script-source,120,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n    getOptionValue('--experimental-import-meta-resolve');\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url);\x0d\n}\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C { url }) {\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {}\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {}\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing Web Assembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0xa48ae3351e,120,0,11592,C0O0C4O11592,,
code-creation,Function,10,349535,0xa48ae33dbe,773, node:internal/modules/esm/translators:1:1,0xa48ae33498,~
code-source-info,0xa48ae33dbe
code-creation,Eval,10,349867,0xa48ae353d6,5, node:internal/modules/esm/create_dynamic_module:1:1,0xa48ae35200,~
script-source,121,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0xa48ae353d6,121,0,1828,C0O0C4O1828,,
code-creation,Function,10,350024,0xa48ae355fe,111, node:internal/modules/esm/create_dynamic_module:1:1,0xa48ae35350,~
code-source-info,0xa48ae355fe,121,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
code-creation,Eval,10,350555,0xa48ae36506,5, node:internal/vm/module:1:1,0xa48ae35fc0,~
script-source,122,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae36506,122,0,12768,C0O0C4O12768,,
code-creation,Function,10,351609,0xa48ae37766,872, node:internal/vm/module:1:1,0xa48ae36480,~
code-source-info,0xa48ae
code-creation,Function,10,351819,0xa48ae37ca6,30,<instance_members_initializer> node:internal/vm/module:256:3,0xa48ae36af0,~
code-source-info,0xa48ae37ca6,122,7051,7088,C3O7060C29O7088,,
code-creation,LazyCompile,10,352271,0xa48ae3909e,16,ESMLoader node:internal/modules/esm/loader:52:1,0xa48ae19a68,~
code-source-info,0xa48ae3909e,111,1443,1443,C0O1443C15O1443,,
code-creation,LazyCompile,10,352386,0xa48ae3a036,27,ModuleMap node:internal/modules/esm/module_map:15:14,0xa48ae1b9c0,~
code-source-info,0xa48ae3a036,112,444,461,C3O450C7O456C11O450C26O460,,
code-creation,LazyCompile,10,352480,0xa48ae3a296,13,desc.value node:internal/per_context/primordials:325:32,0xaefa109f38,~
code-source-info,0xa48ae3a296,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,352551,0xa48ae3a39e,13,SafeIterator node:internal/per_context/primordials:270:16,0xaefa109988,~
code-source-info,0xa48ae3a39e,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,352627,0xa48ae3a4d6,13,next node:internal/per_context/primordials:273:9,0xaefa109a50,~
code-source-info,0xa48ae3a4d6,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
code-creation,LazyCompile,10,353123,0xa48ae3acc6,315,Module._initPaths node:internal/modules/cjs/loader:1227:29,0xa48ae131a8,~
code-source-info,0xa48ae3acc
code-creation,Eval,10,353545,0xa48ae3db5e,5, node:internal/modules/run_main:1:1,0xa48ae3d958,~
script-source,123,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href :\x0d\n      mainPath;\x0d\n    return esmLoader.import(main);\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  // Handle a Promise from running code that potentially does Top-Level Await.\x0d\n  // In that case\x2C it makes sense to set the exit code to a specific non-zero\x0d\n  // value if the main code never finishes running.\x0d\n  function handler() {\x0d\n    if (process.exitCode === undefined)\x0d\n      process.exitCode = 13;\x0d\n  }\x0d\n  process.on('exit'\x2C handler);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handler);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0xa48ae3db5e,123,0,2783,C0O0C4O2783,,
code-creation,Function,10,353827,0xa48ae3de56,149, node:internal/modules/run_main:1:1,0xa48ae3dad8,~
code-source-info,0xa48ae3de56,123,0,2783,C0O0C60O28C66O90C72O90C77O139C83O147C89O159C95O219C101O219C106O200C112O262C118O262C122O262C124O2711C131O2733C137O2759C143O2726C148O2782,,
code-creation,LazyCompile,10,354129,0xa48ae3e436,154,initializeESMLoader node:internal/bootstrap/pre_execution:432:29,0x1446663daf8,~
code-source-info,0xa48ae3e436,92,14144,15238,C0O14228C6O14228C13O14277C16O14273C21O14271C25O14297C31O14329C32O14336C33O14441C39O14441C44O14355C49O14396C54O14488C60O14488C65O14692C70O14650C74O14763C79O14724C83O14933C91O14937C97O15056C103O15056C108O15004C113O15012C118O15030C123O15103C129O15103C134O15123C136O15133C140O15148C142O15168C146O15193C148O15212C153O15237,,
code-creation,LazyCompile,10,354301,0xa48ae3e636,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0xa48ae12698,~
code-source-info,0xa48ae3e636,108,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,354396,0xa48ae3e71e,53,loadPreloadModules node:internal/bootstrap/pre_execution:475:28,0x1446663dbe8,~
code-source-info,0xa48ae3e71e,92,15730,16061,C0O15819C8O15819C13O15851C15O15888C21O15895C26O15976C32O15976C37O15976C42O15941C47O16021C52O16060,,
code-creation,LazyCompile,10,354480,0xa48ae3e90e,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:467:36,0x1446663db98,~
code-source-info,0xa48ae3e90e,92,15471,15699,C0O15479C8O15483C14O15529C17O15537C28O15537C34O15651C40O15651C45O15688C49O15698,,
code-creation,LazyCompile,10,354582,0xa48ae3ea36,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0xa48ae3dcf8,~
code-source-info,0xa48ae3ea36,123,2393,2707,C7O2409C14O2413C22O2444C25O2444C30O2491C33O2491C38O2528C40O2553C45O2564C50O2553C56O2668C61O2675C73O2675C79O2706,,
code-creation,LazyCompile,10,354677,0xa48ae3ee86,68,resolveMainPath node:internal/modules/run_main:11:25,0xa48ae3db90,~
code-source-info,0xa48ae3ee86,123,306,733,C0O482C5O489C12O499C15O504C20O504C30O489C36O535C38O555C39O562C40O597C48O597C53O644C55O676C60O687C65O714C67O730,,
code-creation,LazyCompile,10,354950,0xa48ae3f086,436,Module._findPath node:internal/modules/cjs/loader:494:28,0xa48ae129b8,~
code-source-info,0xa48ae3f
code-creation,LazyCompile,10,355249,0xa48ae3f436,109,isAbsolute node:path:402:13,0x3644b669728,~
code-source-info,0xa48ae3f436,35,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,355529,0xa48ae3f71e,85,stat node:internal/modules/cjs/loader:151:14,0xa48ae11f58,~
code-source-info,0xa48ae3f71e,108,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
code-creation,LazyCompile,10,355692,0xa48ae3f92e,232,toNamespacedPath node:path:618:19,0x3644b669850,~
code-source-info,0xa48ae3f92e,35,20087,21202,C0O20153C6O20190C12O20197C17O20211C19O20223C20O20252C25O20258C30O20258C36O20297C43O20304C48O20317C50O20329C51O20337C58O20341C66O20388C68O20384C73O20446C81O20450C89O20497C91O20493C96O20542C104O20542C110O20595C112O20608C114O20604C121O20639C123O20635C128O20739C133O20761C139O20761C148O20801C151O20834C156O20866C161O20866C167O20846C175O20920C181O20920C189O20967C191O20963C198O20988C204O20988C212O21035C214O21031C219O21138C224O21155C228O21170C229O21185C231O21197,,
code-creation,LazyCompile,10,356095,0xa48ae3fb8e,42,toRealPath node:internal/modules/cjs/loader:393:20,0xa48ae12228,~
code-source-info,0xa48ae3fb8e,108,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
new,MemoryChunk,0x2f7e4d40000,262144
code-creation,LazyCompile,10,356767,0x2784a87f1e6,1036,realpathSync node:fs:2408:22,0x32763ae9d78,~
script-source,77,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void | never}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch { }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2784a87f1e
tick,0x7ff780158a50,362330,0,0x0,3,0x7ff78081b5d0,0xa48ae3fbb1,0xa48ae3f1b1,0xa48ae3eea4,0xa48ae3ea4f,0x1446663b5c9
code-creation,LazyCompile,10,362465,0x2f7e4d47186,123,getOptions node:internal/fs/utils:314:20,0x32763af24d0,~
script-source,78,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x2f7e4d47186,78,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
code-creation,LazyCompile,10,363992,0x2f7e4d490de,48,assertEncoding node:internal/fs/utils:151:24,0x32763af1ed8,~
code-source-info,0x2f7e4d490de,78,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,364122,0x2f7e4d491f6,20,toPathIfFileURL node:internal/url:1496:25,0x3644b65c0f0,~
script-source,33,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x2f7e4d491f6,33,42944,43069,C0O42965C3O42970C9O43005C11O43026C12O43030C15O43037C19O43066,,
code-creation,LazyCompile,10,367501,0x2f7e4d4c326,17,isURLInstance node:internal/url:1492:23,0x3644b65c0a0,~
code-source-info,0x2f7e4d4c326,33,42817,42916,C0O42838C3O42859C6O42884C12O42906C16O42913,,
code-creation,LazyCompile,10,367796,0x2f7e4d4c486,81, node:internal/fs/utils:668:38,0x32763af2ef8,~
code-source-info,0x2f7e4d4c486,78,18808,19088,C14O18842C22O18875C25O18875C31O18902C36O18933C49O18908C54O18902C55O19001C68O19001C74O19040C76O19070C78O19070C80O19087,,
code-creation,LazyCompile,10,367960,0x2f7e4d4c696,110, node:internal/fs/utils:357:35,0x32763af2570,~
code-source-info,0x2f7e4d4c696,78,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,368062,0x2f7e4d4c80e,16,isUint8Array node:internal/util/types:13:22,0x32fd2257658,~
script-source,15,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x2f7e4d4c80e,15,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,368612,0x2f7e4d4ccb6,23,splitRoot node:fs:2358:33,0x32763ae9c30,~
code-source-info,0x2f7e4d4ccb6,77,65046,65112,C0O65059C9O65086C12O65066C19O65103C22O65107,,
code-creation,LazyCompile,10,368955,0x2f7e4d4ce9e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x32763af2520,~
code-source-info,0x2f7e4d4ce9e,78,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,370105,0x2f7e4d4d016,53,nextPart node:fs:2384:31,0x32763ae9d28,~
code-source-info,0x2f7e4d4d016,77,65803,66054,C0O65830C4O65826C9O65863C14O65863C20O65947C22O65958C24O65954C31O65988C33O65984C38O66017C40O66026C41O65840C47O65817C50O66039C52O66049,,
code-creation,LazyCompile,10,371316,0x2f7e4d4d176,34,isFileType node:fs:205:20,0x32763ae7998,~
code-source-info,0x2f7e4d4d176,77,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
code-creation,Function,11,372914,0x12200085160,6232,resolve node:path:158:10,0x3644b669668,^
code-source-info,0x12200085160,35,4875,9786,,,
code-creation,Function,11,372990,0x12200086a20,432,getOptionsFromBinding node:internal/options:18:31,0x1446663f8b0,^
code-source-info,0x12200086a20,93,484,587,,,
code-creation,Function,11,373083,0x12200086c40,104,next node:internal/per_context/primordials:273:9,0xaefa109a50,^
code-source-info,0x12200086c40,6,8126,8173,,,
code-creation,Function,11,373120,0x12200086d20,252,SafeMap node:internal/per_context/primordials:351:16,0xaefa109fe0,^
code-source-info,0x12200086d20,6,10550,10567,,,
code-creation,Function,11,373160,0x12200086e80,412,isWindowsDeviceRoot node:path:60:29,0x3644b669560,^
code-source-info,0x12200086e80,35,1991,2136,,,
code-creation,Function,11,373221,0x12200087080,272,validateString node:internal/validators:117:24,0x32fd225a8e0,^
code-source-info,0x12200087080,17,3514,3626,,,
code-creation,Function,11,373262,0x12200087200,544,nextPart node:fs:2384:31,0x32763ae9d28,^
code-source-info,0x12200087200,77,65803,66054,,,
tick,0x7ff7811cc870,373335,0,0x0,0,0x7ff780812070,0x2784a847595,0xa48ae3f94c,0x2784a87f3e8,0xa48ae3fbb1,0xa48ae3f1b1,0xa48ae3eea4,0xa48ae3ea4f,0x1446663b5c9
code-creation,LazyCompile,10,373562,0x2f7e4d4ddbe,72,encodeRealpathResult node:fs:2371:30,0x32763ae9cd8,~
code-source-info,0x2f7e4d4ddbe,77,65392,65658,C0O65415C4O65440C10O65460C17O65469C22O65486C24O65500C25O65521C30O65528C35O65528C41O65557C48O65566C53O65587C55O65603C56O65628C61O65645C66O65628C71O65655,,
code-creation,LazyCompile,10,373758,0x2f7e4d4df6e,109,shouldUseESMLoader node:internal/modules/run_main:26:28,0xa48ae3dbe0,~
code-source-info,0x2f7e4d4df6e,123,764,1339,C0O799C8O799C13O843C15O864C16O876C17O921C25O921C30O979C32O1011C37O1028C38O1040C39O1090C45O1106C51O1106C58O1154C59O1166C60O1170C66O1187C72O1187C79O1235C80O1248C81O1264C86O1264C91O1295C93O1313C98O1318C105O1323C108O1336,,
code-creation,LazyCompile,10,373871,0x2f7e4d4e18e,129,readPackageScope node:internal/modules/cjs/loader:321:26,0xa48ae12138,~
code-source-info,0x2f7e4d4e18e,108,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,373995,0x2f7e4d4e4ee,234,readPackage node:internal/modules/cjs/loader:290:21,0xa48ae120e8,~
code-source-info,0x2f7e4d4e4ee,108,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,LazyCompile,10,374156,0x2f7e4d4e7f6,199,read node:internal/modules/package_json_reader:16:14,0xa48ae17da8,~
code-source-info,0x2f7e4d4e7f6,109,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,374651,0x2f7e4d4f526,70,runMainESM node:internal/modules/run_main:43:20,0xa48ae3dc30,~
code-source-info,0x2f7e4d4f526,123,1362,1687,C0O1362C12O1398C20O1398C25O1386C30O1467C38O1467C43O1449C49O1497C54O1515C59O1515C64O1497C69O1686,,
code-creation,LazyCompile,10,374778,0x2f7e4d4f766,222,loadESM node:internal/process/esm_loader:85:41,0xa48ae18890,~
code-source-info,0x2f7e4d4f766,110,2652,2979,C10O2652C21O2679C24O2685C35O2679C58O2710C60O2725C63O2716C75O2710C113O2761C120O2765C125O2813C130O2821C138O2821C143O2850C154O2857C155O2870C163O2870C168O2895C178O2896C197O2978,,
code-creation,LazyCompile,10,374929,0x2f7e4d4fd86,284,initializeLoader node:internal/process/esm_loader:50:32,0xa48ae18760,~
code-source-info,0x2f7e4d4fd86,110,1490,2608,C10O1490C18O1525C24O1525C29O1506C34O1690C37O1690C42O1755C48O1763C59O1770C60O1812C66O1812C71O1784C76O1841C79O1841C83O1900C88O1919C91O1933C96O1933C103O1939C110O1923C111O1964C114O2229C119O2229C125O2371C132O2404C135O2404C140O2422C147O2434C152O2434C163O2377C176O2347C202O2563C207O2579C212O2579C225O2563C259O2607,,
code-creation,LazyCompile,10,375098,0x2f7e4d500c6,170,handleMainPromise node:internal/modules/run_main:55:33,0xa48ae3dc80,~
code-source-info,0x2f7e4d500c6,123,1723,2172,C10O1723C23O2050C26O2058C34O2058C43O2093C53O2100C90O2135C93O2143C101O2143C145O2171,,
code-creation,LazyCompile,10,375298,0x2f7e4d502a6,55, node:internal/modules/run_main:47:29,0x2f7e4d4f460,~
code-source-info,0x2f7e4d502a6,123,1523,1681,C0O1558C7O1563C15O1563C24O1593C30O1593C35O1616C44O1663C49O1669C54O1676,,
code-creation,LazyCompile,10,375474,0x2f7e4d504fe,283,pathToFileURL node:internal/url:1455:23,0x3644b65c030,~
code-source-info,0x2f7e4d504fe
code-creation,LazyCompile,10,375644,0x2f7e4d507ce,105,URL node:internal/url:620:14,0x3644b65ae48,~
code-source-info,0x2f7e4d507ce,33,17608,17953,C0O17664C5O17693C7O17712C11O17745C18O17760C28O17774C30O17773C34O17796C38O17801C45O17816C48O17812C53O17810C57O17835C73O17888C81O17888C98O17835C104O17952,,
code-creation,LazyCompile,10,375733,0x2f7e4d5098e,51,URLContext node:internal/url:160:14,0x3644b65a5d0,~
code-source-info,0x2f7e4d5098e,33,3859,4081,C0O3869C1O3880C5O3890C7O3902C11O3914C13O3928C17O3939C19O3953C23O3964C24O3974C28O3987C29O3997C33O4010C35O4020C39O4031C40O4042C44O4055C45O4069C50O4080,,
code-creation,LazyCompile,10,375896,0x2f7e4d50bd6,190,onParseComplete node:internal/url:532:25,0x3644b65ab78,~
code-source-info,0x2f7e4d50bd6,33,14726,15412,C0O14842C2O14847C4O14846C8O14860C10O14870C14O14882C16O14893C20O14908C22O14932C24O14930C29O14956C43O14921C47O14982C49O15006C51O15004C56O15030C70O14995C74O15056C76O15065C80O15076C82O15096C84O15094C89O15116C101O15124C103O15085C107O15138C109O15148C113O15160C115O15173C119O15188C121O15197C125O15208C127O15218C129O15217C134O15272C136O15277C141O15297C144O15293C149O15291C153O15321C155O15326C157O15325C163O15340C168O15349C172O15365C177O15387C179O15386C183O15365C189O15411,,
code-creation,LazyCompile,10,376210,0x2f7e4d5105e,889,URLSearchParams node:internal/url:182:14,0x3644b65a670,~
code-source-info,0x2f7e4d5105e
code-creation,LazyCompile,10,376478,0x2f7e4d5163e,35,initSearchParams node:internal/url:1016:26,0x3644b65bb90,~
code-source-info,0x2f7e4d5163e,33,28052,28173,C0O28069C4O28087C6O28091C11O28105C15O28116C16O28123C17O28132C19O28136C25O28152C29O28150C34O28172,,
code-creation,LazyCompile,10,376686,0x2f7e4d517ee,199,encodePathChars node:internal/url:1440:25,0x3644b65bfe0,~
code-source-info,0x2f7e4d517ee,33,40796,41501,C0O40812C8O40816C15O40861C22O40905C31O40872C38O40987C46O41005C52O41005C59O41051C66O41095C75O41062C82O41122C90O41126C97O41172C104O41216C113O41183C120O41241C128O41245C135O41291C142O41335C151O41302C158O41367C166O41371C173O41417C180O41461C189O41428C196O41482C198O41498,,
code-creation,LazyCompile,10,376852,0x2f7e4d51a1e,70,set pathname node:internal/url:884:15,0x3644b65b780,~
code-source-info,0x2f7e4d51a1e,33,24496,24705,C0O24545C5O24568C9O24577C11O24576C16O24599C17O24606C18O24612C29O24624C38O24647C40O24646C49O24688C54O24688C63O24612C69O24704,,
code-creation,LazyCompile,10,376937,0x2f7e4d51b6e,31, node:internal/url:636:21,0x3644b65af20,~
code-source-info,0x2f7e4d51b6e,33,18066,18143,C0O18076C4O18089C6O18088C10O18098C19O18106C21O18104C26O18132C30O18138,,
code-creation,LazyCompile,10,377057,0x2f7e4d51c9e,108,onParsePathComplete node:internal/url:591:29,0x3644b65ad58,~
code-source-info,0x2f7e4d51c9e,33,16744,17226,C0O16864C2O16869C4O16868C8O16882C10O16895C12O16893C17O16915C22O16929C24O16938C28O16951C35O16964C40O16961C46O17001C48O17010C52O17021C59O17035C61O17034C66O17031C70O17117C72O17130C74O17128C79O17150C84O17164C86O17173C90O17186C97O17199C102O17196C107O17225,,
code-creation,LazyCompile,10,377151,0x2f7e4d51e3e,18,get href node:internal/url:734:11,0x3644b65b0b0,~
code-source-info,0x2f7e4d51e3e,33,20829,20869,C0O20839C4O20851C6O20850C12O20859C17O20864,,
code-creation,LazyCompile,10,377297,0x2f7e4d5210e,393, node:internal/url:682:12,0x3644b65b010,~
code-source-info,0x2f7e4d5210e
code-creation,LazyCompile,10,377435,0x2f7e4d524be,99, node:internal/validators:153:3,0x32fd225aa90,~
code-source-info,0x2f7e4d524be,17,4517,5088,C0O4576C4O4617C9O4653C14O4692C21O4728C26O4765C33O4801C38O4816C46O4864C50O4878C53O4878C67O4955C75O5022C91O5028C96O5022C98O5087,,
code-creation,LazyCompile,10,377644,0x2f7e4d528a6,300,import node:internal/modules/esm/loader:268:15,0xa48ae19bf8,~
code-source-info,0x2f7e4d528a6,111,7366,7900,C10O7366C18O7412C25O7412C30O7443C32O7456C41O7470C50O7515C55O7541C64O7541C70O7579C81O7756C90O7594C98O7584C100O7584C116O7622C123O7645C128O7622C135O7670C146O7671C152O7705C162O7706C167O7615C178O7566C193O7784C204O7805C209O7801C215O7790C227O7784C253O7838C262O7891C275O7895,,
code-creation,LazyCompile,10,377834,0x2f7e4d52c7e,261,getModuleJob node:internal/modules/esm/loader:221:21,0xa48ae19ba8,~
code-source-info,0x2f7e4d52c7e,111,5888,6860,C4O5888C30O5942C33O5953C38O5953C52O5942C75O5926C81O5934C86O5999C89O6004C94O6014C99O6014C105O6090C109O6121C112O6126C117O6136C122O6151C126O6136C132O6166C136O6189C148O6200C149O6231C154O6583C163O6626C169O6626C174O6673C199O6679C205O6807C208O6812C213O6822C218O6822C224O6844C236O6855,,
code-creation,LazyCompile,10,377996,0x2f7e4d5308e,348,resolve node:internal/modules/esm/loader:402:16,0xa48ae19ce8,~
code-source-info,0x2f7e4d5308e,111,10961,12297,C10O10961C18O11014C22O11046C34O11117C37O11117C43O11149C63O11155C68O11149C69O11279C76O11330C78O11335C83O11345C87O11374C89O11379C93O11390C100O11397C111O11442C117O11452C121O11504C128O11541C134O11562C144O11487C157O11481C183O11622C189O11667C207O11673C212O11667C213O11802C218O11810C223O11837C234O11917C255O11923C260O11917C261O12066C267O12104C288O12110C293O12104C294O12249C301O12265C307O12280C323O12292,,
code-creation,LazyCompile,10,378437,0x2f7e4d5368e,885,defaultResolve node:internal/modules/esm/resolve:981:24,0xa48ae203b0,~
code-source-info,0x2f7e4d5368e
code-creation,LazyCompile,10,378882,0x2f7e4d55eee,15,get protocol node:internal/url:769:15,0x3644b65b1f0,~
code-source-info,0x2f7e4d55eee,33,21702,21745,C0O21712C4O21724C6O21723C10O21733C14O21740,,
code-creation,LazyCompile,10,379017,0x2f7e4d55fee,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0xaefa10fa00,~
code-source-info,0x2f7e4d55fee,9,7592,7691,C0O7616C5O7629C10O7633C15O7633C21O7647C23O7665C27O7686,,
code-creation,LazyCompile,10,379179,0x2f7e4d56146,64,getConditionsSet node:internal/modules/esm/resolve:164:26,0xa48ae1faf0,~
code-source-info,0x2f7e4d56146,114,5332,5668,C0O5350C6O5397C8O5393C13O5424C18O5429C24O5464C40O5470C45O5464C46O5595C53O5602C58O5626C59O5635C63O5665,,
code-creation,LazyCompile,10,379293,0x2f7e4d562a6,116,moduleResolve node:internal/modules/esm/resolve:917:23,0xa48ae20310,~
code-source-info,0x2f7e4d562a6,114,31666,32231,C0O31807C2O31820C5O31824C11O31883C24O31894C32O31930C33O31943C39O31947C44O31963C56O31979C62O31966C72O32062C79O32073C88O32071C89O32115C101O32126C107O32186C110O32193C115O32228,,
code-creation,LazyCompile,10,379381,0x2f7e4d5642e,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:905:49,0xa48ae202c0,~
code-source-info,0x2f7e4d5642e,114,31363,31502,C0O31380C2O31394C7O31402C8O31415C9O31419C10O31432C16O31436C21O31445C22O31457C23O31461C26O31468C30O31499,,
code-creation,LazyCompile,10,379463,0x2f7e4d56546,81,isRelativeSpecifier node:internal/modules/esm/resolve:895:29,0xa48ae20270,~
code-source-info,0x2f7e4d56546,114,31060,31311,C0O31077C1O31090C7O31094C12O31124C19O31131C26O31149C32O31153C37O31162C38O31174C39O31180C41O31193C47O31197C52O31229C59O31236C66O31254C72O31258C77O31267C78O31279C79O31295C80O31308,,
code-creation,LazyCompile,10,379710,0x2f7e4d56776,341,finalizeResolution node:internal/modules/esm/resolve:389:28,0xa48ae1fd70,~
code-source-info,0x2f7e4d
code-creation,LazyCompile,10,380257,0x2f7e4d56ab6,78,get pathname node:internal/url:875:15,0x3644b65b710,~
code-source-info,0x2f7e4d56ab6,33,24278,24478,C0O24300C4O24305C6O24304C10O24320C14O24329C16O24328C21O24362C27O24366C30O24370C31O24384C36O24389C42O24396C47O24410C49O24420C50O24426C57O24437C60O24460C68O24437C77O24473,,
code-creation,LazyCompile,10,380511,0x2f7e4d56d0e,106,fileURLToPath node:internal/url:1413:23,0x3644b65bf90,~
code-source-info,0x2f7e4d56d0e,33,39660,39993,C0O39672C6O39707C13O39714C22O39737C25O39742C31O39768C49O39774C54O39768C55O39845C62O39854C67O39872C77O39878C82O39872C83O39917C92O39936C101O39964C105O39990,,
code-creation,LazyCompile,10,380721,0x2f7e4d56f46,150,get origin node:internal/url:746:13,0x3644b65b180,~
code-source-info,0x2f7e4d56f46,33,21104,21684,C0O21188C4O21193C6O21192C10O21220C59O21268C64O21273C70O21280C78O21317C83O21337C89O21341C95O21325C101O21347C105O21354C110O21452C116O21473C117O21585C122O21617C127O21629C132O21639C137O21592C142O21645C143O21658C149O21679,,
code-creation,LazyCompile,10,380897,0x2f7e4d5722e,261,getPathFromURLWin32 node:internal/url:1360:29,0x3644b65bef0,~
code-source-info,0x2f7e4d5722e
code-creation,LazyCompile,10,381037,0x2f7e4d574d6,19,get hostname node:internal/url:841:15,0x3644b65b560,~
code-source-info,0x2f7e4d574d6,33,23454,23501,C0O23464C4O23476C6O23475C10O23485C18O23496,,
code-creation,LazyCompile,10,381210,0x2f7e4d5784e,30,tryStatSync node:internal/modules/esm/resolve:183:3,0xa48ae20400,~
code-source-info,0x2f7e4d5784e,114,5882,5948,C0O5937C5O5901C10O5892C21O5941C24O5937C29O5948,,
code-creation,LazyCompile,10,381326,0x2f7e4d57a06,123,statSync node:fs:1528:18,0x32763ae8e70,~
code-source-info,0x2f7e4d57a06,77,40402,40816,C7O40402C16O40465C21O40472C26O40511C33O40513C40O40538C45O40546C52O40551C55O40562C60O40562C66O40624C76O40546C82O40664C88O40679C96O40692C102O40721C103O40738C104O40747C109O40747C113O40779C118O40786C122O40813,,
code-creation,LazyCompile,10,381415,0x2f7e4d57ba6,37, node:internal/fs/utils:680:42,0x32763af2f48,~
code-source-info,0x2f7e4d57ba6,78,19135,19274,C14O19191C19O19191C24O19226C29O19226C34O19259C36O19271,,
code-creation,LazyCompile,10,381695,0x2f7e4d57ce6,64,hasNoEntryError node:fs:1465:25,0x32763ae8d40,~
code-source-info,0x2f7e4d57ce6,77,38776,38978,C0O38795C6O38823C11O38839C16O38823C21O38852C27O38866C36O38870C39O38883C40O38902C46O38927C51O38933C58O38938C61O38951C62O38962C63O38975,,
code-creation,LazyCompile,10,381856,0x2f7e4d57e1e,576,getStatsFromBinding node:internal/fs/utils:530:29,0x32763af2d18,~
code-source-info,0x2f7e4d57e1e
code-creation,LazyCompile,10,382046,0x2f7e4d5824e,16,isBigUint64Array node:internal/util/types:53:26,0x32fd2257ac0,~
code-source-info,0x2f7e4d5824e,15,1423,1514,C0O1436C5O1443C12O1490C15O1511,,
code-creation,LazyCompile,10,382117,0x2f7e4d5833e,19,msFromTimeSpec node:internal/fs/utils:446:24,0x32763af2a40,~
code-source-info,0x2f7e4d5833e,78,11451,11512,C0O11468C2O11481C4O11479C10O11500C12O11498C15O11491C18O11509,,
code-creation,LazyCompile,10,382218,0x2f7e4d5857e,116,Stats node:internal/fs/utils:495:15,0x32763af2c38,~
code-source-info,0x2f7e4d5857e,78,13243,13784,C0O13383C41O13383C46O13513C48O13526C52O13540C54O13553C58O13567C60O13580C64O13594C66O13611C70O13629C73O13642C77O13640C81O13666C84O13679C88O13677C92O13703C95O13716C99O13714C103O13740C106O13757C110O13755C115O13783,,
code-creation,LazyCompile,10,382332,0x2f7e4d58756,62,StatsBase node:internal/fs/utils:400:19,0x32763af2610,~
code-source-info,0x2f7e4d58756,78,10312,10613,C0O10400C2O10409C6O10419C8O10429C12O10440C14O10451C18O10463C20O10472C24O10482C26O10491C30O10501C32O10511C36O10522C38O10535C42O10549C44O10558C48O10568C50O10578C54O10589C56O10601C61O10612,,
code-creation,LazyCompile,10,382455,0x2f7e4d5894e,29,dateFromMs node:internal/fs/utils:460:20,0x32763af2ae0,~
code-source-info,0x2f7e4d5894e,78,11977,12024,C0O11987C7O12003C10O12003C17O12014C23O11994C28O12021,,
code-creation,LazyCompile,10,382530,0x2f7e4d58a56,16,StatsBase.isDirectory node:internal/fs/utils:414:43,0x32763af2660,~
code-source-info,0x2f7e4d58a56,78,10659,10710,C0O10679C7O10698C10O10679C15O10707,,
code-creation,LazyCompile,10,382635,0x2f7e4d58b6e,54,Stats._checkModeProperty node:internal/fs/utils:517:46,0x32763af2c88,~
code-source-info,0x2f7e4d58b6e,78,14142,14370,C0O14158C8O14189C10O14185C17O14213C19O14209C26O14242C28O14238C33O14260C34O14273C35O14339C42O14346C44O14344C50O14354C53O14367,,
code-creation,LazyCompile,10,382712,0x2f7e4d58ca6,16,StatsBase.isFile node:internal/fs/utils:418:38,0x32763af26f0,~
code-source-info,0x2f7e4d58ca6,78,10752,10803,C0O10772C7O10791C10O10772C15O10800,,
code-creation,Function,11,382821,0x12200087480,280, node:internal/url:636:21,0x3644b65af20,^
code-source-info,0x12200087480,33,18066,18143,,,
code-creation,Function,11,382884,0x12200087600,1936,toNamespacedPath node:path:618:19,0x3644b669850,^
code-source-info,0x12200087600,35,20087,21202,,,
code-creation,Function,11,382947,0x12200087e00,1916,getPathFromURLWin32 node:internal/url:1360:29,0x3644b65bef0,^
code-source-info,0x12200087e00,33,37712,39110,,,
code-creation,RegExp,3,383149,0x122000885e0,1592,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,LazyCompile,10,383812,0x2f7e4d59196,37,get search node:internal/url:893:13,0x3644b65b7f0,~
code-source-info,0x2f7e4d59196,33,24721,24852,C0O24749C4O24754C6O24753C10O24739C15O24769C19O24797C24O24812C26O24822C27O24828C32O24839C36O24847,,
code-creation,LazyCompile,10,383903,0x2f7e4d59326,181,set search node:internal/url:900:13,0x3644b65b860,~
code-source-info,0x2f7e4d59326,33,24868,25391,C0O24896C4O24901C6O24900C10O24916C17O24925C23O24951C25O24962C30O24979C31O24989C35O25004C44O25018C46O25017C51O25014C57O25060C58O25070C64O25074C69O25083C79O25092C86O25132C88O25142C92O25155C101O25168C106O25165C110O25196C114O25219C125O25233C134O25267C142O25267C154O25219C159O25341C168O25363C170O25362C174O25341C180O25390,,
code-creation,LazyCompile,10,383978,0x2f7e4d5951e,41,toUSVString node:internal/util:59:21,0xaefa12a048,~
code-source-info,0x2f7e4d5951e,12,1409,1709,C0O1432C4O1586C11O1606C14O1586C20O1636C22O1653C24O1664C25O1668C30O1699C35O1675C40O1706,,
code-creation,LazyCompile,10,384058,0x2f7e4d59666,37,get hash node:internal/url:923:11,0x3644b65b940,~
code-source-info,0x2f7e4d59666,33,25483,25626,C0O25514C4O25519C6O25518C10O25501C15O25534C19O25568C24O25583C26O25593C27O25599C32O25610C36O25621,,
code-creation,LazyCompile,10,384136,0x2f7e4d597de,144,set hash node:internal/url:930:11,0x3644b65b9a8,~
code-source-info,0x2f7e4d597de,33,25640,26087,C0O25666C4O25671C6O25670C10O25721C15O25744C17O25764C18O25777C22O25792C31O25806C33O25805C38O25802C42O25837C43O25844C44O25857C45O25865C51O25869C56O25878C66O25885C73O25921C75O25934C79O25945C88O25958C93O25955C97O25987C108O25999C117O26032C125O26032C137O25987C143O26086,,
code-creation,LazyCompile,10,384229,0x2f7e4d59aae,18,toString node:internal/url:730:11,0x3644b65b060,~
code-source-info,0x2f7e4d59aae,33,20775,20815,C0O20785C4O20797C6O20796C12O20805C17O20810,,
code-creation,LazyCompile,10,384330,0x2f7e4d59b86,3, node:internal/per_context/primordials:276:21,0xaefa109af8,~
code-source-info,0x2f7e4d59b86,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,384527,0x2f7e4d59c5e,34,get node:internal/modules/esm/module_map:16:6,0xa48ae1ba10,~
code-source-info,0x2f7e4d59c5e,112,514,587,C0O527C10O527C15O560C17O573C28O573C33O582,,
code-creation,LazyCompile,10,384729,0x2f7e4d59ede,150,ModuleJob node:internal/modules/esm/module_job:55:14,0xa48ae1c808,~
code-source-info,0x2f7e4d59ede,113,1350,3072,C0O1350C13O1407C18O1419C22O1434C27O1446C31O1461C36O1477C40O1498C44O1510C48O1648C55O1669C58O1698C67O1707C76O1712C89O1669C94O1667C98O1819C103O2748C106O2762C109O2760C113O2872C123O2899C132O2907C135O2872C140O3037C144O3055C149O3071,,
code-creation,LazyCompile,10,384952,0x2f7e4d5a89e,183,moduleProvider node:internal/modules/esm/loader:229:28,0x2f7e4d52b60,~
code-source-info,0x2f7e4d5a89e,111,6231,6555,C10O6231C18O6303C21O6314C26O6319C33O6326C39O6314C53O6303C76O6279C81O6292C86O6365C93O6377C98O6377C104O6404C106O6421C115O6427C120O6421C121O6480C143O6487C158O6548,,
code-creation,LazyCompile,10,385099,0x2f7e4d5aca6,410,load node:internal/modules/esm/loader:297:13,0xa48ae19c48,~
code-source-info,0x2f7e4d5aca6,111,8278,9586,C10O8278C60O8327C62O8332C67O8340C71O8367C73O8372C77O8381C84O8388C95O8431C101O8439C105O8464C114O8470C127O8464C153O8514C159O8555C177O8561C182O8555C183O8690C188O8705C193O8737C198O8782C210O8782C216O8891C228O8954C235O9004C255O8897C260O8891C261O9040C267O9081C288O9087C293O9081C294O9232C309O9307C312O9307C322O9343C325O9343C331O9376C350O9382C355O9376C356O9535C363O9551C369O9566C385O9581,,
code-creation,LazyCompile,10,385225,0x2f7e4d5b09e,189,defaultLoad node:internal/modules/esm/load:7:27,0xa48ae24808,~
code-source-info,0x2f7e4d5b09e,116,263,631,C10O263C18O294C23O307C28O336C33O353C38O353C45O366C50O375C55O403C57O420C64O449C69O476C73O501C78O528C83O560C90O567C94O543C107O537C135O588C142O602C148O615C164O628,,
code-creation,LazyCompile,10,385300,0x2f7e4d5b396,58,defaultGetFormat node:internal/modules/esm/get_format:81:26,0xa48ae23b88,~
code-source-info,0x2f7e4d5b396,115,2427,2622,C0O2462C7O2462C13O2481C20O2518C23O2543C28O2488C37O2560C40O2584C44O2576C48O2593C57O2619,,
code-creation,LazyCompile,10,385412,0x2f7e4d5b876,147,file: node:internal/modules/esm/get_format:56:10,0xa48ae23c28,~
code-source-info,0x2f7e4d5b876,115,1708,2356,C0O1741C5O1756C10O1741C15O1776C17O1791C19O1799C24O1819C29O1850C34O1828C41O1856C55O1915C62O1942C66O1961C70O1983C77O2019C82O2042C85O2050C96O2050C102O2178C109O2211C115O2243C122O2285C125O2285C135O2249C140O2243C141O2329C146O2351,,
code-creation,LazyCompile,10,385551,0x2f7e4d5bad6,275,extname node:path:836:10,0x3644b669990,~
code-source-info,0x2f7e4d5bad
code-creation,LazyCompile,10,385677,0x2f7e4d5bd66,13,getPackageType node:internal/modules/esm/resolve:785:24,0xa48ae20130,~
code-source-info,0x2f7e4d5bd66,114,27341,27434,C0O27374C3O27374C8O27426C12O27431,,
code-creation,LazyCompile,10,385765,0x2f7e4d5bfbe,173,getPackageScopeConfig node:internal/modules/esm/resolve:247:31,0xa48ae1fb90,~
code-source-info,0x2f7e4d5bfbe,114,7586,8685,C0O7623C13O7623C19O7722C24O7737C32O7741C39O7819C41O7853C46O7870C49O7870C54O7853C60O7979C66O7987C68O8008C69O8043C72O8064C85O8081C91O8290C96O8322C100O8299C105O8332C107O7663C110O8371C115O8371C120O8427C127O8445C132O8493C137O8515C142O8559C147O8584C154O8604C159O8621C164O8621C170O8661C172O8682,,
code-creation,LazyCompile,10,385967,0x2f7e4d5c3de,331,getPackageConfig node:internal/modules/esm/resolve:191:26,0xa48ae1fb40,~
code-source-info,0x2f7e4d5c3de,114,6115,7478,C0O6161C5O6178C10O6178C16O6192C18O6227C20O6243C21O6267C26O6285C31O6285C37O6295C42O6307C44O6362C51O6382C56O6423C61O6447C66O6495C71O6522C78O6546C83O6563C88O6563C94O6594C96O6615C97O6630C102O6657C107O6671C115O6669C125O6716C137O6775C144O6786C163O6813C168O6827C174O6813C178O6811C185O6860C192O6722C197O6716C198O6892C203O6901C208O6907C213O6913C218O6946C223O6974C233O7027C235O7051C241O7081C243O7102C249O7132C251O7207C253O7216C260O7237C265O7253C268O7295C275O7313C281O7343C287O7354C293O7365C299O7376C305O7390C312O7408C317O7425C322O7425C328O7454C330O7475,,
code-creation,Function,11,386182,0x12200088c80,156,get protocol node:internal/url:769:15,0x3644b65b1f0,^
code-source-info,0x12200088c80,33,21702,21745,,,
code-creation,Function,11,386220,0x12200088d80,320,isFileType node:fs:205:20,0x32763ae7998,^
code-source-info,0x12200088d80,77,5489,5737,,,
code-creation,Function,11,386245,0x12200088f20,340,URLContext node:internal/url:160:14,0x3644b65a5d0,^
code-source-info,0x12200088f20,33,3859,4081,,,
code-creation,Function,11,386278,0x122000890e0,1468,onParseComplete node:internal/url:532:25,0x3644b65ab78,^
code-source-info,0x122000890e0,33,14726,15412,,,
code-creation,Function,11,386305,0x12200089700,760,URL node:internal/url:620:14,0x3644b65ae48,^
code-source-info,0x12200089700,33,17608,17953,,,
code-creation,LazyCompile,10,386526,0x2f7e4d5d01e,338,defaultGetSource node:internal/modules/esm/get_source:25:32,0xa48ae24eb8,~
code-source-info,0x2f7e4d5d01e,117,686,1346,C10O686C31O694C70O747C77O747C83O768C85O790C92O799C97O819C102O834C114O828C144O878C151O887C156O921C163O941C166O966C171O921C177O982C179O1003C186O1009C191O1003C192O1058C199O1069C206O1090C211O1106C218O1111C221O1111C228O1137C237O1106C246O1183C258O1189C263O1183C264O1243C271O1253C280O1272C285O1279C290O1288C295O1288C301O1329C313O1343,,
code-creation,LazyCompile,10,386691,0x2f7e4d5d506,196,readFile node:internal/fs/promises:786:24,0xa48ae27130,~
code-source-info,0x2f7e4d5d506,118,22884,23230,C10O22884C18O22905C23O22926C28O22915C35O22975C44O22993C46O23013C48O23002C53O23030C56O23037C71O23067C72O23073C75O23094C80O23073C84O23119C98O23125C111O23119C137O23153C145O23188C151O23220C156O23160C171O23227,,
code-creation,LazyCompile,10,386758,0x2f7e4d5f10e,29,checkAborted node:internal/fs/promises:319:22,0xa48ae26460,~
code-source-info,0x2f7e4d5f10e,118,7465,7531,C0O7479C7O7489C16O7505C21O7511C26O7505C28O7530,,
code-creation,LazyCompile,10,386819,0x2f7e4d5f2b6,182,open node:internal/fs/promises:449:20,0xa48ae26640,~
code-source-info,0x2f7e4d5f2b6,118,11748,12061,C10O11748C18O11773C23O11780C29O11827C34O11827C39O11852C55O11859C62O11898C69O11932C72O11940C79O11955C82O11966C87O11966C95O12043C104O11940C117O11926C142O11905C157O12058,,
code-creation,LazyCompile,10,386998,0x2f7e4d5f7ee,515,stringToFlags node:internal/fs/utils:555:23,0x32763af2d68,~
code-source-info,0x2f7e4d5f7ee
code-creation,LazyCompile,10,387145,0x2f7e4d5fbde,97,parseFileMode node:internal/validators:58:23,0x32fd225a780,~
code-source-info,0x2f7e4d5fbde,17,1525,1832,C0O1549C11O1567C17O1605C24O1630C27O1610C34O1657C41O1702C52O1663C57O1657C58O1725C66O1733C73O1769C89O1769C94O1816C96O1829,,
code-creation,LazyCompile,10,387219,0x2f7e4d5fdae,206, node:internal/validators:83:3,0x32fd225a840,~
code-source-info,0x2f7e4d5fdae,17,2318,2913,C36O2461C39O2466C45O2491C51O2533C67O2539C72O2533C73O2604C78O2609C84O2644C100O2650C105O2644C106O2715C116O2754C129O2767C142O2721C147O2715C148O2794C150O2804C157O2819C162O2835C172O2874C185O2887C198O2841C203O2835C205O2912,,
code-creation,LazyCompile,10,387287,0x2f7e4d5ff76,9,isInt32 node:internal/validators:35:17,0x32fd225a378,~
code-source-info,0x2f7e4d5ff76,17,749,794,C0O762C2O786C5O775C8O791,,
code-creation,LazyCompile,10,387840,0x2f7e4d60226,263,link node:internal/modules/esm/module_job:66:18,0x2f7e4d59d70,~
code-source-info,0x2f7e4d60226,113,1819,2689,C4O1819C26O1840C36O1865C48O1854C73O1852C77O1887C89O1899C98O1917C100O1906C104O1887C108O2239C110O2239C112O2267C117O2272C122O2279C132O2279C138O2528C140O2565C151O2586C156O2582C162O2571C174O2565C199O2625C210O2647C218O2643C224O2632C238O2682,,
code-creation,LazyCompile,10,387932,0x2f7e4d604ae,19,primordials.PromisePrototypeCatch node:internal/per_context/primordials:397:37,0xaefa10a428,~
code-source-info,0x2f7e4d604ae,6,11842,11930,C0O11874C13O11874C18O11930,,
code-creation,LazyCompile,10,387999,0x2f7e4d6061e,110,set node:internal/modules/esm/module_map:20:6,0xa48ae1ba60,~
code-source-info,0x2f7e4d6061e,112,594,875,C0O612C10O612C15O645C19O664C21O653C26O674C37O731C55O737C60O731C61O800C73O817C84O800C88O843C90O856C104O856C109O870,,
code-creation,LazyCompile,10,388068,0x2f7e4d60796,104,logger node:internal/util/debuglog:96:18,0x3644b67cb88,~
code-source-info,0x2f7e4d60796,40,2994,3226,C0O2994C3O3027C30O3052C35O3059C38O3067C39O3083C45O3100C49O3090C53O3105C54O3121C60O3138C66O3147C70O3128C75O3152C76O3169C80O3176C87O3189C92O3185C98O3176C103O3214,,
code-creation,LazyCompile,10,388137,0x2f7e4d60916,155,debug node:internal/util/debuglog:76:15,0x3644b67cae8,~
code-source-info,0x2f7e4d60916,40,2432,2869,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C81O2695C86O2702C89O2710C90O2726C96O2743C100O2733C104O2748C105O2764C111O2781C117O2790C121O2771C126O2795C127O2812C131O2819C138O2832C143O2828C149O2819C154O2857,,
code-creation,LazyCompile,10,388198,0x2f7e4d60ae6,41,init node:internal/util/debuglog:72:16,0x3644b67ca98,~
code-source-info,0x2f7e4d60ae6,40,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,388249,0x2f7e4d60bd6,2,testEnabled node:internal/util/debuglog:32:19,0x2784a851950,~
code-source-info,0x2f7e4d60bd6,40,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,388316,0x2f7e4d60d6e,116,debuglogImpl node:internal/util/debuglog:49:22,0x3644b67c8d0,~
code-source-info,0x2f7e4d60d6e,40,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,388368,0x2f7e4d60f26,10, node:internal/modules/esm/module_map:7:63,0xa48ae1b970,~
code-source-info,0x2f7e4d60f26,112,181,208,C0O194C2O200C9O207,,
code-creation,LazyCompile,10,388397,0x2f7e4d60fd6,2,noop node:internal/util/debuglog:47:14,0x3644b67c880,~
code-source-info,0x2f7e4d60fd6,40,1465,1473,C1O1472,,
code-creation,LazyCompile,10,388433,0x2f7e4d6108e,10, node:internal/modules/esm/loader:277:15,0x2f7e4d52710,~
code-source-info,0x2f7e4d6108e,111,7676,7694,C0O7689C5O7689C9O7694,,
code-creation,LazyCompile,10,388528,0x2f7e4d614e6,433,run node:internal/modules/esm/module_job:180:12,0xa48ae1c8f8,~
code-source-info,0x2f7e4d614e6,113,6618,7822,C10O6618C18O6639C23O6639C35O6628C58O6675C61O6706C66O6742C71O6749C76O6749C90O6731C128O6809C133O6814C143O6821C152O6856C158O6894C163O6856C169O6915C182O6925C186O6962C196O6994C204O6966C211O7029C224O7039C228O7129C235O7160C240O7167C248O7129C259O7199C267O7249C272O7256C277O7199C292O7277C297O7332C302O7360C307O7367C312O7333C318O7400C325O7405C330O7432C344O7581C358O7523C364O7604C370O7684C376O7442C380O7765C382O7765C383O7786C388O7808C408O7817,,
code-creation,LazyCompile,10,388613,0x2f7e4d61816,24,instantiate node:internal/modules/esm/module_job:98:14,0xa48ae1c858,~
code-source-info,0x2f7e4d61816,113,3089,3228,C0O3108C6O3170C11O3170C15O3163C19O3210C23O3223,,
tick,0x7ff7811e11dc,388725,0,0x0,3,0x7ff78081b5d0,0x2f7e4d614fd,0x2f7e4d61093
code-creation,LazyCompile,10,389008,0x2f7e4d61f0e,924,_instantiate node:internal/modules/esm/module_job:105:21,0xa48ae1c8a8,~
code-source-info,0x2f7e4d61f0e,113,3252,6603,C4O3252C29O3282C37O3282C42O3282C44O3335C48O3335C50O3647C54O3653C67O3647C97O3705C105O3733C111O3756C118O3771C126O3808C136O3808C142O3836C147O3884C153O3891C159O3909C165O3867C172O3948C178O3955C184O3955C203O4005C215O4005C219O4350C227O4355C236O4392C244O4418C254O4392C261O4530C273O4553C283O4530C289O4598C298O4643C313O4598C319O4742C331O4777C343O4742C350O4714C358O4733C366O4905C372O4912C378O4912C393O4894C418O4877C423O5014C429O5021C435O5021C449O5003C474O4992C479O5052C481O5063C486O5116C488O5126C492O5451C500O5472C506O5451C512O5541C518O5577C522O5600C535O5577C541O5652C551O5681C570O5741C581O5721C588O5803C595O5881C606O5999C621O6036C629O6088C648O5960C651O5662C655O6159C667O6182C677O6159C683O6207C695O6239C703O6219C707O6261C715O6271C723O6271C728O6269C732O6334C734O6334C735O6385C767O6368C798O6368C801O6546C805O6575C807O6573C811O6357C895O6602,,
code-creation,LazyCompile,10,389227,0x2f7e4d62576,179,addJobsToDependencyGraph node:internal/modules/esm/module_job:107:38,0x2f7e4d61c60,~
code-source-info,0x2f7e4d62576,113,3335,3640,C10O3335C18O3365C23O3381C28O3381C35O3408C46O3415C47O3432C52O3444C57O3444C62O3506C74O3490C100O3521C111O3543C118O3571C123O3605C126O3571C134O3539C140O3528C154O3633,,
code-creation,LazyCompile,10,389380,0x2f7e4d6275e,112,FileHandle node:internal/fs/promises:116:14,0xa48ae27180,~
code-source-info,0x2f7e4d6275e,118,2962,3135,C3O2982C11O2982C40O2996C45O3001C50O3010C54O3029C59O3034C67O3041C69O3065C77O3039C81O3081C86O3086C91O3093C95O3103C100O3108C104O3123C111O3134,,
code-creation,LazyCompile,10,389470,0x2f7e4d628de,63,MixedEventEmitter node:internal/event_target:829:16,0xa48ae30918,~
code-source-info,0x2f7e4d628de,38,24331,24465,C0O24331C8O24350C15O24357C21O24393C25O24402C29O24393C41O24416C48O24438C54O24416C62O24464,,
code-creation,LazyCompile,10,389731,0x2f7e4d62bc6,601,readFileHandle node:internal/fs/promises:359:30,0xa48ae26500,~
code-source-info,0x2f7e4d62bc
code-creation,LazyCompile,10,389927,0x2f7e4d6300e,8,get fd node:internal/fs/promises:129:9,0xa48ae27238,~
code-source-info,0x2f7e4d6300e,118,3212,3244,C0O3222C2O3234C4O3233C7O3239,,
code-creation,LazyCompile,10,390021,0x2f7e4d6318e,33,primordials.SafePromisePrototypeFinally node:internal/per_context/primordials:409:43,0xaefa10a4e0,~
code-source-info,0x2f7e4d6318e,6,12428,12708,C0O12428C13O12564C27O12564C32O12708,,
code-creation,LazyCompile,10,390098,0x2f7e4d6331e,46, node:internal/per_context/primordials:412:15,0x2f7e4d630e0,~
code-source-info,0x2f7e4d6331e,6,12576,12703,C0O12693C14O12591C20O12666C28O12673C34O12692C39O12693C45O12703,,
code-creation,LazyCompile,10,390164,0x2f7e4d63466,27,SafePromise node:internal/per_context/primordials:393:16,0xaefa10a3d8,~
code-source-info,0x2f7e4d63466,6,11762,11793,C3O11775C7O11781C11O11775C26O11792,,
code-creation,LazyCompile,10,390229,0x2f7e4d6355e,22, node:internal/per_context/primordials:413:21,0x2f7e4d63268,~
code-source-info,0x2f7e4d6355e,6,12607,12656,C0O12617C16O12617C21O12656,,
code-creation,LazyCompile,10,390321,0x2f7e4d63656,19,allocUnsafeSlow node:buffer:382:50,0x32fd2265bf8,~
code-source-info,0x2f7e4d63656,18,11572,11640,C0O11584C5O11584C9O11605C14O11612C18O11637,,
code-creation,LazyCompile,10,390400,0x2f7e4d63766,54, node:buffer:348:36,0x32fd2265ad0,~
code-source-info,0x2f7e4d63766,18,10516,10676,C0O10531C8O10531C13O10564C14O10575C21O10591C23O10588C28O10611C33O10643C46O10617C51O10611C53O10675,,
code-creation,LazyCompile,10,390471,0x2f7e4d6388e,30,validateNumber node:internal/validators:122:24,0x32fd225a980,~
code-source-info,0x2f7e4d6388e,17,3653,3765,C0O3672C6O3708C22O3714C27O3708C29O3764,,
code-creation,LazyCompile,10,390546,0x2f7e4d639be,71,createUnsafeBuffer node:internal/buffer:1059:28,0x32fd2272f48,~
code-source-info,0x2f7e4d639be,19,31379,31495,C0O31391C8O31403C15O31422C22O31429C39O31471C48O31483C70O31494,,
code-creation,LazyCompile,10,390768,0x2f7e4d63cae,248,close node:internal/fs/promises:189:11,0xa48ae29378,~
code-source-info,0x2f7e4d63cae,118,4398,5219,C0O4411C7O4420C9O4419C15O4425C20O4442C27O4449C30O4466C31O4481C38O4490C40O4489C45O4515C52O4527C54O4526C57O4542C58O4557C65O4562C73O4568C77O4577C84O4586C86O4585C91O4593C96O4609C103O4614C108O4619C112O4632C119O4637C126O4654C136O4697C138O4696C142O4706C147O4706C157O4654C162O4652C168O4798C175O4803C182O4820C189O4862C199O4858C210O4820C215O4818C219O5162C222O5167C230O5167C235O5187C242O5199C244O5198C247O5214,,
code-creation,LazyCompile,10,390952,0x2f7e4d64016,17, node:internal/fs/promises:203:9,0x2f7e4d63a98,~
code-source-info,0x2f7e4d64016,118,4724,4766,C0O4732C7O4737C11O4752C16O4765,,
code-creation,LazyCompile,10,391069,0x2f7e4d64256,168,moduleStrategy node:internal/modules/esm/translators:134:56,0xa48ae338e8,~
code-source-info,0x2f7e4d64256,120,3888,4260,C6O3888C14O3915C25O3915C30O3960C33O3969C39O3991C44O3991C49O4028C59O4064C64O4028C68O4090C87O4090C93O4139C98O4150C103O4162C108O4166C115O4181C121O4208C125O4162C131O4243C143O4257,,
code-creation,LazyCompile,10,391145,0x2f7e4d65006,83,assertBufferSource node:internal/modules/esm/translators:79:28,0xa48ae335f0,~
code-source-info,0x2f7e4d65006,120,2301,2708,C0O2336C10O2388C11O2395C12O2452C15O2452C19O2412C24O2431C29O2472C35O2499C41O2530C42O2537C43O2546C50O2599C77O2552C82O2546,,
code-creation,LazyCompile,10,391196,0x2f7e4d6515e,31,lazyTypes node:internal/modules/esm/translators:24:19,0xa48ae33550,~
code-source-info,0x2f7e4d6515e,120,460,557,C0O468C6O489C10O503C11O507C17O523C24O521C30O554,,
code-creation,LazyCompile,10,391247,0x2f7e4d65276,72,stringify node:internal/modules/esm/translators:95:19,0xa48ae33640,~
code-source-info,0x2f7e4d65276,120,2730,2935,C0O2742C6O2772C8O2784C9O2788C20O2788C25O2843C33O2876C36O2872C45O2892C50O2851C56O2904C61O2919C66O2919C71O2932,,
code-creation,LazyCompile,10,391359,0x2f7e4d65466,206,TextDecoder node:internal/encoding:379:16,0x32fd227b2d8,~
script-source,21,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint32Array\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_INVALID_ENCODED_DATA\x2C\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeUtf8String\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nlet Buffer;\x0d\nfunction lazyBuffer() {\x0d\n  if (Buffer === undefined)\x0d\n    Buffer = require('buffer').Buffer;\x0d\n  return Buffer;\x0d\n}\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nconst encodeIntoResults = new Uint32Array(2);\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n    encodeInto(src\x2C dest\x2C encodeIntoResults);\x0d\n    return { read: encodeIntoResults[0]\x2C written: encodeIntoResults[1] };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = ObjectCreate({\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x0d\n    });\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': { enumerable: true }\x2C\x0d\n    'encodeInto': { enumerable: true }\x2C\x0d\n    'encoding': { enumerable: true }\x2C\x0d\n    [SymbolToStringTag]: { configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      const handle = getConverter(enc\x2C flags);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kHandle] = handle;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n    }\x0d\n\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (!isArrayBufferView(input)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      const ret = _decode(this[kHandle]\x2C input\x2C flags);\x0d\n      if (typeof ret === 'number') {\x0d\n        throw new ERR_ENCODING_INVALID_ENCODED_DATA(this.encoding\x2C ret);\x0d\n      }\x0d\n      return ret.toString('ucs2');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = {}) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = {}) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        input = lazyBuffer().from(input);\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        input = lazyBuffer().from(input.buffer\x2C input.byteOffset\x2C\x0d\n                                  input.byteLength);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C {\x0d\n        nullable: true\x2C\x0d\n        allowArray: true\x2C\x0d\n        allowFunction: true\x2C\x0d\n      });\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nObjectDefineProperties(\x0d\n  TextDecoder.prototype\x2C\x0d\n  ObjectGetOwnPropertyDescriptors({\x0d\n    get encoding() {\x0d\n      validateDecoder(this);\x0d\n      return this[kEncoding];\x0d\n    }\x2C\x0d\n\x0d\n    get fatal() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n    }\x2C\x0d\n\x0d\n    get ignoreBOM() {\x0d\n      validateDecoder(this);\x0d\n      return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n    }\x2C\x0d\n\x0d\n    [inspect](depth\x2C opts) {\x0d\n      validateDecoder(this);\x0d\n      if (typeof depth === 'number' && depth < 0)\x0d\n        return this;\x0d\n      const constructor = getConstructorOf(this) || TextDecoder;\x0d\n      const obj = ObjectCreate({ constructor });\x0d\n      obj.encoding = this.encoding;\x0d\n      obj.fatal = this.fatal;\x0d\n      obj.ignoreBOM = this.ignoreBOM;\x0d\n      if (opts.showHidden) {\x0d\n        obj[kFlags] = this[kFlags];\x0d\n        obj[kHandle] = this[kHandle];\x0d\n      }\x0d\n      // Lazy to avoid circular dependency\x0d\n      const { inspect } = require('internal/util/inspect');\x0d\n      return `${constructor.name} ${inspect(obj)}`;\x0d\n    }\x0d\n  })\x0d\n);\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: { enumerable: true }\x2C\x0d\n  [inspect]: { enumerable: false }\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x0d\n};\x0d\n
code-source-info,0x2f7e4d65466,21,10677,11487,C15O10677C21O10721C25O10754C35O10769C43O10754C48O10905C53O10905C58O10944C60O10976C69O10982C74O10976C75O11045C77O11055C81O11105C94O11113C103O11166C116O11178C125O11243C130O11243C136O11276C138O11311C147O11317C152O11311C153O11368C157O11373C161O11383C165O11398C169O11403C174O11412C178O11429C182O11434C187O11442C191O11458C195O11463C200O11474C205O11486,,
code-creation,LazyCompile,10,392285,0x2f7e4d668e6,55,getEncodingFromLabel node:internal/encoding:313:30,0x32fd227b010,~
code-source-info,0x2f7e4d668e6,21,8957,9111,C0O8982C5O8992C10O8992C16O9007C18O9030C20O9041C21O9045C26O9062C34O9092C39O9092C44O9066C49O9062C54O9108,,
code-creation,LazyCompile,10,392391,0x2f7e4d66bf6,227,decode node:internal/encoding:408:11,0x32fd227b3f8,~
code-source-info,0x2f7e4d66bf6,21,11503,12349,C8O11512C25O11542C30O11542C34O11572C41O11576C47O11612C52O11620C56O11632C61O11633C69O11660C76O11665C82O11702C102O11708C107O11702C108O11882C118O11897C126O11882C131O12033C133O12043C137O12091C153O12104C159O12148C168O12161C170O12160C180O12148C186O12193C190O12233C197O12282C207O12239C212O12233C213O12325C221O12325C226O12342,,
code-creation,LazyCompile,10,392461,0x2f7e4d66e1e,37,validateDecoder node:internal/encoding:64:25,0x32fd227af70,~
code-source-info,0x2f7e4d66e1e,21,1332,1436,C0O1343C7O1366C9O1365C14O1376C19O1391C29O1397C34O1391C36O1435,,
code-creation,LazyCompile,10,392555,0x2f7e4d67016,162,toString node:buffer:782:46,0x32fd2267a10,~
code-source-info,0x2f7e4d67016,18,24045,24637,C0O24045C2O24087C8O24094C13O24120C20O24138C25O24120C31O24146C32O24174C37O24187C38O24197C43O24208C48O24227C50O24237C55O24250C57O24260C58O24274C65O24291C71O24320C76O24332C83O24356C90O24371C92O24379C97O24394C99O24404C100O24410C104O24455C109O24455C115O24477C116O24495C119O24495C124O24524C126O24552C133O24558C138O24552C139O24610C156O24610C161O24634,,
code-creation,LazyCompile,10,392681,0x2f7e4d672d6,499,getEncodingOps node:buffer:678:24,0x32fd2267868,~
code-source-info,0x2f7e4d672d
code-creation,LazyCompile,10,392828,0x2f7e4d676be,12,slice node:buffer:602:12,0x32fd2266518,~
code-source-info,0x2f7e4d676be,18,17572,17618,C0O17597C5O17597C11O17618,,
code-creation,LazyCompile,10,392926,0x2f7e4d67976,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0xa48ae09fa0,~
code-source-info,0x2f7e4d67976,105,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,393003,0x2f7e4d683d6,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0xa48ae09f00,~
code-source-info,0x2f7e4d683d6,105,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,393063,0x2f7e4d6854e,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0xa48ae09f50,~
code-source-info,0x2f7e4d6854e,105,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,393116,0x2f7e4d686c6,30,validateBoolean node:internal/validators:138:25,0x32fd225aa40,~
code-source-info,0x2f7e4d686c6,17,4179,4293,C0O4198C6O4235C22O4241C27O4235C29O4292,,
code-creation,LazyCompile,10,393165,0x2f7e4d687be,10, node:internal/modules/esm/translators:44:63,0xa48ae33898,~
code-source-info,0x2f7e4d687be,120,1101,1128,C0O1114C2O1120C9O1127,,
code-creation,Script,10,393252,0x2f7e4d68bb6,101, file:///C:/Users/Leandro%20Mesa/Desktop/CoderHouse%20Curso%20Backend/Entrega16/src/routers/randoms.js:1:1,0x2f7e4d68948,~
script-source,124,file:///C:/Users/Leandro%20Mesa/Desktop/CoderHouse%20Curso%20Backend/Entrega16/src/routers/randoms.js,//Retortna numeros del 1 al 1000 aleatorios\x0d\nconst numeroAleatorio = () => {\x0d\n    return Math.floor(Math.random() * 1000 + 1);\x0d\n};\x0d\n  \x0d\nconst coincidencias = (cant) => {\x0d\n    const numeros = {};\x0d\n    //Se ejecuta cant veces\x2C este parametro es enviado por fork.send\x0d\n    while (cant > 0) {\x0d\n        const num = numeroAleatorio();\x0d\n        //Si se encuentra el numero obtenido por random suma 1 a la cantidad \x2C sino lo define como 1\x0d\n        numeros[num] ? numeros[num] += 1 : numeros[num] = 1;\x0d\n        cant -= 1;\x0d\n    }\x0d\n    return numeros;\x0d\n};\x0d\n  \x0d\n//Mientras el proceso continua se envian los numeros\x0d\nprocess.on('message'\x2C msg => {\x0d\n    const numeros = coincidencias(msg.cant);\x0d\n    process.send({ numeros });\x0d\n});\x0d\n\x0d\n//Proceso finalizado\x2C se usa como bandera\x0d\nprocess.send('Proceso terminado');\x0d\n  
code-source-info,0x2f7e4d68bb6,124,0,802,C10O0C23O0C43O0C47O69C51O69C53O158C57O158C59O604C63O612C76O612C82O764C86O772C94O772C100O802,,
code-creation,LazyCompile,10,393418,0x2f7e4d6903e,5,get node:internal/bootstrap/pre_execution:315:8,0xa48ae0f420,~
code-source-info,0x2f7e4d6903e,92,10430,10465,C0O10442C4O10458,,
code-creation,LazyCompile,10,393473,0x2f7e4d69106,44,refCounted node:internal/child_process:537:13,0x2784a85d918,~
code-source-info,0x2f7e4d69106,97,14644,14746,C0O14654C3O14664C9O14665C15O14671C22O14686C27O14714C29O14719C33O14728C38O14728C43O14745,,
code-creation,LazyCompile,10,393559,0x2f7e4d69306,178,target.send node:internal/child_process:704:25,0xa48ae03608,~
code-source-info,0x2f7e4d69306,97,19996,20732,C0O19996C12O20040C18O20083C21O20109C24O20136C29O20169C35O20213C38O20240C43O20273C47O20309C57O20309C62O20359C73O20396C80O20414C83O20423C89O20443C92O20455C109O20455C114O20497C115O20521C122O20521C127O20521C129O20556C135O20601C140O20609C148O20609C156O20654C161O20662C171O20662C176O20714C177O20727,,
code-creation,LazyCompile,10,393763,0x2f7e4d69a2e,925,target._send node:internal/child_process:730:26,0xa48ae03690,~
code-source-info,0x2f7e4d69a2e
code-creation,LazyCompile,10,393952,0x2f7e4d6a0b6,39,writeChannelMessage node:internal/child_process/serialization:126:22,0xa48ae06f30,~
code-source-info,0x2f7e4d6a0b6,104,4141,4288,C0O4195C5O4195C12O4218C16O4246C33O4246C38O4283,,
code-creation,LazyCompile,10,394057,0x2f7e4d6a246,15, node:internal/modules/esm/loader:278:15,0x2f7e4d52760,~
code-source-info,0x2f7e4d6a246,111,7711,7748,C0O7714C5O7734C10O7734C14O7748,,
code-creation,LazyCompile,10,394167,0x2f7e4d6a3b6,307,removeListener node:events:557:28,0xaefa134178,~
code-source-info,0x2f7e4d6a3b
code-creation,LazyCompile,10,394282,0x2f7e4d6a69e,64,stopListeningIfSignal node:internal/process/signal:43:31,0x3ef52492de8,~
code-source-info,0x2f7e4d6a69e,89,978,1149,C0O1003C5O1015C10O1015C16O1029C21O1063C26O1063C33O1083C38O1102C43O1102C47O1116C52O1128C57O1134C63O1148,,
code-creation,LazyCompile,10,394333,0x2f7e4d6a7e6,30,onRemoveListener node:child_process:179:57,0xa48ae02ff8,~
code-source-info,0x2f7e4d6a7e6,96,5476,5567,C0O5490C2O5499C9O5521C14O5539C19O5547C24O5547C29O5566,,
code-creation,LazyCompile,10,394394,0x2f7e4d6a8ee,33,req.oncomplete node:internal/child_process:831:26,0x2f7e4d69578,~
code-source-info,0x2f7e4d6a8ee,97,24228,24357,C0O24247C7O24255C12O24255C16O24282C22O24331C27O24331C32O24356,,
code-creation,LazyCompile,10,394441,0x2f7e4d6a9fe,56,unrefCounted node:internal/child_process:543:15,0x2784a85d968,~
code-source-info,0x2f7e4d6a9fe,97,14764,14895,C0O14774C3O14784C9O14785C14O14791C21O14806C26O14834C28O14839C32O14848C37O14848C41O14869C49O14869C55O14894,,
tick,0x7ffd093d1d94,404668,0,0x0,8
tick,0x7ffd093d1d94,421570,0,0x0,8
tick,0x7ffd093d1d94,437151,0,0x0,8
tick,0x7ffd093d1d94,452808,0,0x0,8
tick,0x7ffd093d1d94,467389,0,0x0,8
tick,0x7ffd093d1d94,482773,0,0x0,8
tick,0x7ffd093d1d94,498544,0,0x0,8
tick,0x7ffd093d1d94,514075,0,0x0,8
tick,0x7ffd093d1d94,529827,0,0x0,8
tick,0x7ffd093d1d94,545464,0,0x0,8
tick,0x7ffd093d1d94,560869,0,0x0,8
tick,0x7ffd093d1d94,576284,0,0x0,8
tick,0x7ffd093d1d94,591696,0,0x0,8
tick,0x7ffd093d1d94,607224,0,0x0,8
tick,0x7ffd093d1d94,623104,0,0x0,8
tick,0x7ffd093d1d94,637781,0,0x0,8
tick,0x7ffd093d1d94,653469,0,0x0,8
tick,0x7ffd093d1d94,669525,0,0x0,8
tick,0x7ffd093d1d94,685303,0,0x0,8
tick,0x7ffd093d1d94,700958,0,0x0,8
tick,0x7ffd093d1d94,716503,0,0x0,8
tick,0x7ffd093d1d94,731905,0,0x0,8
tick,0x7ffd093d1d94,747153,0,0x0,8
tick,0x7ffd093d1d94,762344,0,0x0,8
tick,0x7ffd093d1d94,777469,0,0x0,8
tick,0x7ffd093d1d94,792612,0,0x0,8
tick,0x7ffd093d1d94,808531,0,0x0,8
tick,0x7ffd093d1d94,823621,0,0x0,8
tick,0x7ffd093d1d94,839581,0,0x0,8
tick,0x7ffd093d1d94,854522,0,0x0,8
tick,0x7ffd093d1d94,870158,0,0x0,8
tick,0x7ffd093d1d94,885463,0,0x0,8
tick,0x7ffd093d1d94,901117,0,0x0,8
tick,0x7ffd093d1d94,916297,0,0x0,8
tick,0x7ffd093d1d94,931742,0,0x0,8
tick,0x7ffd093d1d94,946546,0,0x0,8
tick,0x7ffd093d1d94,961802,0,0x0,8
tick,0x7ffd093d1d94,977232,0,0x0,8
tick,0x7ffd093d1d94,992687,0,0x0,8
tick,0x7ffd093d1d94,1008861,0,0x0,8
tick,0x7ffd093d1d94,1024051,0,0x0,8
tick,0x7ffd093d1d94,1040010,0,0x0,8
tick,0x7ffd093d1d94,1055321,0,0x0,8
tick,0x7ffd093d1d94,1071318,0,0x0,8
tick,0x7ffd093d1d94,1086500,0,0x0,8
tick,0x7ffd093d1d94,1101900,0,0x0,8
tick,0x7ffd093d1d94,1118134,0,0x0,8
tick,0x7ffd093d1d94,1133982,0,0x0,8
tick,0x7ffd093d1d94,1149806,0,0x0,8
tick,0x7ffd093d1d94,1165686,0,0x0,8
tick,0x7ffd093d1d94,1180912,0,0x0,8
tick,0x7ffd093d1d94,1196969,0,0x0,8
tick,0x7ffd093d1d94,1212278,0,0x0,8
tick,0x7ffd093d1d94,1227646,0,0x0,8
tick,0x7ffd093d1d94,1243733,0,0x0,8
tick,0x7ffd093d1d94,1259281,0,0x0,8
tick,0x7ffd093d1d94,1274464,0,0x0,8
tick,0x7ffd093d1d94,1289958,0,0x0,8
tick,0x7ffd093d1d94,1305563,0,0x0,8
tick,0x7ffd093d1d94,1322037,0,0x0,8
tick,0x7ffd093d1d94,1337815,0,0x0,8
tick,0x7ffd093d1d94,1353386,0,0x0,8
tick,0x7ffd093d1d94,1369520,0,0x0,8
tick,0x7ffd093d1d94,1385457,0,0x0,8
tick,0x7ffd093d1d94,1401788,0,0x0,8
tick,0x7ffd093d1d94,1416985,0,0x0,8
tick,0x7ffd093d1d94,1432095,0,0x0,8
tick,0x7ffd093d1d94,1447868,0,0x0,8
tick,0x7ffd093d1d94,1462800,0,0x0,8
tick,0x7ffd093d1d94,1479293,0,0x0,8
tick,0x7ffd093d1d94,1494335,0,0x0,8
tick,0x7ffd093d1d94,1510277,0,0x0,8
tick,0x7ffd093d1d94,1525407,0,0x0,8
tick,0x7ffd093d1d94,1540348,0,0x0,8
tick,0x7ffd093d1d94,1555650,0,0x0,8
tick,0x7ffd093d1d94,1571740,0,0x0,8
tick,0x7ffd093d1d94,1587733,0,0x0,8
tick,0x7ffd093d1d94,1603294,0,0x0,8
tick,0x7ffd093d1d94,1618816,0,0x0,8
tick,0x7ffd093d1d94,1634275,0,0x0,8
tick,0x7ffd093d1d94,1649363,0,0x0,8
tick,0x7ffd093d1d94,1664527,0,0x0,8
tick,0x7ffd093d1d94,1679921,0,0x0,8
tick,0x7ffd093d1d94,1695968,0,0x0,8
tick,0x7ffd093d1d94,1711693,0,0x0,8
tick,0x7ffd093d1d94,1727104,0,0x0,8
tick,0x7ffd093d1d94,1742328,0,0x0,8
tick,0x7ffd093d1d94,1757741,0,0x0,8
tick,0x7ffd093d1d94,1775344,0,0x0,8
tick,0x7ffd093d1d94,1788742,0,0x0,8
tick,0x7ffd093d1d94,1804444,0,0x0,8
tick,0x7ffd093d1d94,1819831,0,0x0,8
tick,0x7ffd093d1d94,1835784,0,0x0,8
tick,0x7ffd093d1d94,1851529,0,0x0,8
tick,0x7ffd093d1d94,1867393,0,0x0,8
tick,0x7ffd093d1d94,1881583,0,0x0,8
tick,0x7ffd093d1d94,1896670,0,0x0,8
tick,0x7ffd093d1d94,1911659,0,0x0,8
tick,0x7ffd093d1d94,1927056,0,0x0,8
tick,0x7ffd093d1d94,1942670,0,0x0,8
tick,0x7ffd093d1d94,1958390,0,0x0,8
tick,0x7ffd093d1d94,1973980,0,0x0,8
tick,0x7ffd093d1d94,1989485,0,0x0,8
tick,0x7ffd093d1d94,2005244,0,0x0,8
tick,0x7ffd093d1d94,2021047,0,0x0,8
tick,0x7ffd093d1d94,2036546,0,0x0,8
tick,0x7ffd093d1d94,2052737,0,0x0,8
tick,0x7ffd093d1d94,2067855,0,0x0,8
tick,0x7ffd093d1d94,2083372,0,0x0,8
tick,0x7ffd093d1d94,2099523,0,0x0,8
tick,0x7ffd093d1d94,2114038,0,0x0,8
tick,0x7ffd093d1d94,2129931,0,0x0,8
tick,0x7ffd093d1d94,2144334,0,0x0,8
tick,0x7ffd093d1d94,2159566,0,0x0,8
tick,0x7ffd093d1d94,2175032,0,0x0,8
tick,0x7ffd093d1d94,2189749,0,0x0,8
tick,0x7ffd093d1d94,2205709,0,0x0,8
tick,0x7ffd093d1d94,2220688,0,0x0,8
tick,0x7ffd093d1d94,2236059,0,0x0,8
tick,0x7ffd093d1d94,2251417,0,0x0,8
tick,0x7ffd093d1d94,2266677,0,0x0,8
tick,0x7ffd093d1d94,2281834,0,0x0,8
tick,0x7ffd093d1d94,2297363,0,0x0,8
tick,0x7ffd093d1d94,2312608,0,0x0,8
tick,0x7ffd093d1d94,2327472,0,0x0,8
tick,0x7ffd093d1d94,2342606,0,0x0,8
tick,0x7ffd093d1d94,2358702,0,0x0,8
tick,0x7ffd093d1d94,2374876,0,0x0,8
tick,0x7ffd093d1d94,2389954,0,0x0,8
tick,0x7ffd093d1d94,2405617,0,0x0,8
tick,0x7ffd093d1d94,2421230,0,0x0,8
tick,0x7ffd093d1d94,2437474,0,0x0,8
tick,0x7ffd093d1d94,2452429,0,0x0,8
tick,0x7ffd093d1d94,2467296,0,0x0,8
tick,0x7ffd093d1d94,2482771,0,0x0,8
tick,0x7ffd093d1d94,2498615,0,0x0,8
tick,0x7ffd093d1d94,2514020,0,0x0,8
tick,0x7ffd093d1d94,2529479,0,0x0,8
tick,0x7ffd093d1d94,2544698,0,0x0,8
tick,0x7ffd093d1d94,2560487,0,0x0,8
tick,0x7ffd093d1d94,2576415,0,0x0,8
tick,0x7ffd093d1d94,2591199,0,0x0,8
tick,0x7ffd093d1d94,2607218,0,0x0,8
tick,0x7ffd093d1d94,2622895,0,0x0,8
tick,0x7ffd093d1d94,2638235,0,0x0,8
tick,0x7ffd093d1d94,2653348,0,0x0,8
tick,0x7ffd093d1d94,2668967,0,0x0,8
tick,0x7ffd093d1d94,2684665,0,0x0,8
tick,0x7ffd093d1d94,2700009,0,0x0,8
tick,0x7ffd093d1d94,2715500,0,0x0,8
tick,0x7ffd093d1d94,2731467,0,0x0,8
tick,0x7ffd093d1d94,2746632,0,0x0,8
tick,0x7ffd093d1d94,2762122,0,0x0,8
tick,0x7ffd093d1d94,2777381,0,0x0,8
tick,0x7ffd093d1d94,2793200,0,0x0,8
tick,0x7ffd093d1d94,2808777,0,0x0,8
tick,0x7ffd093d1d94,2824326,0,0x0,8
tick,0x7ffd093d1d94,2840334,0,0x0,8
tick,0x7ffd093d1d94,2855682,0,0x0,8
tick,0x7ffd093d1d94,2870586,0,0x0,8
tick,0x7ffd093d1d94,2886401,0,0x0,8
tick,0x7ffd093d1d94,2902198,0,0x0,8
tick,0x7ffd093d1d94,2917617,0,0x0,8
tick,0x7ffd093d1d94,2933232,0,0x0,8
tick,0x7ffd093d1d94,2948735,0,0x0,8
tick,0x7ffd093d1d94,2964745,0,0x0,8
tick,0x7ffd093d1d94,2981146,0,0x0,8
tick,0x7ffd093d1d94,2996336,0,0x0,8
tick,0x7ffd093d1d94,3011410,0,0x0,8
tick,0x7ffd093d1d94,3027341,0,0x0,8
tick,0x7ffd093d1d94,3042388,0,0x0,8
tick,0x7ffd093d1d94,3058288,0,0x0,8
tick,0x7ffd093d1d94,3074338,0,0x0,8
tick,0x7ffd093d1d94,3090303,0,0x0,8
tick,0x7ffd093d1d94,3105308,0,0x0,8
tick,0x7ffd093d1d94,3121695,0,0x0,8
tick,0x7ffd093d1d94,3136840,0,0x0,8
tick,0x7ffd093d1d94,3152802,0,0x0,8
tick,0x7ffd093d1d94,3168826,0,0x0,8
tick,0x7ffd093d1d94,3184804,0,0x0,8
tick,0x7ffd093d1d94,3200866,0,0x0,8
tick,0x7ffd093d1d94,3216327,0,0x0,8
tick,0x7ffd093d1d94,3232471,0,0x0,8
tick,0x7ffd093d1d94,3247471,0,0x0,8
tick,0x7ffd093d1d94,3263087,0,0x0,8
tick,0x7ffd093d1d94,3278530,0,0x0,8
tick,0x7ffd093d1d94,3293627,0,0x0,8
tick,0x7ffd093d1d94,3309596,0,0x0,8
tick,0x7ffd093d1d94,3325351,0,0x0,8
tick,0x7ffd093d1d94,3340659,0,0x0,8
tick,0x7ffd093d1d94,3356310,0,0x0,8
tick,0x7ffd093d1d94,3372431,0,0x0,8
tick,0x7ffd093d1d94,3387168,0,0x0,8
tick,0x7ffd093d1d94,3402699,0,0x0,8
tick,0x7ffd093d1d94,3418994,0,0x0,8
tick,0x7ffd093d1d94,3434650,0,0x0,8
tick,0x7ffd093d1d94,3450767,0,0x0,8
tick,0x7ffd093d1d94,3465520,0,0x0,8
tick,0x7ffd093d1d94,3481465,0,0x0,8
tick,0x7ffd093d1d94,3497215,0,0x0,8
tick,0x7ffd093d1d94,3512215,0,0x0,8
tick,0x7ffd093d1d94,3527689,0,0x0,8
tick,0x7ffd093d1d94,3543238,0,0x0,8
tick,0x7ffd093d1d94,3558557,0,0x0,8
tick,0x7ffd093d1d94,3573439,0,0x0,8
tick,0x7ffd093d1d94,3589179,0,0x0,8
tick,0x7ffd093d1d94,3604884,0,0x0,8
tick,0x7ffd093d1d94,3620456,0,0x0,8
tick,0x7ffd093d1d94,3636303,0,0x0,8
tick,0x7ffd093d1d94,3652808,0,0x0,8
tick,0x7ffd093d1d94,3667818,0,0x0,8
tick,0x7ffd093d1d94,3683649,0,0x0,8
tick,0x7ffd093d1d94,3699629,0,0x0,8
tick,0x7ffd093d1d94,3715031,0,0x0,8
tick,0x7ffd093d1d94,3730322,0,0x0,8
tick,0x7ffd093d1d94,3746265,0,0x0,8
tick,0x7ffd093d1d94,3761564,0,0x0,8
tick,0x7ffd093d1d94,3776995,0,0x0,8
tick,0x7ffd093d1d94,3792242,0,0x0,8
tick,0x7ffd093d1d94,3807066,0,0x0,8
tick,0x7ffd093d1d94,3822375,0,0x0,8
tick,0x7ffd093d1d94,3838419,0,0x0,8
tick,0x7ffd093d1d94,3853921,0,0x0,8
tick,0x7ffd093d1d94,3869597,0,0x0,8
tick,0x7ffd093d1d94,3885183,0,0x0,8
tick,0x7ffd093d1d94,3900823,0,0x0,8
tick,0x7ffd093d1d94,3915758,0,0x0,8
tick,0x7ffd093d1d94,3931262,0,0x0,8
tick,0x7ffd093d1d94,3947279,0,0x0,8
tick,0x7ffd093d1d94,3963313,0,0x0,8
tick,0x7ffd093d1d94,3978930,0,0x0,8
tick,0x7ffd093d1d94,3994262,0,0x0,8
tick,0x7ffd093d1d94,4009822,0,0x0,8
tick,0x7ffd093d1d94,4025784,0,0x0,8
tick,0x7ffd093d1d94,4041444,0,0x0,8
tick,0x7ffd093d1d94,4057508,0,0x0,8
tick,0x7ffd093d1d94,4072485,0,0x0,8
tick,0x7ffd093d1d94,4087502,0,0x0,8
tick,0x7ffd093d1d94,4103493,0,0x0,8
tick,0x7ffd093d1d94,4119238,0,0x0,8
tick,0x7ffd093d1d94,4135155,0,0x0,8
tick,0x7ffd093d1d94,4151133,0,0x0,8
tick,0x7ffd093d1d94,4167107,0,0x0,8
tick,0x7ffd093d1d94,4183133,0,0x0,8
tick,0x7ffd093d1d94,4198475,0,0x0,8
tick,0x7ffd093d1d94,4214078,0,0x0,8
tick,0x7ffd093d1d94,4229730,0,0x0,8
tick,0x7ffd093d1d94,4245693,0,0x0,8
tick,0x7ffd093d1d94,4261713,0,0x0,8
tick,0x7ffd093d1d94,4277043,0,0x0,8
tick,0x7ffd093d1d94,4292859,0,0x0,8
tick,0x7ffd093d1d94,4307715,0,0x0,8
tick,0x7ffd093d1d94,4323183,0,0x0,8
tick,0x7ffd093d1d94,4338759,0,0x0,8
tick,0x7ffd093d1d94,4353907,0,0x0,8
tick,0x7ffd093d1d94,4369703,0,0x0,8
tick,0x7ffd093d1d94,4385479,0,0x0,8
tick,0x7ffd093d1d94,4401219,0,0x0,8
tick,0x7ffd093d1d94,4416359,0,0x0,8
tick,0x7ffd093d1d94,4431448,0,0x0,8
tick,0x7ffd093d1d94,4447549,0,0x0,8
tick,0x7ffd093d1d94,4463074,0,0x0,8
tick,0x7ffd093d1d94,4478017,0,0x0,8
tick,0x7ffd093d1d94,4493514,0,0x0,8
tick,0x7ffd093d1d94,4509015,0,0x0,8
tick,0x7ffd093d1d94,4524664,0,0x0,8
tick,0x7ffd093d1d94,4540767,0,0x0,8
tick,0x7ffd093d1d94,4556368,0,0x0,8
tick,0x7ffd093d1d94,4571526,0,0x0,8
tick,0x7ffd093d1d94,4587514,0,0x0,8
tick,0x7ffd093d1d94,4603004,0,0x0,8
tick,0x7ffd093d1d94,4619330,0,0x0,8
tick,0x7ffd093d1d94,4635589,0,0x0,8
tick,0x7ffd093d1d94,4651929,0,0x0,8
tick,0x7ffd093d1d94,4667068,0,0x0,8
tick,0x7ffd093d1d94,4682297,0,0x0,8
tick,0x7ffd093d1d94,4697269,0,0x0,8
tick,0x7ffd093d1d94,4713004,0,0x0,8
tick,0x7ffd093d1d94,4728883,0,0x0,8
tick,0x7ffd093d1d94,4744858,0,0x0,8
tick,0x7ffd093d1d94,4759888,0,0x0,8
tick,0x7ffd093d1d94,4776107,0,0x0,8
tick,0x7ffd093d1d94,4791549,0,0x0,8
tick,0x7ffd093d1d94,4807313,0,0x0,8
tick,0x7ffd093d1d94,4822492,0,0x0,8
tick,0x7ffd093d1d94,4837907,0,0x0,8
tick,0x7ffd093d1d94,4853676,0,0x0,8
tick,0x7ffd093d1d94,4868791,0,0x0,8
tick,0x7ffd093d1d94,4884314,0,0x0,8
tick,0x7ffd093d1d94,4899971,0,0x0,8
tick,0x7ffd093d1d94,4915191,0,0x0,8
tick,0x7ffd093d1d94,4931368,0,0x0,8
tick,0x7ffd093d1d94,4946585,0,0x0,8
tick,0x7ffd093d1d94,4962319,0,0x0,8
tick,0x7ffd093d1d94,4977571,0,0x0,8
tick,0x7ffd093d1d94,4993425,0,0x0,8
tick,0x7ffd093d1d94,5007861,0,0x0,8
tick,0x7ffd093d1d94,5023938,0,0x0,8
tick,0x7ffd093d1d94,5039179,0,0x0,8
tick,0x7ffd093d1d94,5054300,0,0x0,8
tick,0x7ffd093d1d94,5070464,0,0x0,8
tick,0x7ffd093d1d94,5085095,0,0x0,8
tick,0x7ffd093d1d94,5101411,0,0x0,8
tick,0x7ffd093d1d94,5116079,0,0x0,8
tick,0x7ffd093d1d94,5131614,0,0x0,8
tick,0x7ffd093d1d94,5147485,0,0x0,8
tick,0x7ffd093d1d94,5163264,0,0x0,8
tick,0x7ffd093d1d94,5178455,0,0x0,8
tick,0x7ffd093d1d94,5193574,0,0x0,8
tick,0x7ffd093d1d94,5208754,0,0x0,8
tick,0x7ffd093d1d94,5224351,0,0x0,8
tick,0x7ffd093d1d94,5240740,0,0x0,8
tick,0x7ffd093d1d94,5255594,0,0x0,8
tick,0x7ffd093d1d94,5271553,0,0x0,8
tick,0x7ffd093d1d94,5287327,0,0x0,8
tick,0x7ffd093d1d94,5303918,0,0x0,8
tick,0x7ffd093d1d94,5318962,0,0x0,8
tick,0x7ffd093d1d94,5334275,0,0x0,8
tick,0x7ffd093d1d94,5350283,0,0x0,8
tick,0x7ffd093d1d94,5365348,0,0x0,8
tick,0x7ffd093d1d94,5380985,0,0x0,8
tick,0x7ffd093d1d94,5396577,0,0x0,8
tick,0x7ffd093d1d94,5412200,0,0x0,8
tick,0x7ffd093d1d94,5427169,0,0x0,8
tick,0x7ffd093d1d94,5443114,0,0x0,8
tick,0x7ffd093d1d94,5458856,0,0x0,8
tick,0x7ffd093d1d94,5474764,0,0x0,8
tick,0x7ffd093d1d94,5490648,0,0x0,8
tick,0x7ffd093d1d94,5506774,0,0x0,8
tick,0x7ffd093d1d94,5522202,0,0x0,8
tick,0x7ffd093d1d94,5538087,0,0x0,8
tick,0x7ffd093d1d94,5554158,0,0x0,8
tick,0x7ffd093d1d94,5570180,0,0x0,8
tick,0x7ffd093d1d94,5586011,0,0x0,8
tick,0x7ffd093d1d94,5602330,0,0x0,8
tick,0x7ffd093d1d94,5617629,0,0x0,8
tick,0x7ffd093d1d94,5632607,0,0x0,8
tick,0x7ffd093d1d94,5648588,0,0x0,8
tick,0x7ffd093d1d94,5663982,0,0x0,8
tick,0x7ffd093d1d94,5680289,0,0x0,8
tick,0x7ffd093d1d94,5695352,0,0x0,8
tick,0x7ffd093d1d94,5710798,0,0x0,8
tick,0x7ffd093d1d94,5726671,0,0x0,8
tick,0x7ffd093d1d94,5742392,0,0x0,8
tick,0x7ffd093d1d94,5757734,0,0x0,8
tick,0x7ffd093d1d94,5773584,0,0x0,8
tick,0x7ffd093d1d94,5790434,0,0x0,8
tick,0x7ffd093d1d94,5806214,0,0x0,8
tick,0x7ffd093d1d94,5821637,0,0x0,8
tick,0x7ffd093d1d94,5836982,0,0x0,8
tick,0x7ffd093d1d94,5851917,0,0x0,8
tick,0x7ffd093d1d94,5867370,0,0x0,8
tick,0x7ffd093d1d94,5882827,0,0x0,8
tick,0x7ffd093d1d94,5897997,0,0x0,8
tick,0x7ffd093d1d94,5913736,0,0x0,8
tick,0x7ffd093d1d94,5929644,0,0x0,8
tick,0x7ffd093d1d94,5945564,0,0x0,8
tick,0x7ffd093d1d94,5961355,0,0x0,8
tick,0x7ffd093d1d94,5976732,0,0x0,8
tick,0x7ffd093d1d94,5991849,0,0x0,8
tick,0x7ffd093d1d94,6007188,0,0x0,8
tick,0x7ffd093d1d94,6022654,0,0x0,8
tick,0x7ffd093d1d94,6038352,0,0x0,8
tick,0x7ffd093d1d94,6054538,0,0x0,8
tick,0x7ffd093d1d94,6069905,0,0x0,8
tick,0x7ffd093d1d94,6084750,0,0x0,8
tick,0x7ffd093d1d94,6100211,0,0x0,8
tick,0x7ffd093d1d94,6116132,0,0x0,8
tick,0x7ffd093d1d94,6131965,0,0x0,8
tick,0x7ffd093d1d94,6148390,0,0x0,8
tick,0x7ffd093d1d94,6163140,0,0x0,8
tick,0x7ffd093d1d94,6177925,0,0x0,8
tick,0x7ffd093d1d94,6193313,0,0x0,8
tick,0x7ffd093d1d94,6208463,0,0x0,8
tick,0x7ffd093d1d94,6223988,0,0x0,8
tick,0x7ffd093d1d94,6239178,0,0x0,8
tick,0x7ffd093d1d94,6254632,0,0x0,8
tick,0x7ffd093d1d94,6269707,0,0x0,8
tick,0x7ffd093d1d94,6286440,0,0x0,8
tick,0x7ffd093d1d94,6302495,0,0x0,8
tick,0x7ffd093d1d94,6317972,0,0x0,8
tick,0x7ffd093d1d94,6333786,0,0x0,8
tick,0x7ffd093d1d94,6349910,0,0x0,8
tick,0x7ffd093d1d94,6365884,0,0x0,8
tick,0x7ffd093d1d94,6381521,0,0x0,8
tick,0x7ffd093d1d94,6396719,0,0x0,8
tick,0x7ffd093d1d94,6412369,0,0x0,8
tick,0x7ffd093d1d94,6427579,0,0x0,8
tick,0x7ffd093d1d94,6442622,0,0x0,8
tick,0x7ffd093d1d94,6458463,0,0x0,8
tick,0x7ffd093d1d94,6473688,0,0x0,8
tick,0x7ffd093d1d94,6489515,0,0x0,8
tick,0x7ffd093d1d94,6504809,0,0x0,8
tick,0x7ffd093d1d94,6520130,0,0x0,8
tick,0x7ffd093d1d94,6535191,0,0x0,8
tick,0x7ffd093d1d94,6550948,0,0x0,8
tick,0x7ffd093d1d94,6566659,0,0x0,8
tick,0x7ffd093d1d94,6582319,0,0x0,8
tick,0x7ffd093d1d94,6597994,0,0x0,8
tick,0x7ffd093d1d94,6613588,0,0x0,8
tick,0x7ffd093d1d94,6629718,0,0x0,8
tick,0x7ffd093d1d94,6645148,0,0x0,8
tick,0x7ffd093d1d94,6660861,0,0x0,8
tick,0x7ffd093d1d94,6675980,0,0x0,8
tick,0x7ffd093d1d94,6691193,0,0x0,8
tick,0x7ffd093d1d94,6706794,0,0x0,8
tick,0x7ffd093d1d94,6722704,0,0x0,8
tick,0x7ffd093d1d94,6738845,0,0x0,8
tick,0x7ffd093d1d94,6754806,0,0x0,8
tick,0x7ffd093d1d94,6769995,0,0x0,8
tick,0x7ffd093d1d94,6785715,0,0x0,8
tick,0x7ffd093d1d94,6801257,0,0x0,8
tick,0x7ffd093d1d94,6817057,0,0x0,8
tick,0x7ffd093d1d94,6832089,0,0x0,8
tick,0x7ffd093d1d94,6847427,0,0x0,8
tick,0x7ffd093d1d94,6863006,0,0x0,8
tick,0x7ffd093d1d94,6878470,0,0x0,8
tick,0x7ffd093d1d94,6893313,0,0x0,8
tick,0x7ffd093d1d94,6908459,0,0x0,8
tick,0x7ffd093d1d94,6924461,0,0x0,8
tick,0x7ffd093d1d94,6939583,0,0x0,8
tick,0x7ffd093d1d94,6956223,0,0x0,8
tick,0x7ffd093d1d94,6971381,0,0x0,8
tick,0x7ffd093d1d94,6987267,0,0x0,8
tick,0x7ffd093d1d94,7003420,0,0x0,8
tick,0x7ffd093d1d94,7019251,0,0x0,8
tick,0x7ffd093d1d94,7034908,0,0x0,8
tick,0x7ffd093d1d94,7050897,0,0x0,8
tick,0x7ffd093d1d94,7065518,0,0x0,8
tick,0x7ffd093d1d94,7080489,0,0x0,8
tick,0x7ffd093d1d94,7096373,0,0x0,8
tick,0x7ffd093d1d94,7111876,0,0x0,8
tick,0x7ffd093d1d94,7127673,0,0x0,8
tick,0x7ffd093d1d94,7143132,0,0x0,8
tick,0x7ffd093d1d94,7158333,0,0x0,8
tick,0x7ffd093d1d94,7174394,0,0x0,8
tick,0x7ffd093d1d94,7189853,0,0x0,8
tick,0x7ffd093d1d94,7205446,0,0x0,8
tick,0x7ffd093d1d94,7220777,0,0x0,8
tick,0x7ffd093d1d94,7236042,0,0x0,8
tick,0x7ffd093d1d94,7251807,0,0x0,8
tick,0x7ffd093d1d94,7267259,0,0x0,8
tick,0x7ffd093d1d94,7282507,0,0x0,8
tick,0x7ffd093d1d94,7298053,0,0x0,8
tick,0x7ffd093d1d94,7313447,0,0x0,8
tick,0x7ffd093d1d94,7328489,0,0x0,8
tick,0x7ffd093d1d94,7343821,0,0x0,8
tick,0x7ffd093d1d94,7360306,0,0x0,8
tick,0x7ffd093d1d94,7375847,0,0x0,8
tick,0x7ffd093d1d94,7391116,0,0x0,8
tick,0x7ffd093d1d94,7406337,0,0x0,8
tick,0x7ffd093d1d94,7422650,0,0x0,8
tick,0x7ffd093d1d94,7437751,0,0x0,8
tick,0x7ffd093d1d94,7453321,0,0x0,8
tick,0x7ffd093d1d94,7468474,0,0x0,8
tick,0x7ffd093d1d94,7483755,0,0x0,8
tick,0x7ffd093d1d94,7499450,0,0x0,8
tick,0x7ffd093d1d94,7515830,0,0x0,8
tick,0x7ffd093d1d94,7531121,0,0x0,8
tick,0x7ffd093d1d94,7546113,0,0x0,8
tick,0x7ffd093d1d94,7561611,0,0x0,8
tick,0x7ffd093d1d94,7576986,0,0x0,8
tick,0x7ffd093d1d94,7592846,0,0x0,8
tick,0x7ffd093d1d94,7607651,0,0x0,8
tick,0x7ffd093d1d94,7623001,0,0x0,8
tick,0x7ffd093d1d94,7638454,0,0x0,8
tick,0x7ffd093d1d94,7654138,0,0x0,8
tick,0x7ffd093d1d94,7669455,0,0x0,8
tick,0x7ffd093d1d94,7685541,0,0x0,8
tick,0x7ffd093d1d94,7700746,0,0x0,8
tick,0x7ffd093d1d94,7716455,0,0x0,8
tick,0x7ffd093d1d94,7732639,0,0x0,8
tick,0x7ffd093d1d94,7748039,0,0x0,8
tick,0x7ffd093d1d94,7762877,0,0x0,8
tick,0x7ffd093d1d94,7778542,0,0x0,8
tick,0x7ffd093d1d94,7794130,0,0x0,8
tick,0x7ffd093d1d94,7809907,0,0x0,8
tick,0x7ffd093d1d94,7825990,0,0x0,8
tick,0x7ffd093d1d94,7842212,0,0x0,8
tick,0x7ffd093d1d94,7857706,0,0x0,8
tick,0x7ffd093d1d94,7873265,0,0x0,8
tick,0x7ffd093d1d94,7889144,0,0x0,8
tick,0x7ffd093d1d94,7903869,0,0x0,8
tick,0x7ffd093d1d94,7919123,0,0x0,8
tick,0x7ffd093d1d94,7934614,0,0x0,8
tick,0x7ffd093d1d94,7950434,0,0x0,8
tick,0x7ffd093d1d94,7965938,0,0x0,8
tick,0x7ffd093d1d94,7981615,0,0x0,8
tick,0x7ffd093d1d94,7996953,0,0x0,8
tick,0x7ffd093d1d94,8012566,0,0x0,8
tick,0x7ffd093d1d94,8028166,0,0x0,8
tick,0x7ffd093d1d94,8043787,0,0x0,8
tick,0x7ffd093d1d94,8059058,0,0x0,8
tick,0x7ffd093d1d94,8075082,0,0x0,8
tick,0x7ffd093d1d94,8089865,0,0x0,8
tick,0x7ffd093d1d94,8105000,0,0x0,8
tick,0x7ffd093d1d94,8120495,0,0x0,8
tick,0x7ffd093d1d94,8135756,0,0x0,8
tick,0x7ffd093d1d94,8151145,0,0x0,8
tick,0x7ffd093d1d94,8166340,0,0x0,8
tick,0x7ffd093d1d94,8181919,0,0x0,8
tick,0x7ffd093d1d94,8197839,0,0x0,8
tick,0x7ffd093d1d94,8213000,0,0x0,8
tick,0x7ffd093d1d94,8228949,0,0x0,8
tick,0x7ffd093d1d94,8244022,0,0x0,8
tick,0x7ffd093d1d94,8259676,0,0x0,8
tick,0x7ffd093d1d94,8274822,0,0x0,8
tick,0x7ffd093d1d94,8289928,0,0x0,8
tick,0x7ffd093d1d94,8305077,0,0x0,8
tick,0x7ffd093d1d94,8320621,0,0x0,8
tick,0x7ffd093d1d94,8335396,0,0x0,8
tick,0x7ffd093d1d94,8350979,0,0x0,8
tick,0x7ffd093d1d94,8366703,0,0x0,8
tick,0x7ffd093d1d94,8381417,0,0x0,8
tick,0x7ffd093d1d94,8397067,0,0x0,8
tick,0x7ffd093d1d94,8412267,0,0x0,8
tick,0x7ffd093d1d94,8428119,0,0x0,8
tick,0x7ffd093d1d94,8443826,0,0x0,8
tick,0x7ffd093d1d94,8459235,0,0x0,8
tick,0x7ffd093d1d94,8474340,0,0x0,8
tick,0x7ffd093d1d94,8489924,0,0x0,8
tick,0x7ffd093d1d94,8504993,0,0x0,8
tick,0x7ffd093d1d94,8521107,0,0x0,8
tick,0x7ffd093d1d94,8536709,0,0x0,8
tick,0x7ffd093d1d94,8552776,0,0x0,8
tick,0x7ffd093d1d94,8568643,0,0x0,8
tick,0x7ffd093d1d94,8583952,0,0x0,8
tick,0x7ffd093d1d94,8599124,0,0x0,8
tick,0x7ffd093d1d94,8615214,0,0x0,8
tick,0x7ffd093d1d94,8631372,0,0x0,8
tick,0x7ffd093d1d94,8646684,0,0x0,8
tick,0x7ffd093d1d94,8662745,0,0x0,8
tick,0x7ffd093d1d94,8678944,0,0x0,8
tick,0x7ffd093d1d94,8693906,0,0x0,8
tick,0x7ffd093d1d94,8709160,0,0x0,8
tick,0x7ffd093d1d94,8724511,0,0x0,8
tick,0x7ffd093d1d94,8740035,0,0x0,8
tick,0x7ffd093d1d94,8755828,0,0x0,8
tick,0x7ffd093d1d94,8771075,0,0x0,8
tick,0x7ffd093d1d94,8786984,0,0x0,8
tick,0x7ffd093d1d94,8801869,0,0x0,8
tick,0x7ffd093d1d94,8818066,0,0x0,8
tick,0x7ffd093d1d94,8833930,0,0x0,8
tick,0x7ffd093d1d94,8849444,0,0x0,8
tick,0x7ffd093d1d94,8865262,0,0x0,8
tick,0x7ffd093d1d94,8880611,0,0x0,8
tick,0x7ffd093d1d94,8896004,0,0x0,8
tick,0x7ffd093d1d94,8911343,0,0x0,8
tick,0x7ffd093d1d94,8927291,0,0x0,8
tick,0x7ffd093d1d94,8943230,0,0x0,8
tick,0x7ffd093d1d94,8959194,0,0x0,8
tick,0x7ffd093d1d94,8975065,0,0x0,8
tick,0x7ffd093d1d94,8990754,0,0x0,8
tick,0x7ffd093d1d94,9006134,0,0x0,8
tick,0x7ffd093d1d94,9021178,0,0x0,8
tick,0x7ffd093d1d94,9036479,0,0x0,8
tick,0x7ffd093d1d94,9052173,0,0x0,8
tick,0x7ffd093d1d94,9067998,0,0x0,8
tick,0x7ffd093d1d94,9083620,0,0x0,8
tick,0x7ffd093d1d94,9098835,0,0x0,8
tick,0x7ffd093d1d94,9114532,0,0x0,8
tick,0x7ffd093d1d94,9130454,0,0x0,8
tick,0x7ffd093d1d94,9145955,0,0x0,8
tick,0x7ffd093d1d94,9161506,0,0x0,8
tick,0x7ffd093d1d94,9176522,0,0x0,8
tick,0x7ffd093d1d94,9192548,0,0x0,8
tick,0x7ffd093d1d94,9208255,0,0x0,8
tick,0x7ffd093d1d94,9224484,0,0x0,8
tick,0x7ffd093d1d94,9239565,0,0x0,8
tick,0x7ffd093d1d94,9255054,0,0x0,8
tick,0x7ffd093d1d94,9270999,0,0x0,8
tick,0x7ffd093d1d94,9286556,0,0x0,8
tick,0x7ffd093d1d94,9302232,0,0x0,8
tick,0x7ffd093d1d94,9317749,0,0x0,8
tick,0x7ffd093d1d94,9332936,0,0x0,8
tick,0x7ffd093d1d94,9349468,0,0x0,8
tick,0x7ffd093d1d94,9365221,0,0x0,8
tick,0x7ffd093d1d94,9380251,0,0x0,8
tick,0x7ffd093d1d94,9396030,0,0x0,8
tick,0x7ffd093d1d94,9411222,0,0x0,8
tick,0x7ffd093d1d94,9426791,0,0x0,8
tick,0x7ffd093d1d94,9442587,0,0x0,8
tick,0x7ffd093d1d94,9457818,0,0x0,8
tick,0x7ffd093d1d94,9473972,0,0x0,8
tick,0x7ffd093d1d94,9489172,0,0x0,8
tick,0x7ffd093d1d94,9504871,0,0x0,8
tick,0x7ffd093d1d94,9520124,0,0x0,8
tick,0x7ffd093d1d94,9535601,0,0x0,8
tick,0x7ffd093d1d94,9551339,0,0x0,8
tick,0x7ffd093d1d94,9567059,0,0x0,8
tick,0x7ffd093d1d94,9582292,0,0x0,8
tick,0x7ffd093d1d94,9597724,0,0x0,8
tick,0x7ffd093d1d94,9613166,0,0x0,8
tick,0x7ffd093d1d94,9628960,0,0x0,8
tick,0x7ffd093d1d94,9644313,0,0x0,8
tick,0x7ffd093d1d94,9659819,0,0x0,8
tick,0x7ffd093d1d94,9676065,0,0x0,8
tick,0x7ffd093d1d94,9691933,0,0x0,8
tick,0x7ffd093d1d94,9707640,0,0x0,8
tick,0x7ffd093d1d94,9723452,0,0x0,8
tick,0x7ffd093d1d94,9738950,0,0x0,8
tick,0x7ffd093d1d94,9755017,0,0x0,8
tick,0x7ffd093d1d94,9769832,0,0x0,8
tick,0x7ffd093d1d94,9785452,0,0x0,8
tick,0x7ffd093d1d94,9801143,0,0x0,8
tick,0x7ffd093d1d94,9816760,0,0x0,8
tick,0x7ffd093d1d94,9832076,0,0x0,8
tick,0x7ffd093d1d94,9847178,0,0x0,8
tick,0x7ffd093d1d94,9862751,0,0x0,8
tick,0x7ffd093d1d94,9878147,0,0x0,8
tick,0x7ffd093d1d94,9893562,0,0x0,8
tick,0x7ffd093d1d94,9909532,0,0x0,8
tick,0x7ffd093d1d94,9924608,0,0x0,8
tick,0x7ffd093d1d94,9940360,0,0x0,8
tick,0x7ffd093d1d94,9956940,0,0x0,8
tick,0x7ffd093d1d94,9971974,0,0x0,8
tick,0x7ffd093d1d94,9988442,0,0x0,8
tick,0x7ffd093d1d94,10003778,0,0x0,8
tick,0x7ffd093d1d94,10020641,0,0x0,8
tick,0x7ffd093d1d94,10037112,0,0x0,8
tick,0x7ffd093d1d94,10050384,0,0x0,8
tick,0x7ffd093d1d94,10065454,0,0x0,8
tick,0x7ffd093d1d94,10081258,0,0x0,8
tick,0x7ffd093d1d94,10097258,0,0x0,8
tick,0x7ffd093d1d94,10113143,0,0x0,8
tick,0x7ffd093d1d94,10127861,0,0x0,8
tick,0x7ffd093d1d94,10143973,0,0x0,8
tick,0x7ffd093d1d94,10159195,0,0x0,8
tick,0x7ffd093d1d94,10174656,0,0x0,8
tick,0x7ffd093d1d94,10190347,0,0x0,8
tick,0x7ffd093d1d94,10206127,0,0x0,8
tick,0x7ffd093d1d94,10222283,0,0x0,8
tick,0x7ffd093d1d94,10237078,0,0x0,8
tick,0x7ffd093d1d94,10252789,0,0x0,8
tick,0x7ffd093d1d94,10268820,0,0x0,8
tick,0x7ffd093d1d94,10285196,0,0x0,8
tick,0x7ffd093d1d94,10300782,0,0x0,8
tick,0x7ffd093d1d94,10316463,0,0x0,8
tick,0x7ffd093d1d94,10331735,0,0x0,8
tick,0x7ffd093d1d94,10347074,0,0x0,8
tick,0x7ffd093d1d94,10362619,0,0x0,8
tick,0x7ffd093d1d94,10378108,0,0x0,8
tick,0x7ffd093d1d94,10393345,0,0x0,8
tick,0x7ffd093d1d94,10408840,0,0x0,8
tick,0x7ffd093d1d94,10424492,0,0x0,8
tick,0x7ffd093d1d94,10440260,0,0x0,8
tick,0x7ffd093d1d94,10456135,0,0x0,8
tick,0x7ffd093d1d94,10471932,0,0x0,8
tick,0x7ffd093d1d94,10486967,0,0x0,8
tick,0x7ffd093d1d94,10501821,0,0x0,8
tick,0x7ffd093d1d94,10517566,0,0x0,8
tick,0x7ffd093d1d94,10533532,0,0x0,8
tick,0x7ffd093d1d94,10548748,0,0x0,8
tick,0x7ffd093d1d94,10564137,0,0x0,8
tick,0x7ffd093d1d94,10579408,0,0x0,8
tick,0x7ffd093d1d94,10594849,0,0x0,8
tick,0x7ffd093d1d94,10610107,0,0x0,8
tick,0x7ffd093d1d94,10625832,0,0x0,8
tick,0x7ffd093d1d94,10641552,0,0x0,8
tick,0x7ffd093d1d94,10656926,0,0x0,8
tick,0x7ffd093d1d94,10672318,0,0x0,8
tick,0x7ffd093d1d94,10688269,0,0x0,8
tick,0x7ffd093d1d94,10704427,0,0x0,8
tick,0x7ffd093d1d94,10720011,0,0x0,8
tick,0x7ffd093d1d94,10735167,0,0x0,8
tick,0x7ffd093d1d94,10751597,0,0x0,8
tick,0x7ffd093d1d94,10766969,0,0x0,8
tick,0x7ffd093d1d94,10782718,0,0x0,8
tick,0x7ffd093d1d94,10798667,0,0x0,8
tick,0x7ffd093d1d94,10814062,0,0x0,8
tick,0x7ffd093d1d94,10829605,0,0x0,8
tick,0x7ffd093d1d94,10845485,0,0x0,8
tick,0x7ffd093d1d94,10861500,0,0x0,8
tick,0x7ffd093d1d94,10877459,0,0x0,8
tick,0x7ffd093d1d94,10892521,0,0x0,8
tick,0x7ffd093d1d94,10908675,0,0x0,8
tick,0x7ffd093d1d94,10924320,0,0x0,8
tick,0x7ffd093d1d94,10940094,0,0x0,8
tick,0x7ffd093d1d94,10955099,0,0x0,8
tick,0x7ffd093d1d94,10970072,0,0x0,8
tick,0x7ffd093d1d94,10986091,0,0x0,8
tick,0x7ffd093d1d94,11002052,0,0x0,8
tick,0x7ffd093d1d94,11017047,0,0x0,8
tick,0x7ffd093d1d94,11032572,0,0x0,8
tick,0x7ffd093d1d94,11048186,0,0x0,8
tick,0x7ffd093d1d94,11063385,0,0x0,8
tick,0x7ffd093d1d94,11079242,0,0x0,8
tick,0x7ffd093d1d94,11094505,0,0x0,8
tick,0x7ffd093d1d94,11110068,0,0x0,8
tick,0x7ffd093d1d94,11125691,0,0x0,8
tick,0x7ffd093d1d94,11140987,0,0x0,8
tick,0x7ffd093d1d94,11156800,0,0x0,8
tick,0x7ffd093d1d94,11172362,0,0x0,8
tick,0x7ffd093d1d94,11187395,0,0x0,8
tick,0x7ffd093d1d94,11202551,0,0x0,8
tick,0x7ffd093d1d94,11217801,0,0x0,8
tick,0x7ffd093d1d94,11233043,0,0x0,8
tick,0x7ffd093d1d94,11248380,0,0x0,8
tick,0x7ffd093d1d94,11263936,0,0x0,8
tick,0x7ffd093d1d94,11279739,0,0x0,8
tick,0x7ffd093d1d94,11295507,0,0x0,8
tick,0x7ffd093d1d94,11311714,0,0x0,8
tick,0x7ffd093d1d94,11327558,0,0x0,8
tick,0x7ffd093d1d94,11343316,0,0x0,8
tick,0x7ffd093d1d94,11358995,0,0x0,8
tick,0x7ffd093d1d94,11374179,0,0x0,8
tick,0x7ffd093d1d94,11389498,0,0x0,8
tick,0x7ffd093d1d94,11405351,0,0x0,8
tick,0x7ffd093d1d94,11421459,0,0x0,8
tick,0x7ffd093d1d94,11436877,0,0x0,8
tick,0x7ffd093d1d94,11452429,0,0x0,8
tick,0x7ffd093d1d94,11467739,0,0x0,8
tick,0x7ffd093d1d94,11482739,0,0x0,8
tick,0x7ffd093d1d94,11499247,0,0x0,8
tick,0x7ffd093d1d94,11514814,0,0x0,8
tick,0x7ffd093d1d94,11530858,0,0x0,8
tick,0x7ffd093d1d94,11545765,0,0x0,8
tick,0x7ffd093d1d94,11562101,0,0x0,8
tick,0x7ffd093d1d94,11576953,0,0x0,8
tick,0x7ffd093d1d94,11592826,0,0x0,8
tick,0x7ffd093d1d94,11608194,0,0x0,8
tick,0x7ffd093d1d94,11624069,0,0x0,8
tick,0x7ffd093d1d94,11639603,0,0x0,8
tick,0x7ffd093d1d94,11655289,0,0x0,8
tick,0x7ffd093d1d94,11671212,0,0x0,8
tick,0x7ffd093d1d94,11687368,0,0x0,8
tick,0x7ffd093d1d94,11703200,0,0x0,8
tick,0x7ffd093d1d94,11718783,0,0x0,8
tick,0x7ffd093d1d94,11734094,0,0x0,8
tick,0x7ffd093d1d94,11749324,0,0x0,8
tick,0x7ffd093d1d94,11764767,0,0x0,8
tick,0x7ffd093d1d94,11780605,0,0x0,8
tick,0x7ffd093d1d94,11795169,0,0x0,8
tick,0x7ffd093d1d94,11810716,0,0x0,8
tick,0x7ffd093d1d94,11826748,0,0x0,8
tick,0x7ffd093d1d94,11842891,0,0x0,8
tick,0x7ffd093d1d94,11858262,0,0x0,8
tick,0x7ffd093d1d94,11873725,0,0x0,8
tick,0x7ffd093d1d94,11889046,0,0x0,8
tick,0x7ffd093d1d94,11904654,0,0x0,8
tick,0x7ffd093d1d94,11919761,0,0x0,8
tick,0x7ffd093d1d94,11934907,0,0x0,8
tick,0x7ffd093d1d94,11950221,0,0x0,8
tick,0x7ffd093d1d94,11965754,0,0x0,8
tick,0x7ffd093d1d94,11980715,0,0x0,8
tick,0x7ffd093d1d94,11996503,0,0x0,8
tick,0x7ffd093d1d94,12012352,0,0x0,8
tick,0x7ffd093d1d94,12027032,0,0x0,8
tick,0x7ffd093d1d94,12042039,0,0x0,8
tick,0x7ffd093d1d94,12056751,0,0x0,8
tick,0x7ffd093d1d94,12072589,0,0x0,8
tick,0x7ffd093d1d94,12088504,0,0x0,8
tick,0x7ffd093d1d94,12103941,0,0x0,8
tick,0x7ffd093d1d94,12119627,0,0x0,8
tick,0x7ffd093d1d94,12135048,0,0x0,8
tick,0x7ffd093d1d94,12150989,0,0x0,8
tick,0x7ffd093d1d94,12166821,0,0x0,8
tick,0x7ffd093d1d94,12181409,0,0x0,8
tick,0x7ffd093d1d94,12197103,0,0x0,8
tick,0x7ffd093d1d94,12213402,0,0x0,8
tick,0x7ffd093d1d94,12228414,0,0x0,8
tick,0x7ffd093d1d94,12244314,0,0x0,8
tick,0x7ffd093d1d94,12259895,0,0x0,8
tick,0x7ffd093d1d94,12275962,0,0x0,8
tick,0x7ffd093d1d94,12291081,0,0x0,8
tick,0x7ffd093d1d94,12305838,0,0x0,8
tick,0x7ffd093d1d94,12321556,0,0x0,8
tick,0x7ffd093d1d94,12336763,0,0x0,8
tick,0x7ffd093d1d94,12352661,0,0x0,8
tick,0x7ffd093d1d94,12367848,0,0x0,8
tick,0x7ffd093d1d94,12383476,0,0x0,8
tick,0x7ffd093d1d94,12399775,0,0x0,8
tick,0x7ffd093d1d94,12415502,0,0x0,8
tick,0x7ffd093d1d94,12431119,0,0x0,8
tick,0x7ffd093d1d94,12446198,0,0x0,8
tick,0x7ffd093d1d94,12461884,0,0x0,8
tick,0x7ffd093d1d94,12477775,0,0x0,8
tick,0x7ffd093d1d94,12492963,0,0x0,8
tick,0x7ffd093d1d94,12508000,0,0x0,8
tick,0x7ffd093d1d94,12523042,0,0x0,8
tick,0x7ffd093d1d94,12538861,0,0x0,8
tick,0x7ffd093d1d94,12554488,0,0x0,8
tick,0x7ffd093d1d94,12570139,0,0x0,8
tick,0x7ffd093d1d94,12585383,0,0x0,8
tick,0x7ffd093d1d94,12600677,0,0x0,8
tick,0x7ffd093d1d94,12616277,0,0x0,8
tick,0x7ffd093d1d94,12631724,0,0x0,8
tick,0x7ffd093d1d94,12647146,0,0x0,8
tick,0x7ffd093d1d94,12662397,0,0x0,8
tick,0x7ffd093d1d94,12677881,0,0x0,8
tick,0x7ffd093d1d94,12693422,0,0x0,8
tick,0x7ffd093d1d94,12708589,0,0x0,8
tick,0x7ffd093d1d94,12725188,0,0x0,8
tick,0x7ffd093d1d94,12741151,0,0x0,8
tick,0x7ffd093d1d94,12756587,0,0x0,8
tick,0x7ffd093d1d94,12772434,0,0x0,8
tick,0x7ffd093d1d94,12787613,0,0x0,8
tick,0x7ffd093d1d94,12803240,0,0x0,8
tick,0x7ffd093d1d94,12819326,0,0x0,8
tick,0x7ffd093d1d94,12834881,0,0x0,8
tick,0x7ffd093d1d94,12851429,0,0x0,8
tick,0x7ffd093d1d94,12867430,0,0x0,8
tick,0x7ffd093d1d94,12883033,0,0x0,8
tick,0x7ffd093d1d94,12898366,0,0x0,8
tick,0x7ffd093d1d94,12914387,0,0x0,8
tick,0x7ffd093d1d94,12930019,0,0x0,8
tick,0x7ffd093d1d94,12945139,0,0x0,8
tick,0x7ffd093d1d94,12960595,0,0x0,8
tick,0x7ffd093d1d94,12976341,0,0x0,8
tick,0x7ffd093d1d94,12991587,0,0x0,8
tick,0x7ffd093d1d94,13007190,0,0x0,8
tick,0x7ffd093d1d94,13022483,0,0x0,8
tick,0x7ffd093d1d94,13037641,0,0x0,8
tick,0x7ffd093d1d94,13053527,0,0x0,8
tick,0x7ffd093d1d94,13069148,0,0x0,8
tick,0x7ffd093d1d94,13084535,0,0x0,8
tick,0x7ffd093d1d94,13100039,0,0x0,8
tick,0x7ffd093d1d94,13115315,0,0x0,8
tick,0x7ffd093d1d94,13131127,0,0x0,8
tick,0x7ffd093d1d94,13146362,0,0x0,8
tick,0x7ffd093d1d94,13162250,0,0x0,8
tick,0x7ffd093d1d94,13177373,0,0x0,8
tick,0x7ffd093d1d94,13192829,0,0x0,8
tick,0x7ffd093d1d94,13208840,0,0x0,8
tick,0x7ffd093d1d94,13224460,0,0x0,8
tick,0x7ffd093d1d94,13239857,0,0x0,8
tick,0x7ffd093d1d94,13255769,0,0x0,8
tick,0x7ffd093d1d94,13271759,0,0x0,8
tick,0x7ffd093d1d94,13287749,0,0x0,8
tick,0x7ffd093d1d94,13303768,0,0x0,8
tick,0x7ffd093d1d94,13319254,0,0x0,8
tick,0x7ffd093d1d94,13335230,0,0x0,8
tick,0x7ffd093d1d94,13351179,0,0x0,8
tick,0x7ffd093d1d94,13367540,0,0x0,8
tick,0x7ffd093d1d94,13383489,0,0x0,8
tick,0x7ffd093d1d94,13399282,0,0x0,8
tick,0x7ffd093d1d94,13414218,0,0x0,8
tick,0x7ffd093d1d94,13429692,0,0x0,8
tick,0x7ffd093d1d94,13444696,0,0x0,8
tick,0x7ffd093d1d94,13459961,0,0x0,8
tick,0x7ffd093d1d94,13476103,0,0x0,8
tick,0x7ffd093d1d94,13490687,0,0x0,8
tick,0x7ffd093d1d94,13506188,0,0x0,8
tick,0x7ffd093d1d94,13521792,0,0x0,8
tick,0x7ffd093d1d94,13538066,0,0x0,8
tick,0x7ffd093d1d94,13553493,0,0x0,8
tick,0x7ffd093d1d94,13569297,0,0x0,8
tick,0x7ffd093d1d94,13584692,0,0x0,8
tick,0x7ffd093d1d94,13600248,0,0x0,8
tick,0x7ffd093d1d94,13616181,0,0x0,8
tick,0x7ffd093d1d94,13631882,0,0x0,8
tick,0x7ffd093d1d94,13647636,0,0x0,8
tick,0x7ffd093d1d94,13663706,0,0x0,8
tick,0x7ffd093d1d94,13678494,0,0x0,8
tick,0x7ffd093d1d94,13694102,0,0x0,8
tick,0x7ffd093d1d94,13709457,0,0x0,8
tick,0x7ffd093d1d94,13724775,0,0x0,8
tick,0x7ffd093d1d94,13740207,0,0x0,8
tick,0x7ffd093d1d94,13756102,0,0x0,8
tick,0x7ffd093d1d94,13772068,0,0x0,8
tick,0x7ffd093d1d94,13787363,0,0x0,8
tick,0x7ffd093d1d94,13802488,0,0x0,8
tick,0x7ffd093d1d94,13817591,0,0x0,8
tick,0x7ffd093d1d94,13833387,0,0x0,8
tick,0x7ffd093d1d94,13848808,0,0x0,8
tick,0x7ffd093d1d94,13864492,0,0x0,8
tick,0x7ffd093d1d94,13880124,0,0x0,8
tick,0x7ffd093d1d94,13895034,0,0x0,8
tick,0x7ffd093d1d94,13910641,0,0x0,8
tick,0x7ffd093d1d94,13926268,0,0x0,8
tick,0x7ffd093d1d94,13942611,0,0x0,8
tick,0x7ffd093d1d94,13957591,0,0x0,8
tick,0x7ffd093d1d94,13972824,0,0x0,8
tick,0x7ffd093d1d94,13988052,0,0x0,8
tick,0x7ffd093d1d94,14003654,0,0x0,8
tick,0x7ffd093d1d94,14019393,0,0x0,8
tick,0x7ffd093d1d94,14035078,0,0x0,8
tick,0x7ffd093d1d94,14051342,0,0x0,8
tick,0x7ffd093d1d94,14066674,0,0x0,8
tick,0x7ffd093d1d94,14082819,0,0x0,8
tick,0x7ffd093d1d94,14098903,0,0x0,8
tick,0x7ffd093d1d94,14114450,0,0x0,8
tick,0x7ffd093d1d94,14130588,0,0x0,8
tick,0x7ffd093d1d94,14146572,0,0x0,8
tick,0x7ffd093d1d94,14161912,0,0x0,8
tick,0x7ffd093d1d94,14176973,0,0x0,8
tick,0x7ffd093d1d94,14192753,0,0x0,8
tick,0x7ffd093d1d94,14208276,0,0x0,8
tick,0x7ffd093d1d94,14224380,0,0x0,8
tick,0x7ffd093d1d94,14240403,0,0x0,8
tick,0x7ffd093d1d94,14255712,0,0x0,8
tick,0x7ffd093d1d94,14271351,0,0x0,8
tick,0x7ffd093d1d94,14286904,0,0x0,8
tick,0x7ffd093d1d94,14301762,0,0x0,8
tick,0x7ffd093d1d94,14317223,0,0x0,8
tick,0x7ffd093d1d94,14332659,0,0x0,8
tick,0x7ffd093d1d94,14348420,0,0x0,8
tick,0x7ffd093d1d94,14363781,0,0x0,8
tick,0x7ffd093d1d94,14379121,0,0x0,8
tick,0x7ffd093d1d94,14395050,0,0x0,8
tick,0x7ffd093d1d94,14410486,0,0x0,8
tick,0x7ffd093d1d94,14426390,0,0x0,8
tick,0x7ffd093d1d94,14441989,0,0x0,8
tick,0x7ffd093d1d94,14457543,0,0x0,8
tick,0x7ffd093d1d94,14472551,0,0x0,8
tick,0x7ffd093d1d94,14487443,0,0x0,8
tick,0x7ffd093d1d94,14503498,0,0x0,8
tick,0x7ffd093d1d94,14519259,0,0x0,8
tick,0x7ffd093d1d94,14534984,0,0x0,8
tick,0x7ffd093d1d94,14550605,0,0x0,8
tick,0x7ffd093d1d94,14566249,0,0x0,8
tick,0x7ffd093d1d94,14582271,0,0x0,8
tick,0x7ffd093d1d94,14597478,0,0x0,8
tick,0x7ffd093d1d94,14613076,0,0x0,8
tick,0x7ffd093d1d94,14628583,0,0x0,8
tick,0x7ffd093d1d94,14643887,0,0x0,8
tick,0x7ffd093d1d94,14659438,0,0x0,8
tick,0x7ffd093d1d94,14674476,0,0x0,8
tick,0x7ffd093d1d94,14689773,0,0x0,8
tick,0x7ffd093d1d94,14705360,0,0x0,8
tick,0x7ffd093d1d94,14720539,0,0x0,8
tick,0x7ffd093d1d94,14735930,0,0x0,8
tick,0x7ffd093d1d94,14752242,0,0x0,8
tick,0x7ffd093d1d94,14768383,0,0x0,8
tick,0x7ffd093d1d94,14784152,0,0x0,8
tick,0x7ffd093d1d94,14800113,0,0x0,8
tick,0x7ffd093d1d94,14816118,0,0x0,8
tick,0x7ffd093d1d94,14831850,0,0x0,8
tick,0x7ffd093d1d94,14847442,0,0x0,8
tick,0x7ffd093d1d94,14862949,0,0x0,8
tick,0x7ffd093d1d94,14878804,0,0x0,8
tick,0x7ffd093d1d94,14894006,0,0x0,8
tick,0x7ffd093d1d94,14909407,0,0x0,8
tick,0x7ffd093d1d94,14925329,0,0x0,8
tick,0x7ffd093d1d94,14941414,0,0x0,8
tick,0x7ffd093d1d94,14956478,0,0x0,8
tick,0x7ffd093d1d94,14972326,0,0x0,8
tick,0x7ffd093d1d94,14987249,0,0x0,8
tick,0x7ffd093d1d94,15003077,0,0x0,8
tick,0x7ffd093d1d94,15018062,0,0x0,8
tick,0x7ffd093d1d94,15034032,0,0x0,8
tick,0x7ffd093d1d94,15049631,0,0x0,8
tick,0x7ffd093d1d94,15065074,0,0x0,8
tick,0x7ffd093d1d94,15080736,0,0x0,8
tick,0x7ffd093d1d94,15095955,0,0x0,8
tick,0x7ffd093d1d94,15111319,0,0x0,8
tick,0x7ffd093d1d94,15126201,0,0x0,8
tick,0x7ffd093d1d94,15141804,0,0x0,8
tick,0x7ffd093d1d94,15157105,0,0x0,8
tick,0x7ffd093d1d94,15172981,0,0x0,8
tick,0x7ffd093d1d94,15188733,0,0x0,8
tick,0x7ffd093d1d94,15204448,0,0x0,8
tick,0x7ffd093d1d94,15220360,0,0x0,8
tick,0x7ffd093d1d94,15236132,0,0x0,8
tick,0x7ffd093d1d94,15251942,0,0x0,8
tick,0x7ffd093d1d94,15267474,0,0x0,8
tick,0x7ffd093d1d94,15282766,0,0x0,8
tick,0x7ffd093d1d94,15298424,0,0x0,8
tick,0x7ffd093d1d94,15314391,0,0x0,8
tick,0x7ffd093d1d94,15330186,0,0x0,8
tick,0x7ffd093d1d94,15345872,0,0x0,8
tick,0x7ffd093d1d94,15361377,0,0x0,8
tick,0x7ffd093d1d94,15376443,0,0x0,8
tick,0x7ffd093d1d94,15391763,0,0x0,8
tick,0x7ffd093d1d94,15407587,0,0x0,8
tick,0x7ffd093d1d94,15422967,0,0x0,8
tick,0x7ffd093d1d94,15438094,0,0x0,8
tick,0x7ffd093d1d94,15454202,0,0x0,8
tick,0x7ffd093d1d94,15469997,0,0x0,8
tick,0x7ffd093d1d94,15485764,0,0x0,8
tick,0x7ffd093d1d94,15501619,0,0x0,8
tick,0x7ffd093d1d94,15516796,0,0x0,8
tick,0x7ffd093d1d94,15532835,0,0x0,8
tick,0x7ffd093d1d94,15548328,0,0x0,8
tick,0x7ffd093d1d94,15564262,0,0x0,8
tick,0x7ffd093d1d94,15578977,0,0x0,8
tick,0x7ffd093d1d94,15594432,0,0x0,8
tick,0x7ffd093d1d94,15609503,0,0x0,8
tick,0x7ffd093d1d94,15625417,0,0x0,8
tick,0x7ffd093d1d94,15641174,0,0x0,8
tick,0x7ffd093d1d94,15657211,0,0x0,8
tick,0x7ffd093d1d94,15672548,0,0x0,8
tick,0x7ffd093d1d94,15688560,0,0x0,8
tick,0x7ffd093d1d94,15703674,0,0x0,8
tick,0x7ffd093d1d94,15719773,0,0x0,8
tick,0x7ffd093d1d94,15736373,0,0x0,8
tick,0x7ffd093d1d94,15750495,0,0x0,8
tick,0x7ffd093d1d94,15766154,0,0x0,8
tick,0x7ffd093d1d94,15781137,0,0x0,8
tick,0x7ffd093d1d94,15796560,0,0x0,8
tick,0x7ffd093d1d94,15812188,0,0x0,8
tick,0x7ffd093d1d94,15827832,0,0x0,8
tick,0x7ffd093d1d94,15843408,0,0x0,8
tick,0x7ffd093d1d94,15859753,0,0x0,8
tick,0x7ffd093d1d94,15875412,0,0x0,8
tick,0x7ffd093d1d94,15891394,0,0x0,8
tick,0x7ffd093d1d94,15907108,0,0x0,8
tick,0x7ffd093d1d94,15922631,0,0x0,8
tick,0x7ffd093d1d94,15937926,0,0x0,8
tick,0x7ffd093d1d94,15953008,0,0x0,8
tick,0x7ffd093d1d94,15968433,0,0x0,8
tick,0x7ffd093d1d94,15984946,0,0x0,8
tick,0x7ffd093d1d94,16000123,0,0x0,8
tick,0x7ffd093d1d94,16015603,0,0x0,8
tick,0x7ffd093d1d94,16030931,0,0x0,8
tick,0x7ffd093d1d94,16045930,0,0x0,8
tick,0x7ffd093d1d94,16060823,0,0x0,8
tick,0x7ffd093d1d94,16076710,0,0x0,8
tick,0x7ffd093d1d94,16092443,0,0x0,8
tick,0x7ffd093d1d94,16107981,0,0x0,8
tick,0x7ffd093d1d94,16123987,0,0x0,8
tick,0x7ffd093d1d94,16140186,0,0x0,8
tick,0x7ffd093d1d94,16155876,0,0x0,8
tick,0x7ffd093d1d94,16171896,0,0x0,8
tick,0x7ffd093d1d94,16187887,0,0x0,8
tick,0x7ffd093d1d94,16202975,0,0x0,8
tick,0x7ffd093d1d94,16218853,0,0x0,8
tick,0x7ffd093d1d94,16234049,0,0x0,8
tick,0x7ffd093d1d94,16249528,0,0x0,8
tick,0x7ffd093d1d94,16264378,0,0x0,8
tick,0x7ffd093d1d94,16279998,0,0x0,8
tick,0x7ffd093d1d94,16295398,0,0x0,8
tick,0x7ffd093d1d94,16310957,0,0x0,8
tick,0x7ffd093d1d94,16326495,0,0x0,8
tick,0x7ffd093d1d94,16342673,0,0x0,8
tick,0x7ffd093d1d94,16359745,0,0x0,8
tick,0x7ffd093d1d94,16373718,0,0x0,8
tick,0x7ffd093d1d94,16390244,0,0x0,8
tick,0x7ffd093d1d94,16407344,0,0x0,8
tick,0x7ffd093d1d94,16421320,0,0x0,8
tick,0x7ffd093d1d94,16435575,0,0x0,8
tick,0x7ffd093d1d94,16450655,0,0x0,8
tick,0x7ffd093d1d94,16466252,0,0x0,8
tick,0x7ffd093d1d94,16481682,0,0x0,8
tick,0x7ffd093d1d94,16496901,0,0x0,8
tick,0x7ffd093d1d94,16512080,0,0x0,8
tick,0x7ffd093d1d94,16527733,0,0x0,8
tick,0x7ffd093d1d94,16542689,0,0x0,8
tick,0x7ffd093d1d94,16557867,0,0x0,8
tick,0x7ffd093d1d94,16573233,0,0x0,8
tick,0x7ffd093d1d94,16588494,0,0x0,8
tick,0x7ffd093d1d94,16604638,0,0x0,8
tick,0x7ffd093d1d94,16620305,0,0x0,8
tick,0x7ffd093d1d94,16635514,0,0x0,8
tick,0x7ffd093d1d94,16650763,0,0x0,8
tick,0x7ffd093d1d94,16665931,0,0x0,8
tick,0x7ffd093d1d94,16681524,0,0x0,8
tick,0x7ffd093d1d94,16697501,0,0x0,8
tick,0x7ffd093d1d94,16713024,0,0x0,8
tick,0x7ffd093d1d94,16728950,0,0x0,8
tick,0x7ffd093d1d94,16744481,0,0x0,8
tick,0x7ffd093d1d94,16759934,0,0x0,8
tick,0x7ffd093d1d94,16775621,0,0x0,8
tick,0x7ffd093d1d94,16791713,0,0x0,8
tick,0x7ffd093d1d94,16807476,0,0x0,8
tick,0x7ffd093d1d94,16823165,0,0x0,8
tick,0x7ffd093d1d94,16838538,0,0x0,8
tick,0x7ffd093d1d94,16854059,0,0x0,8
tick,0x7ffd093d1d94,16869341,0,0x0,8
tick,0x7ffd093d1d94,16884672,0,0x0,8
tick,0x7ffd093d1d94,16900352,0,0x0,8
tick,0x7ffd093d1d94,16915747,0,0x0,8
tick,0x7ffd093d1d94,16932252,0,0x0,8
tick,0x7ffd093d1d94,16948170,0,0x0,8
tick,0x7ffd093d1d94,16964040,0,0x0,8
tick,0x7ffd093d1d94,16979307,0,0x0,8
tick,0x7ffd093d1d94,16994620,0,0x0,8
tick,0x7ffd093d1d94,17009828,0,0x0,8
tick,0x7ffd093d1d94,17025812,0,0x0,8
tick,0x7ffd093d1d94,17040409,0,0x0,8
tick,0x7ffd093d1d94,17056447,0,0x0,8
tick,0x7ffd093d1d94,17072288,0,0x0,8
tick,0x7ffd093d1d94,17087731,0,0x0,8
tick,0x7ffd093d1d94,17103760,0,0x0,8
tick,0x7ffd093d1d94,17119813,0,0x0,8
tick,0x7ffd093d1d94,17136297,0,0x0,8
tick,0x7ffd093d1d94,17151646,0,0x0,8
tick,0x7ffd093d1d94,17167080,0,0x0,8
tick,0x7ffd093d1d94,17182467,0,0x0,8
tick,0x7ffd093d1d94,17198379,0,0x0,8
tick,0x7ffd093d1d94,17214463,0,0x0,8
tick,0x7ffd093d1d94,17229779,0,0x0,8
tick,0x7ffd093d1d94,17245634,0,0x0,8
tick,0x7ffd093d1d94,17261002,0,0x0,8
tick,0x7ffd093d1d94,17276465,0,0x0,8
tick,0x7ffd093d1d94,17291942,0,0x0,8
tick,0x7ffd093d1d94,17307954,0,0x0,8
tick,0x7ffd093d1d94,17323152,0,0x0,8
tick,0x7ffd093d1d94,17338910,0,0x0,8
tick,0x7ffd093d1d94,17353448,0,0x0,8
tick,0x7ffd093d1d94,17369462,0,0x0,8
tick,0x7ffd093d1d94,17384491,0,0x0,8
tick,0x7ffd093d1d94,17400001,0,0x0,8
tick,0x7ffd093d1d94,17416199,0,0x0,8
tick,0x7ffd093d1d94,17431527,0,0x0,8
tick,0x7ffd093d1d94,17446614,0,0x0,8
tick,0x7ffd093d1d94,17463173,0,0x0,8
tick,0x7ffd093d1d94,17477945,0,0x0,8
tick,0x7ffd093d1d94,17494472,0,0x0,8
tick,0x7ffd093d1d94,17509213,0,0x0,8
tick,0x7ffd093d1d94,17524507,0,0x0,8
tick,0x7ffd093d1d94,17539752,0,0x0,8
tick,0x7ffd093d1d94,17555322,0,0x0,8
tick,0x7ffd093d1d94,17570958,0,0x0,8
tick,0x7ffd093d1d94,17585904,0,0x0,8
tick,0x7ffd093d1d94,17601134,0,0x0,8
tick,0x7ffd093d1d94,17616232,0,0x0,8
tick,0x7ffd093d1d94,17632000,0,0x0,8
tick,0x7ffd093d1d94,17647096,0,0x0,8
tick,0x7ffd093d1d94,17661838,0,0x0,8
tick,0x7ffd093d1d94,17677246,0,0x0,8
tick,0x7ffd093d1d94,17693134,0,0x0,8
tick,0x7ffd093d1d94,17708993,0,0x0,8
tick,0x7ffd093d1d94,17724715,0,0x0,8
tick,0x7ffd093d1d94,17740925,0,0x0,8
tick,0x7ffd093d1d94,17756263,0,0x0,8
tick,0x7ffd093d1d94,17771916,0,0x0,8
tick,0x7ffd093d1d94,17787425,0,0x0,8
tick,0x7ffd093d1d94,17802037,0,0x0,8
tick,0x7ffd093d1d94,17817423,0,0x0,8
tick,0x7ffd093d1d94,17833371,0,0x0,8
tick,0x7ffd093d1d94,17848536,0,0x0,8
tick,0x7ffd093d1d94,17863603,0,0x0,8
tick,0x7ffd093d1d94,17880039,0,0x0,8
tick,0x7ffd093d1d94,17895619,0,0x0,8
tick,0x7ffd093d1d94,17911393,0,0x0,8
tick,0x7ffd093d1d94,17926489,0,0x0,8
tick,0x7ffd093d1d94,17941821,0,0x0,8
tick,0x7ffd093d1d94,17957724,0,0x0,8
tick,0x7ffd093d1d94,17973336,0,0x0,8
tick,0x7ffd093d1d94,17988213,0,0x0,8
tick,0x7ffd093d1d94,18004099,0,0x0,8
tick,0x7ffd093d1d94,18019224,0,0x0,8
tick,0x7ffd093d1d94,18034495,0,0x0,8
tick,0x7ffd093d1d94,18049489,0,0x0,8
tick,0x7ffd093d1d94,18064871,0,0x0,8
tick,0x7ffd093d1d94,18080364,0,0x0,8
tick,0x7ffd093d1d94,18095326,0,0x0,8
tick,0x7ffd093d1d94,18110347,0,0x0,8
tick,0x7ffd093d1d94,18125686,0,0x0,8
tick,0x7ffd093d1d94,18141446,0,0x0,8
tick,0x7ffd093d1d94,18156298,0,0x0,8
tick,0x7ffd093d1d94,18171726,0,0x0,8
tick,0x7ffd093d1d94,18188068,0,0x0,8
tick,0x7ffd093d1d94,18203057,0,0x0,8
tick,0x7ffd093d1d94,18218240,0,0x0,8
tick,0x7ffd093d1d94,18233726,0,0x0,8
tick,0x7ffd093d1d94,18248956,0,0x0,8
tick,0x7ffd093d1d94,18264991,0,0x0,8
tick,0x7ffd093d1d94,18279643,0,0x0,8
tick,0x7ffd093d1d94,18295563,0,0x0,8
tick,0x7ffd093d1d94,18311786,0,0x0,8
tick,0x7ffd093d1d94,18326904,0,0x0,8
tick,0x7ffd093d1d94,18342537,0,0x0,8
tick,0x7ffd093d1d94,18358184,0,0x0,8
tick,0x7ffd093d1d94,18373430,0,0x0,8
tick,0x7ffd093d1d94,18388908,0,0x0,8
tick,0x7ffd093d1d94,18404614,0,0x0,8
tick,0x7ffd093d1d94,18420219,0,0x0,8
tick,0x7ffd093d1d94,18435738,0,0x0,8
tick,0x7ffd093d1d94,18450633,0,0x0,8
tick,0x7ffd093d1d94,18466080,0,0x0,8
tick,0x7ffd093d1d94,18480960,0,0x0,8
tick,0x7ffd093d1d94,18496207,0,0x0,8
tick,0x7ffd093d1d94,18512067,0,0x0,8
tick,0x7ffd093d1d94,18527602,0,0x0,8
tick,0x7ffd093d1d94,18542482,0,0x0,8
tick,0x7ffd093d1d94,18558222,0,0x0,8
tick,0x7ffd093d1d94,18573170,0,0x0,8
tick,0x7ffd093d1d94,18589352,0,0x0,8
tick,0x7ffd093d1d94,18604623,0,0x0,8
tick,0x7ffd093d1d94,18620851,0,0x0,8
tick,0x7ffd093d1d94,18636003,0,0x0,8
tick,0x7ffd093d1d94,18651812,0,0x0,8
tick,0x7ffd093d1d94,18667665,0,0x0,8
tick,0x7ffd093d1d94,18683907,0,0x0,8
tick,0x7ffd093d1d94,18699544,0,0x0,8
tick,0x7ffd093d1d94,18714426,0,0x0,8
tick,0x7ffd093d1d94,18730025,0,0x0,8
tick,0x7ffd093d1d94,18746184,0,0x0,8
tick,0x7ffd093d1d94,18762143,0,0x0,8
tick,0x7ffd093d1d94,18777879,0,0x0,8
tick,0x7ffd093d1d94,18792730,0,0x0,8
tick,0x7ffd093d1d94,18808660,0,0x0,8
tick,0x7ffd093d1d94,18824458,0,0x0,8
tick,0x7ffd093d1d94,18840293,0,0x0,8
tick,0x7ffd093d1d94,18855625,0,0x0,8
tick,0x7ffd093d1d94,18870741,0,0x0,8
tick,0x7ffd093d1d94,18885954,0,0x0,8
tick,0x7ffd093d1d94,18902394,0,0x0,8
tick,0x7ffd093d1d94,18918212,0,0x0,8
tick,0x7ffd093d1d94,18933417,0,0x0,8
tick,0x7ffd093d1d94,18948712,0,0x0,8
tick,0x7ffd093d1d94,18964018,0,0x0,8
tick,0x7ffd093d1d94,18979490,0,0x0,8
tick,0x7ffd093d1d94,18994755,0,0x0,8
tick,0x7ffd093d1d94,19010613,0,0x0,8
tick,0x7ffd093d1d94,19026273,0,0x0,8
tick,0x7ffd093d1d94,19042407,0,0x0,8
tick,0x7ffd093d1d94,19057587,0,0x0,8
tick,0x7ffd093d1d94,19073679,0,0x0,8
tick,0x7ffd093d1d94,19088988,0,0x0,8
tick,0x7ffd093d1d94,19104508,0,0x0,8
tick,0x7ffd093d1d94,19120914,0,0x0,8
tick,0x7ffd093d1d94,19136064,0,0x0,8
tick,0x7ffd093d1d94,19150704,0,0x0,8
tick,0x7ffd093d1d94,19166032,0,0x0,8
tick,0x7ffd093d1d94,19181798,0,0x0,8
tick,0x7ffd093d1d94,19197759,0,0x0,8
tick,0x7ffd093d1d94,19214004,0,0x0,8
tick,0x7ffd093d1d94,19229598,0,0x0,8
tick,0x7ffd093d1d94,19244686,0,0x0,8
tick,0x7ffd093d1d94,19260796,0,0x0,8
tick,0x7ffd093d1d94,19276511,0,0x0,8
tick,0x7ffd093d1d94,19291184,0,0x0,8
tick,0x7ffd093d1d94,19306462,0,0x0,8
tick,0x7ffd093d1d94,19321795,0,0x0,8
tick,0x7ffd093d1d94,19337210,0,0x0,8
tick,0x7ffd093d1d94,19352866,0,0x0,8
tick,0x7ffd093d1d94,19368106,0,0x0,8
tick,0x7ffd093d1d94,19383062,0,0x0,8
tick,0x7ffd093d1d94,19398821,0,0x0,8
tick,0x7ffd093d1d94,19413983,0,0x0,8
tick,0x7ffd093d1d94,19430092,0,0x0,8
tick,0x7ffd093d1d94,19445205,0,0x0,8
tick,0x7ffd093d1d94,19460842,0,0x0,8
tick,0x7ffd093d1d94,19476724,0,0x0,8
tick,0x7ffd093d1d94,19492017,0,0x0,8
tick,0x7ffd093d1d94,19507602,0,0x0,8
tick,0x7ffd093d1d94,19522857,0,0x0,8
tick,0x7ffd093d1d94,19538507,0,0x0,8
tick,0x7ffd093d1d94,19553730,0,0x0,8
tick,0x7ffd093d1d94,19568812,0,0x0,8
tick,0x7ffd093d1d94,19584665,0,0x0,8
tick,0x7ffd093d1d94,19600832,0,0x0,8
tick,0x7ffd093d1d94,19617017,0,0x0,8
tick,0x7ffd093d1d94,19632847,0,0x0,8
tick,0x7ffd093d1d94,19648634,0,0x0,8
tick,0x7ffd093d1d94,19663549,0,0x0,8
tick,0x7ffd093d1d94,19678510,0,0x0,8
tick,0x7ffd093d1d94,19693890,0,0x0,8
tick,0x7ffd093d1d94,19709458,0,0x0,8
tick,0x7ffd093d1d94,19725262,0,0x0,8
tick,0x7ffd093d1d94,19741203,0,0x0,8
tick,0x7ffd093d1d94,19756581,0,0x0,8
tick,0x7ffd093d1d94,19771557,0,0x0,8
tick,0x7ffd093d1d94,19787662,0,0x0,8
tick,0x7ffd093d1d94,19802969,0,0x0,8
tick,0x7ffd093d1d94,19818684,0,0x0,8
tick,0x7ffd093d1d94,19834925,0,0x0,8
tick,0x7ffd093d1d94,19851414,0,0x0,8
tick,0x7ffd093d1d94,19866503,0,0x0,8
tick,0x7ffd093d1d94,19881911,0,0x0,8
tick,0x7ffd093d1d94,19897992,0,0x0,8
tick,0x7ffd093d1d94,19913087,0,0x0,8
tick,0x7ffd093d1d94,19928197,0,0x0,8
tick,0x7ffd093d1d94,19944384,0,0x0,8
tick,0x7ffd093d1d94,19960577,0,0x0,8
tick,0x7ffd093d1d94,19976046,0,0x0,8
tick,0x7ffd093d1d94,19991367,0,0x0,8
tick,0x7ffd093d1d94,20007195,0,0x0,8
tick,0x7ffd093d1d94,20022319,0,0x0,8
tick,0x7ffd093d1d94,20038326,0,0x0,8
tick,0x7ffd093d1d94,20054246,0,0x0,8
tick,0x7ffd093d1d94,20069707,0,0x0,8
tick,0x7ffd093d1d94,20085021,0,0x0,8
tick,0x7ffd093d1d94,20100181,0,0x0,8
tick,0x7ffd093d1d94,20115975,0,0x0,8
tick,0x7ffd093d1d94,20131018,0,0x0,8
tick,0x7ffd093d1d94,20146387,0,0x0,8
tick,0x7ffd093d1d94,20162352,0,0x0,8
tick,0x7ffd093d1d94,20177756,0,0x0,8
tick,0x7ffd093d1d94,20193129,0,0x0,8
tick,0x7ffd093d1d94,20208568,0,0x0,8
tick,0x7ffd093d1d94,20224538,0,0x0,8
tick,0x7ffd093d1d94,20240176,0,0x0,8
tick,0x7ffd093d1d94,20255994,0,0x0,8
tick,0x7ffd093d1d94,20271248,0,0x0,8
tick,0x7ffd093d1d94,20287411,0,0x0,8
tick,0x7ffd093d1d94,20302891,0,0x0,8
tick,0x7ffd093d1d94,20318798,0,0x0,8
tick,0x7ffd093d1d94,20334482,0,0x0,8
tick,0x7ffd093d1d94,20350029,0,0x0,8
tick,0x7ffd093d1d94,20365084,0,0x0,8
tick,0x7ffd093d1d94,20380549,0,0x0,8
tick,0x7ffd093d1d94,20396157,0,0x0,8
tick,0x7ffd093d1d94,20411931,0,0x0,8
tick,0x7ffd093d1d94,20427451,0,0x0,8
tick,0x7ffd093d1d94,20443361,0,0x0,8
tick,0x7ffd093d1d94,20459555,0,0x0,8
tick,0x7ffd093d1d94,20475103,0,0x0,8
tick,0x7ffd093d1d94,20491438,0,0x0,8
tick,0x7ffd093d1d94,20507441,0,0x0,8
tick,0x7ffd093d1d94,20523159,0,0x0,8
tick,0x7ffd093d1d94,20538423,0,0x0,8
tick,0x7ffd093d1d94,20553503,0,0x0,8
tick,0x7ffd093d1d94,20568578,0,0x0,8
tick,0x7ffd093d1d94,20584502,0,0x0,8
tick,0x7ffd093d1d94,20599538,0,0x0,8
tick,0x7ffd093d1d94,20615452,0,0x0,8
tick,0x7ffd093d1d94,20631749,0,0x0,8
tick,0x7ffd093d1d94,20647417,0,0x0,8
tick,0x7ffd093d1d94,20663250,0,0x0,8
tick,0x7ffd093d1d94,20678999,0,0x0,8
tick,0x7ffd093d1d94,20694952,0,0x0,8
tick,0x7ffd093d1d94,20710998,0,0x0,8
tick,0x7ffd093d1d94,20726469,0,0x0,8
tick,0x7ffd093d1d94,20741659,0,0x0,8
tick,0x7ffd093d1d94,20757402,0,0x0,8
tick,0x7ffd093d1d94,20773741,0,0x0,8
tick,0x7ffd093d1d94,20789378,0,0x0,8
tick,0x7ffd093d1d94,20805305,0,0x0,8
tick,0x7ffd093d1d94,20820910,0,0x0,8
tick,0x7ffd093d1d94,20836800,0,0x0,8
tick,0x7ffd093d1d94,20852049,0,0x0,8
tick,0x7ffd093d1d94,20867039,0,0x0,8
tick,0x7ffd093d1d94,20883684,0,0x0,8
tick,0x7ffd093d1d94,20898533,0,0x0,8
tick,0x7ffd093d1d94,20914447,0,0x0,8
tick,0x7ffd093d1d94,20930347,0,0x0,8
tick,0x7ffd093d1d94,20945706,0,0x0,8
tick,0x7ffd093d1d94,20961331,0,0x0,8
tick,0x7ffd093d1d94,20977130,0,0x0,8
tick,0x7ffd093d1d94,20992391,0,0x0,8
tick,0x7ffd093d1d94,21007398,0,0x0,8
tick,0x7ffd093d1d94,21023098,0,0x0,8
tick,0x7ffd093d1d94,21037915,0,0x0,8
tick,0x7ffd093d1d94,21053304,0,0x0,8
tick,0x7ffd093d1d94,21068699,0,0x0,8
tick,0x7ffd093d1d94,21083822,0,0x0,8
tick,0x7ffd093d1d94,21099462,0,0x0,8
tick,0x7ffd093d1d94,21114992,0,0x0,8
tick,0x7ffd093d1d94,21130714,0,0x0,8
tick,0x7ffd093d1d94,21146062,0,0x0,8
tick,0x7ffd093d1d94,21161876,0,0x0,8
tick,0x7ffd093d1d94,21177205,0,0x0,8
tick,0x7ffd093d1d94,21192230,0,0x0,8
tick,0x7ffd093d1d94,21208330,0,0x0,8
tick,0x7ffd093d1d94,21223619,0,0x0,8
tick,0x7ffd093d1d94,21238857,0,0x0,8
tick,0x7ffd093d1d94,21254353,0,0x0,8
tick,0x7ffd093d1d94,21270411,0,0x0,8
tick,0x7ffd093d1d94,21285816,0,0x0,8
tick,0x7ffd093d1d94,21301805,0,0x0,8
tick,0x7ffd093d1d94,21317638,0,0x0,8
tick,0x7ffd093d1d94,21332997,0,0x0,8
tick,0x7ffd093d1d94,21348342,0,0x0,8
tick,0x7ffd093d1d94,21363667,0,0x0,8
tick,0x7ffd093d1d94,21379634,0,0x0,8
tick,0x7ffd093d1d94,21395434,0,0x0,8
tick,0x7ffd093d1d94,21411267,0,0x0,8
tick,0x7ffd093d1d94,21425933,0,0x0,8
tick,0x7ffd093d1d94,21441275,0,0x0,8
tick,0x7ffd093d1d94,21456470,0,0x0,8
tick,0x7ffd093d1d94,21472343,0,0x0,8
tick,0x7ffd093d1d94,21488401,0,0x0,8
tick,0x7ffd093d1d94,21504411,0,0x0,8
tick,0x7ffd093d1d94,21520065,0,0x0,8
tick,0x7ffd093d1d94,21535544,0,0x0,8
tick,0x7ffd093d1d94,21550841,0,0x0,8
tick,0x7ffd093d1d94,21566271,0,0x0,8
tick,0x7ffd093d1d94,21581890,0,0x0,8
tick,0x7ffd093d1d94,21597781,0,0x0,8
tick,0x7ffd093d1d94,21612546,0,0x0,8
tick,0x7ffd093d1d94,21628211,0,0x0,8
tick,0x7ffd093d1d94,21643419,0,0x0,8
tick,0x7ffd093d1d94,21659364,0,0x0,8
tick,0x7ffd093d1d94,21675379,0,0x0,8
tick,0x7ffd093d1d94,21690909,0,0x0,8
tick,0x7ffd093d1d94,21706297,0,0x0,8
tick,0x7ffd093d1d94,21722272,0,0x0,8
tick,0x7ffd093d1d94,21738103,0,0x0,8
tick,0x7ffd093d1d94,21752900,0,0x0,8
tick,0x7ffd093d1d94,21768948,0,0x0,8
tick,0x7ffd093d1d94,21785141,0,0x0,8
tick,0x7ffd093d1d94,21800806,0,0x0,8
tick,0x7ffd093d1d94,21815914,0,0x0,8
tick,0x7ffd093d1d94,21831983,0,0x0,8
tick,0x7ffd093d1d94,21847395,0,0x0,8
tick,0x7ffd093d1d94,21862904,0,0x0,8
tick,0x7ffd093d1d94,21878160,0,0x0,8
tick,0x7ffd093d1d94,21893880,0,0x0,8
tick,0x7ffd093d1d94,21908960,0,0x0,8
tick,0x7ffd093d1d94,21924818,0,0x0,8
tick,0x7ffd093d1d94,21939639,0,0x0,8
tick,0x7ffd093d1d94,21955348,0,0x0,8
tick,0x7ffd093d1d94,21970574,0,0x0,8
tick,0x7ffd093d1d94,21986322,0,0x0,8
tick,0x7ffd093d1d94,22002191,0,0x0,8
tick,0x7ffd093d1d94,22017784,0,0x0,8
tick,0x7ffd093d1d94,22033767,0,0x0,8
tick,0x7ffd093d1d94,22049613,0,0x0,8
tick,0x7ffd093d1d94,22065316,0,0x0,8
tick,0x7ffd093d1d94,22080494,0,0x0,8
tick,0x7ffd093d1d94,22095703,0,0x0,8
tick,0x7ffd093d1d94,22111691,0,0x0,8
tick,0x7ffd093d1d94,22127230,0,0x0,8
tick,0x7ffd093d1d94,22142048,0,0x0,8
tick,0x7ffd093d1d94,22157752,0,0x0,8
tick,0x7ffd093d1d94,22173131,0,0x0,8
tick,0x7ffd093d1d94,22188949,0,0x0,8
tick,0x7ffd093d1d94,22204565,0,0x0,8
tick,0x7ffd093d1d94,22220062,0,0x0,8
tick,0x7ffd093d1d94,22235820,0,0x0,8
tick,0x7ffd093d1d94,22250864,0,0x0,8
tick,0x7ffd093d1d94,22266121,0,0x0,8
tick,0x7ffd093d1d94,22282012,0,0x0,8
tick,0x7ffd093d1d94,22297425,0,0x0,8
tick,0x7ffd093d1d94,22312387,0,0x0,8
tick,0x7ffd093d1d94,22328841,0,0x0,8
tick,0x7ffd093d1d94,22344502,0,0x0,8
tick,0x7ffd093d1d94,22360161,0,0x0,8
tick,0x7ffd093d1d94,22375723,0,0x0,8
tick,0x7ffd093d1d94,22391343,0,0x0,8
tick,0x7ffd093d1d94,22406762,0,0x0,8
tick,0x7ffd093d1d94,22421933,0,0x0,8
tick,0x7ffd093d1d94,22436819,0,0x0,8
tick,0x7ffd093d1d94,22452961,0,0x0,8
tick,0x7ffd093d1d94,22468368,0,0x0,8
tick,0x7ffd093d1d94,22484075,0,0x0,8
tick,0x7ffd093d1d94,22499742,0,0x0,8
tick,0x7ffd093d1d94,22515213,0,0x0,8
tick,0x7ffd093d1d94,22530848,0,0x0,8
tick,0x7ffd093d1d94,22546379,0,0x0,8
tick,0x7ffd093d1d94,22562036,0,0x0,8
tick,0x7ffd093d1d94,22577907,0,0x0,8
tick,0x7ffd093d1d94,22592935,0,0x0,8
tick,0x7ffd093d1d94,22608845,0,0x0,8
tick,0x7ffd093d1d94,22624098,0,0x0,8
tick,0x7ffd093d1d94,22640021,0,0x0,8
tick,0x7ffd093d1d94,22655728,0,0x0,8
tick,0x7ffd093d1d94,22671300,0,0x0,8
tick,0x7ffd093d1d94,22687243,0,0x0,8
tick,0x7ffd093d1d94,22702779,0,0x0,8
tick,0x7ffd093d1d94,22718198,0,0x0,8
tick,0x7ffd093d1d94,22733284,0,0x0,8
tick,0x7ffd093d1d94,22749146,0,0x0,8
tick,0x7ffd093d1d94,22765117,0,0x0,8
tick,0x7ffd093d1d94,22780587,0,0x0,8
tick,0x7ffd093d1d94,22796445,0,0x0,8
tick,0x7ffd093d1d94,22812666,0,0x0,8
tick,0x7ffd093d1d94,22828178,0,0x0,8
tick,0x7ffd093d1d94,22843405,0,0x0,8
tick,0x7ffd093d1d94,22859453,0,0x0,8
tick,0x7ffd093d1d94,22875026,0,0x0,8
tick,0x7ffd093d1d94,22890655,0,0x0,8
tick,0x7ffd093d1d94,22905822,0,0x0,8
tick,0x7ffd093d1d94,22921902,0,0x0,8
tick,0x7ffd093d1d94,22937774,0,0x0,8
tick,0x7ffd093d1d94,22954281,0,0x0,8
tick,0x7ffd093d1d94,22969702,0,0x0,8
tick,0x7ffd093d1d94,22985045,0,0x0,8
tick,0x7ffd093d1d94,23001213,0,0x0,8
tick,0x7ffd093d1d94,23015755,0,0x0,8
tick,0x7ffd093d1d94,23031270,0,0x0,8
tick,0x7ffd093d1d94,23046598,0,0x0,8
tick,0x7ffd093d1d94,23062590,0,0x0,8
tick,0x7ffd093d1d94,23078388,0,0x0,8
tick,0x7ffd093d1d94,23093877,0,0x0,8
tick,0x7ffd093d1d94,23110221,0,0x0,8
tick,0x7ffd093d1d94,23126061,0,0x0,8
tick,0x7ffd093d1d94,23141086,0,0x0,8
tick,0x7ffd093d1d94,23156921,0,0x0,8
tick,0x7ffd093d1d94,23172882,0,0x0,8
tick,0x7ffd093d1d94,23188748,0,0x0,8
tick,0x7ffd093d1d94,23204819,0,0x0,8
tick,0x7ffd093d1d94,23220410,0,0x0,8
tick,0x7ffd093d1d94,23236197,0,0x0,8
tick,0x7ffd093d1d94,23252114,0,0x0,8
tick,0x7ffd093d1d94,23267970,0,0x0,8
tick,0x7ffd093d1d94,23283411,0,0x0,8
tick,0x7ffd093d1d94,23298875,0,0x0,8
tick,0x7ffd093d1d94,23314456,0,0x0,8
tick,0x7ffd093d1d94,23330151,0,0x0,8
tick,0x7ffd093d1d94,23346514,0,0x0,8
tick,0x7ffd093d1d94,23361988,0,0x0,8
tick,0x7ffd093d1d94,23377408,0,0x0,8
tick,0x7ffd093d1d94,23393528,0,0x0,8
tick,0x7ffd093d1d94,23408846,0,0x0,8
tick,0x7ffd093d1d94,23424006,0,0x0,8
tick,0x7ffd093d1d94,23439150,0,0x0,8
tick,0x7ffd093d1d94,23454927,0,0x0,8
tick,0x7ffd093d1d94,23470136,0,0x0,8
tick,0x7ffd093d1d94,23485834,0,0x0,8
tick,0x7ffd093d1d94,23500846,0,0x0,8
tick,0x7ffd093d1d94,23516167,0,0x0,8
tick,0x7ffd093d1d94,23531890,0,0x0,8
tick,0x7ffd093d1d94,23546947,0,0x0,8
tick,0x7ffd093d1d94,23561728,0,0x0,8
tick,0x7ffd093d1d94,23576964,0,0x0,8
tick,0x7ffd093d1d94,23592797,0,0x0,8
tick,0x7ffd093d1d94,23608311,0,0x0,8
tick,0x7ffd093d1d94,23623939,0,0x0,8
tick,0x7ffd093d1d94,23639150,0,0x0,8
tick,0x7ffd093d1d94,23654516,0,0x0,8
tick,0x7ffd093d1d94,23670079,0,0x0,8
tick,0x7ffd093d1d94,23685777,0,0x0,8
tick,0x7ffd093d1d94,23701557,0,0x0,8
tick,0x7ffd093d1d94,23718082,0,0x0,8
tick,0x7ffd093d1d94,23734080,0,0x0,8
tick,0x7ffd093d1d94,23749970,0,0x0,8
tick,0x7ffd093d1d94,23764993,0,0x0,8
tick,0x7ffd093d1d94,23779860,0,0x0,8
tick,0x7ffd093d1d94,23796291,0,0x0,8
tick,0x7ffd093d1d94,23811551,0,0x0,8
tick,0x7ffd093d1d94,23827398,0,0x0,8
tick,0x7ffd093d1d94,23843210,0,0x0,8
tick,0x7ffd093d1d94,23858544,0,0x0,8
tick,0x7ffd093d1d94,23873583,0,0x0,8
tick,0x7ffd093d1d94,23888965,0,0x0,8
tick,0x7ffd093d1d94,23904661,0,0x0,8
tick,0x7ffd093d1d94,23920302,0,0x0,8
tick,0x7ffd093d1d94,23936116,0,0x0,8
tick,0x7ffd093d1d94,23952076,0,0x0,8
tick,0x7ffd093d1d94,23967566,0,0x0,8
tick,0x7ffd093d1d94,23983522,0,0x0,8
tick,0x7ffd093d1d94,23998903,0,0x0,8
tick,0x7ffd093d1d94,24014450,0,0x0,8
tick,0x7ffd093d1d94,24030239,0,0x0,8
tick,0x7ffd093d1d94,24044818,0,0x0,8
tick,0x7ffd093d1d94,24060681,0,0x0,8
tick,0x7ffd093d1d94,24076570,0,0x0,8
tick,0x7ffd093d1d94,24091846,0,0x0,8
tick,0x7ffd093d1d94,24106858,0,0x0,8
tick,0x7ffd093d1d94,24122830,0,0x0,8
tick,0x7ffd093d1d94,24138224,0,0x0,8
tick,0x7ffd093d1d94,24153276,0,0x0,8
tick,0x7ffd093d1d94,24169226,0,0x0,8
tick,0x7ffd093d1d94,24184834,0,0x0,8
tick,0x7ffd093d1d94,24200574,0,0x0,8
tick,0x7ffd093d1d94,24215657,0,0x0,8
tick,0x7ffd093d1d94,24231653,0,0x0,8
tick,0x7ffd093d1d94,24247185,0,0x0,8
tick,0x7ffd093d1d94,24263195,0,0x0,8
tick,0x7ffd093d1d94,24279265,0,0x0,8
tick,0x7ffd093d1d94,24295203,0,0x0,8
tick,0x7ffd093d1d94,24311674,0,0x0,8
tick,0x7ffd093d1d94,24327349,0,0x0,8
tick,0x7ffd093d1d94,24342190,0,0x0,8
tick,0x7ffd093d1d94,24357705,0,0x0,8
tick,0x7ffd093d1d94,24374100,0,0x0,8
tick,0x7ffd093d1d94,24389729,0,0x0,8
tick,0x7ffd093d1d94,24405716,0,0x0,8
tick,0x7ffd093d1d94,24421707,0,0x0,8
tick,0x7ffd093d1d94,24438793,0,0x0,8
tick,0x7ffd093d1d94,24453410,0,0x0,8
tick,0x7ffd093d1d94,24469283,0,0x0,8
tick,0x7ffd093d1d94,24484512,0,0x0,8
tick,0x7ffd093d1d94,24500202,0,0x0,8
tick,0x7ffd093d1d94,24516078,0,0x0,8
tick,0x7ffd093d1d94,24531942,0,0x0,8
tick,0x7ffd093d1d94,24547520,0,0x0,8
tick,0x7ffd093d1d94,24563591,0,0x0,8
tick,0x7ffd093d1d94,24579304,0,0x0,8
tick,0x7ffd093d1d94,24594909,0,0x0,8
tick,0x7ffd093d1d94,24610493,0,0x0,8
tick,0x7ffd093d1d94,24625399,0,0x0,8
tick,0x7ffd093d1d94,24641015,0,0x0,8
tick,0x7ffd093d1d94,24656512,0,0x0,8
tick,0x7ffd093d1d94,24672319,0,0x0,8
tick,0x7ffd093d1d94,24688332,0,0x0,8
tick,0x7ffd093d1d94,24704193,0,0x0,8
tick,0x7ffd093d1d94,24719876,0,0x0,8
tick,0x7ffd093d1d94,24735977,0,0x0,8
tick,0x7ffd093d1d94,24751227,0,0x0,8
tick,0x7ffd093d1d94,24766604,0,0x0,8
tick,0x7ffd093d1d94,24782141,0,0x0,8
tick,0x7ffd093d1d94,24797797,0,0x0,8
tick,0x7ffd093d1d94,24813433,0,0x0,8
tick,0x7ffd093d1d94,24828767,0,0x0,8
tick,0x7ffd093d1d94,24845200,0,0x0,8
tick,0x7ffd093d1d94,24860662,0,0x0,8
tick,0x7ffd093d1d94,24876258,0,0x0,8
tick,0x7ffd093d1d94,24891601,0,0x0,8
tick,0x7ffd093d1d94,24906965,0,0x0,8
tick,0x7ffd093d1d94,24922638,0,0x0,8
tick,0x7ffd093d1d94,24938045,0,0x0,8
tick,0x7ffd093d1d94,24952763,0,0x0,8
tick,0x7ffd093d1d94,24968098,0,0x0,8
tick,0x7ffd093d1d94,24983963,0,0x0,8
tick,0x7ffd093d1d94,24999009,0,0x0,8
tick,0x7ffd093d1d94,25014479,0,0x0,8
tick,0x7ffd093d1d94,25029626,0,0x0,8
tick,0x7ffd093d1d94,25045792,0,0x0,8
tick,0x7ffd093d1d94,25061620,0,0x0,8
tick,0x7ffd093d1d94,25078167,0,0x0,8
tick,0x7ffd093d1d94,25093142,0,0x0,8
tick,0x7ffd093d1d94,25108544,0,0x0,8
tick,0x7ffd093d1d94,25124024,0,0x0,8
tick,0x7ffd093d1d94,25138700,0,0x0,8
tick,0x7ffd093d1d94,25154061,0,0x0,8
tick,0x7ffd093d1d94,25169458,0,0x0,8
tick,0x7ffd093d1d94,25184682,0,0x0,8
tick,0x7ffd093d1d94,25200799,0,0x0,8
tick,0x7ffd093d1d94,25216080,0,0x0,8
tick,0x7ffd093d1d94,25231773,0,0x0,8
tick,0x7ffd093d1d94,25247626,0,0x0,8
tick,0x7ffd093d1d94,25263358,0,0x0,8
tick,0x7ffd093d1d94,25278443,0,0x0,8
tick,0x7ffd093d1d94,25294138,0,0x0,8
tick,0x7ffd093d1d94,25309213,0,0x0,8
tick,0x7ffd093d1d94,25325119,0,0x0,8
tick,0x7ffd093d1d94,25340791,0,0x0,8
tick,0x7ffd093d1d94,25356731,0,0x0,8
tick,0x7ffd093d1d94,25372324,0,0x0,8
tick,0x7ffd093d1d94,25387792,0,0x0,8
tick,0x7ffd093d1d94,25402905,0,0x0,8
tick,0x7ffd093d1d94,25418936,0,0x0,8
tick,0x7ffd093d1d94,25434967,0,0x0,8
tick,0x7ffd093d1d94,25450414,0,0x0,8
tick,0x7ffd093d1d94,25466453,0,0x0,8
tick,0x7ffd093d1d94,25482493,0,0x0,8
tick,0x7ffd093d1d94,25498401,0,0x0,8
tick,0x7ffd093d1d94,25514432,0,0x0,8
tick,0x7ffd093d1d94,25529982,0,0x0,8
tick,0x7ffd093d1d94,25545605,0,0x0,8
tick,0x7ffd093d1d94,25561028,0,0x0,8
tick,0x7ffd093d1d94,25576190,0,0x0,8
tick,0x7ffd093d1d94,25591923,0,0x0,8
tick,0x7ffd093d1d94,25607625,0,0x0,8
tick,0x7ffd093d1d94,25623516,0,0x0,8
tick,0x7ffd093d1d94,25639297,0,0x0,8
tick,0x7ffd093d1d94,25655169,0,0x0,8
tick,0x7ffd093d1d94,25670246,0,0x0,8
tick,0x7ffd093d1d94,25685796,0,0x0,8
tick,0x7ffd093d1d94,25701083,0,0x0,8
tick,0x7ffd093d1d94,25717296,0,0x0,8
tick,0x7ffd093d1d94,25733240,0,0x0,8
tick,0x7ffd093d1d94,25748676,0,0x0,8
tick,0x7ffd093d1d94,25764334,0,0x0,8
tick,0x7ffd093d1d94,25780234,0,0x0,8
tick,0x7ffd093d1d94,25796277,0,0x0,8
tick,0x7ffd093d1d94,25811937,0,0x0,8
tick,0x7ffd093d1d94,25827465,0,0x0,8
tick,0x7ffd093d1d94,25843023,0,0x0,8
tick,0x7ffd093d1d94,25858822,0,0x0,8
tick,0x7ffd093d1d94,25874634,0,0x0,8
tick,0x7ffd093d1d94,25890000,0,0x0,8
tick,0x7ffd093d1d94,25905737,0,0x0,8
tick,0x7ffd093d1d94,25921665,0,0x0,8
tick,0x7ffd093d1d94,25937470,0,0x0,8
tick,0x7ffd093d1d94,25953647,0,0x0,8
tick,0x7ffd093d1d94,25969299,0,0x0,8
tick,0x7ffd093d1d94,25985334,0,0x0,8
tick,0x7ffd093d1d94,26000718,0,0x0,8
tick,0x7ffd093d1d94,26015841,0,0x0,8
tick,0x7ffd093d1d94,26031427,0,0x0,8
tick,0x7ffd093d1d94,26048039,0,0x0,8
tick,0x7ffd093d1d94,26063687,0,0x0,8
tick,0x7ffd093d1d94,26079542,0,0x0,8
tick,0x7ffd093d1d94,26095169,0,0x0,8
tick,0x7ffd093d1d94,26110815,0,0x0,8
tick,0x7ffd093d1d94,26126132,0,0x0,8
tick,0x7ffd093d1d94,26141751,0,0x0,8
tick,0x7ffd093d1d94,26157291,0,0x0,8
tick,0x7ffd093d1d94,26172744,0,0x0,8
tick,0x7ffd093d1d94,26188933,0,0x0,8
tick,0x7ffd093d1d94,26204959,0,0x0,8
tick,0x7ffd093d1d94,26219764,0,0x0,8
tick,0x7ffd093d1d94,26235302,0,0x0,8
tick,0x7ffd093d1d94,26250656,0,0x0,8
tick,0x7ffd093d1d94,26266156,0,0x0,8
tick,0x7ffd093d1d94,26281582,0,0x0,8
tick,0x7ffd093d1d94,26297007,0,0x0,8
tick,0x7ffd093d1d94,26312221,0,0x0,8
tick,0x7ffd093d1d94,26327692,0,0x0,8
tick,0x7ffd093d1d94,26343016,0,0x0,8
tick,0x7ffd093d1d94,26358773,0,0x0,8
tick,0x7ffd093d1d94,26374661,0,0x0,8
tick,0x7ffd093d1d94,26390346,0,0x0,8
tick,0x7ffd093d1d94,26405550,0,0x0,8
tick,0x7ffd093d1d94,26420701,0,0x0,8
tick,0x7ffd093d1d94,26436059,0,0x0,8
tick,0x7ffd093d1d94,26451499,0,0x0,8
tick,0x7ffd093d1d94,26466884,0,0x0,8
tick,0x7ffd093d1d94,26482554,0,0x0,8
tick,0x7ffd093d1d94,26498015,0,0x0,8
tick,0x7ffd093d1d94,26513419,0,0x0,8
tick,0x7ffd093d1d94,26529169,0,0x0,8
tick,0x7ffd093d1d94,26545111,0,0x0,8
tick,0x7ffd093d1d94,26560482,0,0x0,8
tick,0x7ffd093d1d94,26576308,0,0x0,8
tick,0x7ffd093d1d94,26591512,0,0x0,8
tick,0x7ffd093d1d94,26607503,0,0x0,8
tick,0x7ffd093d1d94,26623313,0,0x0,8
tick,0x7ffd093d1d94,26638673,0,0x0,8
tick,0x7ffd093d1d94,26654255,0,0x0,8
tick,0x7ffd093d1d94,26669447,0,0x0,8
tick,0x7ffd093d1d94,26685473,0,0x0,8
tick,0x7ffd093d1d94,26700875,0,0x0,8
tick,0x7ffd093d1d94,26715970,0,0x0,8
tick,0x7ffd093d1d94,26731035,0,0x0,8
tick,0x7ffd093d1d94,26746651,0,0x0,8
tick,0x7ffd093d1d94,26762114,0,0x0,8
tick,0x7ffd093d1d94,26777348,0,0x0,8
tick,0x7ffd093d1d94,26793027,0,0x0,8
tick,0x7ffd093d1d94,26808750,0,0x0,8
tick,0x7ffd093d1d94,26823915,0,0x0,8
tick,0x7ffd093d1d94,26839863,0,0x0,8
tick,0x7ffd093d1d94,26855561,0,0x0,8
tick,0x7ffd093d1d94,26871557,0,0x0,8
tick,0x7ffd093d1d94,26887680,0,0x0,8
tick,0x7ffd093d1d94,26903717,0,0x0,8
tick,0x7ffd093d1d94,26919304,0,0x0,8
tick,0x7ffd093d1d94,26935210,0,0x0,8
tick,0x7ffd093d1d94,26950890,0,0x0,8
tick,0x7ffd093d1d94,26965926,0,0x0,8
tick,0x7ffd093d1d94,26981507,0,0x0,8
tick,0x7ffd093d1d94,26997771,0,0x0,8
tick,0x7ffd093d1d94,27013806,0,0x0,8
tick,0x7ffd093d1d94,27029818,0,0x0,8
tick,0x7ffd093d1d94,27045881,0,0x0,8
tick,0x7ffd093d1d94,27060503,0,0x0,8
tick,0x7ffd093d1d94,27075945,0,0x0,8
tick,0x7ffd093d1d94,27091265,0,0x0,8
tick,0x7ffd093d1d94,27107675,0,0x0,8
tick,0x7ffd093d1d94,27123119,0,0x0,8
tick,0x7ffd093d1d94,27139103,0,0x0,8
tick,0x7ffd093d1d94,27154330,0,0x0,8
tick,0x7ffd093d1d94,27170190,0,0x0,8
tick,0x7ffd093d1d94,27185582,0,0x0,8
tick,0x7ffd093d1d94,27200572,0,0x0,8
tick,0x7ffd093d1d94,27216637,0,0x0,8
tick,0x7ffd093d1d94,27231451,0,0x0,8
tick,0x7ffd093d1d94,27247368,0,0x0,8
tick,0x7ffd093d1d94,27262151,0,0x0,8
tick,0x7ffd093d1d94,27278086,0,0x0,8
tick,0x7ffd093d1d94,27294064,0,0x0,8
tick,0x7ffd093d1d94,27309268,0,0x0,8
tick,0x7ffd093d1d94,27324317,0,0x0,8
tick,0x7ffd093d1d94,27339440,0,0x0,8
tick,0x7ffd093d1d94,27355486,0,0x0,8
tick,0x7ffd093d1d94,27371457,0,0x0,8
tick,0x7ffd093d1d94,27386253,0,0x0,8
tick,0x7ffd093d1d94,27401342,0,0x0,8
tick,0x7ffd093d1d94,27416949,0,0x0,8
tick,0x7ffd093d1d94,27432092,0,0x0,8
tick,0x7ffd093d1d94,27447536,0,0x0,8
tick,0x7ffd093d1d94,27463449,0,0x0,8
tick,0x7ffd093d1d94,27479291,0,0x0,8
tick,0x7ffd093d1d94,27494888,0,0x0,8
tick,0x7ffd093d1d94,27510542,0,0x0,8
tick,0x7ffd093d1d94,27526204,0,0x0,8
tick,0x7ffd093d1d94,27541475,0,0x0,8
tick,0x7ffd093d1d94,27557420,0,0x0,8
tick,0x7ffd093d1d94,27572839,0,0x0,8
tick,0x7ffd093d1d94,27588577,0,0x0,8
tick,0x7ffd093d1d94,27604044,0,0x0,8
tick,0x7ffd093d1d94,27620548,0,0x0,8
tick,0x7ffd093d1d94,27636623,0,0x0,8
tick,0x7ffd093d1d94,27652329,0,0x0,8
tick,0x7ffd093d1d94,27667754,0,0x0,8
tick,0x7ffd093d1d94,27683187,0,0x0,8
tick,0x7ffd093d1d94,27699046,0,0x0,8
tick,0x7ffd093d1d94,27714328,0,0x0,8
tick,0x7ffd093d1d94,27729723,0,0x0,8
tick,0x7ffd093d1d94,27745257,0,0x0,8
tick,0x7ffd093d1d94,27760378,0,0x0,8
tick,0x7ffd093d1d94,27775845,0,0x0,8
tick,0x7ffd093d1d94,27791731,0,0x0,8
tick,0x7ffd093d1d94,27807141,0,0x0,8
tick,0x7ffd093d1d94,27822750,0,0x0,8
tick,0x7ffd093d1d94,27838419,0,0x0,8
tick,0x7ffd093d1d94,27854137,0,0x0,8
tick,0x7ffd093d1d94,27869373,0,0x0,8
tick,0x7ffd093d1d94,27884152,0,0x0,8
tick,0x7ffd093d1d94,27900225,0,0x0,8
tick,0x7ffd093d1d94,27916545,0,0x0,8
tick,0x7ffd093d1d94,27932254,0,0x0,8
tick,0x7ffd093d1d94,27947779,0,0x0,8
tick,0x7ffd093d1d94,27962864,0,0x0,8
tick,0x7ffd093d1d94,27978522,0,0x0,8
tick,0x7ffd093d1d94,27994649,0,0x0,8
tick,0x7ffd093d1d94,28009855,0,0x0,8
tick,0x7ffd093d1d94,28025617,0,0x0,8
tick,0x7ffd093d1d94,28040569,0,0x0,8
tick,0x7ffd093d1d94,28056161,0,0x0,8
tick,0x7ffd093d1d94,28072119,0,0x0,8
tick,0x7ffd093d1d94,28088070,0,0x0,8
tick,0x7ffd093d1d94,28104159,0,0x0,8
tick,0x7ffd093d1d94,28119058,0,0x0,8
tick,0x7ffd093d1d94,28134016,0,0x0,8
tick,0x7ffd093d1d94,28150319,0,0x0,8
tick,0x7ffd093d1d94,28165714,0,0x0,8
tick,0x7ffd093d1d94,28181721,0,0x0,8
tick,0x7ffd093d1d94,28197664,0,0x0,8
tick,0x7ffd093d1d94,28213698,0,0x0,8
tick,0x7ffd093d1d94,28229689,0,0x0,8
tick,0x7ffd093d1d94,28245142,0,0x0,8
tick,0x7ffd093d1d94,28260943,0,0x0,8
tick,0x7ffd093d1d94,28276961,0,0x0,8
tick,0x7ffd093d1d94,28292723,0,0x0,8
tick,0x7ffd093d1d94,28307895,0,0x0,8
tick,0x7ffd093d1d94,28323519,0,0x0,8
tick,0x7ffd093d1d94,28339139,0,0x0,8
tick,0x7ffd093d1d94,28354409,0,0x0,8
tick,0x7ffd093d1d94,28370048,0,0x0,8
tick,0x7ffd093d1d94,28385947,0,0x0,8
tick,0x7ffd093d1d94,28401731,0,0x0,8
tick,0x7ffd093d1d94,28417260,0,0x0,8
tick,0x7ffd093d1d94,28433081,0,0x0,8
tick,0x7ffd093d1d94,28448561,0,0x0,8
tick,0x7ffd093d1d94,28464090,0,0x0,8
tick,0x7ffd093d1d94,28479400,0,0x0,8
tick,0x7ffd093d1d94,28495571,0,0x0,8
tick,0x7ffd093d1d94,28511059,0,0x0,8
tick,0x7ffd093d1d94,28526974,0,0x0,8
tick,0x7ffd093d1d94,28542949,0,0x0,8
tick,0x7ffd093d1d94,28558580,0,0x0,8
tick,0x7ffd093d1d94,28574118,0,0x0,8
tick,0x7ffd093d1d94,28588942,0,0x0,8
tick,0x7ffd093d1d94,28604426,0,0x0,8
tick,0x7ffd093d1d94,28619181,0,0x0,8
tick,0x7ffd093d1d94,28635062,0,0x0,8
tick,0x7ffd093d1d94,28651000,0,0x0,8
tick,0x7ffd093d1d94,28666408,0,0x0,8
tick,0x7ffd093d1d94,28681782,0,0x0,8
tick,0x7ffd093d1d94,28697735,0,0x0,8
tick,0x7ffd093d1d94,28713306,0,0x0,8
tick,0x7ffd093d1d94,28728764,0,0x0,8
tick,0x7ffd093d1d94,28744605,0,0x0,8
tick,0x7ffd093d1d94,28759786,0,0x0,8
tick,0x7ffd093d1d94,28775491,0,0x0,8
tick,0x7ffd093d1d94,28791042,0,0x0,8
tick,0x7ffd093d1d94,28806720,0,0x0,8
tick,0x7ffd093d1d94,28822429,0,0x0,8
tick,0x7ffd093d1d94,28838250,0,0x0,8
tick,0x7ffd093d1d94,28853873,0,0x0,8
tick,0x7ffd093d1d94,28869164,0,0x0,8
tick,0x7ffd093d1d94,28884136,0,0x0,8
tick,0x7ffd093d1d94,28899331,0,0x0,8
tick,0x7ffd093d1d94,28915091,0,0x0,8
tick,0x7ffd093d1d94,28931284,0,0x0,8
tick,0x7ffd093d1d94,28946915,0,0x0,8
tick,0x7ffd093d1d94,28962322,0,0x0,8
tick,0x7ffd093d1d94,28977407,0,0x0,8
tick,0x7ffd093d1d94,28993229,0,0x0,8
tick,0x7ffd093d1d94,29008463,0,0x0,8
tick,0x7ffd093d1d94,29024286,0,0x0,8
tick,0x7ffd093d1d94,29039262,0,0x0,8
tick,0x7ffd093d1d94,29054370,0,0x0,8
tick,0x7ffd093d1d94,29070277,0,0x0,8
tick,0x7ffd093d1d94,29086232,0,0x0,8
tick,0x7ffd093d1d94,29102363,0,0x0,8
tick,0x7ffd093d1d94,29118498,0,0x0,8
tick,0x7ffd093d1d94,29134894,0,0x0,8
tick,0x7ffd093d1d94,29150990,0,0x0,8
tick,0x7ffd093d1d94,29166285,0,0x0,8
tick,0x7ffd093d1d94,29181935,0,0x0,8
tick,0x7ffd093d1d94,29197837,0,0x0,8
tick,0x7ffd093d1d94,29213839,0,0x0,8
tick,0x7ffd093d1d94,29229109,0,0x0,8
tick,0x7ffd093d1d94,29244849,0,0x0,8
tick,0x7ffd093d1d94,29260273,0,0x0,8
tick,0x7ffd093d1d94,29274960,0,0x0,8
tick,0x7ffd093d1d94,29290653,0,0x0,8
tick,0x7ffd093d1d94,29306391,0,0x0,8
tick,0x7ffd093d1d94,29322269,0,0x0,8
tick,0x7ffd093d1d94,29337760,0,0x0,8
tick,0x7ffd093d1d94,29353110,0,0x0,8
tick,0x7ffd093d1d94,29367984,0,0x0,8
tick,0x7ffd093d1d94,29384165,0,0x0,8
tick,0x7ffd093d1d94,29399945,0,0x0,8
tick,0x7ffd093d1d94,29415577,0,0x0,8
tick,0x7ffd093d1d94,29430778,0,0x0,8
tick,0x7ffd093d1d94,29445957,0,0x0,8
tick,0x7ffd093d1d94,29461921,0,0x0,8
tick,0x7ffd093d1d94,29477714,0,0x0,8
tick,0x7ffd093d1d94,29493307,0,0x0,8
tick,0x7ffd093d1d94,29508174,0,0x0,8
tick,0x7ffd093d1d94,29523178,0,0x0,8
tick,0x7ffd093d1d94,29538721,0,0x0,8
tick,0x7ffd093d1d94,29554384,0,0x0,8
tick,0x7ffd093d1d94,29570481,0,0x0,8
tick,0x7ffd093d1d94,29585959,0,0x0,8
tick,0x7ffd093d1d94,29600865,0,0x0,8
tick,0x7ffd093d1d94,29615905,0,0x0,8
tick,0x7ffd093d1d94,29631436,0,0x0,8
tick,0x7ffd093d1d94,29646851,0,0x0,8
tick,0x7ffd093d1d94,29662687,0,0x0,8
tick,0x7ffd093d1d94,29678636,0,0x0,8
tick,0x7ffd093d1d94,29694301,0,0x0,8
tick,0x7ffd093d1d94,29709439,0,0x0,8
tick,0x7ffd093d1d94,29725504,0,0x0,8
tick,0x7ffd093d1d94,29741534,0,0x0,8
tick,0x7ffd093d1d94,29757073,0,0x0,8
tick,0x7ffd093d1d94,29772225,0,0x0,8
tick,0x7ffd093d1d94,29788032,0,0x0,8
tick,0x7ffd093d1d94,29803429,0,0x0,8
tick,0x7ffd093d1d94,29818467,0,0x0,8
tick,0x7ffd093d1d94,29834769,0,0x0,8
tick,0x7ffd093d1d94,29850733,0,0x0,8
tick,0x7ffd093d1d94,29867117,0,0x0,8
tick,0x7ffd093d1d94,29882131,0,0x0,8
tick,0x7ffd093d1d94,29897326,0,0x0,8
tick,0x7ffd093d1d94,29913231,0,0x0,8
tick,0x7ffd093d1d94,29928619,0,0x0,8
tick,0x7ffd093d1d94,29943768,0,0x0,8
tick,0x7ffd093d1d94,29960319,0,0x0,8
tick,0x7ffd093d1d94,29975755,0,0x0,8
tick,0x7ffd093d1d94,29990579,0,0x0,8
tick,0x7ffd093d1d94,30006317,0,0x0,8
tick,0x7ffd093d1d94,30021882,0,0x0,8
tick,0x7ffd093d1d94,30037457,0,0x0,8
tick,0x7ffd093d1d94,30053308,0,0x0,8
tick,0x7ffd093d1d94,30068653,0,0x0,8
tick,0x7ffd093d1d94,30083821,0,0x0,8
tick,0x7ffd093d1d94,30098788,0,0x0,8
tick,0x7ffd093d1d94,30114051,0,0x0,8
tick,0x7ffd093d1d94,30129268,0,0x0,8
tick,0x7ffd093d1d94,30144682,0,0x0,8
tick,0x7ffd093d1d94,30160375,0,0x0,8
tick,0x7ffd093d1d94,30174979,0,0x0,8
tick,0x7ffd093d1d94,30191156,0,0x0,8
tick,0x7ffd093d1d94,30206640,0,0x0,8
tick,0x7ffd093d1d94,30221614,0,0x0,8
tick,0x7ffd093d1d94,30237276,0,0x0,8
tick,0x7ffd093d1d94,30253406,0,0x0,8
tick,0x7ffd093d1d94,30268176,0,0x0,8
tick,0x7ffd093d1d94,30283527,0,0x0,8
tick,0x7ffd093d1d94,30299481,0,0x0,8
tick,0x7ffd093d1d94,30315403,0,0x0,8
tick,0x7ffd093d1d94,30330485,0,0x0,8
tick,0x7ffd093d1d94,30345894,0,0x0,8
tick,0x7ffd093d1d94,30362013,0,0x0,8
tick,0x7ffd093d1d94,30377278,0,0x0,8
tick,0x7ffd093d1d94,30393420,0,0x0,8
tick,0x7ffd093d1d94,30409614,0,0x0,8
tick,0x7ffd093d1d94,30425070,0,0x0,8
tick,0x7ffd093d1d94,30440796,0,0x0,8
tick,0x7ffd093d1d94,30456786,0,0x0,8
tick,0x7ffd093d1d94,30472385,0,0x0,8
tick,0x7ffd093d1d94,30488008,0,0x0,8
tick,0x7ffd093d1d94,30503573,0,0x0,8
tick,0x7ffd093d1d94,30519261,0,0x0,8
tick,0x7ffd093d1d94,30534992,0,0x0,8
tick,0x7ffd093d1d94,30550617,0,0x0,8
tick,0x7ffd093d1d94,30566014,0,0x0,8
tick,0x7ffd093d1d94,30580816,0,0x0,8
tick,0x7ffd093d1d94,30596385,0,0x0,8
tick,0x7ffd093d1d94,30611601,0,0x0,8
tick,0x7ffd093d1d94,30627619,0,0x0,8
tick,0x7ffd093d1d94,30642201,0,0x0,8
tick,0x7ffd093d1d94,30657323,0,0x0,8
tick,0x7ffd093d1d94,30673399,0,0x0,8
tick,0x7ffd093d1d94,30689160,0,0x0,8
tick,0x7ffd093d1d94,30705432,0,0x0,8
tick,0x7ffd093d1d94,30720547,0,0x0,8
tick,0x7ffd093d1d94,30735297,0,0x0,8
tick,0x7ffd093d1d94,30750505,0,0x0,8
tick,0x7ffd093d1d94,30766007,0,0x0,8
tick,0x7ffd093d1d94,30782057,0,0x0,8
tick,0x7ffd093d1d94,30796793,0,0x0,8
tick,0x7ffd093d1d94,30811519,0,0x0,8
tick,0x7ffd093d1d94,30827065,0,0x0,8
tick,0x7ffd093d1d94,30842820,0,0x0,8
tick,0x7ffd093d1d94,30857600,0,0x0,8
tick,0x7ffd093d1d94,30872869,0,0x0,8
tick,0x7ffd093d1d94,30888277,0,0x0,8
tick,0x7ffd093d1d94,30904460,0,0x0,8
tick,0x7ffd093d1d94,30920616,0,0x0,8
tick,0x7ffd093d1d94,30935542,0,0x0,8
tick,0x7ffd093d1d94,30951567,0,0x0,8
tick,0x7ffd093d1d94,30967300,0,0x0,8
tick,0x7ffd093d1d94,30982655,0,0x0,8
tick,0x7ffd093d1d94,30997654,0,0x0,8
tick,0x7ffd093d1d94,31012957,0,0x0,8
tick,0x7ffd093d1d94,31028873,0,0x0,8
tick,0x7ffd093d1d94,31044801,0,0x0,8
tick,0x7ffd093d1d94,31060572,0,0x0,8
tick,0x7ffd093d1d94,31076414,0,0x0,8
tick,0x7ffd093d1d94,31092503,0,0x0,8
tick,0x7ffd093d1d94,31107897,0,0x0,8
tick,0x7ffd093d1d94,31123348,0,0x0,8
tick,0x7ffd093d1d94,31138931,0,0x0,8
tick,0x7ffd093d1d94,31154504,0,0x0,8
tick,0x7ffd093d1d94,31170041,0,0x0,8
tick,0x7ffd093d1d94,31185036,0,0x0,8
tick,0x7ffd093d1d94,31200287,0,0x0,8
tick,0x7ffd093d1d94,31216470,0,0x0,8
tick,0x7ffd093d1d94,31232108,0,0x0,8
tick,0x7ffd093d1d94,31248078,0,0x0,8
tick,0x7ffd093d1d94,31263619,0,0x0,8
tick,0x7ffd093d1d94,31279103,0,0x0,8
tick,0x7ffd093d1d94,31294870,0,0x0,8
tick,0x7ffd093d1d94,31310117,0,0x0,8
tick,0x7ffd093d1d94,31326179,0,0x0,8
tick,0x7ffd093d1d94,31341509,0,0x0,8
tick,0x7ffd093d1d94,31356980,0,0x0,8
tick,0x7ffd093d1d94,31373058,0,0x0,8
tick,0x7ffd093d1d94,31389453,0,0x0,8
tick,0x7ffd093d1d94,31404807,0,0x0,8
tick,0x7ffd093d1d94,31420521,0,0x0,8
tick,0x7ffd093d1d94,31436244,0,0x0,8
tick,0x7ffd093d1d94,31452333,0,0x0,8
tick,0x7ffd093d1d94,31467600,0,0x0,8
tick,0x7ffd093d1d94,31483056,0,0x0,8
tick,0x7ffd093d1d94,31498137,0,0x0,8
tick,0x7ffd093d1d94,31513861,0,0x0,8
tick,0x7ffd093d1d94,31529454,0,0x0,8
tick,0x7ffd093d1d94,31544878,0,0x0,8
tick,0x7ffd093d1d94,31560108,0,0x0,8
tick,0x7ffd093d1d94,31575679,0,0x0,8
tick,0x7ffd093d1d94,31591388,0,0x0,8
tick,0x7ffd093d1d94,31606842,0,0x0,8
tick,0x7ffd093d1d94,31622338,0,0x0,8
tick,0x7ffd093d1d94,31637773,0,0x0,8
tick,0x7ffd093d1d94,31653656,0,0x0,8
tick,0x7ffd093d1d94,31668828,0,0x0,8
tick,0x7ffd093d1d94,31684389,0,0x0,8
tick,0x7ffd093d1d94,31699802,0,0x0,8
tick,0x7ffd093d1d94,31715741,0,0x0,8
tick,0x7ffd093d1d94,31731821,0,0x0,8
tick,0x7ffd093d1d94,31747465,0,0x0,8
tick,0x7ffd093d1d94,31762851,0,0x0,8
tick,0x7ffd093d1d94,31777945,0,0x0,8
tick,0x7ffd093d1d94,31793091,0,0x0,8
tick,0x7ffd093d1d94,31808580,0,0x0,8
tick,0x7ffd093d1d94,31824071,0,0x0,8
tick,0x7ffd093d1d94,31839276,0,0x0,8
tick,0x7ffd093d1d94,31854760,0,0x0,8
tick,0x7ffd093d1d94,31869826,0,0x0,8
tick,0x7ffd093d1d94,31885992,0,0x0,8
tick,0x7ffd093d1d94,31901593,0,0x0,8
tick,0x7ffd093d1d94,31916469,0,0x0,8
tick,0x7ffd093d1d94,31932195,0,0x0,8
tick,0x7ffd093d1d94,31947975,0,0x0,8
tick,0x7ffd093d1d94,31963197,0,0x0,8
tick,0x7ffd093d1d94,31978942,0,0x0,8
tick,0x7ffd093d1d94,31994340,0,0x0,8
tick,0x7ffd093d1d94,32010868,0,0x0,8
tick,0x7ffd093d1d94,32025900,0,0x0,8
tick,0x7ffd093d1d94,32040838,0,0x0,8
tick,0x7ffd093d1d94,32056350,0,0x0,8
tick,0x7ffd093d1d94,32072300,0,0x0,8
tick,0x7ffd093d1d94,32087754,0,0x0,8
tick,0x7ffd093d1d94,32103206,0,0x0,8
tick,0x7ffd093d1d94,32118707,0,0x0,8
tick,0x7ffd093d1d94,32133757,0,0x0,8
tick,0x7ffd093d1d94,32149154,0,0x0,8
tick,0x7ffd093d1d94,32164543,0,0x0,8
tick,0x7ffd093d1d94,32180058,0,0x0,8
tick,0x7ffd093d1d94,32195190,0,0x0,8
tick,0x7ffd093d1d94,32210491,0,0x0,8
tick,0x7ffd093d1d94,32226132,0,0x0,8
tick,0x7ffd093d1d94,32242059,0,0x0,8
tick,0x7ffd093d1d94,32257677,0,0x0,8
tick,0x7ffd093d1d94,32273264,0,0x0,8
tick,0x7ffd093d1d94,32288557,0,0x0,8
tick,0x7ffd093d1d94,32303505,0,0x0,8
tick,0x7ffd093d1d94,32318717,0,0x0,8
tick,0x7ffd093d1d94,32334114,0,0x0,8
tick,0x7ffd093d1d94,32349204,0,0x0,8
tick,0x7ffd093d1d94,32365282,0,0x0,8
tick,0x7ffd093d1d94,32381155,0,0x0,8
tick,0x7ffd093d1d94,32397031,0,0x0,8
tick,0x7ffd093d1d94,32412637,0,0x0,8
tick,0x7ffd093d1d94,32428297,0,0x0,8
tick,0x7ffd093d1d94,32443992,0,0x0,8
tick,0x7ffd093d1d94,32459403,0,0x0,8
tick,0x7ffd093d1d94,32474627,0,0x0,8
tick,0x7ffd093d1d94,32490080,0,0x0,8
tick,0x7ffd093d1d94,32505704,0,0x0,8
tick,0x7ffd093d1d94,32521532,0,0x0,8
tick,0x7ffd093d1d94,32537485,0,0x0,8
tick,0x7ffd093d1d94,32553360,0,0x0,8
tick,0x7ffd093d1d94,32568425,0,0x0,8
tick,0x7ffd093d1d94,32584438,0,0x0,8
tick,0x7ffd093d1d94,32599914,0,0x0,8
tick,0x7ffd093d1d94,32614745,0,0x0,8
tick,0x7ffd093d1d94,32630046,0,0x0,8
tick,0x7ffd093d1d94,32645381,0,0x0,8
tick,0x7ffd093d1d94,32660895,0,0x0,8
tick,0x7ffd093d1d94,32676121,0,0x0,8
tick,0x7ffd093d1d94,32691635,0,0x0,8
tick,0x7ffd093d1d94,32706784,0,0x0,8
tick,0x7ffd093d1d94,32722562,0,0x0,8
tick,0x7ffd093d1d94,32738215,0,0x0,8
tick,0x7ffd093d1d94,32753803,0,0x0,8
tick,0x7ffd093d1d94,32769394,0,0x0,8
tick,0x7ffd093d1d94,32785400,0,0x0,8
tick,0x7ffd093d1d94,32801333,0,0x0,8
tick,0x7ffd093d1d94,32816399,0,0x0,8
tick,0x7ffd093d1d94,32832347,0,0x0,8
tick,0x7ffd093d1d94,32848165,0,0x0,8
tick,0x7ffd093d1d94,32863815,0,0x0,8
tick,0x7ffd093d1d94,32879738,0,0x0,8
tick,0x7ffd093d1d94,32894706,0,0x0,8
tick,0x7ffd093d1d94,32909812,0,0x0,8
tick,0x7ffd093d1d94,32925236,0,0x0,8
tick,0x7ffd093d1d94,32940320,0,0x0,8
tick,0x7ffd093d1d94,32955830,0,0x0,8
tick,0x7ffd093d1d94,32971712,0,0x0,8
tick,0x7ffd093d1d94,32987457,0,0x0,8
tick,0x7ffd093d1d94,33002798,0,0x0,8
tick,0x7ffd093d1d94,33017539,0,0x0,8
tick,0x7ffd093d1d94,33033398,0,0x0,8
tick,0x7ffd093d1d94,33048433,0,0x0,8
tick,0x7ffd093d1d94,33064045,0,0x0,8
tick,0x7ffd093d1d94,33080227,0,0x0,8
tick,0x7ffd093d1d94,33095654,0,0x0,8
tick,0x7ffd093d1d94,33111133,0,0x0,8
tick,0x7ffd093d1d94,33126218,0,0x0,8
tick,0x7ffd093d1d94,33142249,0,0x0,8
tick,0x7ffd093d1d94,33157872,0,0x0,8
tick,0x7ffd093d1d94,33172945,0,0x0,8
tick,0x7ffd093d1d94,33188348,0,0x0,8
tick,0x7ffd093d1d94,33204372,0,0x0,8
tick,0x7ffd093d1d94,33219600,0,0x0,8
tick,0x7ffd093d1d94,33235626,0,0x0,8
tick,0x7ffd093d1d94,33251427,0,0x0,8
tick,0x7ffd093d1d94,33266606,0,0x0,8
tick,0x7ffd093d1d94,33282310,0,0x0,8
tick,0x7ffd093d1d94,33298090,0,0x0,8
tick,0x7ffd093d1d94,33313830,0,0x0,8
tick,0x7ffd093d1d94,33329075,0,0x0,8
tick,0x7ffd093d1d94,33344152,0,0x0,8
tick,0x7ffd093d1d94,33360488,0,0x0,8
tick,0x7ffd093d1d94,33375537,0,0x0,8
tick,0x7ffd093d1d94,33391374,0,0x0,8
tick,0x7ffd093d1d94,33406339,0,0x0,8
tick,0x7ffd093d1d94,33421349,0,0x0,8
tick,0x7ffd093d1d94,33437341,0,0x0,8
tick,0x7ffd093d1d94,33453121,0,0x0,8
tick,0x7ffd093d1d94,33468214,0,0x0,8
tick,0x7ffd093d1d94,33483216,0,0x0,8
tick,0x7ffd093d1d94,33499816,0,0x0,8
tick,0x7ffd093d1d94,33514932,0,0x0,8
tick,0x7ffd093d1d94,33531437,0,0x0,8
tick,0x7ffd093d1d94,33546757,0,0x0,8
tick,0x7ffd093d1d94,33562098,0,0x0,8
tick,0x7ffd093d1d94,33577523,0,0x0,8
tick,0x7ffd093d1d94,33592375,0,0x0,8
tick,0x7ffd093d1d94,33607638,0,0x0,8
tick,0x7ffd093d1d94,33623434,0,0x0,8
tick,0x7ffd093d1d94,33639137,0,0x0,8
tick,0x7ffd093d1d94,33654856,0,0x0,8
tick,0x7ffd093d1d94,33670376,0,0x0,8
tick,0x7ffd093d1d94,33685623,0,0x0,8
tick,0x7ffd093d1d94,33701067,0,0x0,8
tick,0x7ffd093d1d94,33717097,0,0x0,8
tick,0x7ffd093d1d94,33731677,0,0x0,8
tick,0x7ffd093d1d94,33746936,0,0x0,8
tick,0x7ffd093d1d94,33763392,0,0x0,8
tick,0x7ffd093d1d94,33779241,0,0x0,8
tick,0x7ffd093d1d94,33795248,0,0x0,8
tick,0x7ffd093d1d94,33811261,0,0x0,8
tick,0x7ffd093d1d94,33827080,0,0x0,8
tick,0x7ffd093d1d94,33842692,0,0x0,8
tick,0x7ffd093d1d94,33858653,0,0x0,8
tick,0x7ffd093d1d94,33873888,0,0x0,8
tick,0x7ffd093d1d94,33889780,0,0x0,8
tick,0x7ffd093d1d94,33904898,0,0x0,8
tick,0x7ffd093d1d94,33920942,0,0x0,8
tick,0x7ffd093d1d94,33936559,0,0x0,8
tick,0x7ffd093d1d94,33952480,0,0x0,8
tick,0x7ffd093d1d94,33968098,0,0x0,8
tick,0x7ffd093d1d94,33983872,0,0x0,8
tick,0x7ffd093d1d94,33999815,0,0x0,8
tick,0x7ffd093d1d94,34015289,0,0x0,8
tick,0x7ffd093d1d94,34031390,0,0x0,8
tick,0x7ffd093d1d94,34046954,0,0x0,8
tick,0x7ffd093d1d94,34063468,0,0x0,8
tick,0x7ffd093d1d94,34080063,0,0x0,8
tick,0x7ffd093d1d94,34095516,0,0x0,8
tick,0x7ffd093d1d94,34110549,0,0x0,8
tick,0x7ffd093d1d94,34126451,0,0x0,8
tick,0x7ffd093d1d94,34141483,0,0x0,8
tick,0x7ffd093d1d94,34157507,0,0x0,8
tick,0x7ffd093d1d94,34173014,0,0x0,8
tick,0x7ffd093d1d94,34189020,0,0x0,8
tick,0x7ffd093d1d94,34205525,0,0x0,8
tick,0x7ffd093d1d94,34220115,0,0x0,8
tick,0x7ffd093d1d94,34235017,0,0x0,8
tick,0x7ffd093d1d94,34251105,0,0x0,8
tick,0x7ffd093d1d94,34266913,0,0x0,8
tick,0x7ffd093d1d94,34282676,0,0x0,8
tick,0x7ffd093d1d94,34298724,0,0x0,8
tick,0x7ffd093d1d94,34314529,0,0x0,8
tick,0x7ffd093d1d94,34330941,0,0x0,8
tick,0x7ffd093d1d94,34346908,0,0x0,8
tick,0x7ffd093d1d94,34362027,0,0x0,8
tick,0x7ffd093d1d94,34377524,0,0x0,8
tick,0x7ffd093d1d94,34393134,0,0x0,8
tick,0x7ffd093d1d94,34409496,0,0x0,8
tick,0x7ffd093d1d94,34425451,0,0x0,8
tick,0x7ffd093d1d94,34441009,0,0x0,8
tick,0x7ffd093d1d94,34457068,0,0x0,8
tick,0x7ffd093d1d94,34473122,0,0x0,8
tick,0x7ffd093d1d94,34488107,0,0x0,8
tick,0x7ffd093d1d94,34504125,0,0x0,8
tick,0x7ffd093d1d94,34518886,0,0x0,8
tick,0x7ffd093d1d94,34534558,0,0x0,8
tick,0x7ffd093d1d94,34549964,0,0x0,8
tick,0x7ffd093d1d94,34565286,0,0x0,8
tick,0x7ffd093d1d94,34581315,0,0x0,8
tick,0x7ffd093d1d94,34597153,0,0x0,8
tick,0x7ffd093d1d94,34612239,0,0x0,8
tick,0x7ffd093d1d94,34627771,0,0x0,8
tick,0x7ffd093d1d94,34642978,0,0x0,8
tick,0x7ffd093d1d94,34658878,0,0x0,8
tick,0x7ffd093d1d94,34674503,0,0x0,8
tick,0x7ffd093d1d94,34689980,0,0x0,8
tick,0x7ffd093d1d94,34705956,0,0x0,8
tick,0x7ffd093d1d94,34721734,0,0x0,8
tick,0x7ffd093d1d94,34737412,0,0x0,8
tick,0x7ffd093d1d94,34753343,0,0x0,8
tick,0x7ffd093d1d94,34769268,0,0x0,8
tick,0x7ffd093d1d94,34784380,0,0x0,8
tick,0x7ffd093d1d94,34800657,0,0x0,8
tick,0x7ffd093d1d94,34816774,0,0x0,8
tick,0x7ffd093d1d94,34832212,0,0x0,8
tick,0x7ffd093d1d94,34847353,0,0x0,8
tick,0x7ffd093d1d94,34862867,0,0x0,8
tick,0x7ffd093d1d94,34877888,0,0x0,8
tick,0x7ffd093d1d94,34892584,0,0x0,8
tick,0x7ffd093d1d94,34907522,0,0x0,8
tick,0x7ffd093d1d94,34923406,0,0x0,8
tick,0x7ffd093d1d94,34939002,0,0x0,8
tick,0x7ffd093d1d94,34955132,0,0x0,8
tick,0x7ffd093d1d94,34970420,0,0x0,8
tick,0x7ffd093d1d94,34985496,0,0x0,8
tick,0x7ffd093d1d94,35000884,0,0x0,8
tick,0x7ffd093d1d94,35016810,0,0x0,8
tick,0x7ffd093d1d94,35031513,0,0x0,8
tick,0x7ffd093d1d94,35046139,0,0x0,8
tick,0x7ffd093d1d94,35061706,0,0x0,8
tick,0x7ffd093d1d94,35077864,0,0x0,8
tick,0x7ffd093d1d94,35093218,0,0x0,8
tick,0x7ffd093d1d94,35108539,0,0x0,8
tick,0x7ffd093d1d94,35124242,0,0x0,8
tick,0x7ffd093d1d94,35139250,0,0x0,8
tick,0x7ffd093d1d94,35154081,0,0x0,8
tick,0x7ffd093d1d94,35170137,0,0x0,8
tick,0x7ffd093d1d94,35186231,0,0x0,8
tick,0x7ffd093d1d94,35202367,0,0x0,8
tick,0x7ffd093d1d94,35217934,0,0x0,8
tick,0x7ffd093d1d94,35233434,0,0x0,8
tick,0x7ffd093d1d94,35248901,0,0x0,8
tick,0x7ffd093d1d94,35264181,0,0x0,8
tick,0x7ffd093d1d94,35279997,0,0x0,8
tick,0x7ffd093d1d94,35295031,0,0x0,8
tick,0x7ffd093d1d94,35310820,0,0x0,8
tick,0x7ffd093d1d94,35326231,0,0x0,8
tick,0x7ffd093d1d94,35341178,0,0x0,8
tick,0x7ffd093d1d94,35356685,0,0x0,8
tick,0x7ffd093d1d94,35372758,0,0x0,8
tick,0x7ffd093d1d94,35388237,0,0x0,8
tick,0x7ffd093d1d94,35403868,0,0x0,8
tick,0x7ffd093d1d94,35420099,0,0x0,8
tick,0x7ffd093d1d94,35435880,0,0x0,8
tick,0x7ffd093d1d94,35451897,0,0x0,8
tick,0x7ffd093d1d94,35467234,0,0x0,8
tick,0x7ffd093d1d94,35483046,0,0x0,8
tick,0x7ffd093d1d94,35498931,0,0x0,8
tick,0x7ffd093d1d94,35514493,0,0x0,8
tick,0x7ffd093d1d94,35529882,0,0x0,8
tick,0x7ffd093d1d94,35544870,0,0x0,8
tick,0x7ffd093d1d94,35560425,0,0x0,8
tick,0x7ffd093d1d94,35575787,0,0x0,8
tick,0x7ffd093d1d94,35591014,0,0x0,8
tick,0x7ffd093d1d94,35606373,0,0x0,8
tick,0x7ffd093d1d94,35621613,0,0x0,8
tick,0x7ffd093d1d94,35637241,0,0x0,8
tick,0x7ffd093d1d94,35652771,0,0x0,8
tick,0x7ffd093d1d94,35668420,0,0x0,8
tick,0x7ffd093d1d94,35683980,0,0x0,8
tick,0x7ffd093d1d94,35699452,0,0x0,8
tick,0x7ffd093d1d94,35714957,0,0x0,8
tick,0x7ffd093d1d94,35730284,0,0x0,8
tick,0x7ffd093d1d94,35745970,0,0x0,8
tick,0x7ffd093d1d94,35761560,0,0x0,8
tick,0x7ffd093d1d94,35776870,0,0x0,8
tick,0x7ffd093d1d94,35792315,0,0x0,8
tick,0x7ffd093d1d94,35808394,0,0x0,8
tick,0x7ffd093d1d94,35823365,0,0x0,8
tick,0x7ffd093d1d94,35839291,0,0x0,8
tick,0x7ffd093d1d94,35854895,0,0x0,8
tick,0x7ffd093d1d94,35870457,0,0x0,8
tick,0x7ffd093d1d94,35886570,0,0x0,8
tick,0x7ffd093d1d94,35902088,0,0x0,8
tick,0x7ffd093d1d94,35916880,0,0x0,8
tick,0x7ffd093d1d94,35932470,0,0x0,8
tick,0x7ffd093d1d94,35947871,0,0x0,8
tick,0x7ffd093d1d94,35964064,0,0x0,8
tick,0x7ffd093d1d94,35979551,0,0x0,8
tick,0x7ffd093d1d94,35994887,0,0x0,8
tick,0x7ffd093d1d94,36010591,0,0x0,8
tick,0x7ffd093d1d94,36026293,0,0x0,8
tick,0x7ffd093d1d94,36042336,0,0x0,8
tick,0x7ffd093d1d94,36057653,0,0x0,8
tick,0x7ffd093d1d94,36073213,0,0x0,8
tick,0x7ffd093d1d94,36088921,0,0x0,8
tick,0x7ffd093d1d94,36104683,0,0x0,8
tick,0x7ffd093d1d94,36120600,0,0x0,8
tick,0x7ffd093d1d94,36135940,0,0x0,8
tick,0x7ffd093d1d94,36151588,0,0x0,8
tick,0x7ffd093d1d94,36166498,0,0x0,8
tick,0x7ffd093d1d94,36181763,0,0x0,8
tick,0x7ffd093d1d94,36197468,0,0x0,8
tick,0x7ffd093d1d94,36212971,0,0x0,8
tick,0x7ffd093d1d94,36228431,0,0x0,8
tick,0x7ffd093d1d94,36244198,0,0x0,8
tick,0x7ffd093d1d94,36259275,0,0x0,8
tick,0x7ffd093d1d94,36274979,0,0x0,8
tick,0x7ffd093d1d94,36289847,0,0x0,8
tick,0x7ffd093d1d94,36305097,0,0x0,8
tick,0x7ffd093d1d94,36321415,0,0x0,8
tick,0x7ffd093d1d94,36337803,0,0x0,8
tick,0x7ffd093d1d94,36353005,0,0x0,8
tick,0x7ffd093d1d94,36369237,0,0x0,8
tick,0x7ffd093d1d94,36384776,0,0x0,8
tick,0x7ffd093d1d94,36400287,0,0x0,8
tick,0x7ffd093d1d94,36415108,0,0x0,8
tick,0x7ffd093d1d94,36431374,0,0x0,8
tick,0x7ffd093d1d94,36446838,0,0x0,8
tick,0x7ffd093d1d94,36462447,0,0x0,8
tick,0x7ffd093d1d94,36478065,0,0x0,8
tick,0x7ffd093d1d94,36493920,0,0x0,8
tick,0x7ffd093d1d94,36509803,0,0x0,8
tick,0x7ffd093d1d94,36525512,0,0x0,8
tick,0x7ffd093d1d94,36540766,0,0x0,8
tick,0x7ffd093d1d94,36556117,0,0x0,8
tick,0x7ffd093d1d94,36571811,0,0x0,8
tick,0x7ffd093d1d94,36587515,0,0x0,8
tick,0x7ffd093d1d94,36602967,0,0x0,8
tick,0x7ffd093d1d94,36618878,0,0x0,8
tick,0x7ffd093d1d94,36633883,0,0x0,8
tick,0x7ffd093d1d94,36649685,0,0x0,8
tick,0x7ffd093d1d94,36665075,0,0x0,8
tick,0x7ffd093d1d94,36680771,0,0x0,8
tick,0x7ffd093d1d94,36695779,0,0x0,8
tick,0x7ffd093d1d94,36711707,0,0x0,8
tick,0x7ffd093d1d94,36727309,0,0x0,8
tick,0x7ffd093d1d94,36743255,0,0x0,8
tick,0x7ffd093d1d94,36759155,0,0x0,8
tick,0x7ffd093d1d94,36774470,0,0x0,8
tick,0x7ffd093d1d94,36790468,0,0x0,8
tick,0x7ffd093d1d94,36805430,0,0x0,8
tick,0x7ffd093d1d94,36821372,0,0x0,8
tick,0x7ffd093d1d94,36837206,0,0x0,8
tick,0x7ffd093d1d94,36852821,0,0x0,8
tick,0x7ffd093d1d94,36868676,0,0x0,8
tick,0x7ffd093d1d94,36883801,0,0x0,8
tick,0x7ffd093d1d94,36899364,0,0x0,8
tick,0x7ffd093d1d94,36914565,0,0x0,8
tick,0x7ffd093d1d94,36929920,0,0x0,8
tick,0x7ffd093d1d94,36945231,0,0x0,8
tick,0x7ffd093d1d94,36961263,0,0x0,8
tick,0x7ffd093d1d94,36976450,0,0x0,8
tick,0x7ffd093d1d94,36992030,0,0x0,8
tick,0x7ffd093d1d94,37007990,0,0x0,8
tick,0x7ffd093d1d94,37023554,0,0x0,8
tick,0x7ffd093d1d94,37039363,0,0x0,8
tick,0x7ffd093d1d94,37054306,0,0x0,8
tick,0x7ffd093d1d94,37069667,0,0x0,8
tick,0x7ffd093d1d94,37085129,0,0x0,8
tick,0x7ffd093d1d94,37100428,0,0x0,8
tick,0x7ffd093d1d94,37115407,0,0x0,8
tick,0x7ffd093d1d94,37130988,0,0x0,8
tick,0x7ffd093d1d94,37146132,0,0x0,8
tick,0x7ffd093d1d94,37162250,0,0x0,8
tick,0x7ffd093d1d94,37177859,0,0x0,8
tick,0x7ffd093d1d94,37193413,0,0x0,8
tick,0x7ffd093d1d94,37209137,0,0x0,8
tick,0x7ffd093d1d94,37224046,0,0x0,8
tick,0x7ffd093d1d94,37239658,0,0x0,8
tick,0x7ffd093d1d94,37255370,0,0x0,8
tick,0x7ffd093d1d94,37270432,0,0x0,8
tick,0x7ffd093d1d94,37285633,0,0x0,8
tick,0x7ffd093d1d94,37300897,0,0x0,8
tick,0x7ffd093d1d94,37316463,0,0x0,8
tick,0x7ffd093d1d94,37332577,0,0x0,8
tick,0x7ffd093d1d94,37347733,0,0x0,8
tick,0x7ffd093d1d94,37363084,0,0x0,8
tick,0x7ffd093d1d94,37378598,0,0x0,8
tick,0x7ffd093d1d94,37394522,0,0x0,8
tick,0x7ffd093d1d94,37410098,0,0x0,8
tick,0x7ffd093d1d94,37424692,0,0x0,8
tick,0x7ffd093d1d94,37439677,0,0x0,8
tick,0x7ffd093d1d94,37455669,0,0x0,8
tick,0x7ffd093d1d94,37471654,0,0x0,8
tick,0x7ffd093d1d94,37486639,0,0x0,8
tick,0x7ffd093d1d94,37501535,0,0x0,8
tick,0x7ffd093d1d94,37517091,0,0x0,8
tick,0x7ffd093d1d94,37533623,0,0x0,8
tick,0x7ffd093d1d94,37548797,0,0x0,8
tick,0x7ffd093d1d94,37564298,0,0x0,8
tick,0x7ffd093d1d94,37580660,0,0x0,8
tick,0x7ffd093d1d94,37595109,0,0x0,8
tick,0x7ffd093d1d94,37611032,0,0x0,8
tick,0x7ffd093d1d94,37626995,0,0x0,8
tick,0x7ffd093d1d94,37642118,0,0x0,8
tick,0x7ffd093d1d94,37658139,0,0x0,8
tick,0x7ffd093d1d94,37672974,0,0x0,8
tick,0x7ffd093d1d94,37689242,0,0x0,8
tick,0x7ffd093d1d94,37704640,0,0x0,8
tick,0x7ffd093d1d94,37720463,0,0x0,8
tick,0x7ffd093d1d94,37736697,0,0x0,8
tick,0x7ffd093d1d94,37752248,0,0x0,8
tick,0x7ffd093d1d94,37767338,0,0x0,8
tick,0x7ffd093d1d94,37783122,0,0x0,8
tick,0x7ffd093d1d94,37798788,0,0x0,8
tick,0x7ffd093d1d94,37814480,0,0x0,8
tick,0x7ffd093d1d94,37829910,0,0x0,8
tick,0x7ffd093d1d94,37846135,0,0x0,8
tick,0x7ffd093d1d94,37862179,0,0x0,8
tick,0x7ffd093d1d94,37877440,0,0x0,8
tick,0x7ffd093d1d94,37892829,0,0x0,8
tick,0x7ffd093d1d94,37908287,0,0x0,8
tick,0x7ffd093d1d94,37923883,0,0x0,8
tick,0x7ffd093d1d94,37940308,0,0x0,8
tick,0x7ffd093d1d94,37955398,0,0x0,8
tick,0x7ffd093d1d94,37970368,0,0x0,8
tick,0x7ffd093d1d94,37986323,0,0x0,8
tick,0x7ffd093d1d94,38001747,0,0x0,8
tick,0x7ffd093d1d94,38016480,0,0x0,8
tick,0x7ffd093d1d94,38032752,0,0x0,8
tick,0x7ffd093d1d94,38048131,0,0x0,8
tick,0x7ffd093d1d94,38063196,0,0x0,8
tick,0x7ffd093d1d94,38078485,0,0x0,8
tick,0x7ffd093d1d94,38094339,0,0x0,8
tick,0x7ffd093d1d94,38110224,0,0x0,8
tick,0x7ffd093d1d94,38125553,0,0x0,8
tick,0x7ffd093d1d94,38141319,0,0x0,8
tick,0x7ffd093d1d94,38156948,0,0x0,8
tick,0x7ffd093d1d94,38173054,0,0x0,8
tick,0x7ffd093d1d94,38188618,0,0x0,8
tick,0x7ffd093d1d94,38203680,0,0x0,8
tick,0x7ffd093d1d94,38219651,0,0x0,8
tick,0x7ffd093d1d94,38235316,0,0x0,8
tick,0x7ffd093d1d94,38250899,0,0x0,8
tick,0x7ffd093d1d94,38266434,0,0x0,8
tick,0x7ffd093d1d94,38282336,0,0x0,8
tick,0x7ffd093d1d94,38298451,0,0x0,8
tick,0x7ffd093d1d94,38313734,0,0x0,8
tick,0x7ffd093d1d94,38329111,0,0x0,8
tick,0x7ffd093d1d94,38344506,0,0x0,8
tick,0x7ffd093d1d94,38359832,0,0x0,8
tick,0x7ffd093d1d94,38375440,0,0x0,8
tick,0x7ffd093d1d94,38391448,0,0x0,8
tick,0x7ffd093d1d94,38406380,0,0x0,8
tick,0x7ffd093d1d94,38421952,0,0x0,8
tick,0x7ffd093d1d94,38437099,0,0x0,8
tick,0x7ffd093d1d94,38452061,0,0x0,8
tick,0x7ffd093d1d94,38467454,0,0x0,8
tick,0x7ffd093d1d94,38483015,0,0x0,8
tick,0x7ffd093d1d94,38498722,0,0x0,8
tick,0x7ffd093d1d94,38514281,0,0x0,8
tick,0x7ffd093d1d94,38530878,0,0x0,8
tick,0x7ffd093d1d94,38547019,0,0x0,8
tick,0x7ffd093d1d94,38562804,0,0x0,8
tick,0x7ffd093d1d94,38578707,0,0x0,8
tick,0x7ffd093d1d94,38594711,0,0x0,8
tick,0x7ffd093d1d94,38610675,0,0x0,8
tick,0x7ffd093d1d94,38625817,0,0x0,8
tick,0x7ffd093d1d94,38641289,0,0x0,8
tick,0x7ffd093d1d94,38657465,0,0x0,8
tick,0x7ffd093d1d94,38673067,0,0x0,8
tick,0x7ffd093d1d94,38688311,0,0x0,8
tick,0x7ffd093d1d94,38704431,0,0x0,8
tick,0x7ffd093d1d94,38719957,0,0x0,8
tick,0x7ffd093d1d94,38736155,0,0x0,8
tick,0x7ffd093d1d94,38751895,0,0x0,8
tick,0x7ffd093d1d94,38767199,0,0x0,8
tick,0x7ffd093d1d94,38782257,0,0x0,8
tick,0x7ffd093d1d94,38796994,0,0x0,8
tick,0x7ffd093d1d94,38812687,0,0x0,8
tick,0x7ffd093d1d94,38828800,0,0x0,8
tick,0x7ffd093d1d94,38844171,0,0x0,8
tick,0x7ffd093d1d94,38860241,0,0x0,8
tick,0x7ffd093d1d94,38876255,0,0x0,8
tick,0x7ffd093d1d94,38891866,0,0x0,8
tick,0x7ffd093d1d94,38907619,0,0x0,8
tick,0x7ffd093d1d94,38923620,0,0x0,8
tick,0x7ffd093d1d94,38939784,0,0x0,8
tick,0x7ffd093d1d94,38955331,0,0x0,8
tick,0x7ffd093d1d94,38970077,0,0x0,8
tick,0x7ffd093d1d94,38985471,0,0x0,8
tick,0x7ffd093d1d94,39001092,0,0x0,8
tick,0x7ffd093d1d94,39016244,0,0x0,8
tick,0x7ffd093d1d94,39031834,0,0x0,8
tick,0x7ffd093d1d94,39047179,0,0x0,8
tick,0x7ffd093d1d94,39063281,0,0x0,8
tick,0x7ffd093d1d94,39078824,0,0x0,8
tick,0x7ffd093d1d94,39094010,0,0x0,8
tick,0x7ffd093d1d94,39109571,0,0x0,8
tick,0x7ffd093d1d94,39125063,0,0x0,8
tick,0x7ffd093d1d94,39140668,0,0x0,8
tick,0x7ffd093d1d94,39156300,0,0x0,8
tick,0x7ffd093d1d94,39171168,0,0x0,8
tick,0x7ffd093d1d94,39186714,0,0x0,8
tick,0x7ffd093d1d94,39202276,0,0x0,8
tick,0x7ffd093d1d94,39217892,0,0x0,8
tick,0x7ffd093d1d94,39233180,0,0x0,8
tick,0x7ffd093d1d94,39248808,0,0x0,8
tick,0x7ffd093d1d94,39263773,0,0x0,8
tick,0x7ffd093d1d94,39279672,0,0x0,8
tick,0x7ffd093d1d94,39295235,0,0x0,8
tick,0x7ffd093d1d94,39310599,0,0x0,8
tick,0x7ffd093d1d94,39326066,0,0x0,8
tick,0x7ffd093d1d94,39341365,0,0x0,8
tick,0x7ffd093d1d94,39356717,0,0x0,8
tick,0x7ffd093d1d94,39371647,0,0x0,8
tick,0x7ffd093d1d94,39387400,0,0x0,8
tick,0x7ffd093d1d94,39402933,0,0x0,8
tick,0x7ffd093d1d94,39418259,0,0x0,8
tick,0x7ffd093d1d94,39433280,0,0x0,8
tick,0x7ffd093d1d94,39449274,0,0x0,8
tick,0x7ffd093d1d94,39464716,0,0x0,8
tick,0x7ffd093d1d94,39480331,0,0x0,8
tick,0x7ffd093d1d94,39496470,0,0x0,8
tick,0x7ffd093d1d94,39511497,0,0x0,8
tick,0x7ffd093d1d94,39526996,0,0x0,8
tick,0x7ffd093d1d94,39542673,0,0x0,8
tick,0x7ffd093d1d94,39558141,0,0x0,8
tick,0x7ffd093d1d94,39573928,0,0x0,8
tick,0x7ffd093d1d94,39588562,0,0x0,8
tick,0x7ffd093d1d94,39604179,0,0x0,8
tick,0x7ffd093d1d94,39619388,0,0x0,8
tick,0x7ffd093d1d94,39634811,0,0x0,8
tick,0x7ffd093d1d94,39650062,0,0x0,8
tick,0x7ffd093d1d94,39665722,0,0x0,8
tick,0x7ffd093d1d94,39680710,0,0x0,8
tick,0x7ffd093d1d94,39695967,0,0x0,8
tick,0x7ffd093d1d94,39711301,0,0x0,8
tick,0x7ffd093d1d94,39727510,0,0x0,8
tick,0x7ffd093d1d94,39742723,0,0x0,8
tick,0x7ffd093d1d94,39758349,0,0x0,8
tick,0x7ffd093d1d94,39774564,0,0x0,8
tick,0x7ffd093d1d94,39789586,0,0x0,8
tick,0x7ffd093d1d94,39804517,0,0x0,8
tick,0x7ffd093d1d94,39820442,0,0x0,8
tick,0x7ffd093d1d94,39835900,0,0x0,8
tick,0x7ffd093d1d94,39851341,0,0x0,8
tick,0x7ffd093d1d94,39867185,0,0x0,8
tick,0x7ffd093d1d94,39883102,0,0x0,8
tick,0x7ffd093d1d94,39898578,0,0x0,8
tick,0x7ffd093d1d94,39914382,0,0x0,8
tick,0x7ffd093d1d94,39930043,0,0x0,8
tick,0x7ffd093d1d94,39945469,0,0x0,8
tick,0x7ffd093d1d94,39961350,0,0x0,8
tick,0x7ffd093d1d94,39976156,0,0x0,8
tick,0x7ffd093d1d94,39991478,0,0x0,8
tick,0x7ffd093d1d94,40006783,0,0x0,8
tick,0x7ffd093d1d94,40022258,0,0x0,8
tick,0x7ffd093d1d94,40037268,0,0x0,8
tick,0x7ffd093d1d94,40052764,0,0x0,8
tick,0x7ffd093d1d94,40068015,0,0x0,8
tick,0x7ffd093d1d94,40083474,0,0x0,8
tick,0x7ffd093d1d94,40099585,0,0x0,8
tick,0x7ffd093d1d94,40114955,0,0x0,8
tick,0x7ffd093d1d94,40130708,0,0x0,8
tick,0x7ffd093d1d94,40146862,0,0x0,8
tick,0x7ffd093d1d94,40162185,0,0x0,8
tick,0x7ffd093d1d94,40177690,0,0x0,8
tick,0x7ffd093d1d94,40192826,0,0x0,8
tick,0x7ffd093d1d94,40207974,0,0x0,8
tick,0x7ffd093d1d94,40224270,0,0x0,8
tick,0x7ffd093d1d94,40238918,0,0x0,8
tick,0x7ffd093d1d94,40253910,0,0x0,8
tick,0x7ffd093d1d94,40269148,0,0x0,8
tick,0x7ffd093d1d94,40284967,0,0x0,8
tick,0x7ffd093d1d94,40300528,0,0x0,8
tick,0x7ffd093d1d94,40316057,0,0x0,8
tick,0x7ffd093d1d94,40330959,0,0x0,8
tick,0x7ffd093d1d94,40346742,0,0x0,8
tick,0x7ffd093d1d94,40362752,0,0x0,8
tick,0x7ffd093d1d94,40378115,0,0x0,8
tick,0x7ffd093d1d94,40394329,0,0x0,8
tick,0x7ffd093d1d94,40409579,0,0x0,8
tick,0x7ffd093d1d94,40425270,0,0x0,8
tick,0x7ffd093d1d94,40440558,0,0x0,8
tick,0x7ffd093d1d94,40456303,0,0x0,8
tick,0x7ffd093d1d94,40471504,0,0x0,8
tick,0x7ffd093d1d94,40486928,0,0x0,8
tick,0x7ffd093d1d94,40501570,0,0x0,8
tick,0x7ffd093d1d94,40516856,0,0x0,8
tick,0x7ffd093d1d94,40532293,0,0x0,8
tick,0x7ffd093d1d94,40548142,0,0x0,8
tick,0x7ffd093d1d94,40564222,0,0x0,8
tick,0x7ffd093d1d94,40579308,0,0x0,8
tick,0x7ffd093d1d94,40594773,0,0x0,8
tick,0x7ffd093d1d94,40609989,0,0x0,8
tick,0x7ffd093d1d94,40625357,0,0x0,8
tick,0x7ffd093d1d94,40641438,0,0x0,8
tick,0x7ffd093d1d94,40656692,0,0x0,8
tick,0x7ffd093d1d94,40672316,0,0x0,8
tick,0x7ffd093d1d94,40687777,0,0x0,8
tick,0x7ffd093d1d94,40703054,0,0x0,8
tick,0x7ffd093d1d94,40718521,0,0x0,8
tick,0x7ffd093d1d94,40733742,0,0x0,8
tick,0x7ffd093d1d94,40749545,0,0x0,8
tick,0x7ffd093d1d94,40765337,0,0x0,8
tick,0x7ffd093d1d94,40781221,0,0x0,8
tick,0x7ffd093d1d94,40797104,0,0x0,8
tick,0x7ffd093d1d94,40812481,0,0x0,8
tick,0x7ffd093d1d94,40827960,0,0x0,8
tick,0x7ffd093d1d94,40843186,0,0x0,8
tick,0x7ffd093d1d94,40859250,0,0x0,8
tick,0x7ffd093d1d94,40874406,0,0x0,8
tick,0x7ffd093d1d94,40889672,0,0x0,8
tick,0x7ffd093d1d94,40905429,0,0x0,8
tick,0x7ffd093d1d94,40921731,0,0x0,8
tick,0x7ffd093d1d94,40937510,0,0x0,8
tick,0x7ffd093d1d94,40952696,0,0x0,8
tick,0x7ffd093d1d94,40969141,0,0x0,8
tick,0x7ffd093d1d94,40982993,0,0x0,8
tick,0x7ffd093d1d94,40999307,0,0x0,8
tick,0x7ffd093d1d94,41013918,0,0x0,8
tick,0x7ffd093d1d94,41029957,0,0x0,8
tick,0x7ffd093d1d94,41045374,0,0x0,8
tick,0x7ffd093d1d94,41060397,0,0x0,8
tick,0x7ffd093d1d94,41075592,0,0x0,8
tick,0x7ffd093d1d94,41090792,0,0x0,8
tick,0x7ffd093d1d94,41106717,0,0x0,8
tick,0x7ffd093d1d94,41122078,0,0x0,8
tick,0x7ffd093d1d94,41137005,0,0x0,8
tick,0x7ffd093d1d94,41152945,0,0x0,8
tick,0x7ffd093d1d94,41168936,0,0x0,8
tick,0x7ffd093d1d94,41184507,0,0x0,8
tick,0x7ffd093d1d94,41200109,0,0x0,8
tick,0x7ffd093d1d94,41215480,0,0x0,8
tick,0x7ffd093d1d94,41231459,0,0x0,8
tick,0x7ffd093d1d94,41247446,0,0x0,8
tick,0x7ffd093d1d94,41263428,0,0x0,8
tick,0x7ffd093d1d94,41280196,0,0x0,8
tick,0x7ffd093d1d94,41295009,0,0x0,8
tick,0x7ffd093d1d94,41311035,0,0x0,8
tick,0x7ffd093d1d94,41327021,0,0x0,8
tick,0x7ffd093d1d94,41343019,0,0x0,8
tick,0x7ffd093d1d94,41359534,0,0x0,8
tick,0x7ffd093d1d94,41374629,0,0x0,8
tick,0x7ffd093d1d94,41390556,0,0x0,8
tick,0x7ffd093d1d94,41406160,0,0x0,8
tick,0x7ffd093d1d94,41421658,0,0x0,8
tick,0x7ffd093d1d94,41437803,0,0x0,8
tick,0x7ffd093d1d94,41453882,0,0x0,8
tick,0x7ffd093d1d94,41469335,0,0x0,8
tick,0x7ffd093d1d94,41485294,0,0x0,8
tick,0x7ffd093d1d94,41501061,0,0x0,8
tick,0x7ffd093d1d94,41516729,0,0x0,8
tick,0x7ffd093d1d94,41531509,0,0x0,8
tick,0x7ffd093d1d94,41547216,0,0x0,8
tick,0x7ffd093d1d94,41562581,0,0x0,8
tick,0x7ffd093d1d94,41577994,0,0x0,8
tick,0x7ffd093d1d94,41593966,0,0x0,8
tick,0x7ffd093d1d94,41609783,0,0x0,8
tick,0x7ffd093d1d94,41625853,0,0x0,8
tick,0x7ffd093d1d94,41640912,0,0x0,8
tick,0x7ffd093d1d94,41657467,0,0x0,8
tick,0x7ffd093d1d94,41673908,0,0x0,8
tick,0x7ffd093d1d94,41688664,0,0x0,8
tick,0x7ffd093d1d94,41704476,0,0x0,8
tick,0x7ffd093d1d94,41720140,0,0x0,8
tick,0x7ffd093d1d94,41735341,0,0x0,8
tick,0x7ffd093d1d94,41751308,0,0x0,8
tick,0x7ffd093d1d94,41766916,0,0x0,8
tick,0x7ffd093d1d94,41782052,0,0x0,8
tick,0x7ffd093d1d94,41797255,0,0x0,8
tick,0x7ffd093d1d94,41813272,0,0x0,8
tick,0x7ffd093d1d94,41828360,0,0x0,8
tick,0x7ffd093d1d94,41844459,0,0x0,8
tick,0x7ffd093d1d94,41859322,0,0x0,8
tick,0x7ffd093d1d94,41874432,0,0x0,8
tick,0x7ffd093d1d94,41890008,0,0x0,8
tick,0x7ffd093d1d94,41905063,0,0x0,8
tick,0x7ffd093d1d94,41920811,0,0x0,8
tick,0x7ffd093d1d94,41936270,0,0x0,8
tick,0x7ffd093d1d94,41951418,0,0x0,8
tick,0x7ffd093d1d94,41967225,0,0x0,8
tick,0x7ffd093d1d94,41982588,0,0x0,8
tick,0x7ffd093d1d94,41998362,0,0x0,8
tick,0x7ffd093d1d94,42013292,0,0x0,8
tick,0x7ffd093d1d94,42028902,0,0x0,8
tick,0x7ffd093d1d94,42043937,0,0x0,8
tick,0x7ffd093d1d94,42059384,0,0x0,8
tick,0x7ffd093d1d94,42075033,0,0x0,8
tick,0x7ffd093d1d94,42090515,0,0x0,8
tick,0x7ffd093d1d94,42105524,0,0x0,8
tick,0x7ffd093d1d94,42120676,0,0x0,8
tick,0x7ffd093d1d94,42136138,0,0x0,8
tick,0x7ffd093d1d94,42151695,0,0x0,8
tick,0x7ffd093d1d94,42166909,0,0x0,8
tick,0x7ffd093d1d94,42182823,0,0x0,8
tick,0x7ffd093d1d94,42197631,0,0x0,8
tick,0x7ffd093d1d94,42213724,0,0x0,8
tick,0x7ffd093d1d94,42228565,0,0x0,8
tick,0x7ffd093d1d94,42243617,0,0x0,8
tick,0x7ffd093d1d94,42259670,0,0x0,8
tick,0x7ffd093d1d94,42275083,0,0x0,8
tick,0x7ffd093d1d94,42290309,0,0x0,8
tick,0x7ffd093d1d94,42306197,0,0x0,8
tick,0x7ffd093d1d94,42322201,0,0x0,8
tick,0x7ffd093d1d94,42338191,0,0x0,8
tick,0x7ffd093d1d94,42354661,0,0x0,8
tick,0x7ffd093d1d94,42369271,0,0x0,8
tick,0x7ffd093d1d94,42384726,0,0x0,8
tick,0x7ffd093d1d94,42399732,0,0x0,8
tick,0x7ffd093d1d94,42415717,0,0x0,8
tick,0x7ffd093d1d94,42430749,0,0x0,8
tick,0x7ffd093d1d94,42447230,0,0x0,8
tick,0x7ffd093d1d94,42462707,0,0x0,8
tick,0x7ffd093d1d94,42478419,0,0x0,8
tick,0x7ffd093d1d94,42494353,0,0x0,8
tick,0x7ffd093d1d94,42509934,0,0x0,8
tick,0x7ffd093d1d94,42525280,0,0x0,8
tick,0x7ffd093d1d94,42540348,0,0x0,8
tick,0x7ffd093d1d94,42556045,0,0x0,8
tick,0x7ffd093d1d94,42571504,0,0x0,8
tick,0x7ffd093d1d94,42586232,0,0x0,8
tick,0x7ffd093d1d94,42601336,0,0x0,8
tick,0x7ffd093d1d94,42616558,0,0x0,8
tick,0x7ffd093d1d94,42632541,0,0x0,8
tick,0x7ffd093d1d94,42648117,0,0x0,8
tick,0x7ffd093d1d94,42665528,0,0x0,8
tick,0x7ffd093d1d94,42678947,0,0x0,8
tick,0x7ffd093d1d94,42694402,0,0x0,8
tick,0x7ffd093d1d94,42710294,0,0x0,8
tick,0x7ffd093d1d94,42725852,0,0x0,8
tick,0x7ffd093d1d94,42741228,0,0x0,8
tick,0x7ffd093d1d94,42756824,0,0x0,8
tick,0x7ffd093d1d94,42771530,0,0x0,8
tick,0x7ffd093d1d94,42787073,0,0x0,8
tick,0x7ffd093d1d94,42803029,0,0x0,8
tick,0x7ffd093d1d94,42818207,0,0x0,8
tick,0x7ffd093d1d94,42834290,0,0x0,8
tick,0x7ffd093d1d94,42849671,0,0x0,8
tick,0x7ffd093d1d94,42865609,0,0x0,8
tick,0x7ffd093d1d94,42880312,0,0x0,8
tick,0x7ffd093d1d94,42895958,0,0x0,8
tick,0x7ffd093d1d94,42911152,0,0x0,8
tick,0x7ffd093d1d94,42927117,0,0x0,8
tick,0x7ffd093d1d94,42942228,0,0x0,8
tick,0x7ffd093d1d94,42957297,0,0x0,8
tick,0x7ffd093d1d94,42972854,0,0x0,8
tick,0x7ffd093d1d94,42988553,0,0x0,8
tick,0x7ffd093d1d94,43004253,0,0x0,8
tick,0x7ffd093d1d94,43019574,0,0x0,8
tick,0x7ffd093d1d94,43035012,0,0x0,8
tick,0x7ffd093d1d94,43050940,0,0x0,8
tick,0x7ffd093d1d94,43066173,0,0x0,8
tick,0x7ffd093d1d94,43082063,0,0x0,8
tick,0x7ffd093d1d94,43097821,0,0x0,8
tick,0x7ffd093d1d94,43113797,0,0x0,8
tick,0x7ffd093d1d94,43128991,0,0x0,8
tick,0x7ffd093d1d94,43144801,0,0x0,8
tick,0x7ffd093d1d94,43160123,0,0x0,8
tick,0x7ffd093d1d94,43175804,0,0x0,8
tick,0x7ffd093d1d94,43190973,0,0x0,8
tick,0x7ffd093d1d94,43206982,0,0x0,8
tick,0x7ffd093d1d94,43222870,0,0x0,8
tick,0x7ffd093d1d94,43238316,0,0x0,8
tick,0x7ffd093d1d94,43254444,0,0x0,8
tick,0x7ffd093d1d94,43270148,0,0x0,8
tick,0x7ffd093d1d94,43285782,0,0x0,8
tick,0x7ffd093d1d94,43301380,0,0x0,8
tick,0x7ffd093d1d94,43317269,0,0x0,8
tick,0x7ffd093d1d94,43332728,0,0x0,8
tick,0x7ffd093d1d94,43347729,0,0x0,8
tick,0x7ffd093d1d94,43363303,0,0x0,8
tick,0x7ffd093d1d94,43378467,0,0x0,8
tick,0x7ffd093d1d94,43393632,0,0x0,8
tick,0x7ffd093d1d94,43409214,0,0x0,8
tick,0x7ffd093d1d94,43424220,0,0x0,8
tick,0x7ffd093d1d94,43439645,0,0x0,8
tick,0x7ffd093d1d94,43455690,0,0x0,8
tick,0x7ffd093d1d94,43471655,0,0x0,8
tick,0x7ffd093d1d94,43486878,0,0x0,8
tick,0x7ffd093d1d94,43502529,0,0x0,8
tick,0x7ffd093d1d94,43517954,0,0x0,8
tick,0x7ffd093d1d94,43533626,0,0x0,8
tick,0x7ffd093d1d94,43548480,0,0x0,8
tick,0x7ffd093d1d94,43564097,0,0x0,8
tick,0x7ffd093d1d94,43580038,0,0x0,8
tick,0x7ffd093d1d94,43595277,0,0x0,8
tick,0x7ffd093d1d94,43610800,0,0x0,8
tick,0x7ffd093d1d94,43626534,0,0x0,8
tick,0x7ffd093d1d94,43641407,0,0x0,8
tick,0x7ffd093d1d94,43656979,0,0x0,8
tick,0x7ffd093d1d94,43672876,0,0x0,8
tick,0x7ffd093d1d94,43689157,0,0x0,8
tick,0x7ffd093d1d94,43704663,0,0x0,8
tick,0x7ffd093d1d94,43720112,0,0x0,8
tick,0x7ffd093d1d94,43735248,0,0x0,8
tick,0x7ffd093d1d94,43751467,0,0x0,8
tick,0x7ffd093d1d94,43767039,0,0x0,8
tick,0x7ffd093d1d94,43782789,0,0x0,8
tick,0x7ffd093d1d94,43798303,0,0x0,8
tick,0x7ffd093d1d94,43813966,0,0x0,8
tick,0x7ffd093d1d94,43828974,0,0x0,8
tick,0x7ffd093d1d94,43844267,0,0x0,8
tick,0x7ffd093d1d94,43860261,0,0x0,8
tick,0x7ffd093d1d94,43876099,0,0x0,8
tick,0x7ffd093d1d94,43891763,0,0x0,8
tick,0x7ffd093d1d94,43906920,0,0x0,8
tick,0x7ffd093d1d94,43922617,0,0x0,8
tick,0x7ffd093d1d94,43938915,0,0x0,8
tick,0x7ffd093d1d94,43954878,0,0x0,8
tick,0x7ffd093d1d94,43970465,0,0x0,8
tick,0x7ffd093d1d94,43985944,0,0x0,8
tick,0x7ffd093d1d94,44001489,0,0x0,8
tick,0x7ffd093d1d94,44016387,0,0x0,8
tick,0x7ffd093d1d94,44032087,0,0x0,8
tick,0x7ffd093d1d94,44048048,0,0x0,8
tick,0x7ffd093d1d94,44063860,0,0x0,8
tick,0x7ffd093d1d94,44080001,0,0x0,8
tick,0x7ffd093d1d94,44095429,0,0x0,8
tick,0x7ffd093d1d94,44110448,0,0x0,8
tick,0x7ffd093d1d94,44125830,0,0x0,8
tick,0x7ffd093d1d94,44141105,0,0x0,8
tick,0x7ffd093d1d94,44156481,0,0x0,8
tick,0x7ffd093d1d94,44172206,0,0x0,8
tick,0x7ffd093d1d94,44187827,0,0x0,8
tick,0x7ffd093d1d94,44203010,0,0x0,8
tick,0x7ffd093d1d94,44218600,0,0x0,8
tick,0x7ffd093d1d94,44234510,0,0x0,8
tick,0x7ffd093d1d94,44249924,0,0x0,8
tick,0x7ffd093d1d94,44265408,0,0x0,8
tick,0x7ffd093d1d94,44280711,0,0x0,8
tick,0x7ffd093d1d94,44296721,0,0x0,8
tick,0x7ffd093d1d94,44312369,0,0x0,8
tick,0x7ffd093d1d94,44327907,0,0x0,8
tick,0x7ffd093d1d94,44343182,0,0x0,8
tick,0x7ffd093d1d94,44359060,0,0x0,8
tick,0x7ffd093d1d94,44375008,0,0x0,8
tick,0x7ffd093d1d94,44390772,0,0x0,8
tick,0x7ffd093d1d94,44406646,0,0x0,8
tick,0x7ffd093d1d94,44422325,0,0x0,8
tick,0x7ffd093d1d94,44438594,0,0x0,8
tick,0x7ffd093d1d94,44453694,0,0x0,8
tick,0x7ffd093d1d94,44469248,0,0x0,8
tick,0x7ffd093d1d94,44484520,0,0x0,8
tick,0x7ffd093d1d94,44500341,0,0x0,8
tick,0x7ffd093d1d94,44516185,0,0x0,8
tick,0x7ffd093d1d94,44532005,0,0x0,8
tick,0x7ffd093d1d94,44547275,0,0x0,8
tick,0x7ffd093d1d94,44563222,0,0x0,8
tick,0x7ffd093d1d94,44578849,0,0x0,8
tick,0x7ffd093d1d94,44594524,0,0x0,8
tick,0x7ffd093d1d94,44610498,0,0x0,8
tick,0x7ffd093d1d94,44627410,0,0x0,8
tick,0x7ffd093d1d94,44642286,0,0x0,8
tick,0x7ffd093d1d94,44658414,0,0x0,8
tick,0x7ffd093d1d94,44673257,0,0x0,8
tick,0x7ffd093d1d94,44688444,0,0x0,8
tick,0x7ffd093d1d94,44703980,0,0x0,8
tick,0x7ffd093d1d94,44719527,0,0x0,8
tick,0x7ffd093d1d94,44735121,0,0x0,8
tick,0x7ffd093d1d94,44750373,0,0x0,8
tick,0x7ffd093d1d94,44765463,0,0x0,8
tick,0x7ffd093d1d94,44781637,0,0x0,8
tick,0x7ffd093d1d94,44797740,0,0x0,8
tick,0x7ffd093d1d94,44812937,0,0x0,8
tick,0x7ffd093d1d94,44828579,0,0x0,8
tick,0x7ffd093d1d94,44844370,0,0x0,8
tick,0x7ffd093d1d94,44860055,0,0x0,8
tick,0x7ffd093d1d94,44875838,0,0x0,8
tick,0x7ffd093d1d94,44891519,0,0x0,8
tick,0x7ffd093d1d94,44906953,0,0x0,8
tick,0x7ffd093d1d94,44922762,0,0x0,8
tick,0x7ffd093d1d94,44938027,0,0x0,8
tick,0x7ffd093d1d94,44953173,0,0x0,8
tick,0x7ffd093d1d94,44969155,0,0x0,8
tick,0x7ffd093d1d94,44985306,0,0x0,8
tick,0x7ffd093d1d94,45000332,0,0x0,8
tick,0x7ffd093d1d94,45016023,0,0x0,8
tick,0x7ffd093d1d94,45031436,0,0x0,8
tick,0x7ffd093d1d94,45047336,0,0x0,8
tick,0x7ffd093d1d94,45062876,0,0x0,8
tick,0x7ffd093d1d94,45078654,0,0x0,8
tick,0x7ffd093d1d94,45093516,0,0x0,8
tick,0x7ffd093d1d94,45108878,0,0x0,8
tick,0x7ffd093d1d94,45124334,0,0x0,8
tick,0x7ffd093d1d94,45140141,0,0x0,8
tick,0x7ffd093d1d94,45155546,0,0x0,8
tick,0x7ffd093d1d94,45170952,0,0x0,8
tick,0x7ffd093d1d94,45186227,0,0x0,8
tick,0x7ffd093d1d94,45202173,0,0x0,8
tick,0x7ffd093d1d94,45217547,0,0x0,8
tick,0x7ffd093d1d94,45232976,0,0x0,8
tick,0x7ffd093d1d94,45248022,0,0x0,8
tick,0x7ffd093d1d94,45263616,0,0x0,8
tick,0x7ffd093d1d94,45279580,0,0x0,8
tick,0x7ffd093d1d94,45295522,0,0x0,8
tick,0x7ffd093d1d94,45310682,0,0x0,8
tick,0x7ffd093d1d94,45326168,0,0x0,8
tick,0x7ffd093d1d94,45341417,0,0x0,8
tick,0x7ffd093d1d94,45356791,0,0x0,8
tick,0x7ffd093d1d94,45371930,0,0x0,8
tick,0x7ffd093d1d94,45387566,0,0x0,8
tick,0x7ffd093d1d94,45403762,0,0x0,8
tick,0x7ffd093d1d94,45419475,0,0x0,8
tick,0x7ffd093d1d94,45434706,0,0x0,8
tick,0x7ffd093d1d94,45450297,0,0x0,8
tick,0x7ffd093d1d94,45466066,0,0x0,8
tick,0x7ffd093d1d94,45482040,0,0x0,8
tick,0x7ffd093d1d94,45497408,0,0x0,8
tick,0x7ffd093d1d94,45512740,0,0x0,8
tick,0x7ffd093d1d94,45527792,0,0x0,8
tick,0x7ffd093d1d94,45543673,0,0x0,8
tick,0x7ffd093d1d94,45559329,0,0x0,8
tick,0x7ffd093d1d94,45574411,0,0x0,8
tick,0x7ffd093d1d94,45590207,0,0x0,8
tick,0x7ffd093d1d94,45605499,0,0x0,8
tick,0x7ffd093d1d94,45620294,0,0x0,8
tick,0x7ffd093d1d94,45636429,0,0x0,8
tick,0x7ffd093d1d94,45651501,0,0x0,8
tick,0x7ffd093d1d94,45667735,0,0x0,8
tick,0x7ffd093d1d94,45683149,0,0x0,8
tick,0x7ffd093d1d94,45698579,0,0x0,8
tick,0x7ffd093d1d94,45713643,0,0x0,8
tick,0x7ffd093d1d94,45729576,0,0x0,8
tick,0x7ffd093d1d94,45745480,0,0x0,8
tick,0x7ffd093d1d94,45761523,0,0x0,8
tick,0x7ffd093d1d94,45777895,0,0x0,8
tick,0x7ffd093d1d94,45793237,0,0x0,8
tick,0x7ffd093d1d94,45808775,0,0x0,8
tick,0x7ffd093d1d94,45824125,0,0x0,8
tick,0x7ffd093d1d94,45839695,0,0x0,8
tick,0x7ffd093d1d94,45855260,0,0x0,8
tick,0x7ffd093d1d94,45870849,0,0x0,8
tick,0x7ffd093d1d94,45886113,0,0x0,8
tick,0x7ffd093d1d94,45901414,0,0x0,8
tick,0x7ffd093d1d94,45918206,0,0x0,8
tick,0x7ffd093d1d94,45932171,0,0x0,8
tick,0x7ffd093d1d94,45948235,0,0x0,8
tick,0x7ffd093d1d94,45963849,0,0x0,8
tick,0x7ffd093d1d94,45979287,0,0x0,8
tick,0x7ffd093d1d94,45994565,0,0x0,8
tick,0x7ffd093d1d94,46010536,0,0x0,8
tick,0x7ffd093d1d94,46026428,0,0x0,8
tick,0x7ffd093d1d94,46041279,0,0x0,8
tick,0x7ffd093d1d94,46057364,0,0x0,8
tick,0x7ffd093d1d94,46072577,0,0x0,8
tick,0x7ffd093d1d94,46088088,0,0x0,8
tick,0x7ffd093d1d94,46103970,0,0x0,8
tick,0x7ffd093d1d94,46119744,0,0x0,8
tick,0x7ffd093d1d94,46135111,0,0x0,8
tick,0x7ffd093d1d94,46150592,0,0x0,8
tick,0x7ffd093d1d94,46166410,0,0x0,8
tick,0x7ffd093d1d94,46181504,0,0x0,8
tick,0x7ffd093d1d94,46197536,0,0x0,8
tick,0x7ffd093d1d94,46213144,0,0x0,8
tick,0x7ffd093d1d94,46228595,0,0x0,8
tick,0x7ffd093d1d94,46244669,0,0x0,8
tick,0x7ffd093d1d94,46261048,0,0x0,8
tick,0x7ffd093d1d94,46276812,0,0x0,8
tick,0x7ffd093d1d94,46292679,0,0x0,8
tick,0x7ffd093d1d94,46308638,0,0x0,8
tick,0x7ffd093d1d94,46324197,0,0x0,8
tick,0x7ffd093d1d94,46340339,0,0x0,8
tick,0x7ffd093d1d94,46355655,0,0x0,8
tick,0x7ffd093d1d94,46371430,0,0x0,8
tick,0x7ffd093d1d94,46387132,0,0x0,8
tick,0x7ffd093d1d94,46403343,0,0x0,8
tick,0x7ffd093d1d94,46418836,0,0x0,8
tick,0x7ffd093d1d94,46434698,0,0x0,8
tick,0x7ffd093d1d94,46450602,0,0x0,8
tick,0x7ffd093d1d94,46466072,0,0x0,8
tick,0x7ffd093d1d94,46481619,0,0x0,8
tick,0x7ffd093d1d94,46496778,0,0x0,8
tick,0x7ffd093d1d94,46512185,0,0x0,8
tick,0x7ffd093d1d94,46528140,0,0x0,8
tick,0x7ffd093d1d94,46543745,0,0x0,8
tick,0x7ffd093d1d94,46559180,0,0x0,8
tick,0x7ffd093d1d94,46574720,0,0x0,8
tick,0x7ffd093d1d94,46590375,0,0x0,8
tick,0x7ffd093d1d94,46605606,0,0x0,8
tick,0x7ffd093d1d94,46621125,0,0x0,8
tick,0x7ffd093d1d94,46636667,0,0x0,8
tick,0x7ffd093d1d94,46652097,0,0x0,8
tick,0x7ffd093d1d94,46668026,0,0x0,8
tick,0x7ffd093d1d94,46683652,0,0x0,8
tick,0x7ffd093d1d94,46699453,0,0x0,8
tick,0x7ffd093d1d94,46714982,0,0x0,8
tick,0x7ffd093d1d94,46730278,0,0x0,8
tick,0x7ffd093d1d94,46745562,0,0x0,8
tick,0x7ffd093d1d94,46761155,0,0x0,8
tick,0x7ffd093d1d94,46776560,0,0x0,8
tick,0x7ffd093d1d94,46791219,0,0x0,8
tick,0x7ffd093d1d94,46806185,0,0x0,8
tick,0x7ffd093d1d94,46821938,0,0x0,8
tick,0x7ffd093d1d94,46836861,0,0x0,8
tick,0x7ffd093d1d94,46852622,0,0x0,8
tick,0x7ffd093d1d94,46867885,0,0x0,8
tick,0x7ffd093d1d94,46883723,0,0x0,8
tick,0x7ffd093d1d94,46898782,0,0x0,8
tick,0x7ffd093d1d94,46914801,0,0x0,8
tick,0x7ffd093d1d94,46930447,0,0x0,8
tick,0x7ffd093d1d94,46945801,0,0x0,8
tick,0x7ffd093d1d94,46961097,0,0x0,8
tick,0x7ffd093d1d94,46976640,0,0x0,8
tick,0x7ffd093d1d94,46991633,0,0x0,8
tick,0x7ffd093d1d94,47006783,0,0x0,8
tick,0x7ffd093d1d94,47021766,0,0x0,8
tick,0x7ffd093d1d94,47037510,0,0x0,8
tick,0x7ffd093d1d94,47052700,0,0x0,8
tick,0x7ffd093d1d94,47068761,0,0x0,8
tick,0x7ffd093d1d94,47084449,0,0x0,8
tick,0x7ffd093d1d94,47099817,0,0x0,8
tick,0x7ffd093d1d94,47115372,0,0x0,8
tick,0x7ffd093d1d94,47130984,0,0x0,8
tick,0x7ffd093d1d94,47146280,0,0x0,8
tick,0x7ffd093d1d94,47162204,0,0x0,8
tick,0x7ffd093d1d94,47177357,0,0x0,8
tick,0x7ffd093d1d94,47192764,0,0x0,8
tick,0x7ffd093d1d94,47208373,0,0x0,8
tick,0x7ffd093d1d94,47223719,0,0x0,8
tick,0x7ffd093d1d94,47239918,0,0x0,8
tick,0x7ffd093d1d94,47255093,0,0x0,8
tick,0x7ffd093d1d94,47270943,0,0x0,8
tick,0x7ffd093d1d94,47286267,0,0x0,8
tick,0x7ffd093d1d94,47301825,0,0x0,8
tick,0x7ffd093d1d94,47317652,0,0x0,8
tick,0x7ffd093d1d94,47333189,0,0x0,8
tick,0x7ffd093d1d94,47347890,0,0x0,8
tick,0x7ffd093d1d94,47364089,0,0x0,8
tick,0x7ffd093d1d94,47379586,0,0x0,8
tick,0x7ffd093d1d94,47395206,0,0x0,8
tick,0x7ffd093d1d94,47410021,0,0x0,8
tick,0x7ffd093d1d94,47425933,0,0x0,8
tick,0x7ffd093d1d94,47441708,0,0x0,8
tick,0x7ffd093d1d94,47457161,0,0x0,8
tick,0x7ffd093d1d94,47472197,0,0x0,8
tick,0x7ffd093d1d94,47488204,0,0x0,8
tick,0x7ffd093d1d94,47503905,0,0x0,8
tick,0x7ffd093d1d94,47519391,0,0x0,8
tick,0x7ffd093d1d94,47535432,0,0x0,8
tick,0x7ffd093d1d94,47550734,0,0x0,8
tick,0x7ffd093d1d94,47566542,0,0x0,8
tick,0x7ffd093d1d94,47582158,0,0x0,8
tick,0x7ffd093d1d94,47597568,0,0x0,8
tick,0x7ffd093d1d94,47613188,0,0x0,8
tick,0x7ffd093d1d94,47629814,0,0x0,8
tick,0x7ffd093d1d94,47645144,0,0x0,8
tick,0x7ffd093d1d94,47660202,0,0x0,8
tick,0x7ffd093d1d94,47675792,0,0x0,8
tick,0x7ffd093d1d94,47690409,0,0x0,8
tick,0x7ffd093d1d94,47706125,0,0x0,8
tick,0x7ffd093d1d94,47721854,0,0x0,8
tick,0x7ffd093d1d94,47737114,0,0x0,8
tick,0x7ffd093d1d94,47752234,0,0x0,8
tick,0x7ffd093d1d94,47768285,0,0x0,8
tick,0x7ffd093d1d94,47783976,0,0x0,8
tick,0x7ffd093d1d94,47799467,0,0x0,8
tick,0x7ffd093d1d94,47814732,0,0x0,8
tick,0x7ffd093d1d94,47830168,0,0x0,8
tick,0x7ffd093d1d94,47844997,0,0x0,8
tick,0x7ffd093d1d94,47860451,0,0x0,8
tick,0x7ffd093d1d94,47876257,0,0x0,8
tick,0x7ffd093d1d94,47891525,0,0x0,8
tick,0x7ffd093d1d94,47906718,0,0x0,8
tick,0x7ffd093d1d94,47922080,0,0x0,8
tick,0x7ffd093d1d94,47937697,0,0x0,8
tick,0x7ffd093d1d94,47953020,0,0x0,8
tick,0x7ffd093d1d94,47968690,0,0x0,8
tick,0x7ffd093d1d94,47984580,0,0x0,8
tick,0x7ffd093d1d94,47999741,0,0x0,8
tick,0x7ffd093d1d94,48015153,0,0x0,8
tick,0x7ffd093d1d94,48031122,0,0x0,8
tick,0x7ffd093d1d94,48046044,0,0x0,8
tick,0x7ffd093d1d94,48061199,0,0x0,8
tick,0x7ffd093d1d94,48077291,0,0x0,8
tick,0x7ffd093d1d94,48093227,0,0x0,8
tick,0x7ffd093d1d94,48108201,0,0x0,8
tick,0x7ffd093d1d94,48123821,0,0x0,8
tick,0x7ffd093d1d94,48139258,0,0x0,8
tick,0x7ffd093d1d94,48155094,0,0x0,8
tick,0x7ffd093d1d94,48170653,0,0x0,8
tick,0x7ffd093d1d94,48186190,0,0x0,8
tick,0x7ffd093d1d94,48202279,0,0x0,8
tick,0x7ffd093d1d94,48217804,0,0x0,8
tick,0x7ffd093d1d94,48233511,0,0x0,8
tick,0x7ffd093d1d94,48249626,0,0x0,8
tick,0x7ffd093d1d94,48265535,0,0x0,8
tick,0x7ffd093d1d94,48280012,0,0x0,8
tick,0x7ffd093d1d94,48295879,0,0x0,8
tick,0x7ffd093d1d94,48311514,0,0x0,8
tick,0x7ffd093d1d94,48326814,0,0x0,8
tick,0x7ffd093d1d94,48342406,0,0x0,8
tick,0x7ffd093d1d94,48357883,0,0x0,8
tick,0x7ffd093d1d94,48373362,0,0x0,8
tick,0x7ffd093d1d94,48388625,0,0x0,8
tick,0x7ffd093d1d94,48404461,0,0x0,8
tick,0x7ffd093d1d94,48420527,0,0x0,8
tick,0x7ffd093d1d94,48436359,0,0x0,8
tick,0x7ffd093d1d94,48452262,0,0x0,8
tick,0x7ffd093d1d94,48467382,0,0x0,8
tick,0x7ffd093d1d94,48482234,0,0x0,8
tick,0x7ffd093d1d94,48498117,0,0x0,8
tick,0x7ffd093d1d94,48513498,0,0x0,8
tick,0x7ffd093d1d94,48528364,0,0x0,8
tick,0x7ffd093d1d94,48544343,0,0x0,8
tick,0x7ffd093d1d94,48560545,0,0x0,8
tick,0x7ffd093d1d94,48575266,0,0x0,8
tick,0x7ffd093d1d94,48591047,0,0x0,8
tick,0x7ffd093d1d94,48606196,0,0x0,8
tick,0x7ffd093d1d94,48621744,0,0x0,8
tick,0x7ffd093d1d94,48636993,0,0x0,8
tick,0x7ffd093d1d94,48652925,0,0x0,8
tick,0x7ffd093d1d94,48668785,0,0x0,8
tick,0x7ffd093d1d94,48684789,0,0x0,8
tick,0x7ffd093d1d94,48700302,0,0x0,8
tick,0x7ffd093d1d94,48715955,0,0x0,8
tick,0x7ffd093d1d94,48730994,0,0x0,8
tick,0x7ffd093d1d94,48747038,0,0x0,8
tick,0x7ffd093d1d94,48762371,0,0x0,8
tick,0x7ffd093d1d94,48777771,0,0x0,8
tick,0x7ffd093d1d94,48792499,0,0x0,8
tick,0x7ffd093d1d94,48808551,0,0x0,8
tick,0x7ffd093d1d94,48823729,0,0x0,8
tick,0x7ffd093d1d94,48838620,0,0x0,8
tick,0x7ffd093d1d94,48854210,0,0x0,8
tick,0x7ffd093d1d94,48869502,0,0x0,8
tick,0x7ffd093d1d94,48885507,0,0x0,8
tick,0x7ffd093d1d94,48900393,0,0x0,8
tick,0x7ffd093d1d94,48916179,0,0x0,8
tick,0x7ffd093d1d94,48931273,0,0x0,8
tick,0x7ffd093d1d94,48946579,0,0x0,8
tick,0x7ffd093d1d94,48961767,0,0x0,8
tick,0x7ffd093d1d94,48977185,0,0x0,8
tick,0x7ffd093d1d94,48992839,0,0x0,8
tick,0x7ffd093d1d94,49008944,0,0x0,8
tick,0x7ffd093d1d94,49024657,0,0x0,8
tick,0x7ffd093d1d94,49040668,0,0x0,8
tick,0x7ffd093d1d94,49055419,0,0x0,8
tick,0x7ffd093d1d94,49071255,0,0x0,8
tick,0x7ffd093d1d94,49086343,0,0x0,8
tick,0x7ffd093d1d94,49102089,0,0x0,8
tick,0x7ffd093d1d94,49117625,0,0x0,8
tick,0x7ffd093d1d94,49132833,0,0x0,8
tick,0x7ffd093d1d94,49148539,0,0x0,8
tick,0x7ffd093d1d94,49163310,0,0x0,8
tick,0x7ffd093d1d94,49179071,0,0x0,8
tick,0x7ffd093d1d94,49194469,0,0x0,8
tick,0x7ffd093d1d94,49209693,0,0x0,8
tick,0x7ffd093d1d94,49225651,0,0x0,8
tick,0x7ffd093d1d94,49240573,0,0x0,8
tick,0x7ffd093d1d94,49255427,0,0x0,8
tick,0x7ffd093d1d94,49270432,0,0x0,8
tick,0x7ffd093d1d94,49286427,0,0x0,8
tick,0x7ffd093d1d94,49301375,0,0x0,8
tick,0x7ffd093d1d94,49316366,0,0x0,8
tick,0x7ffd093d1d94,49332376,0,0x0,8
tick,0x7ffd093d1d94,49347605,0,0x0,8
tick,0x7ffd093d1d94,49363661,0,0x0,8
tick,0x7ffd093d1d94,49379450,0,0x0,8
tick,0x7ffd093d1d94,49394886,0,0x0,8
tick,0x7ffd093d1d94,49410910,0,0x0,8
tick,0x7ffd093d1d94,49426260,0,0x0,8
tick,0x7ffd093d1d94,49441613,0,0x0,8
tick,0x7ffd093d1d94,49457682,0,0x0,8
tick,0x7ffd093d1d94,49473561,0,0x0,8
tick,0x7ffd093d1d94,49489461,0,0x0,8
tick,0x7ffd093d1d94,49505218,0,0x0,8
tick,0x7ffd093d1d94,49520730,0,0x0,8
tick,0x7ffd093d1d94,49536265,0,0x0,8
tick,0x7ffd093d1d94,49552155,0,0x0,8
tick,0x7ffd093d1d94,49566901,0,0x0,8
tick,0x7ffd093d1d94,49582517,0,0x0,8
tick,0x7ffd093d1d94,49598027,0,0x0,8
tick,0x7ffd093d1d94,49613983,0,0x0,8
tick,0x7ffd093d1d94,49629996,0,0x0,8
tick,0x7ffd093d1d94,49646023,0,0x0,8
tick,0x7ffd093d1d94,49661718,0,0x0,8
tick,0x7ffd093d1d94,49676826,0,0x0,8
tick,0x7ffd093d1d94,49692890,0,0x0,8
tick,0x7ffd093d1d94,49708444,0,0x0,8
tick,0x7ffd093d1d94,49724117,0,0x0,8
tick,0x7ffd093d1d94,49740050,0,0x0,8
tick,0x7ffd093d1d94,49755916,0,0x0,8
tick,0x7ffd093d1d94,49771818,0,0x0,8
tick,0x7ffd093d1d94,49787839,0,0x0,8
tick,0x7ffd093d1d94,49803709,0,0x0,8
tick,0x7ffd093d1d94,49818475,0,0x0,8
tick,0x7ffd093d1d94,49834784,0,0x0,8
tick,0x7ffd093d1d94,49850081,0,0x0,8
tick,0x7ffd093d1d94,49865426,0,0x0,8
tick,0x7ffd093d1d94,49881298,0,0x0,8
tick,0x7ffd093d1d94,49897154,0,0x0,8
tick,0x7ffd093d1d94,49913227,0,0x0,8
tick,0x7ffd093d1d94,49929177,0,0x0,8
tick,0x7ffd093d1d94,49945346,0,0x0,8
tick,0x7ffd093d1d94,49960951,0,0x0,8
tick,0x7ffd093d1d94,49975786,0,0x0,8
tick,0x7ffd093d1d94,49991958,0,0x0,8
tick,0x7ffd093d1d94,50007725,0,0x0,8
tick,0x7ffd093d1d94,50023057,0,0x0,8
tick,0x7ffd093d1d94,50039311,0,0x0,8
tick,0x7ffd093d1d94,50054455,0,0x0,8
tick,0x7ffd093d1d94,50069540,0,0x0,8
tick,0x7ffd093d1d94,50085121,0,0x0,8
tick,0x7ffd093d1d94,50100630,0,0x0,8
tick,0x7ffd093d1d94,50116683,0,0x0,8
tick,0x7ffd093d1d94,50132976,0,0x0,8
tick,0x7ffd093d1d94,50149407,0,0x0,8
tick,0x7ffd093d1d94,50163896,0,0x0,8
tick,0x7ffd093d1d94,50179607,0,0x0,8
tick,0x7ffd093d1d94,50195078,0,0x0,8
tick,0x7ffd093d1d94,50210508,0,0x0,8
tick,0x7ffd093d1d94,50226173,0,0x0,8
tick,0x7ffd093d1d94,50241690,0,0x0,8
tick,0x7ffd093d1d94,50257783,0,0x0,8
tick,0x7ffd093d1d94,50273605,0,0x0,8
tick,0x7ffd093d1d94,50288996,0,0x0,8
tick,0x7ffd093d1d94,50303863,0,0x0,8
tick,0x7ffd093d1d94,50319697,0,0x0,8
tick,0x7ffd093d1d94,50335575,0,0x0,8
tick,0x7ffd093d1d94,50350887,0,0x0,8
tick,0x7ffd093d1d94,50366894,0,0x0,8
tick,0x7ffd093d1d94,50382795,0,0x0,8
tick,0x7ffd093d1d94,50398731,0,0x0,8
tick,0x7ffd093d1d94,50414516,0,0x0,8
tick,0x7ffd093d1d94,50429675,0,0x0,8
tick,0x7ffd093d1d94,50446024,0,0x0,8
tick,0x7ffd093d1d94,50461587,0,0x0,8
tick,0x7ffd093d1d94,50477252,0,0x0,8
tick,0x7ffd093d1d94,50492705,0,0x0,8
tick,0x7ffd093d1d94,50507986,0,0x0,8
tick,0x7ffd093d1d94,50523385,0,0x0,8
tick,0x7ffd093d1d94,50538954,0,0x0,8
tick,0x7ffd093d1d94,50554898,0,0x0,8
tick,0x7ffd093d1d94,50570076,0,0x0,8
tick,0x7ffd093d1d94,50586051,0,0x0,8
tick,0x7ffd093d1d94,50601635,0,0x0,8
tick,0x7ffd093d1d94,50616615,0,0x0,8
tick,0x7ffd093d1d94,50631889,0,0x0,8
tick,0x7ffd093d1d94,50646625,0,0x0,8
tick,0x7ffd093d1d94,50662754,0,0x0,8
tick,0x7ffd093d1d94,50678557,0,0x0,8
tick,0x7ffd093d1d94,50693668,0,0x0,8
tick,0x7ffd093d1d94,50709584,0,0x0,8
tick,0x7ffd093d1d94,50725668,0,0x0,8
tick,0x7ffd093d1d94,50742044,0,0x0,8
tick,0x7ffd093d1d94,50757441,0,0x0,8
tick,0x7ffd093d1d94,50773507,0,0x0,8
tick,0x7ffd093d1d94,50789806,0,0x0,8
tick,0x7ffd093d1d94,50805016,0,0x0,8
tick,0x7ffd093d1d94,50820981,0,0x0,8
tick,0x7ffd093d1d94,50837377,0,0x0,8
tick,0x7ffd093d1d94,50852761,0,0x0,8
tick,0x7ffd093d1d94,50868721,0,0x0,8
tick,0x7ffd093d1d94,50884222,0,0x0,8
tick,0x7ffd093d1d94,50899928,0,0x0,8
tick,0x7ffd093d1d94,50914702,0,0x0,8
tick,0x7ffd093d1d94,50929874,0,0x0,8
tick,0x7ffd093d1d94,50945711,0,0x0,8
tick,0x7ffd093d1d94,50960427,0,0x0,8
tick,0x7ffd093d1d94,50975995,0,0x0,8
tick,0x7ffd093d1d94,50991141,0,0x0,8
tick,0x7ffd093d1d94,51006611,0,0x0,8
tick,0x7ffd093d1d94,51022434,0,0x0,8
tick,0x7ffd093d1d94,51037828,0,0x0,8
tick,0x7ffd093d1d94,51053178,0,0x0,8
tick,0x7ffd093d1d94,51068863,0,0x0,8
tick,0x7ffd093d1d94,51084774,0,0x0,8
tick,0x7ffd093d1d94,51100792,0,0x0,8
tick,0x7ffd093d1d94,51116904,0,0x0,8
tick,0x7ffd093d1d94,51132274,0,0x0,8
tick,0x7ffd093d1d94,51148277,0,0x0,8
tick,0x7ffd093d1d94,51164146,0,0x0,8
tick,0x7ffd093d1d94,51179357,0,0x0,8
tick,0x7ffd093d1d94,51194993,0,0x0,8
tick,0x7ffd093d1d94,51210207,0,0x0,8
tick,0x7ffd093d1d94,51225082,0,0x0,8
tick,0x7ffd093d1d94,51240792,0,0x0,8
tick,0x7ffd093d1d94,51256811,0,0x0,8
tick,0x7ffd093d1d94,51272753,0,0x0,8
tick,0x7ffd093d1d94,51288882,0,0x0,8
tick,0x7ffd093d1d94,51304768,0,0x0,8
tick,0x7ffd093d1d94,51320696,0,0x0,8
tick,0x7ffd093d1d94,51336507,0,0x0,8
tick,0x7ffd093d1d94,51352209,0,0x0,8
tick,0x7ffd093d1d94,51367362,0,0x0,8
tick,0x7ffd093d1d94,51383152,0,0x0,8
tick,0x7ffd093d1d94,51398790,0,0x0,8
tick,0x7ffd093d1d94,51415028,0,0x0,8
tick,0x7ffd093d1d94,51429933,0,0x0,8
tick,0x7ffd093d1d94,51446025,0,0x0,8
tick,0x7ffd093d1d94,51461053,0,0x0,8
tick,0x7ffd093d1d94,51476964,0,0x0,8
tick,0x7ffd093d1d94,51492102,0,0x0,8
tick,0x7ffd093d1d94,51507203,0,0x0,8
tick,0x7ffd093d1d94,51523190,0,0x0,8
tick,0x7ffd093d1d94,51538838,0,0x0,8
tick,0x7ffd093d1d94,51553816,0,0x0,8
tick,0x7ffd093d1d94,51569479,0,0x0,8
tick,0x7ffd093d1d94,51585634,0,0x0,8
tick,0x7ffd093d1d94,51601043,0,0x0,8
tick,0x7ffd093d1d94,51616277,0,0x0,8
tick,0x7ffd093d1d94,51632133,0,0x0,8
tick,0x7ffd093d1d94,51647624,0,0x0,8
tick,0x7ffd093d1d94,51662918,0,0x0,8
tick,0x7ffd093d1d94,51678210,0,0x0,8
tick,0x7ffd093d1d94,51693385,0,0x0,8
tick,0x7ffd093d1d94,51709652,0,0x0,8
tick,0x7ffd093d1d94,51724923,0,0x0,8
tick,0x7ffd093d1d94,51741147,0,0x0,8
tick,0x7ffd093d1d94,51755902,0,0x0,8
tick,0x7ffd093d1d94,51771251,0,0x0,8
tick,0x7ffd093d1d94,51786888,0,0x0,8
tick,0x7ffd093d1d94,51802365,0,0x0,8
tick,0x7ffd093d1d94,51817963,0,0x0,8
tick,0x7ffd093d1d94,51833467,0,0x0,8
tick,0x7ffd093d1d94,51848800,0,0x0,8
tick,0x7ffd093d1d94,51863625,0,0x0,8
tick,0x7ffd093d1d94,51879762,0,0x0,8
tick,0x7ffd093d1d94,51894665,0,0x0,8
tick,0x7ffd093d1d94,51909986,0,0x0,8
tick,0x7ffd093d1d94,51925578,0,0x0,8
tick,0x7ffd093d1d94,51940676,0,0x0,8
tick,0x7ffd093d1d94,51955545,0,0x0,8
tick,0x7ffd093d1d94,51971289,0,0x0,8
tick,0x7ffd093d1d94,51987137,0,0x0,8
tick,0x7ffd093d1d94,52002510,0,0x0,8
tick,0x7ffd093d1d94,52017489,0,0x0,8
tick,0x7ffd093d1d94,52033756,0,0x0,8
tick,0x7ffd093d1d94,52049249,0,0x0,8
tick,0x7ffd093d1d94,52064617,0,0x0,8
tick,0x7ffd093d1d94,52079537,0,0x0,8
tick,0x7ffd093d1d94,52095083,0,0x0,8
tick,0x7ffd093d1d94,52110452,0,0x0,8
tick,0x7ffd093d1d94,52126119,0,0x0,8
tick,0x7ffd093d1d94,52141845,0,0x0,8
tick,0x7ffd093d1d94,52157617,0,0x0,8
tick,0x7ffd093d1d94,52173572,0,0x0,8
tick,0x7ffd093d1d94,52189245,0,0x0,8
tick,0x7ffd093d1d94,52204698,0,0x0,8
tick,0x7ffd093d1d94,52220386,0,0x0,8
tick,0x7ffd093d1d94,52235375,0,0x0,8
tick,0x7ffd093d1d94,52250989,0,0x0,8
tick,0x7ffd093d1d94,52266904,0,0x0,8
tick,0x7ffd093d1d94,52282095,0,0x0,8
tick,0x7ffd093d1d94,52297459,0,0x0,8
tick,0x7ffd093d1d94,52313332,0,0x0,8
tick,0x7ffd093d1d94,52328938,0,0x0,8
tick,0x7ffd093d1d94,52345027,0,0x0,8
tick,0x7ffd093d1d94,52360484,0,0x0,8
tick,0x7ffd093d1d94,52376040,0,0x0,8
tick,0x7ffd093d1d94,52391509,0,0x0,8
tick,0x7ffd093d1d94,52407827,0,0x0,8
tick,0x7ffd093d1d94,52423101,0,0x0,8
tick,0x7ffd093d1d94,52438031,0,0x0,8
tick,0x7ffd093d1d94,52453559,0,0x0,8
tick,0x7ffd093d1d94,52468728,0,0x0,8
tick,0x7ffd093d1d94,52484721,0,0x0,8
tick,0x7ffd093d1d94,52500446,0,0x0,8
tick,0x7ffd093d1d94,52516626,0,0x0,8
tick,0x7ffd093d1d94,52531863,0,0x0,8
tick,0x7ffd093d1d94,52547303,0,0x0,8
tick,0x7ffd093d1d94,52562755,0,0x0,8
tick,0x7ffd093d1d94,52578343,0,0x0,8
tick,0x7ffd093d1d94,52593145,0,0x0,8
tick,0x7ffd093d1d94,52609073,0,0x0,8
tick,0x7ffd093d1d94,52624347,0,0x0,8
tick,0x7ffd093d1d94,52639633,0,0x0,8
tick,0x7ffd093d1d94,52654861,0,0x0,8
tick,0x7ffd093d1d94,52670890,0,0x0,8
tick,0x7ffd093d1d94,52686365,0,0x0,8
tick,0x7ffd093d1d94,52701773,0,0x0,8
tick,0x7ffd093d1d94,52717718,0,0x0,8
tick,0x7ffd093d1d94,52732882,0,0x0,8
tick,0x7ffd093d1d94,52748532,0,0x0,8
tick,0x7ffd093d1d94,52763424,0,0x0,8
tick,0x7ffd093d1d94,52779147,0,0x0,8
tick,0x7ffd093d1d94,52794311,0,0x0,8
tick,0x7ffd093d1d94,52809923,0,0x0,8
tick,0x7ffd093d1d94,52825702,0,0x0,8
tick,0x7ffd093d1d94,52841382,0,0x0,8
tick,0x7ffd093d1d94,52856873,0,0x0,8
tick,0x7ffd093d1d94,52872941,0,0x0,8
tick,0x7ffd093d1d94,52888782,0,0x0,8
tick,0x7ffd093d1d94,52903988,0,0x0,8
tick,0x7ffd093d1d94,52919210,0,0x0,8
tick,0x7ffd093d1d94,52934629,0,0x0,8
tick,0x7ffd093d1d94,52949890,0,0x0,8
tick,0x7ffd093d1d94,52964695,0,0x0,8
tick,0x7ffd093d1d94,52980404,0,0x0,8
tick,0x7ffd093d1d94,52996547,0,0x0,8
tick,0x7ffd093d1d94,53011737,0,0x0,8
tick,0x7ffd093d1d94,53027188,0,0x0,8
tick,0x7ffd093d1d94,53042225,0,0x0,8
tick,0x7ffd093d1d94,53057545,0,0x0,8
tick,0x7ffd093d1d94,53073367,0,0x0,8
tick,0x7ffd093d1d94,53088332,0,0x0,8
tick,0x7ffd093d1d94,53103838,0,0x0,8
tick,0x7ffd093d1d94,53119892,0,0x0,8
tick,0x7ffd093d1d94,53135152,0,0x0,8
tick,0x7ffd093d1d94,53151207,0,0x0,8
tick,0x7ffd093d1d94,53166397,0,0x0,8
tick,0x7ffd093d1d94,53181747,0,0x0,8
tick,0x7ffd093d1d94,53198041,0,0x0,8
tick,0x7ffd093d1d94,53213114,0,0x0,8
tick,0x7ffd093d1d94,53229352,0,0x0,8
tick,0x7ffd093d1d94,53245249,0,0x0,8
tick,0x7ffd093d1d94,53260518,0,0x0,8
tick,0x7ffd093d1d94,53276265,0,0x0,8
tick,0x7ffd093d1d94,53291500,0,0x0,8
tick,0x7ffd093d1d94,53307410,0,0x0,8
tick,0x7ffd093d1d94,53322954,0,0x0,8
tick,0x7ffd093d1d94,53337380,0,0x0,8
tick,0x7ffd093d1d94,53352659,0,0x0,8
tick,0x7ffd093d1d94,53367873,0,0x0,8
tick,0x7ffd093d1d94,53383313,0,0x0,8
tick,0x7ffd093d1d94,53398740,0,0x0,8
tick,0x7ffd093d1d94,53414119,0,0x0,8
tick,0x7ffd093d1d94,53430123,0,0x0,8
tick,0x7ffd093d1d94,53445221,0,0x0,8
tick,0x7ffd093d1d94,53460467,0,0x0,8
tick,0x7ffd093d1d94,53475663,0,0x0,8
tick,0x7ffd093d1d94,53491561,0,0x0,8
tick,0x7ffd093d1d94,53506366,0,0x0,8
tick,0x7ffd093d1d94,53522510,0,0x0,8
tick,0x7ffd093d1d94,53538333,0,0x0,8
tick,0x7ffd093d1d94,53554069,0,0x0,8
tick,0x7ffd093d1d94,53569980,0,0x0,8
tick,0x7ffd093d1d94,53585486,0,0x0,8
tick,0x7ffd093d1d94,53601674,0,0x0,8
tick,0x7ffd093d1d94,53617095,0,0x0,8
tick,0x7ffd093d1d94,53632543,0,0x0,8
tick,0x7ffd093d1d94,53647850,0,0x0,8
tick,0x7ffd093d1d94,53663760,0,0x0,8
tick,0x7ffd093d1d94,53679241,0,0x0,8
tick,0x7ffd093d1d94,53694592,0,0x0,8
tick,0x7ffd093d1d94,53709934,0,0x0,8
tick,0x7ffd093d1d94,53726361,0,0x0,8
tick,0x7ffd093d1d94,53742106,0,0x0,8
tick,0x7ffd093d1d94,53758067,0,0x0,8
tick,0x7ffd093d1d94,53774004,0,0x0,8
tick,0x7ffd093d1d94,53790003,0,0x0,8
tick,0x7ffd093d1d94,53805525,0,0x0,8
tick,0x7ffd093d1d94,53821520,0,0x0,8
tick,0x7ffd093d1d94,53836983,0,0x0,8
tick,0x7ffd093d1d94,53852711,0,0x0,8
tick,0x7ffd093d1d94,53867558,0,0x0,8
tick,0x7ffd093d1d94,53882486,0,0x0,8
tick,0x7ffd093d1d94,53898007,0,0x0,8
tick,0x7ffd093d1d94,53914021,0,0x0,8
tick,0x7ffd093d1d94,53929970,0,0x0,8
tick,0x7ffd093d1d94,53946289,0,0x0,8
tick,0x7ffd093d1d94,53961711,0,0x0,8
tick,0x7ffd093d1d94,53977777,0,0x0,8
tick,0x7ffd093d1d94,53993071,0,0x0,8
tick,0x7ffd093d1d94,54008770,0,0x0,8
tick,0x7ffd093d1d94,54023926,0,0x0,8
tick,0x7ffd093d1d94,54039286,0,0x0,8
tick,0x7ffd093d1d94,54054494,0,0x0,8
tick,0x7ffd093d1d94,54069784,0,0x0,8
tick,0x7ffd093d1d94,54085084,0,0x0,8
tick,0x7ffd093d1d94,54100412,0,0x0,8
tick,0x7ffd093d1d94,54115892,0,0x0,8
tick,0x7ffd093d1d94,54132053,0,0x0,8
tick,0x7ffd093d1d94,54147160,0,0x0,8
tick,0x7ffd093d1d94,54162441,0,0x0,8
tick,0x7ffd093d1d94,54177907,0,0x0,8
tick,0x7ffd093d1d94,54193237,0,0x0,8
tick,0x7ffd093d1d94,54208969,0,0x0,8
tick,0x7ffd093d1d94,54224192,0,0x0,8
tick,0x7ffd093d1d94,54239799,0,0x0,8
tick,0x7ffd093d1d94,54255456,0,0x0,8
tick,0x7ffd093d1d94,54271279,0,0x0,8
tick,0x7ffd093d1d94,54287059,0,0x0,8
tick,0x7ffd093d1d94,54303135,0,0x0,8
tick,0x7ffd093d1d94,54318598,0,0x0,8
tick,0x7ffd093d1d94,54334637,0,0x0,8
tick,0x7ffd093d1d94,54349401,0,0x0,8
tick,0x7ffd093d1d94,54364291,0,0x0,8
tick,0x7ffd093d1d94,54380570,0,0x0,8
tick,0x7ffd093d1d94,54396392,0,0x0,8
tick,0x7ffd093d1d94,54412026,0,0x0,8
tick,0x7ffd093d1d94,54427446,0,0x0,8
tick,0x7ffd093d1d94,54443238,0,0x0,8
tick,0x7ffd093d1d94,54458983,0,0x0,8
tick,0x7ffd093d1d94,54473489,0,0x0,8
tick,0x7ffd093d1d94,54489293,0,0x0,8
tick,0x7ffd093d1d94,54504414,0,0x0,8
tick,0x7ffd093d1d94,54519957,0,0x0,8
tick,0x7ffd093d1d94,54535406,0,0x0,8
tick,0x7ffd093d1d94,54550783,0,0x0,8
tick,0x7ffd093d1d94,54566559,0,0x0,8
tick,0x7ffd093d1d94,54581587,0,0x0,8
tick,0x7ffd093d1d94,54597496,0,0x0,8
tick,0x7ffd093d1d94,54612737,0,0x0,8
tick,0x7ffd093d1d94,54628497,0,0x0,8
tick,0x7ffd093d1d94,54643581,0,0x0,8
tick,0x7ffd093d1d94,54658578,0,0x0,8
tick,0x7ffd093d1d94,54674517,0,0x0,8
tick,0x7ffd093d1d94,54689364,0,0x0,8
tick,0x7ffd093d1d94,54704945,0,0x0,8
tick,0x7ffd093d1d94,54720479,0,0x0,8
tick,0x7ffd093d1d94,54735780,0,0x0,8
tick,0x7ffd093d1d94,54751718,0,0x0,8
tick,0x7ffd093d1d94,54767548,0,0x0,8
tick,0x7ffd093d1d94,54783293,0,0x0,8
tick,0x7ffd093d1d94,54799454,0,0x0,8
tick,0x7ffd093d1d94,54815257,0,0x0,8
tick,0x7ffd093d1d94,54831253,0,0x0,8
tick,0x7ffd093d1d94,54846756,0,0x0,8
tick,0x7ffd093d1d94,54862984,0,0x0,8
tick,0x7ffd093d1d94,54878682,0,0x0,8
tick,0x7ffd093d1d94,54894260,0,0x0,8
tick,0x7ffd093d1d94,54908896,0,0x0,8
tick,0x7ffd093d1d94,54924840,0,0x0,8
tick,0x7ffd093d1d94,54940082,0,0x0,8
tick,0x7ffd093d1d94,54956673,0,0x0,8
tick,0x7ffd093d1d94,54971692,0,0x0,8
tick,0x7ffd093d1d94,54987499,0,0x0,8
tick,0x7ffd093d1d94,55003502,0,0x0,8
tick,0x7ffd093d1d94,55019086,0,0x0,8
tick,0x7ffd093d1d94,55034930,0,0x0,8
tick,0x7ffd093d1d94,55049590,0,0x0,8
tick,0x7ffd093d1d94,55065177,0,0x0,8
tick,0x7ffd093d1d94,55081317,0,0x0,8
tick,0x7ffd093d1d94,55095900,0,0x0,8
tick,0x7ffd093d1d94,55111187,0,0x0,8
tick,0x7ffd093d1d94,55126244,0,0x0,8
tick,0x7ffd093d1d94,55141400,0,0x0,8
tick,0x7ffd093d1d94,55156634,0,0x0,8
tick,0x7ffd093d1d94,55172259,0,0x0,8
tick,0x7ffd093d1d94,55188254,0,0x0,8
tick,0x7ffd093d1d94,55203768,0,0x0,8
tick,0x7ffd093d1d94,55219957,0,0x0,8
tick,0x7ffd093d1d94,55235419,0,0x0,8
tick,0x7ffd093d1d94,55251799,0,0x0,8
tick,0x7ffd093d1d94,55267643,0,0x0,8
tick,0x7ffd093d1d94,55283760,0,0x0,8
tick,0x7ffd093d1d94,55299006,0,0x0,8
tick,0x7ffd093d1d94,55314535,0,0x0,8
tick,0x7ffd093d1d94,55330294,0,0x0,8
tick,0x7ffd093d1d94,55346144,0,0x0,8
tick,0x7ffd093d1d94,55362330,0,0x0,8
tick,0x7ffd093d1d94,55377704,0,0x0,8
tick,0x7ffd093d1d94,55393082,0,0x0,8
tick,0x7ffd093d1d94,55408523,0,0x0,8
tick,0x7ffd093d1d94,55424355,0,0x0,8
tick,0x7ffd093d1d94,55439606,0,0x0,8
tick,0x7ffd093d1d94,55454804,0,0x0,8
tick,0x7ffd093d1d94,55469898,0,0x0,8
tick,0x7ffd093d1d94,55485455,0,0x0,8
tick,0x7ffd093d1d94,55501478,0,0x0,8
tick,0x7ffd093d1d94,55516807,0,0x0,8
tick,0x7ffd093d1d94,55532250,0,0x0,8
tick,0x7ffd093d1d94,55548125,0,0x0,8
tick,0x7ffd093d1d94,55564242,0,0x0,8
tick,0x7ffd093d1d94,55580012,0,0x0,8
tick,0x7ffd093d1d94,55595835,0,0x0,8
tick,0x7ffd093d1d94,55611873,0,0x0,8
tick,0x7ffd093d1d94,55626472,0,0x0,8
tick,0x7ffd093d1d94,55642534,0,0x0,8
tick,0x7ffd093d1d94,55657902,0,0x0,8
tick,0x7ffd093d1d94,55673606,0,0x0,8
tick,0x7ffd093d1d94,55688565,0,0x0,8
tick,0x7ffd093d1d94,55704435,0,0x0,8
tick,0x7ffd093d1d94,55719811,0,0x0,8
tick,0x7ffd093d1d94,55735939,0,0x0,8
tick,0x7ffd093d1d94,55751267,0,0x0,8
tick,0x7ffd093d1d94,55766494,0,0x0,8
tick,0x7ffd093d1d94,55782696,0,0x0,8
tick,0x7ffd093d1d94,55799392,0,0x0,8
tick,0x7ffd093d1d94,55814685,0,0x0,8
tick,0x7ffd093d1d94,55829635,0,0x0,8
tick,0x7ffd093d1d94,55844567,0,0x0,8
tick,0x7ffd093d1d94,55860423,0,0x0,8
tick,0x7ffd093d1d94,55875730,0,0x0,8
tick,0x7ffd093d1d94,55891599,0,0x0,8
tick,0x7ffd093d1d94,55906976,0,0x0,8
tick,0x7ffd093d1d94,55922391,0,0x0,8
tick,0x7ffd093d1d94,55937604,0,0x0,8
tick,0x7ffd093d1d94,55953486,0,0x0,8
tick,0x7ffd093d1d94,55969090,0,0x0,8
tick,0x7ffd093d1d94,55984440,0,0x0,8
tick,0x7ffd093d1d94,55999781,0,0x0,8
tick,0x7ffd093d1d94,56015258,0,0x0,8
tick,0x7ffd093d1d94,56030773,0,0x0,8
tick,0x7ffd093d1d94,56045674,0,0x0,8
tick,0x7ffd093d1d94,56061107,0,0x0,8
tick,0x7ffd093d1d94,56076311,0,0x0,8
tick,0x7ffd093d1d94,56092183,0,0x0,8
tick,0x7ffd093d1d94,56107276,0,0x0,8
tick,0x7ffd093d1d94,56123298,0,0x0,8
tick,0x7ffd093d1d94,56138422,0,0x0,8
tick,0x7ffd093d1d94,56154264,0,0x0,8
tick,0x7ffd093d1d94,56169702,0,0x0,8
tick,0x7ffd093d1d94,56185105,0,0x0,8
tick,0x7ffd093d1d94,56200214,0,0x0,8
tick,0x7ffd093d1d94,56216050,0,0x0,8
tick,0x7ffd093d1d94,56231458,0,0x0,8
tick,0x7ffd093d1d94,56247028,0,0x0,8
tick,0x7ffd093d1d94,56262251,0,0x0,8
tick,0x7ffd093d1d94,56277463,0,0x0,8
tick,0x7ffd093d1d94,56292406,0,0x0,8
tick,0x7ffd093d1d94,56307871,0,0x0,8
tick,0x7ffd093d1d94,56323901,0,0x0,8
tick,0x7ffd093d1d94,56339485,0,0x0,8
tick,0x7ffd093d1d94,56355533,0,0x0,8
tick,0x7ffd093d1d94,56370902,0,0x0,8
tick,0x7ffd093d1d94,56386214,0,0x0,8
tick,0x7ffd093d1d94,56401796,0,0x0,8
tick,0x7ffd093d1d94,56416910,0,0x0,8
tick,0x7ffd093d1d94,56432410,0,0x0,8
tick,0x7ffd093d1d94,56448547,0,0x0,8
tick,0x7ffd093d1d94,56464270,0,0x0,8
tick,0x7ffd093d1d94,56480418,0,0x0,8
tick,0x7ffd093d1d94,56495458,0,0x0,8
tick,0x7ffd093d1d94,56511564,0,0x0,8
tick,0x7ffd093d1d94,56527315,0,0x0,8
tick,0x7ffd093d1d94,56543296,0,0x0,8
tick,0x7ffd093d1d94,56559012,0,0x0,8
tick,0x7ffd093d1d94,56575103,0,0x0,8
tick,0x7ffd093d1d94,56590870,0,0x0,8
tick,0x7ffd093d1d94,56606439,0,0x0,8
tick,0x7ffd093d1d94,56622185,0,0x0,8
tick,0x7ffd093d1d94,56637616,0,0x0,8
tick,0x7ffd093d1d94,56652686,0,0x0,8
tick,0x7ffd093d1d94,56668090,0,0x0,8
tick,0x7ffd093d1d94,56683952,0,0x0,8
tick,0x7ffd093d1d94,56699937,0,0x0,8
tick,0x7ffd093d1d94,56715864,0,0x0,8
tick,0x7ffd093d1d94,56731896,0,0x0,8
tick,0x7ffd093d1d94,56747967,0,0x0,8
tick,0x7ffd093d1d94,56763570,0,0x0,8
tick,0x7ffd093d1d94,56778715,0,0x0,8
tick,0x7ffd093d1d94,56793911,0,0x0,8
tick,0x7ffd093d1d94,56809403,0,0x0,8
tick,0x7ffd093d1d94,56825464,0,0x0,8
tick,0x7ffd093d1d94,56840087,0,0x0,8
tick,0x7ffd093d1d94,56856147,0,0x0,8
tick,0x7ffd093d1d94,56871231,0,0x0,8
tick,0x7ffd093d1d94,56886409,0,0x0,8
tick,0x7ffd093d1d94,56901794,0,0x0,8
tick,0x7ffd093d1d94,56917568,0,0x0,8
tick,0x7ffd093d1d94,56933152,0,0x0,8
tick,0x7ffd093d1d94,56949527,0,0x0,8
tick,0x7ffd093d1d94,56965130,0,0x0,8
tick,0x7ffd093d1d94,56981437,0,0x0,8
tick,0x7ffd093d1d94,56996628,0,0x0,8
tick,0x7ffd093d1d94,57012326,0,0x0,8
tick,0x7ffd093d1d94,57028103,0,0x0,8
tick,0x7ffd093d1d94,57043726,0,0x0,8
tick,0x7ffd093d1d94,57058963,0,0x0,8
tick,0x7ffd093d1d94,57073876,0,0x0,8
tick,0x7ffd093d1d94,57089061,0,0x0,8
tick,0x7ffd093d1d94,57104762,0,0x0,8
tick,0x7ffd093d1d94,57119920,0,0x0,8
tick,0x7ffd093d1d94,57135662,0,0x0,8
tick,0x7ffd093d1d94,57151609,0,0x0,8
tick,0x7ffd093d1d94,57167432,0,0x0,8
tick,0x7ffd093d1d94,57183160,0,0x0,8
tick,0x7ffd093d1d94,57198591,0,0x0,8
tick,0x7ffd093d1d94,57214965,0,0x0,8
tick,0x7ffd093d1d94,57230316,0,0x0,8
tick,0x7ffd093d1d94,57246173,0,0x0,8
tick,0x7ffd093d1d94,57262011,0,0x0,8
tick,0x7ffd093d1d94,57277005,0,0x0,8
tick,0x7ffd093d1d94,57291924,0,0x0,8
tick,0x7ffd093d1d94,57307552,0,0x0,8
tick,0x7ffd093d1d94,57323482,0,0x0,8
tick,0x7ffd093d1d94,57339472,0,0x0,8
tick,0x7ffd093d1d94,57355487,0,0x0,8
tick,0x7ffd093d1d94,57371470,0,0x0,8
tick,0x7ffd093d1d94,57386483,0,0x0,8
tick,0x7ffd093d1d94,57401457,0,0x0,8
tick,0x7ffd093d1d94,57417498,0,0x0,8
tick,0x7ffd093d1d94,57433045,0,0x0,8
tick,0x7ffd093d1d94,57449023,0,0x0,8
tick,0x7ffd093d1d94,57464999,0,0x0,8
tick,0x7ffd093d1d94,57480608,0,0x0,8
tick,0x7ffd093d1d94,57496038,0,0x0,8
tick,0x7ffd093d1d94,57511796,0,0x0,8
tick,0x7ffd093d1d94,57527017,0,0x0,8
tick,0x7ffd093d1d94,57542478,0,0x0,8
tick,0x7ffd093d1d94,57557816,0,0x0,8
tick,0x7ffd093d1d94,57574213,0,0x0,8
tick,0x7ffd093d1d94,57588398,0,0x0,8
tick,0x7ffd093d1d94,57603303,0,0x0,8
tick,0x7ffd093d1d94,57618675,0,0x0,8
tick,0x7ffd093d1d94,57634481,0,0x0,8
tick,0x7ffd093d1d94,57650242,0,0x0,8
tick,0x7ffd093d1d94,57665606,0,0x0,8
tick,0x7ffd093d1d94,57681007,0,0x0,8
tick,0x7ffd093d1d94,57696099,0,0x0,8
tick,0x7ffd093d1d94,57711588,0,0x0,8
tick,0x7ffd093d1d94,57727271,0,0x0,8
tick,0x7ffd093d1d94,57742208,0,0x0,8
tick,0x7ffd093d1d94,57757053,0,0x0,8
tick,0x7ffd093d1d94,57773470,0,0x0,8
tick,0x7ffd093d1d94,57789011,0,0x0,8
tick,0x7ffd093d1d94,57804180,0,0x0,8
tick,0x7ffd093d1d94,57819704,0,0x0,8
tick,0x7ffd093d1d94,57834901,0,0x0,8
tick,0x7ffd093d1d94,57850852,0,0x0,8
tick,0x7ffd093d1d94,57866159,0,0x0,8
tick,0x7ffd093d1d94,57881118,0,0x0,8
tick,0x7ffd093d1d94,57896964,0,0x0,8
tick,0x7ffd093d1d94,57912145,0,0x0,8
tick,0x7ffd093d1d94,57927918,0,0x0,8
tick,0x7ffd093d1d94,57943442,0,0x0,8
tick,0x7ffd093d1d94,57958439,0,0x0,8
tick,0x7ffd093d1d94,57974678,0,0x0,8
tick,0x7ffd093d1d94,57990791,0,0x0,8
tick,0x7ffd093d1d94,58006026,0,0x0,8
tick,0x7ffd093d1d94,58022486,0,0x0,8
tick,0x7ffd093d1d94,58037166,0,0x0,8
tick,0x7ffd093d1d94,58052832,0,0x0,8
tick,0x7ffd093d1d94,58068533,0,0x0,8
tick,0x7ffd093d1d94,58084244,0,0x0,8
tick,0x7ffd093d1d94,58100278,0,0x0,8
tick,0x7ffd093d1d94,58115612,0,0x0,8
tick,0x7ffd093d1d94,58131690,0,0x0,8
tick,0x7ffd093d1d94,58147104,0,0x0,8
tick,0x7ffd093d1d94,58162908,0,0x0,8
tick,0x7ffd093d1d94,58178425,0,0x0,8
tick,0x7ffd093d1d94,58194212,0,0x0,8
tick,0x7ffd093d1d94,58209838,0,0x0,8
tick,0x7ffd093d1d94,58225279,0,0x0,8
tick,0x7ffd093d1d94,58240986,0,0x0,8
tick,0x7ffd093d1d94,58256692,0,0x0,8
tick,0x7ffd093d1d94,58271921,0,0x0,8
tick,0x7ffd093d1d94,58288046,0,0x0,8
tick,0x7ffd093d1d94,58304006,0,0x0,8
tick,0x7ffd093d1d94,58319990,0,0x0,8
tick,0x7ffd093d1d94,58335823,0,0x0,8
tick,0x7ffd093d1d94,58351813,0,0x0,8
tick,0x7ffd093d1d94,58367076,0,0x0,8
tick,0x7ffd093d1d94,58381997,0,0x0,8
tick,0x7ffd093d1d94,58397697,0,0x0,8
tick,0x7ffd093d1d94,58413085,0,0x0,8
tick,0x7ffd093d1d94,58428374,0,0x0,8
tick,0x7ffd093d1d94,58444058,0,0x0,8
tick,0x7ffd093d1d94,58459718,0,0x0,8
tick,0x7ffd093d1d94,58475077,0,0x0,8
tick,0x7ffd093d1d94,58490920,0,0x0,8
tick,0x7ffd093d1d94,58506254,0,0x0,8
tick,0x7ffd093d1d94,58521963,0,0x0,8
tick,0x7ffd093d1d94,58537380,0,0x0,8
tick,0x7ffd093d1d94,58553111,0,0x0,8
tick,0x7ffd093d1d94,58567761,0,0x0,8
tick,0x7ffd093d1d94,58583312,0,0x0,8
tick,0x7ffd093d1d94,58599329,0,0x0,8
tick,0x7ffd093d1d94,58614223,0,0x0,8
tick,0x7ffd093d1d94,58629587,0,0x0,8
tick,0x7ffd093d1d94,58644629,0,0x0,8
tick,0x7ffd093d1d94,58660261,0,0x0,8
tick,0x7ffd093d1d94,58676058,0,0x0,8
tick,0x7ffd093d1d94,58692010,0,0x0,8
tick,0x7ffd093d1d94,58707163,0,0x0,8
tick,0x7ffd093d1d94,58722930,0,0x0,8
tick,0x7ffd093d1d94,58738284,0,0x0,8
tick,0x7ffd093d1d94,58753737,0,0x0,8
tick,0x7ffd093d1d94,58769581,0,0x0,8
tick,0x7ffd093d1d94,58784617,0,0x0,8
tick,0x7ffd093d1d94,58800044,0,0x0,8
tick,0x7ffd093d1d94,58815733,0,0x0,8
tick,0x7ffd093d1d94,58831791,0,0x0,8
tick,0x7ffd093d1d94,58847249,0,0x0,8
tick,0x7ffd093d1d94,58862823,0,0x0,8
tick,0x7ffd093d1d94,58878267,0,0x0,8
tick,0x7ffd093d1d94,58893998,0,0x0,8
tick,0x7ffd093d1d94,58910156,0,0x0,8
tick,0x7ffd093d1d94,58925712,0,0x0,8
tick,0x7ffd093d1d94,58941041,0,0x0,8
tick,0x7ffd093d1d94,58956602,0,0x0,8
tick,0x7ffd093d1d94,58972272,0,0x0,8
tick,0x7ffd093d1d94,58988098,0,0x0,8
tick,0x7ffd093d1d94,59003586,0,0x0,8
tick,0x7ffd093d1d94,59019056,0,0x0,8
tick,0x7ffd093d1d94,59034906,0,0x0,8
tick,0x7ffd093d1d94,59050850,0,0x0,8
tick,0x7ffd093d1d94,59066472,0,0x0,8
tick,0x7ffd093d1d94,59081993,0,0x0,8
tick,0x7ffd093d1d94,59097446,0,0x0,8
tick,0x7ffd093d1d94,59112690,0,0x0,8
tick,0x7ffd093d1d94,59128988,0,0x0,8
tick,0x7ffd093d1d94,59144193,0,0x0,8
tick,0x7ffd093d1d94,59160075,0,0x0,8
tick,0x7ffd093d1d94,59175526,0,0x0,8
tick,0x7ffd093d1d94,59191196,0,0x0,8
tick,0x7ffd093d1d94,59206755,0,0x0,8
tick,0x7ffd093d1d94,59222547,0,0x0,8
tick,0x7ffd093d1d94,59238287,0,0x0,8
tick,0x7ffd093d1d94,59253976,0,0x0,8
tick,0x7ffd093d1d94,59269984,0,0x0,8
tick,0x7ffd093d1d94,59285067,0,0x0,8
tick,0x7ffd093d1d94,59301370,0,0x0,8
tick,0x7ffd093d1d94,59317362,0,0x0,8
tick,0x7ffd093d1d94,59332883,0,0x0,8
tick,0x7ffd093d1d94,59348184,0,0x0,8
tick,0x7ffd093d1d94,59363396,0,0x0,8
tick,0x7ffd093d1d94,59378883,0,0x0,8
tick,0x7ffd093d1d94,59394618,0,0x0,8
tick,0x7ffd093d1d94,59410188,0,0x0,8
tick,0x7ffd093d1d94,59425525,0,0x0,8
tick,0x7ffd093d1d94,59441325,0,0x0,8
tick,0x7ffd093d1d94,59457382,0,0x0,8
tick,0x7ffd093d1d94,59472617,0,0x0,8
tick,0x7ffd093d1d94,59488140,0,0x0,8
tick,0x7ffd093d1d94,59503628,0,0x0,8
tick,0x7ffd093d1d94,59519034,0,0x0,8
tick,0x7ffd093d1d94,59534643,0,0x0,8
tick,0x7ffd093d1d94,59550466,0,0x0,8
tick,0x7ffd093d1d94,59566075,0,0x0,8
tick,0x7ffd093d1d94,59581444,0,0x0,8
tick,0x7ffd093d1d94,59597017,0,0x0,8
tick,0x7ffd093d1d94,59612704,0,0x0,8
tick,0x7ffd093d1d94,59628491,0,0x0,8
tick,0x7ffd093d1d94,59643605,0,0x0,8
tick,0x7ffd093d1d94,59659697,0,0x0,8
tick,0x7ffd093d1d94,59674973,0,0x0,8
tick,0x7ffd093d1d94,59691028,0,0x0,8
tick,0x7ffd093d1d94,59706451,0,0x0,8
tick,0x7ffd093d1d94,59721526,0,0x0,8
tick,0x7ffd093d1d94,59737360,0,0x0,8
tick,0x7ffd093d1d94,59752274,0,0x0,8
tick,0x7ffd093d1d94,59768117,0,0x0,8
tick,0x7ffd093d1d94,59783325,0,0x0,8
tick,0x7ffd093d1d94,59798662,0,0x0,8
tick,0x7ffd093d1d94,59814304,0,0x0,8
tick,0x7ffd093d1d94,59829598,0,0x0,8
tick,0x7ffd093d1d94,59844936,0,0x0,8
tick,0x7ffd093d1d94,59860313,0,0x0,8
tick,0x7ffd093d1d94,59875235,0,0x0,8
tick,0x7ffd093d1d94,59890579,0,0x0,8
tick,0x7ffd093d1d94,59906104,0,0x0,8
tick,0x7ffd093d1d94,59921471,0,0x0,8
tick,0x7ffd093d1d94,59936505,0,0x0,8
tick,0x7ffd093d1d94,59952458,0,0x0,8
tick,0x7ffd093d1d94,59968484,0,0x0,8
tick,0x7ffd093d1d94,59983989,0,0x0,8
tick,0x7ffd093d1d94,59999234,0,0x0,8
tick,0x7ffd093d1d94,60014951,0,0x0,8
tick,0x7ffd093d1d94,60030692,0,0x0,8
tick,0x7ffd093d1d94,60046714,0,0x0,8
tick,0x7ffd093d1d94,60062235,0,0x0,8
tick,0x7ffd093d1d94,60078218,0,0x0,8
tick,0x7ffd093d1d94,60094671,0,0x0,8
tick,0x7ffd093d1d94,60110121,0,0x0,8
tick,0x7ffd093d1d94,60125660,0,0x0,8
tick,0x7ffd093d1d94,60141698,0,0x0,8
tick,0x7ffd093d1d94,60156795,0,0x0,8
tick,0x7ffd093d1d94,60172056,0,0x0,8
tick,0x7ffd093d1d94,60187696,0,0x0,8
tick,0x7ffd093d1d94,60202908,0,0x0,8
tick,0x7ffd093d1d94,60218318,0,0x0,8
tick,0x7ffd093d1d94,60234574,0,0x0,8
tick,0x7ffd093d1d94,60250445,0,0x0,8
tick,0x7ffd093d1d94,60265405,0,0x0,8
tick,0x7ffd093d1d94,60281086,0,0x0,8
tick,0x7ffd093d1d94,60297361,0,0x0,8
tick,0x7ffd093d1d94,60312773,0,0x0,8
tick,0x7ffd093d1d94,60328512,0,0x0,8
tick,0x7ffd093d1d94,60343932,0,0x0,8
tick,0x7ffd093d1d94,60358918,0,0x0,8
tick,0x7ffd093d1d94,60374592,0,0x0,8
tick,0x7ffd093d1d94,60390116,0,0x0,8
tick,0x7ffd093d1d94,60406001,0,0x0,8
tick,0x7ffd093d1d94,60421215,0,0x0,8
tick,0x7ffd093d1d94,60436585,0,0x0,8
tick,0x7ffd093d1d94,60452401,0,0x0,8
tick,0x7ffd093d1d94,60468648,0,0x0,8
tick,0x7ffd093d1d94,60485023,0,0x0,8
tick,0x7ffd093d1d94,60500089,0,0x0,8
tick,0x7ffd093d1d94,60516016,0,0x0,8
tick,0x7ffd093d1d94,60531415,0,0x0,8
tick,0x7ffd093d1d94,60546910,0,0x0,8
tick,0x7ffd093d1d94,60562407,0,0x0,8
tick,0x7ffd093d1d94,60577331,0,0x0,8
tick,0x7ffd093d1d94,60593123,0,0x0,8
tick,0x7ffd093d1d94,60608747,0,0x0,8
tick,0x7ffd093d1d94,60624258,0,0x0,8
tick,0x7ffd093d1d94,60640115,0,0x0,8
tick,0x7ffd093d1d94,60655404,0,0x0,8
tick,0x7ffd093d1d94,60670461,0,0x0,8
tick,0x7ffd093d1d94,60686089,0,0x0,8
tick,0x7ffd093d1d94,60701581,0,0x0,8
tick,0x7ffd093d1d94,60716961,0,0x0,8
tick,0x7ffd093d1d94,60732294,0,0x0,8
tick,0x7ffd093d1d94,60747348,0,0x0,8
tick,0x7ffd093d1d94,60763220,0,0x0,8
tick,0x7ffd093d1d94,60778861,0,0x0,8
tick,0x7ffd093d1d94,60795381,0,0x0,8
tick,0x7ffd093d1d94,60811562,0,0x0,8
tick,0x7ffd093d1d94,60827480,0,0x0,8
tick,0x7ffd093d1d94,60842847,0,0x0,8
tick,0x7ffd093d1d94,60858550,0,0x0,8
tick,0x7ffd093d1d94,60874287,0,0x0,8
tick,0x7ffd093d1d94,60889630,0,0x0,8
tick,0x7ffd093d1d94,60905297,0,0x0,8
tick,0x7ffd093d1d94,60920447,0,0x0,8
tick,0x7ffd093d1d94,60935566,0,0x0,8
tick,0x7ffd093d1d94,60951113,0,0x0,8
tick,0x7ffd093d1d94,60966432,0,0x0,8
tick,0x7ffd093d1d94,60981814,0,0x0,8
tick,0x7ffd093d1d94,60997101,0,0x0,8
tick,0x7ffd093d1d94,61013316,0,0x0,8
tick,0x7ffd093d1d94,61027956,0,0x0,8
tick,0x7ffd093d1d94,61043425,0,0x0,8
tick,0x7ffd093d1d94,61059412,0,0x0,8
tick,0x7ffd093d1d94,61074828,0,0x0,8
tick,0x7ffd093d1d94,61090220,0,0x0,8
tick,0x7ffd093d1d94,61105572,0,0x0,8
tick,0x7ffd093d1d94,61121232,0,0x0,8
tick,0x7ffd093d1d94,61136579,0,0x0,8
tick,0x7ffd093d1d94,61152089,0,0x0,8
tick,0x7ffd093d1d94,61167033,0,0x0,8
tick,0x7ffd093d1d94,61182286,0,0x0,8
tick,0x7ffd093d1d94,61197032,0,0x0,8
tick,0x7ffd093d1d94,61212454,0,0x0,8
tick,0x7ffd093d1d94,61228071,0,0x0,8
tick,0x7ffd093d1d94,61243702,0,0x0,8
tick,0x7ffd093d1d94,61259343,0,0x0,8
tick,0x7ffd093d1d94,61274545,0,0x0,8
tick,0x7ffd093d1d94,61290549,0,0x0,8
tick,0x7ffd093d1d94,61306315,0,0x0,8
tick,0x7ffd093d1d94,61322179,0,0x0,8
tick,0x7ffd093d1d94,61337832,0,0x0,8
tick,0x7ffd093d1d94,61353382,0,0x0,8
tick,0x7ffd093d1d94,61368482,0,0x0,8
tick,0x7ffd093d1d94,61383728,0,0x0,8
tick,0x7ffd093d1d94,61399159,0,0x0,8
tick,0x7ffd093d1d94,61414863,0,0x0,8
tick,0x7ffd093d1d94,61430534,0,0x0,8
tick,0x7ffd093d1d94,61446326,0,0x0,8
tick,0x7ffd093d1d94,61461591,0,0x0,8
tick,0x7ffd093d1d94,61477340,0,0x0,8
tick,0x7ffd093d1d94,61493206,0,0x0,8
tick,0x7ffd093d1d94,61508668,0,0x0,8
tick,0x7ffd093d1d94,61524698,0,0x0,8
tick,0x7ffd093d1d94,61540306,0,0x0,8
tick,0x7ffd093d1d94,61555523,0,0x0,8
tick,0x7ffd093d1d94,61570955,0,0x0,8
tick,0x7ffd093d1d94,61587090,0,0x0,8
tick,0x7ffd093d1d94,61602490,0,0x0,8
tick,0x7ffd093d1d94,61618187,0,0x0,8
tick,0x7ffd093d1d94,61633228,0,0x0,8
tick,0x7ffd093d1d94,61648321,0,0x0,8
tick,0x7ffd093d1d94,61664337,0,0x0,8
tick,0x7ffd093d1d94,61680331,0,0x0,8
tick,0x7ffd093d1d94,61697062,0,0x0,8
tick,0x7ffd093d1d94,61711796,0,0x0,8
tick,0x7ffd093d1d94,61726871,0,0x0,8
tick,0x7ffd093d1d94,61742310,0,0x0,8
tick,0x7ffd093d1d94,61757636,0,0x0,8
tick,0x7ffd093d1d94,61772829,0,0x0,8
tick,0x7ffd093d1d94,61788070,0,0x0,8
tick,0x7ffd093d1d94,61803522,0,0x0,8
tick,0x7ffd093d1d94,61819402,0,0x0,8
tick,0x7ffd093d1d94,61835040,0,0x0,8
tick,0x7ffd093d1d94,61850150,0,0x0,8
tick,0x7ffd093d1d94,61866223,0,0x0,8
tick,0x7ffd093d1d94,61881729,0,0x0,8
tick,0x7ffd093d1d94,61897010,0,0x0,8
tick,0x7ffd093d1d94,61913233,0,0x0,8
tick,0x7ffd093d1d94,61928286,0,0x0,8
tick,0x7ffd093d1d94,61944326,0,0x0,8
tick,0x7ffd093d1d94,61960155,0,0x0,8
tick,0x7ffd093d1d94,61975353,0,0x0,8
tick,0x7ffd093d1d94,61990689,0,0x0,8
tick,0x7ffd093d1d94,62006640,0,0x0,8
tick,0x7ffd093d1d94,62021639,0,0x0,8
tick,0x7ffd093d1d94,62036921,0,0x0,8
tick,0x7ffd093d1d94,62053065,0,0x0,8
tick,0x7ffd093d1d94,62068903,0,0x0,8
tick,0x7ffd093d1d94,62084839,0,0x0,8
tick,0x7ffd093d1d94,62099804,0,0x0,8
tick,0x7ffd093d1d94,62115388,0,0x0,8
tick,0x7ffd093d1d94,62131145,0,0x0,8
tick,0x7ffd093d1d94,62146772,0,0x0,8
tick,0x7ffd093d1d94,62161871,0,0x0,8
tick,0x7ffd093d1d94,62177673,0,0x0,8
tick,0x7ffd093d1d94,62193407,0,0x0,8
tick,0x7ffd093d1d94,62208769,0,0x0,8
tick,0x7ffd093d1d94,62224355,0,0x0,8
tick,0x7ffd093d1d94,62239715,0,0x0,8
tick,0x7ffd093d1d94,62255776,0,0x0,8
tick,0x7ffd093d1d94,62271789,0,0x0,8
tick,0x7ffd093d1d94,62287472,0,0x0,8
tick,0x7ffd093d1d94,62302692,0,0x0,8
tick,0x7ffd093d1d94,62317968,0,0x0,8
tick,0x7ffd093d1d94,62333159,0,0x0,8
tick,0x7ffd093d1d94,62348779,0,0x0,8
tick,0x7ffd093d1d94,62364627,0,0x0,8
tick,0x7ffd093d1d94,62380046,0,0x0,8
tick,0x7ffd093d1d94,62395798,0,0x0,8
tick,0x7ffd093d1d94,62410618,0,0x0,8
tick,0x7ffd093d1d94,62426138,0,0x0,8
tick,0x7ffd093d1d94,62442093,0,0x0,8
tick,0x7ffd093d1d94,62458118,0,0x0,8
tick,0x7ffd093d1d94,62473984,0,0x0,8
tick,0x7ffd093d1d94,62489520,0,0x0,8
tick,0x7ffd093d1d94,62505479,0,0x0,8
tick,0x7ffd093d1d94,62521427,0,0x0,8
tick,0x7ffd093d1d94,62537277,0,0x0,8
tick,0x7ffd093d1d94,62552519,0,0x0,8
tick,0x7ffd093d1d94,62567790,0,0x0,8
tick,0x7ffd093d1d94,62583038,0,0x0,8
tick,0x7ffd093d1d94,62598459,0,0x0,8
tick,0x7ffd093d1d94,62614059,0,0x0,8
tick,0x7ffd093d1d94,62629069,0,0x0,8
tick,0x7ffd093d1d94,62645085,0,0x0,8
tick,0x7ffd093d1d94,62660809,0,0x0,8
tick,0x7ffd093d1d94,62676261,0,0x0,8
tick,0x7ffd093d1d94,62691908,0,0x0,8
tick,0x7ffd093d1d94,62708026,0,0x0,8
tick,0x7ffd093d1d94,62723966,0,0x0,8
tick,0x7ffd093d1d94,62739409,0,0x0,8
tick,0x7ffd093d1d94,62754552,0,0x0,8
tick,0x7ffd093d1d94,62770159,0,0x0,8
tick,0x7ffd093d1d94,62785286,0,0x0,8
tick,0x7ffd093d1d94,62800287,0,0x0,8
tick,0x7ffd093d1d94,62816158,0,0x0,8
tick,0x7ffd093d1d94,62831338,0,0x0,8
tick,0x7ffd093d1d94,62846327,0,0x0,8
tick,0x7ffd093d1d94,62862330,0,0x0,8
tick,0x7ffd093d1d94,62877926,0,0x0,8
tick,0x7ffd093d1d94,62893114,0,0x0,8
tick,0x7ffd093d1d94,62908935,0,0x0,8
tick,0x7ffd093d1d94,62924439,0,0x0,8
tick,0x7ffd093d1d94,62939583,0,0x0,8
tick,0x7ffd093d1d94,62955196,0,0x0,8
tick,0x7ffd093d1d94,62971212,0,0x0,8
tick,0x7ffd093d1d94,62986802,0,0x0,8
tick,0x7ffd093d1d94,63001806,0,0x0,8
tick,0x7ffd093d1d94,63017446,0,0x0,8
tick,0x7ffd093d1d94,63032898,0,0x0,8
tick,0x7ffd093d1d94,63048811,0,0x0,8
tick,0x7ffd093d1d94,63063770,0,0x0,8
tick,0x7ffd093d1d94,63078892,0,0x0,8
tick,0x7ffd093d1d94,63094446,0,0x0,8
tick,0x7ffd093d1d94,63110050,0,0x0,8
tick,0x7ffd093d1d94,63125321,0,0x0,8
tick,0x7ffd093d1d94,63140675,0,0x0,8
tick,0x7ffd093d1d94,63156181,0,0x0,8
tick,0x7ffd093d1d94,63171973,0,0x0,8
tick,0x7ffd093d1d94,63188013,0,0x0,8
tick,0x7ffd093d1d94,63203545,0,0x0,8
tick,0x7ffd093d1d94,63219237,0,0x0,8
tick,0x7ffd093d1d94,63234215,0,0x0,8
tick,0x7ffd093d1d94,63249816,0,0x0,8
tick,0x7ffd093d1d94,63265409,0,0x0,8
tick,0x7ffd093d1d94,63280413,0,0x0,8
tick,0x7ffd093d1d94,63296588,0,0x0,8
tick,0x7ffd093d1d94,63312470,0,0x0,8
tick,0x7ffd093d1d94,63328802,0,0x0,8
tick,0x7ffd093d1d94,63343821,0,0x0,8
tick,0x7ffd093d1d94,63359162,0,0x0,8
tick,0x7ffd093d1d94,63374844,0,0x0,8
tick,0x7ffd093d1d94,63390871,0,0x0,8
tick,0x7ffd093d1d94,63406009,0,0x0,8
tick,0x7ffd093d1d94,63421088,0,0x0,8
tick,0x7ffd093d1d94,63436831,0,0x0,8
tick,0x7ffd093d1d94,63451767,0,0x0,8
tick,0x7ffd093d1d94,63467701,0,0x0,8
tick,0x7ffd093d1d94,63482998,0,0x0,8
tick,0x7ffd093d1d94,63499011,0,0x0,8
tick,0x7ffd093d1d94,63514691,0,0x0,8
tick,0x7ffd093d1d94,63530534,0,0x0,8
tick,0x7ffd093d1d94,63546833,0,0x0,8
tick,0x7ffd093d1d94,63563202,0,0x0,8
tick,0x7ffd093d1d94,63577336,0,0x0,8
tick,0x7ffd093d1d94,63592738,0,0x0,8
tick,0x7ffd093d1d94,63608713,0,0x0,8
tick,0x7ffd093d1d94,63624495,0,0x0,8
tick,0x7ffd093d1d94,63639314,0,0x0,8
tick,0x7ffd093d1d94,63655202,0,0x0,8
tick,0x7ffd093d1d94,63670698,0,0x0,8
tick,0x7ffd093d1d94,63686439,0,0x0,8
tick,0x7ffd093d1d94,63702274,0,0x0,8
tick,0x7ffd093d1d94,63717857,0,0x0,8
tick,0x7ffd093d1d94,63734118,0,0x0,8
tick,0x7ffd093d1d94,63748983,0,0x0,8
tick,0x7ffd093d1d94,63764863,0,0x0,8
tick,0x7ffd093d1d94,63779694,0,0x0,8
tick,0x7ffd093d1d94,63795191,0,0x0,8
tick,0x7ffd093d1d94,63810980,0,0x0,8
tick,0x7ffd093d1d94,63825737,0,0x0,8
tick,0x7ffd093d1d94,63841315,0,0x0,8
tick,0x7ffd093d1d94,63856586,0,0x0,8
tick,0x7ffd093d1d94,63872433,0,0x0,8
tick,0x7ffd093d1d94,63887493,0,0x0,8
tick,0x7ffd093d1d94,63902476,0,0x0,8
tick,0x7ffd093d1d94,63917487,0,0x0,8
tick,0x7ffd093d1d94,63932647,0,0x0,8
tick,0x7ffd093d1d94,63948214,0,0x0,8
tick,0x7ffd093d1d94,63963919,0,0x0,8
tick,0x7ffd093d1d94,63980053,0,0x0,8
tick,0x7ffd093d1d94,63995571,0,0x0,8
tick,0x7ffd093d1d94,64012710,0,0x0,8
tick,0x7ffd093d1d94,64026927,0,0x0,8
tick,0x7ffd093d1d94,64042327,0,0x0,8
tick,0x7ffd093d1d94,64058293,0,0x0,8
tick,0x7ffd093d1d94,64073552,0,0x0,8
tick,0x7ffd093d1d94,64088482,0,0x0,8
tick,0x7ffd093d1d94,64104179,0,0x0,8
tick,0x7ffd093d1d94,64120202,0,0x0,8
tick,0x7ffd093d1d94,64136140,0,0x0,8
tick,0x7ffd093d1d94,64152303,0,0x0,8
tick,0x7ffd093d1d94,64167747,0,0x0,8
tick,0x7ffd093d1d94,64182980,0,0x0,8
tick,0x7ffd093d1d94,64198212,0,0x0,8
tick,0x7ffd093d1d94,64214225,0,0x0,8
tick,0x7ffd093d1d94,64229324,0,0x0,8
tick,0x7ffd093d1d94,64244132,0,0x0,8
tick,0x7ffd093d1d94,64259602,0,0x0,8
tick,0x7ffd093d1d94,64275254,0,0x0,8
tick,0x7ffd093d1d94,64290918,0,0x0,8
tick,0x7ffd093d1d94,64306649,0,0x0,8
tick,0x7ffd093d1d94,64321722,0,0x0,8
tick,0x7ffd093d1d94,64337358,0,0x0,8
tick,0x7ffd093d1d94,64353514,0,0x0,8
tick,0x7ffd093d1d94,64368844,0,0x0,8
tick,0x7ffd093d1d94,64384153,0,0x0,8
tick,0x7ffd093d1d94,64399914,0,0x0,8
tick,0x7ffd093d1d94,64415976,0,0x0,8
tick,0x7ffd093d1d94,64431290,0,0x0,8
tick,0x7ffd093d1d94,64447046,0,0x0,8
tick,0x7ffd093d1d94,64462979,0,0x0,8
tick,0x7ffd093d1d94,64478500,0,0x0,8
tick,0x7ffd093d1d94,64493815,0,0x0,8
tick,0x7ffd093d1d94,64509793,0,0x0,8
tick,0x7ffd093d1d94,64525838,0,0x0,8
tick,0x7ffd093d1d94,64541025,0,0x0,8
tick,0x7ffd093d1d94,64556663,0,0x0,8
tick,0x7ffd093d1d94,64572623,0,0x0,8
tick,0x7ffd093d1d94,64587781,0,0x0,8
tick,0x7ffd093d1d94,64602709,0,0x0,8
tick,0x7ffd093d1d94,64618378,0,0x0,8
tick,0x7ffd093d1d94,64633883,0,0x0,8
tick,0x7ffd093d1d94,64649476,0,0x0,8
tick,0x7ffd093d1d94,64665035,0,0x0,8
tick,0x7ffd093d1d94,64680351,0,0x0,8
tick,0x7ffd093d1d94,64695950,0,0x0,8
tick,0x7ffd093d1d94,64711176,0,0x0,8
tick,0x7ffd093d1d94,64727684,0,0x0,8
tick,0x7ffd093d1d94,64743419,0,0x0,8
tick,0x7ffd093d1d94,64758771,0,0x0,8
tick,0x7ffd093d1d94,64774220,0,0x0,8
tick,0x7ffd093d1d94,64789504,0,0x0,8
tick,0x7ffd093d1d94,64804738,0,0x0,8
tick,0x7ffd093d1d94,64820297,0,0x0,8
tick,0x7ffd093d1d94,64835670,0,0x0,8
tick,0x7ffd093d1d94,64850869,0,0x0,8
tick,0x7ffd093d1d94,64866751,0,0x0,8
tick,0x7ffd093d1d94,64882340,0,0x0,8
tick,0x7ffd093d1d94,64898059,0,0x0,8
tick,0x7ffd093d1d94,64913682,0,0x0,8
tick,0x7ffd093d1d94,64929209,0,0x0,8
tick,0x7ffd093d1d94,64944332,0,0x0,8
tick,0x7ffd093d1d94,64960297,0,0x0,8
tick,0x7ffd093d1d94,64975888,0,0x0,8
tick,0x7ffd093d1d94,64991423,0,0x0,8
tick,0x7ffd093d1d94,65006970,0,0x0,8
tick,0x7ffd093d1d94,65022174,0,0x0,8
tick,0x7ffd093d1d94,65037320,0,0x0,8
tick,0x7ffd093d1d94,65052469,0,0x0,8
tick,0x7ffd093d1d94,65068097,0,0x0,8
tick,0x7ffd093d1d94,65084522,0,0x0,8
tick,0x7ffd093d1d94,65099605,0,0x0,8
tick,0x7ffd093d1d94,65115369,0,0x0,8
tick,0x7ffd093d1d94,65130336,0,0x0,8
tick,0x7ffd093d1d94,65145995,0,0x0,8
tick,0x7ffd093d1d94,65161559,0,0x0,8
tick,0x7ffd093d1d94,65176228,0,0x0,8
tick,0x7ffd093d1d94,65192375,0,0x0,8
tick,0x7ffd093d1d94,65208438,0,0x0,8
tick,0x7ffd093d1d94,65223899,0,0x0,8
tick,0x7ffd093d1d94,65239461,0,0x0,8
tick,0x7ffd093d1d94,65254769,0,0x0,8
tick,0x7ffd093d1d94,65270364,0,0x0,8
tick,0x7ffd093d1d94,65285864,0,0x0,8
tick,0x7ffd093d1d94,65301119,0,0x0,8
tick,0x7ffd093d1d94,65316623,0,0x0,8
tick,0x7ffd093d1d94,65331553,0,0x0,8
tick,0x7ffd093d1d94,65346716,0,0x0,8
tick,0x7ffd093d1d94,65362352,0,0x0,8
tick,0x7ffd093d1d94,65378193,0,0x0,8
tick,0x7ffd093d1d94,65393623,0,0x0,8
tick,0x7ffd093d1d94,65409192,0,0x0,8
tick,0x7ffd093d1d94,65425218,0,0x0,8
tick,0x7ffd093d1d94,65440537,0,0x0,8
tick,0x7ffd093d1d94,65455849,0,0x0,8
tick,0x7ffd093d1d94,65471202,0,0x0,8
tick,0x7ffd093d1d94,65486826,0,0x0,8
tick,0x7ffd093d1d94,65502814,0,0x0,8
tick,0x7ffd093d1d94,65518897,0,0x0,8
tick,0x7ffd093d1d94,65534600,0,0x0,8
tick,0x7ffd093d1d94,65549701,0,0x0,8
tick,0x7ffd093d1d94,65564972,0,0x0,8
tick,0x7ffd093d1d94,65580961,0,0x0,8
tick,0x7ffd093d1d94,65597420,0,0x0,8
tick,0x7ffd093d1d94,65612998,0,0x0,8
tick,0x7ffd093d1d94,65629083,0,0x0,8
tick,0x7ffd093d1d94,65644616,0,0x0,8
tick,0x7ffd093d1d94,65660687,0,0x0,8
tick,0x7ffd093d1d94,65675710,0,0x0,8
tick,0x7ffd093d1d94,65690671,0,0x0,8
tick,0x7ffd093d1d94,65706678,0,0x0,8
tick,0x7ffd093d1d94,65723206,0,0x0,8
tick,0x7ffd093d1d94,65739216,0,0x0,8
tick,0x7ffd093d1d94,65754168,0,0x0,8
tick,0x7ffd093d1d94,65769419,0,0x0,8
tick,0x7ffd093d1d94,65784261,0,0x0,8
tick,0x7ffd093d1d94,65799827,0,0x0,8
tick,0x7ffd093d1d94,65814752,0,0x0,8
tick,0x7ffd093d1d94,65830124,0,0x0,8
tick,0x7ffd093d1d94,65844944,0,0x0,8
tick,0x7ffd093d1d94,65860818,0,0x0,8
tick,0x7ffd093d1d94,65876283,0,0x0,8
tick,0x7ffd093d1d94,65892845,0,0x0,8
tick,0x7ffd093d1d94,65908592,0,0x0,8
tick,0x7ffd093d1d94,65923884,0,0x0,8
tick,0x7ffd093d1d94,65939498,0,0x0,8
tick,0x7ffd093d1d94,65955193,0,0x0,8
tick,0x7ffd093d1d94,65970491,0,0x0,8
tick,0x7ffd093d1d94,65985837,0,0x0,8
tick,0x7ffd093d1d94,66001802,0,0x0,8
tick,0x7ffd093d1d94,66017346,0,0x0,8
tick,0x7ffd093d1d94,66032469,0,0x0,8
tick,0x7ffd093d1d94,66048108,0,0x0,8
tick,0x7ffd093d1d94,66063302,0,0x0,8
tick,0x7ffd093d1d94,66079209,0,0x0,8
tick,0x7ffd093d1d94,66094633,0,0x0,8
tick,0x7ffd093d1d94,66110171,0,0x0,8
tick,0x7ffd093d1d94,66126059,0,0x0,8
tick,0x7ffd093d1d94,66141596,0,0x0,8
tick,0x7ffd093d1d94,66157428,0,0x0,8
tick,0x7ffd093d1d94,66173246,0,0x0,8
tick,0x7ffd093d1d94,66188652,0,0x0,8
tick,0x7ffd093d1d94,66203788,0,0x0,8
tick,0x7ffd093d1d94,66219896,0,0x0,8
tick,0x7ffd093d1d94,66235678,0,0x0,8
tick,0x7ffd093d1d94,66250953,0,0x0,8
tick,0x7ffd093d1d94,66266265,0,0x0,8
tick,0x7ffd093d1d94,66281847,0,0x0,8
tick,0x7ffd093d1d94,66297082,0,0x0,8
tick,0x7ffd093d1d94,66312707,0,0x0,8
tick,0x7ffd093d1d94,66328069,0,0x0,8
tick,0x7ffd093d1d94,66343416,0,0x0,8
tick,0x7ffd093d1d94,66359088,0,0x0,8
tick,0x7ffd093d1d94,66374456,0,0x0,8
tick,0x7ffd093d1d94,66390386,0,0x0,8
tick,0x7ffd093d1d94,66405976,0,0x0,8
tick,0x7ffd093d1d94,66421377,0,0x0,8
tick,0x7ffd093d1d94,66436173,0,0x0,8
tick,0x7ffd093d1d94,66451682,0,0x0,8
tick,0x7ffd093d1d94,66467432,0,0x0,8
tick,0x7ffd093d1d94,66482649,0,0x0,8
tick,0x7ffd093d1d94,66497600,0,0x0,8
tick,0x7ffd093d1d94,66513641,0,0x0,8
tick,0x7ffd093d1d94,66529311,0,0x0,8
tick,0x7ffd093d1d94,66544900,0,0x0,8
tick,0x7ffd093d1d94,66560468,0,0x0,8
tick,0x7ffd093d1d94,66575453,0,0x0,8
tick,0x7ffd093d1d94,66590811,0,0x0,8
tick,0x7ffd093d1d94,66606781,0,0x0,8
tick,0x7ffd093d1d94,66622156,0,0x0,8
tick,0x7ffd093d1d94,66638332,0,0x0,8
tick,0x7ffd093d1d94,66653197,0,0x0,8
tick,0x7ffd093d1d94,66669685,0,0x0,8
tick,0x7ffd093d1d94,66685267,0,0x0,8
tick,0x7ffd093d1d94,66701185,0,0x0,8
tick,0x7ffd093d1d94,66716818,0,0x0,8
tick,0x7ffd093d1d94,66733248,0,0x0,8
tick,0x7ffd093d1d94,66748874,0,0x0,8
tick,0x7ffd093d1d94,66763808,0,0x0,8
tick,0x7ffd093d1d94,66779779,0,0x0,8
tick,0x7ffd093d1d94,66794790,0,0x0,8
tick,0x7ffd093d1d94,66810514,0,0x0,8
tick,0x7ffd093d1d94,66825912,0,0x0,8
tick,0x7ffd093d1d94,66841595,0,0x0,8
tick,0x7ffd093d1d94,66857060,0,0x0,8
tick,0x7ffd093d1d94,66872683,0,0x0,8
tick,0x7ffd093d1d94,66887528,0,0x0,8
tick,0x7ffd093d1d94,66903183,0,0x0,8
tick,0x7ffd093d1d94,66918468,0,0x0,8
tick,0x7ffd093d1d94,66934218,0,0x0,8
tick,0x7ffd093d1d94,66949366,0,0x0,8
tick,0x7ffd093d1d94,66964572,0,0x0,8
tick,0x7ffd093d1d94,66979631,0,0x0,8
tick,0x7ffd093d1d94,66995509,0,0x0,8
tick,0x7ffd093d1d94,67011510,0,0x0,8
tick,0x7ffd093d1d94,67027201,0,0x0,8
tick,0x7ffd093d1d94,67042788,0,0x0,8
tick,0x7ffd093d1d94,67058801,0,0x0,8
tick,0x7ffd093d1d94,67073984,0,0x0,8
tick,0x7ffd093d1d94,67089303,0,0x0,8
tick,0x7ffd093d1d94,67103804,0,0x0,8
tick,0x7ffd093d1d94,67119269,0,0x0,8
tick,0x7ffd093d1d94,67134319,0,0x0,8
tick,0x7ffd093d1d94,67150372,0,0x0,8
tick,0x7ffd093d1d94,67166372,0,0x0,8
tick,0x7ffd093d1d94,67181774,0,0x0,8
tick,0x7ffd093d1d94,67197866,0,0x0,8
tick,0x7ffd093d1d94,67212967,0,0x0,8
tick,0x7ffd093d1d94,67228762,0,0x0,8
tick,0x7ffd093d1d94,67244385,0,0x0,8
tick,0x7ffd093d1d94,67259933,0,0x0,8
tick,0x7ffd093d1d94,67275559,0,0x0,8
tick,0x7ffd093d1d94,67290750,0,0x0,8
tick,0x7ffd093d1d94,67306977,0,0x0,8
tick,0x7ffd093d1d94,67322091,0,0x0,8
tick,0x7ffd093d1d94,67337667,0,0x0,8
tick,0x7ffd093d1d94,67353265,0,0x0,8
tick,0x7ffd093d1d94,67368102,0,0x0,8
tick,0x7ffd093d1d94,67383740,0,0x0,8
tick,0x7ffd093d1d94,67398526,0,0x0,8
tick,0x7ffd093d1d94,67414149,0,0x0,8
tick,0x7ffd093d1d94,67429487,0,0x0,8
tick,0x7ffd093d1d94,67445042,0,0x0,8
tick,0x7ffd093d1d94,67460144,0,0x0,8
tick,0x7ffd093d1d94,67476013,0,0x0,8
tick,0x7ffd093d1d94,67491850,0,0x0,8
tick,0x7ffd093d1d94,67507522,0,0x0,8
tick,0x7ffd093d1d94,67523024,0,0x0,8
tick,0x7ffd093d1d94,67538331,0,0x0,8
tick,0x7ffd093d1d94,67553619,0,0x0,8
tick,0x7ffd093d1d94,67569234,0,0x0,8
tick,0x7ffd093d1d94,67583975,0,0x0,8
tick,0x7ffd093d1d94,67598999,0,0x0,8
tick,0x7ffd093d1d94,67614446,0,0x0,8
tick,0x7ffd093d1d94,67629851,0,0x0,8
tick,0x7ffd093d1d94,67644931,0,0x0,8
tick,0x7ffd093d1d94,67661060,0,0x0,8
tick,0x7ffd093d1d94,67676650,0,0x0,8
tick,0x7ffd093d1d94,67693018,0,0x0,8
tick,0x7ffd093d1d94,67707537,0,0x0,8
tick,0x7ffd093d1d94,67723504,0,0x0,8
tick,0x7ffd093d1d94,67738748,0,0x0,8
tick,0x7ffd093d1d94,67753914,0,0x0,8
tick,0x7ffd093d1d94,67769894,0,0x0,8
tick,0x7ffd093d1d94,67785611,0,0x0,8
tick,0x7ffd093d1d94,67801215,0,0x0,8
tick,0x7ffd093d1d94,67816786,0,0x0,8
tick,0x7ffd093d1d94,67833291,0,0x0,8
tick,0x7ffd093d1d94,67848770,0,0x0,8
tick,0x7ffd093d1d94,67864493,0,0x0,8
tick,0x7ffd093d1d94,67880187,0,0x0,8
tick,0x7ffd093d1d94,67896147,0,0x0,8
tick,0x7ffd093d1d94,67913133,0,0x0,8
tick,0x7ffd093d1d94,67928019,0,0x0,8
tick,0x7ffd093d1d94,67943385,0,0x0,8
tick,0x7ffd093d1d94,67958966,0,0x0,8
tick,0x7ffd093d1d94,67974572,0,0x0,8
tick,0x7ffd093d1d94,67990582,0,0x0,8
tick,0x7ffd093d1d94,68006597,0,0x0,8
tick,0x7ffd093d1d94,68021875,0,0x0,8
tick,0x7ffd093d1d94,68037710,0,0x0,8
tick,0x7ffd093d1d94,68052978,0,0x0,8
tick,0x7ffd093d1d94,68068002,0,0x0,8
tick,0x7ffd093d1d94,68083972,0,0x0,8
tick,0x7ffd093d1d94,68099795,0,0x0,8
tick,0x7ffd093d1d94,68115545,0,0x0,8
tick,0x7ffd093d1d94,68131561,0,0x0,8
tick,0x7ffd093d1d94,68147500,0,0x0,8
tick,0x7ffd093d1d94,68163619,0,0x0,8
tick,0x7ffd093d1d94,68179301,0,0x0,8
tick,0x7ffd093d1d94,68194899,0,0x0,8
tick,0x7ffd093d1d94,68211035,0,0x0,8
tick,0x7ffd093d1d94,68226698,0,0x0,8
tick,0x7ffd093d1d94,68242355,0,0x0,8
tick,0x7ffd093d1d94,68258441,0,0x0,8
tick,0x7ffd093d1d94,68274425,0,0x0,8
tick,0x7ffd093d1d94,68289434,0,0x0,8
tick,0x7ffd093d1d94,68304413,0,0x0,8
tick,0x7ffd093d1d94,68319777,0,0x0,8
tick,0x7ffd093d1d94,68335121,0,0x0,8
tick,0x7ffd093d1d94,68351017,0,0x0,8
tick,0x7ffd093d1d94,68366288,0,0x0,8
tick,0x7ffd093d1d94,68382077,0,0x0,8
tick,0x7ffd093d1d94,68397366,0,0x0,8
tick,0x7ffd093d1d94,68412703,0,0x0,8
tick,0x7ffd093d1d94,68427908,0,0x0,8
tick,0x7ffd093d1d94,68443417,0,0x0,8
tick,0x7ffd093d1d94,68458172,0,0x0,8
tick,0x7ffd093d1d94,68473911,0,0x0,8
tick,0x7ffd093d1d94,68489294,0,0x0,8
tick,0x7ffd093d1d94,68505238,0,0x0,8
tick,0x7ffd093d1d94,68520630,0,0x0,8
tick,0x7ffd093d1d94,68536378,0,0x0,8
tick,0x7ffd093d1d94,68551322,0,0x0,8
tick,0x7ffd093d1d94,68566546,0,0x0,8
tick,0x7ffd093d1d94,68581856,0,0x0,8
tick,0x7ffd093d1d94,68597384,0,0x0,8
tick,0x7ffd093d1d94,68612531,0,0x0,8
tick,0x7ffd093d1d94,68628008,0,0x0,8
tick,0x7ffd093d1d94,68643351,0,0x0,8
tick,0x7ffd093d1d94,68659170,0,0x0,8
tick,0x7ffd093d1d94,68674733,0,0x0,8
tick,0x7ffd093d1d94,68690654,0,0x0,8
tick,0x7ffd093d1d94,68706149,0,0x0,8
tick,0x7ffd093d1d94,68721463,0,0x0,8
tick,0x7ffd093d1d94,68737321,0,0x0,8
tick,0x7ffd093d1d94,68753192,0,0x0,8
tick,0x7ffd093d1d94,68768687,0,0x0,8
tick,0x7ffd093d1d94,68784499,0,0x0,8
tick,0x7ffd093d1d94,68802884,0,0x0,8
tick,0x7ffd093d1d94,68815649,0,0x0,8
tick,0x7ffd093d1d94,68831158,0,0x0,8
tick,0x7ffd093d1d94,68846572,0,0x0,8
tick,0x7ffd093d1d94,68862244,0,0x0,8
tick,0x7ffd093d1d94,68877713,0,0x0,8
tick,0x7ffd093d1d94,68892598,0,0x0,8
tick,0x7ffd093d1d94,68907868,0,0x0,8
tick,0x7ffd093d1d94,68923752,0,0x0,8
tick,0x7ffd093d1d94,68938456,0,0x0,8
tick,0x7ffd093d1d94,68954441,0,0x0,8
tick,0x7ffd093d1d94,68970188,0,0x0,8
tick,0x7ffd093d1d94,68984884,0,0x0,8
tick,0x7ffd093d1d94,69001006,0,0x0,8
tick,0x7ffd093d1d94,69016917,0,0x0,8
tick,0x7ffd093d1d94,69032336,0,0x0,8
tick,0x7ffd093d1d94,69048128,0,0x0,8
tick,0x7ffd093d1d94,69063432,0,0x0,8
tick,0x7ffd093d1d94,69078964,0,0x0,8
tick,0x7ffd093d1d94,69094929,0,0x0,8
tick,0x7ffd093d1d94,69110439,0,0x0,8
tick,0x7ffd093d1d94,69125853,0,0x0,8
tick,0x7ffd093d1d94,69140963,0,0x0,8
tick,0x7ffd093d1d94,69156733,0,0x0,8
tick,0x7ffd093d1d94,69172182,0,0x0,8
tick,0x7ffd093d1d94,69187528,0,0x0,8
tick,0x7ffd093d1d94,69203595,0,0x0,8
tick,0x7ffd093d1d94,69218979,0,0x0,8
tick,0x7ffd093d1d94,69234250,0,0x0,8
tick,0x7ffd093d1d94,69250390,0,0x0,8
tick,0x7ffd093d1d94,69266311,0,0x0,8
tick,0x7ffd093d1d94,69281803,0,0x0,8
tick,0x7ffd093d1d94,69297127,0,0x0,8
tick,0x7ffd093d1d94,69313130,0,0x0,8
tick,0x7ffd093d1d94,69328344,0,0x0,8
tick,0x7ffd093d1d94,69344194,0,0x0,8
tick,0x7ffd093d1d94,69360179,0,0x0,8
tick,0x7ffd093d1d94,69375250,0,0x0,8
tick,0x7ffd093d1d94,69390887,0,0x0,8
tick,0x7ffd093d1d94,69406304,0,0x0,8
tick,0x7ffd093d1d94,69421267,0,0x0,8
tick,0x7ffd093d1d94,69436856,0,0x0,8
tick,0x7ffd093d1d94,69452949,0,0x0,8
tick,0x7ffd093d1d94,69467963,0,0x0,8
tick,0x7ffd093d1d94,69483624,0,0x0,8
tick,0x7ffd093d1d94,69498934,0,0x0,8
tick,0x7ffd093d1d94,69514836,0,0x0,8
tick,0x7ffd093d1d94,69530045,0,0x0,8
tick,0x7ffd093d1d94,69545139,0,0x0,8
tick,0x7ffd093d1d94,69559702,0,0x0,8
tick,0x7ffd093d1d94,69575665,0,0x0,8
tick,0x7ffd093d1d94,69591353,0,0x0,8
tick,0x7ffd093d1d94,69607032,0,0x0,8
tick,0x7ffd093d1d94,69623169,0,0x0,8
tick,0x7ffd093d1d94,69638815,0,0x0,8
tick,0x7ffd093d1d94,69654729,0,0x0,8
tick,0x7ffd093d1d94,69670342,0,0x0,8
tick,0x7ffd093d1d94,69686397,0,0x0,8
tick,0x7ffd093d1d94,69701927,0,0x0,8
tick,0x7ffd093d1d94,69717895,0,0x0,8
tick,0x7ffd093d1d94,69733530,0,0x0,8
tick,0x7ffd093d1d94,69748745,0,0x0,8
tick,0x7ffd093d1d94,69763916,0,0x0,8
tick,0x7ffd093d1d94,69779467,0,0x0,8
tick,0x7ffd093d1d94,69794947,0,0x0,8
tick,0x7ffd093d1d94,69810518,0,0x0,8
tick,0x7ffd093d1d94,69826363,0,0x0,8
tick,0x7ffd093d1d94,69842011,0,0x0,8
tick,0x7ffd093d1d94,69858000,0,0x0,8
tick,0x7ffd093d1d94,69874188,0,0x0,8
tick,0x7ffd093d1d94,69889026,0,0x0,8
tick,0x7ffd093d1d94,69904262,0,0x0,8
tick,0x7ffd093d1d94,69920051,0,0x0,8
tick,0x7ffd093d1d94,69934681,0,0x0,8
tick,0x7ffd093d1d94,69950189,0,0x0,8
tick,0x7ffd093d1d94,69965501,0,0x0,8
tick,0x7ffd093d1d94,69980871,0,0x0,8
tick,0x7ffd093d1d94,69996637,0,0x0,8
tick,0x7ffd093d1d94,70012275,0,0x0,8
tick,0x7ffd093d1d94,70028151,0,0x0,8
tick,0x7ffd093d1d94,70044009,0,0x0,8
tick,0x7ffd093d1d94,70059808,0,0x0,8
tick,0x7ffd093d1d94,70075317,0,0x0,8
tick,0x7ffd093d1d94,70090732,0,0x0,8
tick,0x7ffd093d1d94,70106904,0,0x0,8
tick,0x7ffd093d1d94,70122087,0,0x0,8
tick,0x7ffd093d1d94,70137711,0,0x0,8
tick,0x7ffd093d1d94,70152778,0,0x0,8
tick,0x7ffd093d1d94,70168692,0,0x0,8
tick,0x7ffd093d1d94,70184255,0,0x0,8
tick,0x7ffd093d1d94,70199934,0,0x0,8
tick,0x7ffd093d1d94,70215405,0,0x0,8
tick,0x7ffd093d1d94,70231533,0,0x0,8
tick,0x7ffd093d1d94,70246869,0,0x0,8
tick,0x7ffd093d1d94,70262512,0,0x0,8
tick,0x7ffd093d1d94,70278285,0,0x0,8
tick,0x7ffd093d1d94,70293973,0,0x0,8
tick,0x7ffd093d1d94,70309983,0,0x0,8
tick,0x7ffd093d1d94,70326110,0,0x0,8
tick,0x7ffd093d1d94,70342129,0,0x0,8
tick,0x7ffd093d1d94,70357832,0,0x0,8
tick,0x7ffd093d1d94,70372981,0,0x0,8
tick,0x7ffd093d1d94,70388091,0,0x0,8
tick,0x7ffd093d1d94,70403866,0,0x0,8
tick,0x7ffd093d1d94,70418874,0,0x0,8
tick,0x7ffd093d1d94,70434983,0,0x0,8
tick,0x7ffd093d1d94,70450908,0,0x0,8
tick,0x7ffd093d1d94,70466526,0,0x0,8
tick,0x7ffd093d1d94,70481814,0,0x0,8
tick,0x7ffd093d1d94,70497503,0,0x0,8
tick,0x7ffd093d1d94,70512471,0,0x0,8
tick,0x7ffd093d1d94,70528293,0,0x0,8
tick,0x7ffd093d1d94,70543195,0,0x0,8
tick,0x7ffd093d1d94,70558627,0,0x0,8
tick,0x7ffd093d1d94,70573833,0,0x0,8
tick,0x7ffd093d1d94,70589310,0,0x0,8
tick,0x7ffd093d1d94,70604407,0,0x0,8
tick,0x7ffd093d1d94,70620108,0,0x0,8
tick,0x7ffd093d1d94,70635264,0,0x0,8
tick,0x7ffd093d1d94,70650970,0,0x0,8
tick,0x7ffd093d1d94,70666811,0,0x0,8
tick,0x7ffd093d1d94,70682584,0,0x0,8
tick,0x7ffd093d1d94,70698358,0,0x0,8
tick,0x7ffd093d1d94,70713635,0,0x0,8
tick,0x7ffd093d1d94,70728974,0,0x0,8
tick,0x7ffd093d1d94,70745674,0,0x0,8
tick,0x7ffd093d1d94,70760583,0,0x0,8
tick,0x7ffd093d1d94,70775790,0,0x0,8
tick,0x7ffd093d1d94,70791521,0,0x0,8
tick,0x7ffd093d1d94,70807643,0,0x0,8
tick,0x7ffd093d1d94,70823479,0,0x0,8
tick,0x7ffd093d1d94,70839093,0,0x0,8
tick,0x7ffd093d1d94,70855038,0,0x0,8
tick,0x7ffd093d1d94,70870725,0,0x0,8
tick,0x7ffd093d1d94,70885886,0,0x0,8
tick,0x7ffd093d1d94,70901260,0,0x0,8
tick,0x7ffd093d1d94,70916827,0,0x0,8
tick,0x7ffd093d1d94,70932294,0,0x0,8
tick,0x7ffd093d1d94,70948357,0,0x0,8
tick,0x7ffd093d1d94,70963756,0,0x0,8
tick,0x7ffd093d1d94,70979288,0,0x0,8
tick,0x7ffd093d1d94,70994124,0,0x0,8
tick,0x7ffd093d1d94,71010077,0,0x0,8
tick,0x7ffd093d1d94,71025501,0,0x0,8
tick,0x7ffd093d1d94,71040384,0,0x0,8
tick,0x7ffd093d1d94,71056321,0,0x0,8
tick,0x7ffd093d1d94,71071603,0,0x0,8
tick,0x7ffd093d1d94,71087627,0,0x0,8
tick,0x7ffd093d1d94,71103511,0,0x0,8
tick,0x7ffd093d1d94,71119583,0,0x0,8
tick,0x7ffd093d1d94,71135094,0,0x0,8
tick,0x7ffd093d1d94,71151061,0,0x0,8
tick,0x7ffd093d1d94,71167446,0,0x0,8
tick,0x7ffd093d1d94,71183349,0,0x0,8
tick,0x7ffd093d1d94,71199096,0,0x0,8
tick,0x7ffd093d1d94,71215039,0,0x0,8
tick,0x7ffd093d1d94,71230578,0,0x0,8
tick,0x7ffd093d1d94,71246045,0,0x0,8
tick,0x7ffd093d1d94,71261819,0,0x0,8
tick,0x7ffd093d1d94,71276663,0,0x0,8
tick,0x7ffd093d1d94,71292503,0,0x0,8
tick,0x7ffd093d1d94,71307850,0,0x0,8
tick,0x7ffd093d1d94,71323849,0,0x0,8
tick,0x7ffd093d1d94,71339595,0,0x0,8
tick,0x7ffd093d1d94,71355325,0,0x0,8
tick,0x7ffd093d1d94,71371204,0,0x0,8
tick,0x7ffd093d1d94,71386355,0,0x0,8
tick,0x7ffd093d1d94,71401456,0,0x0,8
tick,0x7ffd093d1d94,71417079,0,0x0,8
tick,0x7ffd093d1d94,71432800,0,0x0,8
tick,0x7ffd093d1d94,71448555,0,0x0,8
tick,0x7ffd093d1d94,71464528,0,0x0,8
tick,0x7ffd093d1d94,71479788,0,0x0,8
tick,0x7ffd093d1d94,71495133,0,0x0,8
tick,0x7ffd093d1d94,71510296,0,0x0,8
tick,0x7ffd093d1d94,71526128,0,0x0,8
tick,0x7ffd093d1d94,71541516,0,0x0,8
tick,0x7ffd093d1d94,71557062,0,0x0,8
tick,0x7ffd093d1d94,71572970,0,0x0,8
tick,0x7ffd093d1d94,71588606,0,0x0,8
tick,0x7ffd093d1d94,71603951,0,0x0,8
tick,0x7ffd093d1d94,71619188,0,0x0,8
tick,0x7ffd093d1d94,71634704,0,0x0,8
tick,0x7ffd093d1d94,71649705,0,0x0,8
tick,0x7ffd093d1d94,71665344,0,0x0,8
tick,0x7ffd093d1d94,71680994,0,0x0,8
tick,0x7ffd093d1d94,71696481,0,0x0,8
tick,0x7ffd093d1d94,71711914,0,0x0,8
tick,0x7ffd093d1d94,71727608,0,0x0,8
tick,0x7ffd093d1d94,71742717,0,0x0,8
tick,0x7ffd093d1d94,71758477,0,0x0,8
tick,0x7ffd093d1d94,71774474,0,0x0,8
tick,0x7ffd093d1d94,71790083,0,0x0,8
tick,0x7ffd093d1d94,71805426,0,0x0,8
tick,0x7ffd093d1d94,71821418,0,0x0,8
tick,0x7ffd093d1d94,71837001,0,0x0,8
tick,0x7ffd093d1d94,71852519,0,0x0,8
tick,0x7ffd093d1d94,71868563,0,0x0,8
tick,0x7ffd093d1d94,71883405,0,0x0,8
tick,0x7ffd093d1d94,71898564,0,0x0,8
tick,0x7ffd093d1d94,71914454,0,0x0,8
tick,0x7ffd093d1d94,71929727,0,0x0,8
tick,0x7ffd093d1d94,71944963,0,0x0,8
tick,0x7ffd093d1d94,71960550,0,0x0,8
tick,0x7ffd093d1d94,71976189,0,0x0,8
tick,0x7ffd093d1d94,71991607,0,0x0,8
tick,0x7ffd093d1d94,72007086,0,0x0,8
tick,0x7ffd093d1d94,72023165,0,0x0,8
tick,0x7ffd093d1d94,72038243,0,0x0,8
tick,0x7ffd093d1d94,72054261,0,0x0,8
tick,0x7ffd093d1d94,72069890,0,0x0,8
tick,0x7ffd093d1d94,72085493,0,0x0,8
tick,0x7ffd093d1d94,72101420,0,0x0,8
tick,0x7ffd093d1d94,72116893,0,0x0,8
tick,0x7ffd093d1d94,72132215,0,0x0,8
tick,0x7ffd093d1d94,72147200,0,0x0,8
tick,0x7ffd093d1d94,72162147,0,0x0,8
tick,0x7ffd093d1d94,72178111,0,0x0,8
tick,0x7ffd093d1d94,72193244,0,0x0,8
tick,0x7ffd093d1d94,72209374,0,0x0,8
tick,0x7ffd093d1d94,72225168,0,0x0,8
tick,0x7ffd093d1d94,72240721,0,0x0,8
tick,0x7ffd093d1d94,72256717,0,0x0,8
tick,0x7ffd093d1d94,72272705,0,0x0,8
tick,0x7ffd093d1d94,72288720,0,0x0,8
tick,0x7ffd093d1d94,72303739,0,0x0,8
tick,0x7ffd093d1d94,72319208,0,0x0,8
tick,0x7ffd093d1d94,72334290,0,0x0,8
tick,0x7ffd093d1d94,72350230,0,0x0,8
tick,0x7ffd093d1d94,72366287,0,0x0,8
tick,0x7ffd093d1d94,72382252,0,0x0,8
tick,0x7ffd093d1d94,72398166,0,0x0,8
tick,0x7ffd093d1d94,72413599,0,0x0,8
tick,0x7ffd093d1d94,72428791,0,0x0,8
tick,0x7ffd093d1d94,72444173,0,0x0,8
tick,0x7ffd093d1d94,72459861,0,0x0,8
tick,0x7ffd093d1d94,72475620,0,0x0,8
tick,0x7ffd093d1d94,72491210,0,0x0,8
tick,0x7ffd093d1d94,72506236,0,0x0,8
tick,0x7ffd093d1d94,72522182,0,0x0,8
tick,0x7ffd093d1d94,72537375,0,0x0,8
tick,0x7ffd093d1d94,72552676,0,0x0,8
tick,0x7ffd093d1d94,72567343,0,0x0,8
tick,0x7ffd093d1d94,72583430,0,0x0,8
tick,0x7ffd093d1d94,72599114,0,0x0,8
tick,0x7ffd093d1d94,72615017,0,0x0,8
tick,0x7ffd093d1d94,72630346,0,0x0,8
tick,0x7ffd093d1d94,72645895,0,0x0,8
tick,0x7ffd093d1d94,72660936,0,0x0,8
tick,0x7ffd093d1d94,72676510,0,0x0,8
tick,0x7ffd093d1d94,72692578,0,0x0,8
tick,0x7ffd093d1d94,72707067,0,0x0,8
tick,0x7ffd093d1d94,72723046,0,0x0,8
tick,0x7ffd093d1d94,72738799,0,0x0,8
tick,0x7ffd093d1d94,72753878,0,0x0,8
tick,0x7ffd093d1d94,72769285,0,0x0,8
tick,0x7ffd093d1d94,72785072,0,0x0,8
tick,0x7ffd093d1d94,72800193,0,0x0,8
tick,0x7ffd093d1d94,72816220,0,0x0,8
tick,0x7ffd093d1d94,72831121,0,0x0,8
tick,0x7ffd093d1d94,72846905,0,0x0,8
tick,0x7ffd093d1d94,72862546,0,0x0,8
tick,0x7ffd093d1d94,72878887,0,0x0,8
tick,0x7ffd093d1d94,72894180,0,0x0,8
tick,0x7ffd093d1d94,72909849,0,0x0,8
tick,0x7ffd093d1d94,72925562,0,0x0,8
tick,0x7ffd093d1d94,72941358,0,0x0,8
tick,0x7ffd093d1d94,72956795,0,0x0,8
tick,0x7ffd093d1d94,72972107,0,0x0,8
tick,0x7ffd093d1d94,72988129,0,0x0,8
tick,0x7ffd093d1d94,73003955,0,0x0,8
tick,0x7ffd093d1d94,73019692,0,0x0,8
tick,0x7ffd093d1d94,73035679,0,0x0,8
tick,0x7ffd093d1d94,73051142,0,0x0,8
tick,0x7ffd093d1d94,73067054,0,0x0,8
tick,0x7ffd093d1d94,73082611,0,0x0,8
tick,0x7ffd093d1d94,73098166,0,0x0,8
tick,0x7ffd093d1d94,73113924,0,0x0,8
tick,0x7ffd093d1d94,73128905,0,0x0,8
tick,0x7ffd093d1d94,73144759,0,0x0,8
tick,0x7ffd093d1d94,73159773,0,0x0,8
tick,0x7ffd093d1d94,73175054,0,0x0,8
tick,0x7ffd093d1d94,73189911,0,0x0,8
tick,0x7ffd093d1d94,73205710,0,0x0,8
tick,0x7ffd093d1d94,73221736,0,0x0,8
tick,0x7ffd093d1d94,73237228,0,0x0,8
tick,0x7ffd093d1d94,73253212,0,0x0,8
tick,0x7ffd093d1d94,73269189,0,0x0,8
tick,0x7ffd093d1d94,73284190,0,0x0,8
tick,0x7ffd093d1d94,73299575,0,0x0,8
tick,0x7ffd093d1d94,73314382,0,0x0,8
tick,0x7ffd093d1d94,73329777,0,0x0,8
tick,0x7ffd093d1d94,73345309,0,0x0,8
tick,0x7ffd093d1d94,73360254,0,0x0,8
tick,0x7ffd093d1d94,73376318,0,0x0,8
tick,0x7ffd093d1d94,73392189,0,0x0,8
tick,0x7ffd093d1d94,73408215,0,0x0,8
tick,0x7ffd093d1d94,73423578,0,0x0,8
tick,0x7ffd093d1d94,73438664,0,0x0,8
tick,0x7ffd093d1d94,73453806,0,0x0,8
tick,0x7ffd093d1d94,73469229,0,0x0,8
tick,0x7ffd093d1d94,73484572,0,0x0,8
tick,0x7ffd093d1d94,73500197,0,0x0,8
tick,0x7ffd093d1d94,73515968,0,0x0,8
tick,0x7ffd093d1d94,73531719,0,0x0,8
tick,0x7ffd093d1d94,73547359,0,0x0,8
tick,0x7ffd093d1d94,73562137,0,0x0,8
tick,0x7ffd093d1d94,73577361,0,0x0,8
tick,0x7ffd093d1d94,73592818,0,0x0,8
tick,0x7ffd093d1d94,73608535,0,0x0,8
tick,0x7ffd093d1d94,73624049,0,0x0,8
tick,0x7ffd093d1d94,73638903,0,0x0,8
tick,0x7ffd093d1d94,73655564,0,0x0,8
tick,0x7ffd093d1d94,73671546,0,0x0,8
tick,0x7ffd093d1d94,73687306,0,0x0,8
tick,0x7ffd093d1d94,73702622,0,0x0,8
tick,0x7ffd093d1d94,73717863,0,0x0,8
tick,0x7ffd093d1d94,73733497,0,0x0,8
tick,0x7ffd093d1d94,73749312,0,0x0,8
tick,0x7ffd093d1d94,73764951,0,0x0,8
tick,0x7ffd093d1d94,73780700,0,0x0,8
tick,0x7ffd093d1d94,73796855,0,0x0,8
tick,0x7ffd093d1d94,73812106,0,0x0,8
tick,0x7ffd093d1d94,73827779,0,0x0,8
tick,0x7ffd093d1d94,73843888,0,0x0,8
tick,0x7ffd093d1d94,73860287,0,0x0,8
tick,0x7ffd093d1d94,73875986,0,0x0,8
tick,0x7ffd093d1d94,73892026,0,0x0,8
tick,0x7ffd093d1d94,73907194,0,0x0,8
tick,0x7ffd093d1d94,73922275,0,0x0,8
tick,0x7ffd093d1d94,73937594,0,0x0,8
tick,0x7ffd093d1d94,73953614,0,0x0,8
tick,0x7ffd093d1d94,73968802,0,0x0,8
tick,0x7ffd093d1d94,73984291,0,0x0,8
tick,0x7ffd093d1d94,73999613,0,0x0,8
tick,0x7ffd093d1d94,74015763,0,0x0,8
tick,0x7ffd093d1d94,74031837,0,0x0,8
tick,0x7ffd093d1d94,74047120,0,0x0,8
tick,0x7ffd093d1d94,74063020,0,0x0,8
tick,0x7ffd093d1d94,74078147,0,0x0,8
tick,0x7ffd093d1d94,74093088,0,0x0,8
tick,0x7ffd093d1d94,74108902,0,0x0,8
tick,0x7ffd093d1d94,74124640,0,0x0,8
tick,0x7ffd093d1d94,74140415,0,0x0,8
tick,0x7ffd093d1d94,74156487,0,0x0,8
tick,0x7ffd093d1d94,74172300,0,0x0,8
tick,0x7ffd093d1d94,74188167,0,0x0,8
tick,0x7ffd093d1d94,74203898,0,0x0,8
tick,0x7ffd093d1d94,74218898,0,0x0,8
tick,0x7ffd093d1d94,74234780,0,0x0,8
tick,0x7ffd093d1d94,74250111,0,0x0,8
tick,0x7ffd093d1d94,74265958,0,0x0,8
tick,0x7ffd093d1d94,74281494,0,0x0,8
tick,0x7ffd093d1d94,74296647,0,0x0,8
tick,0x7ffd093d1d94,74312789,0,0x0,8
tick,0x7ffd093d1d94,74328463,0,0x0,8
tick,0x7ffd093d1d94,74343743,0,0x0,8
tick,0x7ffd093d1d94,74359353,0,0x0,8
tick,0x7ffd093d1d94,74374759,0,0x0,8
tick,0x7ffd093d1d94,74390119,0,0x0,8
tick,0x7ffd093d1d94,74405540,0,0x0,8
tick,0x7ffd093d1d94,74421038,0,0x0,8
tick,0x7ffd093d1d94,74436739,0,0x0,8
tick,0x7ffd093d1d94,74452243,0,0x0,8
tick,0x7ffd093d1d94,74467538,0,0x0,8
tick,0x7ffd093d1d94,74483359,0,0x0,8
tick,0x7ffd093d1d94,74498365,0,0x0,8
tick,0x7ffd093d1d94,74513429,0,0x0,8
tick,0x7ffd093d1d94,74528714,0,0x0,8
tick,0x7ffd093d1d94,74544690,0,0x0,8
tick,0x7ffd093d1d94,74560147,0,0x0,8
tick,0x7ffd093d1d94,74575746,0,0x0,8
tick,0x7ffd093d1d94,74591029,0,0x0,8
tick,0x7ffd093d1d94,74606994,0,0x0,8
tick,0x7ffd093d1d94,74622632,0,0x0,8
tick,0x7ffd093d1d94,74638081,0,0x0,8
tick,0x7ffd093d1d94,74654041,0,0x0,8
tick,0x7ffd093d1d94,74669252,0,0x0,8
tick,0x7ffd093d1d94,74685700,0,0x0,8
tick,0x7ffd093d1d94,74700525,0,0x0,8
tick,0x7ffd093d1d94,74715855,0,0x0,8
tick,0x7ffd093d1d94,74731549,0,0x0,8
tick,0x7ffd093d1d94,74746762,0,0x0,8
tick,0x7ffd093d1d94,74762839,0,0x0,8
tick,0x7ffd093d1d94,74778739,0,0x0,8
tick,0x7ffd093d1d94,74794011,0,0x0,8
tick,0x7ffd093d1d94,74809191,0,0x0,8
tick,0x7ffd093d1d94,74824559,0,0x0,8
tick,0x7ffd093d1d94,74839999,0,0x0,8
tick,0x7ffd093d1d94,74855830,0,0x0,8
tick,0x7ffd093d1d94,74871269,0,0x0,8
tick,0x7ffd093d1d94,74886990,0,0x0,8
tick,0x7ffd093d1d94,74902348,0,0x0,8
tick,0x7ffd093d1d94,74917952,0,0x0,8
tick,0x7ffd093d1d94,74933289,0,0x0,8
tick,0x7ffd093d1d94,74949133,0,0x0,8
tick,0x7ffd093d1d94,74964059,0,0x0,8
tick,0x7ffd093d1d94,74979429,0,0x0,8
tick,0x7ffd093d1d94,74994541,0,0x0,8
tick,0x7ffd093d1d94,75010413,0,0x0,8
tick,0x7ffd093d1d94,75025645,0,0x0,8
tick,0x7ffd093d1d94,75040589,0,0x0,8
tick,0x7ffd093d1d94,75056566,0,0x0,8
tick,0x7ffd093d1d94,75071924,0,0x0,8
tick,0x7ffd093d1d94,75087098,0,0x0,8
tick,0x7ffd093d1d94,75102763,0,0x0,8
tick,0x7ffd093d1d94,75117947,0,0x0,8
tick,0x7ffd093d1d94,75133263,0,0x0,8
tick,0x7ffd093d1d94,75148763,0,0x0,8
tick,0x7ffd093d1d94,75164542,0,0x0,8
tick,0x7ffd093d1d94,75180404,0,0x0,8
tick,0x7ffd093d1d94,75196011,0,0x0,8
tick,0x7ffd093d1d94,75211240,0,0x0,8
tick,0x7ffd093d1d94,75227040,0,0x0,8
tick,0x7ffd093d1d94,75242116,0,0x0,8
tick,0x7ffd093d1d94,75257732,0,0x0,8
tick,0x7ffd093d1d94,75272941,0,0x0,8
tick,0x7ffd093d1d94,75287681,0,0x0,8
tick,0x7ffd093d1d94,75303814,0,0x0,8
tick,0x7ffd093d1d94,75319117,0,0x0,8
tick,0x7ffd093d1d94,75334965,0,0x0,8
tick,0x7ffd093d1d94,75350513,0,0x0,8
tick,0x7ffd093d1d94,75366443,0,0x0,8
tick,0x7ffd093d1d94,75382386,0,0x0,8
tick,0x7ffd093d1d94,75397659,0,0x0,8
tick,0x7ffd093d1d94,75413507,0,0x0,8
tick,0x7ffd093d1d94,75429437,0,0x0,8
tick,0x7ffd093d1d94,75445032,0,0x0,8
tick,0x7ffd093d1d94,75460314,0,0x0,8
tick,0x7ffd093d1d94,75476070,0,0x0,8
tick,0x7ffd093d1d94,75491539,0,0x0,8
tick,0x7ffd093d1d94,75507667,0,0x0,8
tick,0x7ffd093d1d94,75522981,0,0x0,8
tick,0x7ffd093d1d94,75539108,0,0x0,8
tick,0x7ffd093d1d94,75554675,0,0x0,8
tick,0x7ffd093d1d94,75569880,0,0x0,8
tick,0x7ffd093d1d94,75585744,0,0x0,8
tick,0x7ffd093d1d94,75600843,0,0x0,8
tick,0x7ffd093d1d94,75616242,0,0x0,8
tick,0x7ffd093d1d94,75632172,0,0x0,8
tick,0x7ffd093d1d94,75647604,0,0x0,8
tick,0x7ffd093d1d94,75664239,0,0x0,8
tick,0x7ffd093d1d94,75679167,0,0x0,8
tick,0x7ffd093d1d94,75694556,0,0x0,8
tick,0x7ffd093d1d94,75710016,0,0x0,8
tick,0x7ffd093d1d94,75725206,0,0x0,8
tick,0x7ffd093d1d94,75740850,0,0x0,8
tick,0x7ffd093d1d94,75756484,0,0x0,8
tick,0x7ffd093d1d94,75772591,0,0x0,8
tick,0x7ffd093d1d94,75788467,0,0x0,8
tick,0x7ffd093d1d94,75804033,0,0x0,8
tick,0x7ffd093d1d94,75819764,0,0x0,8
tick,0x7ffd093d1d94,75835533,0,0x0,8
tick,0x7ffd093d1d94,75850840,0,0x0,8
tick,0x7ffd093d1d94,75866173,0,0x0,8
tick,0x7ffd093d1d94,75881487,0,0x0,8
tick,0x7ffd093d1d94,75897313,0,0x0,8
tick,0x7ffd093d1d94,75912552,0,0x0,8
tick,0x7ffd093d1d94,75927522,0,0x0,8
tick,0x7ffd093d1d94,75942792,0,0x0,8
tick,0x7ffd093d1d94,75958782,0,0x0,8
tick,0x7ffd093d1d94,75974514,0,0x0,8
tick,0x7ffd093d1d94,75990160,0,0x0,8
tick,0x7ffd093d1d94,76005266,0,0x0,8
tick,0x7ffd093d1d94,76021272,0,0x0,8
tick,0x7ffd093d1d94,76036591,0,0x0,8
tick,0x7ffd093d1d94,76052606,0,0x0,8
tick,0x7ffd093d1d94,76067910,0,0x0,8
tick,0x7ffd093d1d94,76083493,0,0x0,8
tick,0x7ffd093d1d94,76099188,0,0x0,8
tick,0x7ffd093d1d94,76115152,0,0x0,8
tick,0x7ffd093d1d94,76131057,0,0x0,8
tick,0x7ffd093d1d94,76146764,0,0x0,8
tick,0x7ffd093d1d94,76162226,0,0x0,8
tick,0x7ffd093d1d94,76177240,0,0x0,8
tick,0x7ffd093d1d94,76193183,0,0x0,8
tick,0x7ffd093d1d94,76208408,0,0x0,8
tick,0x7ffd093d1d94,76223836,0,0x0,8
tick,0x7ffd093d1d94,76239557,0,0x0,8
tick,0x7ffd093d1d94,76255027,0,0x0,8
tick,0x7ffd093d1d94,76270336,0,0x0,8
tick,0x7ffd093d1d94,76286635,0,0x0,8
tick,0x7ffd093d1d94,76301579,0,0x0,8
tick,0x7ffd093d1d94,76316794,0,0x0,8
tick,0x7ffd093d1d94,76332887,0,0x0,8
tick,0x7ffd093d1d94,76348301,0,0x0,8
tick,0x7ffd093d1d94,76363082,0,0x0,8
tick,0x7ffd093d1d94,76379113,0,0x0,8
tick,0x7ffd093d1d94,76394910,0,0x0,8
tick,0x7ffd093d1d94,76410482,0,0x0,8
tick,0x7ffd093d1d94,76426142,0,0x0,8
tick,0x7ffd093d1d94,76441385,0,0x0,8
tick,0x7ffd093d1d94,76457265,0,0x0,8
tick,0x7ffd093d1d94,76473259,0,0x0,8
tick,0x7ffd093d1d94,76489395,0,0x0,8
tick,0x7ffd093d1d94,76504206,0,0x0,8
tick,0x7ffd093d1d94,76519944,0,0x0,8
tick,0x7ffd093d1d94,76535561,0,0x0,8
tick,0x7ffd093d1d94,76551420,0,0x0,8
tick,0x7ffd093d1d94,76566976,0,0x0,8
tick,0x7ffd093d1d94,76582237,0,0x0,8
tick,0x7ffd093d1d94,76597979,0,0x0,8
tick,0x7ffd093d1d94,76613709,0,0x0,8
tick,0x7ffd093d1d94,76629594,0,0x0,8
tick,0x7ffd093d1d94,76644817,0,0x0,8
tick,0x7ffd093d1d94,76659841,0,0x0,8
tick,0x7ffd093d1d94,76674994,0,0x0,8
tick,0x7ffd093d1d94,76690356,0,0x0,8
tick,0x7ffd093d1d94,76705904,0,0x0,8
tick,0x7ffd093d1d94,76722316,0,0x0,8
tick,0x7ffd093d1d94,76737847,0,0x0,8
tick,0x7ffd093d1d94,76753642,0,0x0,8
tick,0x7ffd093d1d94,76768979,0,0x0,8
tick,0x7ffd093d1d94,76784129,0,0x0,8
tick,0x7ffd093d1d94,76799451,0,0x0,8
tick,0x7ffd093d1d94,76815248,0,0x0,8
tick,0x7ffd093d1d94,76831311,0,0x0,8
tick,0x7ffd093d1d94,76846471,0,0x0,8
tick,0x7ffd093d1d94,76861696,0,0x0,8
tick,0x7ffd093d1d94,76877553,0,0x0,8
tick,0x7ffd093d1d94,76893494,0,0x0,8
tick,0x7ffd093d1d94,76909450,0,0x0,8
tick,0x7ffd093d1d94,76924690,0,0x0,8
tick,0x7ffd093d1d94,76940433,0,0x0,8
tick,0x7ffd093d1d94,76956413,0,0x0,8
tick,0x7ffd093d1d94,76972533,0,0x0,8
tick,0x7ffd093d1d94,76988175,0,0x0,8
tick,0x7ffd093d1d94,77003716,0,0x0,8
tick,0x7ffd093d1d94,77018402,0,0x0,8
tick,0x7ffd093d1d94,77033452,0,0x0,8
tick,0x7ffd093d1d94,77049464,0,0x0,8
tick,0x7ffd093d1d94,77064947,0,0x0,8
tick,0x7ffd093d1d94,77080670,0,0x0,8
tick,0x7ffd093d1d94,77096287,0,0x0,8
tick,0x7ffd093d1d94,77111058,0,0x0,8
tick,0x7ffd093d1d94,77126298,0,0x0,8
tick,0x7ffd093d1d94,77141762,0,0x0,8
tick,0x7ffd093d1d94,77157110,0,0x0,8
tick,0x7ffd093d1d94,77172730,0,0x0,8
tick,0x7ffd093d1d94,77187994,0,0x0,8
tick,0x7ffd093d1d94,77203403,0,0x0,8
tick,0x7ffd093d1d94,77219124,0,0x0,8
tick,0x7ffd093d1d94,77234482,0,0x0,8
tick,0x7ffd093d1d94,77249898,0,0x0,8
tick,0x7ffd093d1d94,77265362,0,0x0,8
tick,0x7ffd093d1d94,77280813,0,0x0,8
tick,0x7ffd093d1d94,77296231,0,0x0,8
tick,0x7ffd093d1d94,77312440,0,0x0,8
tick,0x7ffd093d1d94,77327793,0,0x0,8
tick,0x7ffd093d1d94,77343535,0,0x0,8
tick,0x7ffd093d1d94,77358768,0,0x0,8
tick,0x7ffd093d1d94,77374415,0,0x0,8
tick,0x7ffd093d1d94,77390119,0,0x0,8
tick,0x7ffd093d1d94,77405887,0,0x0,8
tick,0x7ffd093d1d94,77421928,0,0x0,8
tick,0x7ffd093d1d94,77436766,0,0x0,8
tick,0x7ffd093d1d94,77451856,0,0x0,8
tick,0x7ffd093d1d94,77467644,0,0x0,8
tick,0x7ffd093d1d94,77483538,0,0x0,8
tick,0x7ffd093d1d94,77498739,0,0x0,8
tick,0x7ffd093d1d94,77514495,0,0x0,8
tick,0x7ffd093d1d94,77530439,0,0x0,8
tick,0x7ffd093d1d94,77545780,0,0x0,8
tick,0x7ffd093d1d94,77561358,0,0x0,8
tick,0x7ffd093d1d94,77577259,0,0x0,8
tick,0x7ffd093d1d94,77593260,0,0x0,8
tick,0x7ffd093d1d94,77608310,0,0x0,8
tick,0x7ffd093d1d94,77623892,0,0x0,8
tick,0x7ffd093d1d94,77639029,0,0x0,8
tick,0x7ffd093d1d94,77655022,0,0x0,8
tick,0x7ffd093d1d94,77670826,0,0x0,8
tick,0x7ffd093d1d94,77686577,0,0x0,8
tick,0x7ffd093d1d94,77702559,0,0x0,8
tick,0x7ffd093d1d94,77717670,0,0x0,8
tick,0x7ffd093d1d94,77733826,0,0x0,8
tick,0x7ffd093d1d94,77749119,0,0x0,8
tick,0x7ffd093d1d94,77764649,0,0x0,8
tick,0x7ffd093d1d94,77780272,0,0x0,8
tick,0x7ffd093d1d94,77795601,0,0x0,8
tick,0x7ffd093d1d94,77811901,0,0x0,8
tick,0x7ffd093d1d94,77826265,0,0x0,8
tick,0x7ffd093d1d94,77841825,0,0x0,8
tick,0x7ffd093d1d94,77857206,0,0x0,8
tick,0x7ffd093d1d94,77872703,0,0x0,8
tick,0x7ffd093d1d94,77888267,0,0x0,8
tick,0x7ffd093d1d94,77903831,0,0x0,8
tick,0x7ffd093d1d94,77918931,0,0x0,8
tick,0x7ffd093d1d94,77934252,0,0x0,8
tick,0x7ffd093d1d94,77949128,0,0x0,8
tick,0x7ffd093d1d94,77964285,0,0x0,8
tick,0x7ffd093d1d94,77979630,0,0x0,8
tick,0x7ffd093d1d94,77995201,0,0x0,8
tick,0x7ffd093d1d94,78011488,0,0x0,8
tick,0x7ffd093d1d94,78027342,0,0x0,8
tick,0x7ffd093d1d94,78042584,0,0x0,8
tick,0x7ffd093d1d94,78057839,0,0x0,8
tick,0x7ffd093d1d94,78073606,0,0x0,8
tick,0x7ffd093d1d94,78090077,0,0x0,8
tick,0x7ffd093d1d94,78105664,0,0x0,8
tick,0x7ffd093d1d94,78121645,0,0x0,8
tick,0x7ffd093d1d94,78137174,0,0x0,8
tick,0x7ffd093d1d94,78153148,0,0x0,8
tick,0x7ffd093d1d94,78169141,0,0x0,8
tick,0x7ffd093d1d94,78185366,0,0x0,8
tick,0x7ffd093d1d94,78200327,0,0x0,8
tick,0x7ffd093d1d94,78215169,0,0x0,8
tick,0x7ffd093d1d94,78231167,0,0x0,8
tick,0x7ffd093d1d94,78246650,0,0x0,8
tick,0x7ffd093d1d94,78261715,0,0x0,8
tick,0x7ffd093d1d94,78278063,0,0x0,8
tick,0x7ffd093d1d94,78293732,0,0x0,8
tick,0x7ffd093d1d94,78309703,0,0x0,8
tick,0x7ffd093d1d94,78325215,0,0x0,8
tick,0x7ffd093d1d94,78340321,0,0x0,8
tick,0x7ffd093d1d94,78356404,0,0x0,8
tick,0x7ffd093d1d94,78372315,0,0x0,8
tick,0x7ffd093d1d94,78387961,0,0x0,8
tick,0x7ffd093d1d94,78403150,0,0x0,8
tick,0x7ffd093d1d94,78418274,0,0x0,8
tick,0x7ffd093d1d94,78433629,0,0x0,8
tick,0x7ffd093d1d94,78449078,0,0x0,8
tick,0x7ffd093d1d94,78464091,0,0x0,8
tick,0x7ffd093d1d94,78479655,0,0x0,8
tick,0x7ffd093d1d94,78495067,0,0x0,8
tick,0x7ffd093d1d94,78511127,0,0x0,8
tick,0x7ffd093d1d94,78526699,0,0x0,8
tick,0x7ffd093d1d94,78542218,0,0x0,8
tick,0x7ffd093d1d94,78557087,0,0x0,8
tick,0x7ffd093d1d94,78573018,0,0x0,8
tick,0x7ffd093d1d94,78588380,0,0x0,8
tick,0x7ffd093d1d94,78604138,0,0x0,8
tick,0x7ffd093d1d94,78619029,0,0x0,8
tick,0x7ffd093d1d94,78634188,0,0x0,8
tick,0x7ffd093d1d94,78649986,0,0x0,8
tick,0x7ffd093d1d94,78665759,0,0x0,8
tick,0x7ffd093d1d94,78681631,0,0x0,8
tick,0x7ffd093d1d94,78696570,0,0x0,8
tick,0x7ffd093d1d94,78711947,0,0x0,8
tick,0x7ffd093d1d94,78728815,0,0x0,8
tick,0x7ffd093d1d94,78744201,0,0x0,8
tick,0x7ffd093d1d94,78760618,0,0x0,8
tick,0x7ffd093d1d94,78776609,0,0x0,8
tick,0x7ffd093d1d94,78791971,0,0x0,8
tick,0x7ffd093d1d94,78807604,0,0x0,8
tick,0x7ffd093d1d94,78823304,0,0x0,8
tick,0x7ffd093d1d94,78838943,0,0x0,8
tick,0x7ffd093d1d94,78854055,0,0x0,8
tick,0x7ffd093d1d94,78869639,0,0x0,8
tick,0x7ffd093d1d94,78885234,0,0x0,8
tick,0x7ffd093d1d94,78900701,0,0x0,8
tick,0x7ffd093d1d94,78915552,0,0x0,8
tick,0x7ffd093d1d94,78930210,0,0x0,8
tick,0x7ffd093d1d94,78945839,0,0x0,8
tick,0x7ffd093d1d94,78960693,0,0x0,8
tick,0x7ffd093d1d94,78976660,0,0x0,8
tick,0x7ffd093d1d94,78992060,0,0x0,8
tick,0x7ffd093d1d94,79007513,0,0x0,8
tick,0x7ffd093d1d94,79023832,0,0x0,8
tick,0x7ffd093d1d94,79039761,0,0x0,8
tick,0x7ffd093d1d94,79055990,0,0x0,8
tick,0x7ffd093d1d94,79071863,0,0x0,8
tick,0x7ffd093d1d94,79087440,0,0x0,8
tick,0x7ffd093d1d94,79102419,0,0x0,8
tick,0x7ffd093d1d94,79118401,0,0x0,8
tick,0x7ffd093d1d94,79133503,0,0x0,8
tick,0x7ffd093d1d94,79149049,0,0x0,8
tick,0x7ffd093d1d94,79164600,0,0x0,8
tick,0x7ffd093d1d94,79179670,0,0x0,8
tick,0x7ffd093d1d94,79195335,0,0x0,8
tick,0x7ffd093d1d94,79210219,0,0x0,8
tick,0x7ffd093d1d94,79226116,0,0x0,8
tick,0x7ffd093d1d94,79241836,0,0x0,8
tick,0x7ffd093d1d94,79257695,0,0x0,8
tick,0x7ffd093d1d94,79272947,0,0x0,8
tick,0x7ffd093d1d94,79288667,0,0x0,8
tick,0x7ffd093d1d94,79304636,0,0x0,8
tick,0x7ffd093d1d94,79320504,0,0x0,8
tick,0x7ffd093d1d94,79335675,0,0x0,8
tick,0x7ffd093d1d94,79350970,0,0x0,8
tick,0x7ffd093d1d94,79366173,0,0x0,8
tick,0x7ffd093d1d94,79381285,0,0x0,8
tick,0x7ffd093d1d94,79397676,0,0x0,8
tick,0x7ffd093d1d94,79412428,0,0x0,8
tick,0x7ffd093d1d94,79427970,0,0x0,8
tick,0x7ffd093d1d94,79443963,0,0x0,8
tick,0x7ffd093d1d94,79460203,0,0x0,8
tick,0x7ffd093d1d94,79475667,0,0x0,8
tick,0x7ffd093d1d94,79491487,0,0x0,8
tick,0x7ffd093d1d94,79507054,0,0x0,8
tick,0x7ffd093d1d94,79522132,0,0x0,8
tick,0x7ffd093d1d94,79537485,0,0x0,8
tick,0x7ffd093d1d94,79552689,0,0x0,8
tick,0x7ffd093d1d94,79568150,0,0x0,8
tick,0x7ffd093d1d94,79583703,0,0x0,8
tick,0x7ffd093d1d94,79599711,0,0x0,8
tick,0x7ffd093d1d94,79615172,0,0x0,8
tick,0x7ffd093d1d94,79631294,0,0x0,8
tick,0x7ffd093d1d94,79646785,0,0x0,8
tick,0x7ffd093d1d94,79662383,0,0x0,8
tick,0x7ffd093d1d94,79677280,0,0x0,8
tick,0x7ffd093d1d94,79692672,0,0x0,8
tick,0x7ffd093d1d94,79708663,0,0x0,8
tick,0x7ffd093d1d94,79724617,0,0x0,8
tick,0x7ffd093d1d94,79740128,0,0x0,8
tick,0x7ffd093d1d94,79755340,0,0x0,8
tick,0x7ffd093d1d94,79771250,0,0x0,8
tick,0x7ffd093d1d94,79786215,0,0x0,8
tick,0x7ffd093d1d94,79801682,0,0x0,8
tick,0x7ffd093d1d94,79817524,0,0x0,8
tick,0x7ffd093d1d94,79832504,0,0x0,8
tick,0x7ffd093d1d94,79848155,0,0x0,8
tick,0x7ffd093d1d94,79863336,0,0x0,8
tick,0x7ffd093d1d94,79879091,0,0x0,8
tick,0x7ffd093d1d94,79894733,0,0x0,8
tick,0x7ffd093d1d94,79910139,0,0x0,8
tick,0x7ffd093d1d94,79926223,0,0x0,8
tick,0x7ffd093d1d94,79941363,0,0x0,8
tick,0x7ffd093d1d94,79956640,0,0x0,8
tick,0x7ffd093d1d94,79972094,0,0x0,8
tick,0x7ffd093d1d94,79987678,0,0x0,8
tick,0x7ffd093d1d94,80002899,0,0x0,8
tick,0x7ffd093d1d94,80018273,0,0x0,8
tick,0x7ffd093d1d94,80033162,0,0x0,8
tick,0x7ffd093d1d94,80049203,0,0x0,8
tick,0x7ffd093d1d94,80064899,0,0x0,8
tick,0x7ffd093d1d94,80079917,0,0x0,8
tick,0x7ffd093d1d94,80095539,0,0x0,8
tick,0x7ffd093d1d94,80111591,0,0x0,8
tick,0x7ffd093d1d94,80127855,0,0x0,8
tick,0x7ffd093d1d94,80143487,0,0x0,8
tick,0x7ffd093d1d94,80159723,0,0x0,8
tick,0x7ffd093d1d94,80174543,0,0x0,8
tick,0x7ffd093d1d94,80190486,0,0x0,8
tick,0x7ffd093d1d94,80206517,0,0x0,8
tick,0x7ffd093d1d94,80222204,0,0x0,8
tick,0x7ffd093d1d94,80238165,0,0x0,8
tick,0x7ffd093d1d94,80254074,0,0x0,8
tick,0x7ffd093d1d94,80270709,0,0x0,8
tick,0x7ffd093d1d94,80285808,0,0x0,8
tick,0x7ffd093d1d94,80301551,0,0x0,8
tick,0x7ffd093d1d94,80317236,0,0x0,8
tick,0x7ffd093d1d94,80332671,0,0x0,8
tick,0x7ffd093d1d94,80348501,0,0x0,8
tick,0x7ffd093d1d94,80363754,0,0x0,8
tick,0x7ffd093d1d94,80378769,0,0x0,8
tick,0x7ffd093d1d94,80394475,0,0x0,8
tick,0x7ffd093d1d94,80410155,0,0x0,8
tick,0x7ffd093d1d94,80424984,0,0x0,8
tick,0x7ffd093d1d94,80440669,0,0x0,8
tick,0x7ffd093d1d94,80455715,0,0x0,8
tick,0x7ffd093d1d94,80471351,0,0x0,8
tick,0x7ffd093d1d94,80487314,0,0x0,8
tick,0x7ffd093d1d94,80501919,0,0x0,8
tick,0x7ffd093d1d94,80517744,0,0x0,8
tick,0x7ffd093d1d94,80533811,0,0x0,8
tick,0x7ffd093d1d94,80549535,0,0x0,8
tick,0x7ffd093d1d94,80564804,0,0x0,8
tick,0x7ffd093d1d94,80579999,0,0x0,8
tick,0x7ffd093d1d94,80595512,0,0x0,8
tick,0x7ffd093d1d94,80610839,0,0x0,8
tick,0x7ffd093d1d94,80626237,0,0x0,8
tick,0x7ffd093d1d94,80641498,0,0x0,8
tick,0x7ffd093d1d94,80657442,0,0x0,8
tick,0x7ffd093d1d94,80673044,0,0x0,8
tick,0x7ffd093d1d94,80688942,0,0x0,8
tick,0x7ffd093d1d94,80704622,0,0x0,8
tick,0x7ffd093d1d94,80719931,0,0x0,8
tick,0x7ffd093d1d94,80736273,0,0x0,8
tick,0x7ffd093d1d94,80751328,0,0x0,8
tick,0x7ffd093d1d94,80767266,0,0x0,8
tick,0x7ffd093d1d94,80782445,0,0x0,8
tick,0x7ffd093d1d94,80798513,0,0x0,8
tick,0x7ffd093d1d94,80814147,0,0x0,8
tick,0x7ffd093d1d94,80829440,0,0x0,8
tick,0x7ffd093d1d94,80844721,0,0x0,8
tick,0x7ffd093d1d94,80860756,0,0x0,8
tick,0x7ffd093d1d94,80876576,0,0x0,8
tick,0x7ffd093d1d94,80891996,0,0x0,8
tick,0x7ffd093d1d94,80907642,0,0x0,8
tick,0x7ffd093d1d94,80923078,0,0x0,8
tick,0x7ffd093d1d94,80938005,0,0x0,8
tick,0x7ffd093d1d94,80953417,0,0x0,8
tick,0x7ffd093d1d94,80968514,0,0x0,8
tick,0x7ffd093d1d94,80983998,0,0x0,8
tick,0x7ffd093d1d94,80999755,0,0x0,8
tick,0x7ffd093d1d94,81015398,0,0x0,8
tick,0x7ffd093d1d94,81031000,0,0x0,8
tick,0x7ffd093d1d94,81047123,0,0x0,8
tick,0x7ffd093d1d94,81063311,0,0x0,8
tick,0x7ffd093d1d94,81079004,0,0x0,8
tick,0x7ffd093d1d94,81094505,0,0x0,8
tick,0x7ffd093d1d94,81109884,0,0x0,8
tick,0x7ffd093d1d94,81124892,0,0x0,8
tick,0x7ffd093d1d94,81140348,0,0x0,8
tick,0x7ffd093d1d94,81155932,0,0x0,8
tick,0x7ffd093d1d94,81171932,0,0x0,8
tick,0x7ffd093d1d94,81187938,0,0x0,8
tick,0x7ffd093d1d94,81203321,0,0x0,8
tick,0x7ffd093d1d94,81218935,0,0x0,8
tick,0x7ffd093d1d94,81234938,0,0x0,8
tick,0x7ffd093d1d94,81250265,0,0x0,8
tick,0x7ffd093d1d94,81266232,0,0x0,8
tick,0x7ffd093d1d94,81281915,0,0x0,8
tick,0x7ffd093d1d94,81297254,0,0x0,8
tick,0x7ffd093d1d94,81312859,0,0x0,8
tick,0x7ffd093d1d94,81328979,0,0x0,8
tick,0x7ffd093d1d94,81344678,0,0x0,8
tick,0x7ffd093d1d94,81360077,0,0x0,8
tick,0x7ffd093d1d94,81375689,0,0x0,8
tick,0x7ffd093d1d94,81391317,0,0x0,8
tick,0x7ffd093d1d94,81406596,0,0x0,8
tick,0x7ffd093d1d94,81422561,0,0x0,8
tick,0x7ffd093d1d94,81438561,0,0x0,8
tick,0x7ffd093d1d94,81453681,0,0x0,8
tick,0x7ffd093d1d94,81469768,0,0x0,8
tick,0x7ffd093d1d94,81484588,0,0x0,8
tick,0x7ffd093d1d94,81500070,0,0x0,8
tick,0x7ffd093d1d94,81515242,0,0x0,8
tick,0x7ffd093d1d94,81531072,0,0x0,8
tick,0x7ffd093d1d94,81546544,0,0x0,8
tick,0x7ffd093d1d94,81561947,0,0x0,8
tick,0x7ffd093d1d94,81577741,0,0x0,8
tick,0x7ffd093d1d94,81593336,0,0x0,8
tick,0x7ffd093d1d94,81608944,0,0x0,8
tick,0x7ffd093d1d94,81624182,0,0x0,8
tick,0x7ffd093d1d94,81640181,0,0x0,8
tick,0x7ffd093d1d94,81655720,0,0x0,8
tick,0x7ffd093d1d94,81671062,0,0x0,8
tick,0x7ffd093d1d94,81686880,0,0x0,8
tick,0x7ffd093d1d94,81702186,0,0x0,8
tick,0x7ffd093d1d94,81718172,0,0x0,8
tick,0x7ffd093d1d94,81733241,0,0x0,8
tick,0x7ffd093d1d94,81748878,0,0x0,8
tick,0x7ffd093d1d94,81764982,0,0x0,8
tick,0x7ffd093d1d94,81780257,0,0x0,8
tick,0x7ffd093d1d94,81795708,0,0x0,8
tick,0x7ffd093d1d94,81810807,0,0x0,8
tick,0x7ffd093d1d94,81826514,0,0x0,8
tick,0x7ffd093d1d94,81841729,0,0x0,8
tick,0x7ffd093d1d94,81857580,0,0x0,8
tick,0x7ffd093d1d94,81873692,0,0x0,8
tick,0x7ffd093d1d94,81889199,0,0x0,8
tick,0x7ffd093d1d94,81905176,0,0x0,8
tick,0x7ffd093d1d94,81920687,0,0x0,8
tick,0x7ffd093d1d94,81936322,0,0x0,8
tick,0x7ffd093d1d94,81951994,0,0x0,8
tick,0x7ffd093d1d94,81966838,0,0x0,8
tick,0x7ffd093d1d94,81981952,0,0x0,8
tick,0x7ffd093d1d94,81997831,0,0x0,8
tick,0x7ffd093d1d94,82013497,0,0x0,8
tick,0x7ffd093d1d94,82029146,0,0x0,8
tick,0x7ffd093d1d94,82044383,0,0x0,8
tick,0x7ffd093d1d94,82059352,0,0x0,8
tick,0x7ffd093d1d94,82074658,0,0x0,8
tick,0x7ffd093d1d94,82090245,0,0x0,8
tick,0x7ffd093d1d94,82105925,0,0x0,8
tick,0x7ffd093d1d94,82121852,0,0x0,8
tick,0x7ffd093d1d94,82137465,0,0x0,8
tick,0x7ffd093d1d94,82152920,0,0x0,8
tick,0x7ffd093d1d94,82168132,0,0x0,8
tick,0x7ffd093d1d94,82183498,0,0x0,8
tick,0x7ffd093d1d94,82199878,0,0x0,8
tick,0x7ffd093d1d94,82215369,0,0x0,8
tick,0x7ffd093d1d94,82230811,0,0x0,8
tick,0x7ffd093d1d94,82245982,0,0x0,8
tick,0x7ffd093d1d94,82261407,0,0x0,8
tick,0x7ffd093d1d94,82277193,0,0x0,8
tick,0x7ffd093d1d94,82292885,0,0x0,8
tick,0x7ffd093d1d94,82307754,0,0x0,8
tick,0x7ffd093d1d94,82323364,0,0x0,8
tick,0x7ffd093d1d94,82338662,0,0x0,8
tick,0x7ffd093d1d94,82354286,0,0x0,8
tick,0x7ffd093d1d94,82369396,0,0x0,8
tick,0x7ffd093d1d94,82384682,0,0x0,8
tick,0x7ffd093d1d94,82399729,0,0x0,8
tick,0x7ffd093d1d94,82416016,0,0x0,8
tick,0x7ffd093d1d94,82431381,0,0x0,8
tick,0x7ffd093d1d94,82446696,0,0x0,8
tick,0x7ffd093d1d94,82462748,0,0x0,8
tick,0x7ffd093d1d94,82477748,0,0x0,8
tick,0x7ffd093d1d94,82492721,0,0x0,8
tick,0x7ffd093d1d94,82509030,0,0x0,8
tick,0x7ffd093d1d94,82525114,0,0x0,8
tick,0x7ffd093d1d94,82540851,0,0x0,8
tick,0x7ffd093d1d94,82556325,0,0x0,8
tick,0x7ffd093d1d94,82572391,0,0x0,8
tick,0x7ffd093d1d94,82588347,0,0x0,8
tick,0x7ffd093d1d94,82604319,0,0x0,8
tick,0x7ffd093d1d94,82620297,0,0x0,8
tick,0x7ffd093d1d94,82636337,0,0x0,8
tick,0x7ffd093d1d94,82652159,0,0x0,8
tick,0x7ffd093d1d94,82667889,0,0x0,8
tick,0x7ffd093d1d94,82683952,0,0x0,8
tick,0x7ffd093d1d94,82700214,0,0x0,8
tick,0x7ffd093d1d94,82715523,0,0x0,8
tick,0x7ffd093d1d94,82731206,0,0x0,8
tick,0x7ffd093d1d94,82746178,0,0x0,8
tick,0x7ffd093d1d94,82762273,0,0x0,8
tick,0x7ffd093d1d94,82778539,0,0x0,8
tick,0x7ffd093d1d94,82793755,0,0x0,8
tick,0x7ffd093d1d94,82809129,0,0x0,8
tick,0x7ffd093d1d94,82824370,0,0x0,8
tick,0x7ffd093d1d94,82839778,0,0x0,8
tick,0x7ffd093d1d94,82855759,0,0x0,8
tick,0x7ffd093d1d94,82871927,0,0x0,8
tick,0x7ffd093d1d94,82887490,0,0x0,8
tick,0x7ffd093d1d94,82903878,0,0x0,8
tick,0x7ffd093d1d94,82918492,0,0x0,8
tick,0x7ffd093d1d94,82933677,0,0x0,8
tick,0x7ffd093d1d94,82949155,0,0x0,8
tick,0x7ffd093d1d94,82965153,0,0x0,8
tick,0x7ffd093d1d94,82980890,0,0x0,8
tick,0x7ffd093d1d94,82996687,0,0x0,8
tick,0x7ffd093d1d94,83012678,0,0x0,8
tick,0x7ffd093d1d94,83028516,0,0x0,8
tick,0x7ffd093d1d94,83044145,0,0x0,8
tick,0x7ffd093d1d94,83059966,0,0x0,8
tick,0x7ffd093d1d94,83075350,0,0x0,8
tick,0x7ffd093d1d94,83090544,0,0x0,8
tick,0x7ffd093d1d94,83106456,0,0x0,8
tick,0x7ffd093d1d94,83122250,0,0x0,8
tick,0x7ffd093d1d94,83137984,0,0x0,8
tick,0x7ffd093d1d94,83153534,0,0x0,8
tick,0x7ffd093d1d94,83168760,0,0x0,8
tick,0x7ffd093d1d94,83184017,0,0x0,8
tick,0x7ffd093d1d94,83199386,0,0x0,8
tick,0x7ffd093d1d94,83214776,0,0x0,8
tick,0x7ffd093d1d94,83230731,0,0x0,8
tick,0x7ffd093d1d94,83245895,0,0x0,8
tick,0x7ffd093d1d94,83261679,0,0x0,8
tick,0x7ffd093d1d94,83277371,0,0x0,8
tick,0x7ffd093d1d94,83292650,0,0x0,8
tick,0x7ffd093d1d94,83308223,0,0x0,8
tick,0x7ffd093d1d94,83323902,0,0x0,8
tick,0x7ffd093d1d94,83339333,0,0x0,8
tick,0x7ffd093d1d94,83355080,0,0x0,8
tick,0x7ffd093d1d94,83370545,0,0x0,8
tick,0x7ffd093d1d94,83385978,0,0x0,8
tick,0x7ffd093d1d94,83401377,0,0x0,8
tick,0x7ffd093d1d94,83417245,0,0x0,8
tick,0x7ffd093d1d94,83433218,0,0x0,8
tick,0x7ffd093d1d94,83448801,0,0x0,8
tick,0x7ffd093d1d94,83464615,0,0x0,8
tick,0x7ffd093d1d94,83479748,0,0x0,8
tick,0x7ffd093d1d94,83495146,0,0x0,8
tick,0x7ffd093d1d94,83510789,0,0x0,8
tick,0x7ffd093d1d94,83526114,0,0x0,8
tick,0x7ffd093d1d94,83541344,0,0x0,8
tick,0x7ffd093d1d94,83557891,0,0x0,8
tick,0x7ffd093d1d94,83573957,0,0x0,8
tick,0x7ffd093d1d94,83589777,0,0x0,8
tick,0x7ffd093d1d94,83605798,0,0x0,8
tick,0x7ffd093d1d94,83621577,0,0x0,8
tick,0x7ffd093d1d94,83637324,0,0x0,8
tick,0x7ffd093d1d94,83653209,0,0x0,8
tick,0x7ffd093d1d94,83668723,0,0x0,8
tick,0x7ffd093d1d94,83684572,0,0x0,8
tick,0x7ffd093d1d94,83700637,0,0x0,8
tick,0x7ffd093d1d94,83716647,0,0x0,8
tick,0x7ffd093d1d94,83732621,0,0x0,8
tick,0x7ffd093d1d94,83748096,0,0x0,8
tick,0x7ffd093d1d94,83764148,0,0x0,8
tick,0x7ffd093d1d94,83780158,0,0x0,8
tick,0x7ffd093d1d94,83795161,0,0x0,8
tick,0x7ffd093d1d94,83810148,0,0x0,8
tick,0x7ffd093d1d94,83825362,0,0x0,8
tick,0x7ffd093d1d94,83840580,0,0x0,8
tick,0x7ffd093d1d94,83855772,0,0x0,8
tick,0x7ffd093d1d94,83871726,0,0x0,8
tick,0x7ffd093d1d94,83886735,0,0x0,8
tick,0x7ffd093d1d94,83902243,0,0x0,8
tick,0x7ffd093d1d94,83917572,0,0x0,8
tick,0x7ffd093d1d94,83933000,0,0x0,8
tick,0x7ffd093d1d94,83948237,0,0x0,8
tick,0x7ffd093d1d94,83963422,0,0x0,8
tick,0x7ffd093d1d94,83978784,0,0x0,8
tick,0x7ffd093d1d94,83994471,0,0x0,8
tick,0x7ffd093d1d94,84009659,0,0x0,8
tick,0x7ffd093d1d94,84024913,0,0x0,8
tick,0x7ffd093d1d94,84040363,0,0x0,8
tick,0x7ffd093d1d94,84055691,0,0x0,8
tick,0x7ffd093d1d94,84071700,0,0x0,8
tick,0x7ffd093d1d94,84087243,0,0x0,8
tick,0x7ffd093d1d94,84103220,0,0x0,8
tick,0x7ffd093d1d94,84118926,0,0x0,8
tick,0x7ffd093d1d94,84133963,0,0x0,8
tick,0x7ffd093d1d94,84149754,0,0x0,8
tick,0x7ffd093d1d94,84164914,0,0x0,8
tick,0x7ffd093d1d94,84180633,0,0x0,8
tick,0x7ffd093d1d94,84196616,0,0x0,8
tick,0x7ffd093d1d94,84211566,0,0x0,8
tick,0x7ffd093d1d94,84226979,0,0x0,8
tick,0x7ffd093d1d94,84242012,0,0x0,8
tick,0x7ffd093d1d94,84257617,0,0x0,8
tick,0x7ffd093d1d94,84272857,0,0x0,8
tick,0x7ffd093d1d94,84288111,0,0x0,8
tick,0x7ffd093d1d94,84303584,0,0x0,8
tick,0x7ffd093d1d94,84319063,0,0x0,8
tick,0x7ffd093d1d94,84334785,0,0x0,8
tick,0x7ffd093d1d94,84350623,0,0x0,8
tick,0x7ffd093d1d94,84366026,0,0x0,8
tick,0x7ffd093d1d94,84381733,0,0x0,8
tick,0x7ffd093d1d94,84397085,0,0x0,8
tick,0x7ffd093d1d94,84412226,0,0x0,8
tick,0x7ffd093d1d94,84427790,0,0x0,8
tick,0x7ffd093d1d94,84442987,0,0x0,8
tick,0x7ffd093d1d94,84458309,0,0x0,8
tick,0x7ffd093d1d94,84474468,0,0x0,8
tick,0x7ffd093d1d94,84490325,0,0x0,8
tick,0x7ffd093d1d94,84505553,0,0x0,8
tick,0x7ffd093d1d94,84521293,0,0x0,8
tick,0x7ffd093d1d94,84536741,0,0x0,8
tick,0x7ffd093d1d94,84552678,0,0x0,8
tick,0x7ffd093d1d94,84568096,0,0x0,8
tick,0x7ffd093d1d94,84583377,0,0x0,8
tick,0x7ffd093d1d94,84598716,0,0x0,8
tick,0x7ffd093d1d94,84614382,0,0x0,8
tick,0x7ffd093d1d94,84629445,0,0x0,8
tick,0x7ffd093d1d94,84644785,0,0x0,8
tick,0x7ffd093d1d94,84660484,0,0x0,8
tick,0x7ffd093d1d94,84676275,0,0x0,8
tick,0x7ffd093d1d94,84691957,0,0x0,8
tick,0x7ffd093d1d94,84707243,0,0x0,8
tick,0x7ffd093d1d94,84723133,0,0x0,8
tick,0x7ffd093d1d94,84738862,0,0x0,8
tick,0x7ffd093d1d94,84755019,0,0x0,8
tick,0x7ffd093d1d94,84770798,0,0x0,8
tick,0x7ffd093d1d94,84786980,0,0x0,8
tick,0x7ffd093d1d94,84802344,0,0x0,8
tick,0x7ffd093d1d94,84818022,0,0x0,8
tick,0x7ffd093d1d94,84833881,0,0x0,8
tick,0x7ffd093d1d94,84849044,0,0x0,8
tick,0x7ffd093d1d94,84864399,0,0x0,8
tick,0x7ffd093d1d94,84880091,0,0x0,8
tick,0x7ffd093d1d94,84896022,0,0x0,8
tick,0x7ffd093d1d94,84911957,0,0x0,8
tick,0x7ffd093d1d94,84927820,0,0x0,8
tick,0x7ffd093d1d94,84943297,0,0x0,8
tick,0x7ffd093d1d94,84959632,0,0x0,8
tick,0x7ffd093d1d94,84975032,0,0x0,8
tick,0x7ffd093d1d94,84990988,0,0x0,8
tick,0x7ffd093d1d94,85007047,0,0x0,8
tick,0x7ffd093d1d94,85022482,0,0x0,8
tick,0x7ffd093d1d94,85038761,0,0x0,8
tick,0x7ffd093d1d94,85053979,0,0x0,8
tick,0x7ffd093d1d94,85069361,0,0x0,8
tick,0x7ffd093d1d94,85084862,0,0x0,8
tick,0x7ffd093d1d94,85100811,0,0x0,8
tick,0x7ffd093d1d94,85115968,0,0x0,8
tick,0x7ffd093d1d94,85131001,0,0x0,8
tick,0x7ffd093d1d94,85146970,0,0x0,8
tick,0x7ffd093d1d94,85162484,0,0x0,8
tick,0x7ffd093d1d94,85178054,0,0x0,8
tick,0x7ffd093d1d94,85194116,0,0x0,8
tick,0x7ffd093d1d94,85210279,0,0x0,8
tick,0x7ffd093d1d94,85225652,0,0x0,8
tick,0x7ffd093d1d94,85241727,0,0x0,8
tick,0x7ffd093d1d94,85257481,0,0x0,8
tick,0x7ffd093d1d94,85272560,0,0x0,8
tick,0x7ffd093d1d94,85287778,0,0x0,8
tick,0x7ffd093d1d94,85303100,0,0x0,8
tick,0x7ffd093d1d94,85319118,0,0x0,8
tick,0x7ffd093d1d94,85334446,0,0x0,8
tick,0x7ffd093d1d94,85349651,0,0x0,8
tick,0x7ffd093d1d94,85365277,0,0x0,8
tick,0x7ffd093d1d94,85380772,0,0x0,8
tick,0x7ffd093d1d94,85396822,0,0x0,8
tick,0x7ffd093d1d94,85412063,0,0x0,8
tick,0x7ffd093d1d94,85427425,0,0x0,8
tick,0x7ffd093d1d94,85442540,0,0x0,8
tick,0x7ffd093d1d94,85457669,0,0x0,8
tick,0x7ffd093d1d94,85472709,0,0x0,8
tick,0x7ffd093d1d94,85487986,0,0x0,8
tick,0x7ffd093d1d94,85503673,0,0x0,8
tick,0x7ffd093d1d94,85519362,0,0x0,8
tick,0x7ffd093d1d94,85534612,0,0x0,8
tick,0x7ffd093d1d94,85550263,0,0x0,8
tick,0x7ffd093d1d94,85565641,0,0x0,8
tick,0x7ffd093d1d94,85581326,0,0x0,8
tick,0x7ffd093d1d94,85596751,0,0x0,8
tick,0x7ffd093d1d94,85611854,0,0x0,8
tick,0x7ffd093d1d94,85627032,0,0x0,8
tick,0x7ffd093d1d94,85642857,0,0x0,8
tick,0x7ffd093d1d94,85658519,0,0x0,8
tick,0x7ffd093d1d94,85674220,0,0x0,8
tick,0x7ffd093d1d94,85690357,0,0x0,8
tick,0x7ffd093d1d94,85706528,0,0x0,8
tick,0x7ffd093d1d94,85722508,0,0x0,8
tick,0x7ffd093d1d94,85737696,0,0x0,8
tick,0x7ffd093d1d94,85753281,0,0x0,8
tick,0x7ffd093d1d94,85768808,0,0x0,8
tick,0x7ffd093d1d94,85783700,0,0x0,8
tick,0x7ffd093d1d94,85798972,0,0x0,8
tick,0x7ffd093d1d94,85814334,0,0x0,8
tick,0x7ffd093d1d94,85829547,0,0x0,8
tick,0x7ffd093d1d94,85845632,0,0x0,8
tick,0x7ffd093d1d94,85860429,0,0x0,8
tick,0x7ffd093d1d94,85875605,0,0x0,8
tick,0x7ffd093d1d94,85891887,0,0x0,8
tick,0x7ffd093d1d94,85907718,0,0x0,8
tick,0x7ffd093d1d94,85923142,0,0x0,8
tick,0x7ffd093d1d94,85938646,0,0x0,8
tick,0x7ffd093d1d94,85953667,0,0x0,8
tick,0x7ffd093d1d94,85969601,0,0x0,8
tick,0x7ffd093d1d94,85984617,0,0x0,8
tick,0x7ffd093d1d94,85999579,0,0x0,8
tick,0x7ffd093d1d94,86015978,0,0x0,8
tick,0x7ffd093d1d94,86030622,0,0x0,8
tick,0x7ffd093d1d94,86046590,0,0x0,8
tick,0x7ffd093d1d94,86062145,0,0x0,8
tick,0x7ffd093d1d94,86077075,0,0x0,8
tick,0x7ffd093d1d94,86093444,0,0x0,8
tick,0x7ffd093d1d94,86108339,0,0x0,8
tick,0x7ffd093d1d94,86124056,0,0x0,8
tick,0x7ffd093d1d94,86140066,0,0x0,8
tick,0x7ffd093d1d94,86155597,0,0x0,8
tick,0x7ffd093d1d94,86172079,0,0x0,8
tick,0x7ffd093d1d94,86186606,0,0x0,8
tick,0x7ffd093d1d94,86202160,0,0x0,8
tick,0x7ffd093d1d94,86218023,0,0x0,8
tick,0x7ffd093d1d94,86233271,0,0x0,8
tick,0x7ffd093d1d94,86249318,0,0x0,8
tick,0x7ffd093d1d94,86264970,0,0x0,8
tick,0x7ffd093d1d94,86280585,0,0x0,8
tick,0x7ffd093d1d94,86296395,0,0x0,8
tick,0x7ffd093d1d94,86311449,0,0x0,8
tick,0x7ffd093d1d94,86327597,0,0x0,8
tick,0x7ffd093d1d94,86342853,0,0x0,8
tick,0x7ffd093d1d94,86358722,0,0x0,8
tick,0x7ffd093d1d94,86374191,0,0x0,8
tick,0x7ffd093d1d94,86389031,0,0x0,8
tick,0x7ffd093d1d94,86405120,0,0x0,8
tick,0x7ffd093d1d94,86420216,0,0x0,8
tick,0x7ffd093d1d94,86436147,0,0x0,8
tick,0x7ffd093d1d94,86451557,0,0x0,8
tick,0x7ffd093d1d94,86467448,0,0x0,8
tick,0x7ffd093d1d94,86483168,0,0x0,8
tick,0x7ffd093d1d94,86499090,0,0x0,8
tick,0x7ffd093d1d94,86514790,0,0x0,8
tick,0x7ffd093d1d94,86530281,0,0x0,8
tick,0x7ffd093d1d94,86545552,0,0x0,8
tick,0x7ffd093d1d94,86561487,0,0x0,8
tick,0x7ffd093d1d94,86576558,0,0x0,8
tick,0x7ffd093d1d94,86592483,0,0x0,8
tick,0x7ffd093d1d94,86608127,0,0x0,8
tick,0x7ffd093d1d94,86623549,0,0x0,8
tick,0x7ffd093d1d94,86639307,0,0x0,8
tick,0x7ffd093d1d94,86654566,0,0x0,8
tick,0x7ffd093d1d94,86670645,0,0x0,8
tick,0x7ffd093d1d94,86686442,0,0x0,8
tick,0x7ffd093d1d94,86702627,0,0x0,8
tick,0x7ffd093d1d94,86717949,0,0x0,8
tick,0x7ffd093d1d94,86733758,0,0x0,8
tick,0x7ffd093d1d94,86748623,0,0x0,8
tick,0x7ffd093d1d94,86764811,0,0x0,8
tick,0x7ffd093d1d94,86780566,0,0x0,8
tick,0x7ffd093d1d94,86795814,0,0x0,8
tick,0x7ffd093d1d94,86811322,0,0x0,8
tick,0x7ffd093d1d94,86826942,0,0x0,8
tick,0x7ffd093d1d94,86842272,0,0x0,8
tick,0x7ffd093d1d94,86857673,0,0x0,8
tick,0x7ffd093d1d94,86873248,0,0x0,8
tick,0x7ffd093d1d94,86888196,0,0x0,8
tick,0x7ffd093d1d94,86903983,0,0x0,8
tick,0x7ffd093d1d94,86919349,0,0x0,8
tick,0x7ffd093d1d94,86935394,0,0x0,8
tick,0x7ffd093d1d94,86950644,0,0x0,8
tick,0x7ffd093d1d94,86966204,0,0x0,8
tick,0x7ffd093d1d94,86981357,0,0x0,8
tick,0x7ffd093d1d94,86996836,0,0x0,8
tick,0x7ffd093d1d94,87012512,0,0x0,8
tick,0x7ffd093d1d94,87028082,0,0x0,8
tick,0x7ffd093d1d94,87043524,0,0x0,8
tick,0x7ffd093d1d94,87058944,0,0x0,8
tick,0x7ffd093d1d94,87074895,0,0x0,8
tick,0x7ffd093d1d94,87090920,0,0x0,8
tick,0x7ffd093d1d94,87106489,0,0x0,8
tick,0x7ffd093d1d94,87122284,0,0x0,8
tick,0x7ffd093d1d94,87138286,0,0x0,8
tick,0x7ffd093d1d94,87153865,0,0x0,8
tick,0x7ffd093d1d94,87169792,0,0x0,8
tick,0x7ffd093d1d94,87185718,0,0x0,8
tick,0x7ffd093d1d94,87201726,0,0x0,8
tick,0x7ffd093d1d94,87218206,0,0x0,8
tick,0x7ffd093d1d94,87233093,0,0x0,8
tick,0x7ffd093d1d94,87248321,0,0x0,8
tick,0x7ffd093d1d94,87264261,0,0x0,8
tick,0x7ffd093d1d94,87279654,0,0x0,8
tick,0x7ffd093d1d94,87295416,0,0x0,8
tick,0x7ffd093d1d94,87311220,0,0x0,8
tick,0x7ffd093d1d94,87326090,0,0x0,8
tick,0x7ffd093d1d94,87342229,0,0x0,8
tick,0x7ffd093d1d94,87358434,0,0x0,8
tick,0x7ffd093d1d94,87374445,0,0x0,8
tick,0x7ffd093d1d94,87390260,0,0x0,8
tick,0x7ffd093d1d94,87404774,0,0x0,8
tick,0x7ffd093d1d94,87420628,0,0x0,8
tick,0x7ffd093d1d94,87436653,0,0x0,8
tick,0x7ffd093d1d94,87451992,0,0x0,8
tick,0x7ffd093d1d94,87467842,0,0x0,8
tick,0x7ffd093d1d94,87483490,0,0x0,8
tick,0x7ffd093d1d94,87499354,0,0x0,8
tick,0x7ffd093d1d94,87514915,0,0x0,8
tick,0x7ffd093d1d94,87530959,0,0x0,8
tick,0x7ffd093d1d94,87546751,0,0x0,8
tick,0x7ffd093d1d94,87561565,0,0x0,8
tick,0x7ffd093d1d94,87577233,0,0x0,8
tick,0x7ffd093d1d94,87592980,0,0x0,8
tick,0x7ffd093d1d94,87608170,0,0x0,8
tick,0x7ffd093d1d94,87623382,0,0x0,8
tick,0x7ffd093d1d94,87639448,0,0x0,8
tick,0x7ffd093d1d94,87654516,0,0x0,8
tick,0x7ffd093d1d94,87669975,0,0x0,8
tick,0x7ffd093d1d94,87685139,0,0x0,8
tick,0x7ffd093d1d94,87700334,0,0x0,8
tick,0x7ffd093d1d94,87715231,0,0x0,8
tick,0x7ffd093d1d94,87730351,0,0x0,8
tick,0x7ffd093d1d94,87746036,0,0x0,8
tick,0x7ffd093d1d94,87761916,0,0x0,8
tick,0x7ffd093d1d94,87777479,0,0x0,8
tick,0x7ffd093d1d94,87793384,0,0x0,8
tick,0x7ffd093d1d94,87809620,0,0x0,8
tick,0x7ffd093d1d94,87825022,0,0x0,8
tick,0x7ffd093d1d94,87841340,0,0x0,8
tick,0x7ffd093d1d94,87855566,0,0x0,8
tick,0x7ffd093d1d94,87871436,0,0x0,8
tick,0x7ffd093d1d94,87886720,0,0x0,8
tick,0x7ffd093d1d94,87901561,0,0x0,8
tick,0x7ffd093d1d94,87918078,0,0x0,8
tick,0x7ffd093d1d94,87933671,0,0x0,8
tick,0x7ffd093d1d94,87949488,0,0x0,8
tick,0x7ffd093d1d94,87965658,0,0x0,8
tick,0x7ffd093d1d94,87981881,0,0x0,8
tick,0x7ffd093d1d94,87996933,0,0x0,8
tick,0x7ffd093d1d94,88012120,0,0x0,8
tick,0x7ffd093d1d94,88027846,0,0x0,8
tick,0x7ffd093d1d94,88042816,0,0x0,8
tick,0x7ffd093d1d94,88058051,0,0x0,8
tick,0x7ffd093d1d94,88073738,0,0x0,8
tick,0x7ffd093d1d94,88088966,0,0x0,8
tick,0x7ffd093d1d94,88105070,0,0x0,8
tick,0x7ffd093d1d94,88121082,0,0x0,8
tick,0x7ffd093d1d94,88137573,0,0x0,8
tick,0x7ffd093d1d94,88153122,0,0x0,8
tick,0x7ffd093d1d94,88168925,0,0x0,8
tick,0x7ffd093d1d94,88185065,0,0x0,8
tick,0x7ffd093d1d94,88200572,0,0x0,8
tick,0x7ffd093d1d94,88215889,0,0x0,8
tick,0x7ffd093d1d94,88231738,0,0x0,8
tick,0x7ffd093d1d94,88248014,0,0x0,8
tick,0x7ffd093d1d94,88263301,0,0x0,8
tick,0x7ffd093d1d94,88279008,0,0x0,8
tick,0x7ffd093d1d94,88294308,0,0x0,8
tick,0x7ffd093d1d94,88309113,0,0x0,8
tick,0x7ffd093d1d94,88324284,0,0x0,8
tick,0x7ffd093d1d94,88340050,0,0x0,8
tick,0x7ffd093d1d94,88355457,0,0x0,8
tick,0x7ffd093d1d94,88370526,0,0x0,8
tick,0x7ffd093d1d94,88386544,0,0x0,8
tick,0x7ffd093d1d94,88401490,0,0x0,8
tick,0x7ffd093d1d94,88416568,0,0x0,8
tick,0x7ffd093d1d94,88431938,0,0x0,8
tick,0x7ffd093d1d94,88447250,0,0x0,8
tick,0x7ffd093d1d94,88463318,0,0x0,8
tick,0x7ffd093d1d94,88479151,0,0x0,8
tick,0x7ffd093d1d94,88494115,0,0x0,8
tick,0x7ffd093d1d94,88509652,0,0x0,8
tick,0x7ffd093d1d94,88525561,0,0x0,8
tick,0x7ffd093d1d94,88540812,0,0x0,8
tick,0x7ffd093d1d94,88556104,0,0x0,8
tick,0x7ffd093d1d94,88571318,0,0x0,8
tick,0x7ffd093d1d94,88587399,0,0x0,8
tick,0x7ffd093d1d94,88603414,0,0x0,8
tick,0x7ffd093d1d94,88618726,0,0x0,8
tick,0x7ffd093d1d94,88634085,0,0x0,8
tick,0x7ffd093d1d94,88650168,0,0x0,8
tick,0x7ffd093d1d94,88666145,0,0x0,8
tick,0x7ffd093d1d94,88681951,0,0x0,8
tick,0x7ffd093d1d94,88697393,0,0x0,8
tick,0x7ffd093d1d94,88713064,0,0x0,8
tick,0x7ffd093d1d94,88728562,0,0x0,8
tick,0x7ffd093d1d94,88744659,0,0x0,8
tick,0x7ffd093d1d94,88760125,0,0x0,8
tick,0x7ffd093d1d94,88775626,0,0x0,8
tick,0x7ffd093d1d94,88790854,0,0x0,8
tick,0x7ffd093d1d94,88805998,0,0x0,8
tick,0x7ffd093d1d94,88821897,0,0x0,8
tick,0x7ffd093d1d94,88836872,0,0x0,8
tick,0x7ffd093d1d94,88852126,0,0x0,8
tick,0x7ffd093d1d94,88867605,0,0x0,8
tick,0x7ffd093d1d94,88883029,0,0x0,8
tick,0x7ffd093d1d94,88898461,0,0x0,8
tick,0x7ffd093d1d94,88914540,0,0x0,8
tick,0x7ffd093d1d94,88929481,0,0x0,8
tick,0x7ffd093d1d94,88945181,0,0x0,8
tick,0x7ffd093d1d94,88960297,0,0x0,8
tick,0x7ffd093d1d94,88975695,0,0x0,8
tick,0x7ffd093d1d94,88991596,0,0x0,8
tick,0x7ffd093d1d94,89007573,0,0x0,8
tick,0x7ffd093d1d94,89023354,0,0x0,8
tick,0x7ffd093d1d94,89038680,0,0x0,8
tick,0x7ffd093d1d94,89054145,0,0x0,8
tick,0x7ffd093d1d94,89069511,0,0x0,8
tick,0x7ffd093d1d94,89084877,0,0x0,8
tick,0x7ffd093d1d94,89099791,0,0x0,8
tick,0x7ffd093d1d94,89114998,0,0x0,8
tick,0x7ffd093d1d94,89130394,0,0x0,8
tick,0x7ffd093d1d94,89145873,0,0x0,8
tick,0x7ffd093d1d94,89161126,0,0x0,8
tick,0x7ffd093d1d94,89176422,0,0x0,8
tick,0x7ffd093d1d94,89191920,0,0x0,8
tick,0x7ffd093d1d94,89207579,0,0x0,8
tick,0x7ffd093d1d94,89223115,0,0x0,8
tick,0x7ffd093d1d94,89237938,0,0x0,8
tick,0x7ffd093d1d94,89253078,0,0x0,8
tick,0x7ffd093d1d94,89268572,0,0x0,8
tick,0x7ffd093d1d94,89284559,0,0x0,8
tick,0x7ffd093d1d94,89299637,0,0x0,8
tick,0x7ffd093d1d94,89315185,0,0x0,8
tick,0x7ffd093d1d94,89330910,0,0x0,8
tick,0x7ffd093d1d94,89346555,0,0x0,8
tick,0x7ffd093d1d94,89361727,0,0x0,8
tick,0x7ffd093d1d94,89377947,0,0x0,8
tick,0x7ffd093d1d94,89393224,0,0x0,8
tick,0x7ffd093d1d94,89409050,0,0x0,8
tick,0x7ffd093d1d94,89424692,0,0x0,8
tick,0x7ffd093d1d94,89440241,0,0x0,8
tick,0x7ffd093d1d94,89455006,0,0x0,8
tick,0x7ffd093d1d94,89470135,0,0x0,8
tick,0x7ffd093d1d94,89486104,0,0x0,8
tick,0x7ffd093d1d94,89501318,0,0x0,8
tick,0x7ffd093d1d94,89517029,0,0x0,8
tick,0x7ffd093d1d94,89532819,0,0x0,8
tick,0x7ffd093d1d94,89548939,0,0x0,8
tick,0x7ffd093d1d94,89564059,0,0x0,8
tick,0x7ffd093d1d94,89579969,0,0x0,8
tick,0x7ffd093d1d94,89595262,0,0x0,8
tick,0x7ffd093d1d94,89609981,0,0x0,8
tick,0x7ffd093d1d94,89626086,0,0x0,8
tick,0x7ffd093d1d94,89641512,0,0x0,8
tick,0x7ffd093d1d94,89656571,0,0x0,8
tick,0x7ffd093d1d94,89672001,0,0x0,8
tick,0x7ffd093d1d94,89687602,0,0x0,8
tick,0x7ffd093d1d94,89702709,0,0x0,8
tick,0x7ffd093d1d94,89718315,0,0x0,8
tick,0x7ffd093d1d94,89734280,0,0x0,8
tick,0x7ffd093d1d94,89750235,0,0x0,8
tick,0x7ffd093d1d94,89765472,0,0x0,8
tick,0x7ffd093d1d94,89780210,0,0x0,8
tick,0x7ffd093d1d94,89795829,0,0x0,8
tick,0x7ffd093d1d94,89810536,0,0x0,8
tick,0x7ffd093d1d94,89826583,0,0x0,8
tick,0x7ffd093d1d94,89842540,0,0x0,8
tick,0x7ffd093d1d94,89858060,0,0x0,8
tick,0x7ffd093d1d94,89873976,0,0x0,8
tick,0x7ffd093d1d94,89889864,0,0x0,8
tick,0x7ffd093d1d94,89905600,0,0x0,8
tick,0x7ffd093d1d94,89921698,0,0x0,8
tick,0x7ffd093d1d94,89936971,0,0x0,8
tick,0x7ffd093d1d94,89953204,0,0x0,8
tick,0x7ffd093d1d94,89969196,0,0x0,8
tick,0x7ffd093d1d94,89985261,0,0x0,8
tick,0x7ffd093d1d94,90000770,0,0x0,8
tick,0x7ffd093d1d94,90016458,0,0x0,8
tick,0x7ffd093d1d94,90032284,0,0x0,8
tick,0x7ffd093d1d94,90048296,0,0x0,8
tick,0x7ffd093d1d94,90063951,0,0x0,8
tick,0x7ffd093d1d94,90079651,0,0x0,8
tick,0x7ffd093d1d94,90095260,0,0x0,8
tick,0x7ffd093d1d94,90109932,0,0x0,8
tick,0x7ffd093d1d94,90125038,0,0x0,8
tick,0x7ffd093d1d94,90140478,0,0x0,8
tick,0x7ffd093d1d94,90155910,0,0x0,8
tick,0x7ffd093d1d94,90171355,0,0x0,8
tick,0x7ffd093d1d94,90187276,0,0x0,8
tick,0x7ffd093d1d94,90203268,0,0x0,8
tick,0x7ffd093d1d94,90218294,0,0x0,8
tick,0x7ffd093d1d94,90233741,0,0x0,8
tick,0x7ffd093d1d94,90249644,0,0x0,8
tick,0x7ffd093d1d94,90265682,0,0x0,8
tick,0x7ffd093d1d94,90280538,0,0x0,8
tick,0x7ffd093d1d94,90295823,0,0x0,8
tick,0x7ffd093d1d94,90311999,0,0x0,8
tick,0x7ffd093d1d94,90327527,0,0x0,8
tick,0x7ffd093d1d94,90342763,0,0x0,8
tick,0x7ffd093d1d94,90358518,0,0x0,8
tick,0x7ffd093d1d94,90374153,0,0x0,8
tick,0x7ffd093d1d94,90390407,0,0x0,8
tick,0x7ffd093d1d94,90406892,0,0x0,8
tick,0x7ffd093d1d94,90422231,0,0x0,8
tick,0x7ffd093d1d94,90438432,0,0x0,8
tick,0x7ffd093d1d94,90454005,0,0x0,8
tick,0x7ffd093d1d94,90469166,0,0x0,8
tick,0x7ffd093d1d94,90485931,0,0x0,8
tick,0x7ffd093d1d94,90501090,0,0x0,8
tick,0x7ffd093d1d94,90516150,0,0x0,8
tick,0x7ffd093d1d94,90532064,0,0x0,8
tick,0x7ffd093d1d94,90547241,0,0x0,8
tick,0x7ffd093d1d94,90562966,0,0x0,8
tick,0x7ffd093d1d94,90578190,0,0x0,8
tick,0x7ffd093d1d94,90593306,0,0x0,8
tick,0x7ffd093d1d94,90608527,0,0x0,8
tick,0x7ffd093d1d94,90624269,0,0x0,8
tick,0x7ffd093d1d94,90639762,0,0x0,8
tick,0x7ffd093d1d94,90655381,0,0x0,8
tick,0x7ffd093d1d94,90671087,0,0x0,8
tick,0x7ffd093d1d94,90686868,0,0x0,8
tick,0x7ffd093d1d94,90702303,0,0x0,8
tick,0x7ffd093d1d94,90717573,0,0x0,8
tick,0x7ffd093d1d94,90732911,0,0x0,8
tick,0x7ffd093d1d94,90748108,0,0x0,8
tick,0x7ffd093d1d94,90763534,0,0x0,8
tick,0x7ffd093d1d94,90779299,0,0x0,8
tick,0x7ffd093d1d94,90794085,0,0x0,8
tick,0x7ffd093d1d94,90809206,0,0x0,8
tick,0x7ffd093d1d94,90825360,0,0x0,8
tick,0x7ffd093d1d94,90841615,0,0x0,8
tick,0x7ffd093d1d94,90857575,0,0x0,8
tick,0x7ffd093d1d94,90873195,0,0x0,8
tick,0x7ffd093d1d94,90888817,0,0x0,8
tick,0x7ffd093d1d94,90904072,0,0x0,8
tick,0x7ffd093d1d94,90919910,0,0x0,8
tick,0x7ffd093d1d94,90935477,0,0x0,8
tick,0x7ffd093d1d94,90950753,0,0x0,8
tick,0x7ffd093d1d94,90966369,0,0x0,8
tick,0x7ffd093d1d94,90982204,0,0x0,8
tick,0x7ffd093d1d94,90997932,0,0x0,8
tick,0x7ffd093d1d94,91013388,0,0x0,8
tick,0x7ffd093d1d94,91029410,0,0x0,8
tick,0x7ffd093d1d94,91045127,0,0x0,8
tick,0x7ffd093d1d94,91060619,0,0x0,8
tick,0x7ffd093d1d94,91076568,0,0x0,8
tick,0x7ffd093d1d94,91092381,0,0x0,8
tick,0x7ffd093d1d94,91107775,0,0x0,8
tick,0x7ffd093d1d94,91123732,0,0x0,8
tick,0x7ffd093d1d94,91138822,0,0x0,8
tick,0x7ffd093d1d94,91154111,0,0x0,8
tick,0x7ffd093d1d94,91170081,0,0x0,8
tick,0x7ffd093d1d94,91185364,0,0x0,8
tick,0x7ffd093d1d94,91201336,0,0x0,8
tick,0x7ffd093d1d94,91216821,0,0x0,8
tick,0x7ffd093d1d94,91232033,0,0x0,8
tick,0x7ffd093d1d94,91246831,0,0x0,8
tick,0x7ffd093d1d94,91262581,0,0x0,8
tick,0x7ffd093d1d94,91277855,0,0x0,8
tick,0x7ffd093d1d94,91293628,0,0x0,8
tick,0x7ffd093d1d94,91309421,0,0x0,8
tick,0x7ffd093d1d94,91325314,0,0x0,8
tick,0x7ffd093d1d94,91340718,0,0x0,8
tick,0x7ffd093d1d94,91356451,0,0x0,8
tick,0x7ffd093d1d94,91372381,0,0x0,8
tick,0x7ffd093d1d94,91387890,0,0x0,8
tick,0x7ffd093d1d94,91403860,0,0x0,8
tick,0x7ffd093d1d94,91419015,0,0x0,8
tick,0x7ffd093d1d94,91434124,0,0x0,8
tick,0x7ffd093d1d94,91450028,0,0x0,8
tick,0x7ffd093d1d94,91466004,0,0x0,8
tick,0x7ffd093d1d94,91481074,0,0x0,8
tick,0x7ffd093d1d94,91496202,0,0x0,8
tick,0x7ffd093d1d94,91511879,0,0x0,8
tick,0x7ffd093d1d94,91528150,0,0x0,8
tick,0x7ffd093d1d94,91543475,0,0x0,8
tick,0x7ffd093d1d94,91558844,0,0x0,8
tick,0x7ffd093d1d94,91573996,0,0x0,8
tick,0x7ffd093d1d94,91589755,0,0x0,8
tick,0x7ffd093d1d94,91605750,0,0x0,8
tick,0x7ffd093d1d94,91621819,0,0x0,8
tick,0x7ffd093d1d94,91636938,0,0x0,8
tick,0x7ffd093d1d94,91652557,0,0x0,8
tick,0x7ffd093d1d94,91667847,0,0x0,8
tick,0x7ffd093d1d94,91683325,0,0x0,8
tick,0x7ffd093d1d94,91698650,0,0x0,8
tick,0x7ffd093d1d94,91714447,0,0x0,8
tick,0x7ffd093d1d94,91729972,0,0x0,8
tick,0x7ffd093d1d94,91745073,0,0x0,8
tick,0x7ffd093d1d94,91760477,0,0x0,8
tick,0x7ffd093d1d94,91776372,0,0x0,8
tick,0x7ffd093d1d94,91791247,0,0x0,8
tick,0x7ffd093d1d94,91806416,0,0x0,8
tick,0x7ffd093d1d94,91822566,0,0x0,8
tick,0x7ffd093d1d94,91837434,0,0x0,8
tick,0x7ffd093d1d94,91852490,0,0x0,8
tick,0x7ffd093d1d94,91868194,0,0x0,8
tick,0x7ffd093d1d94,91883716,0,0x0,8
tick,0x7ffd093d1d94,91899779,0,0x0,8
tick,0x7ffd093d1d94,91914833,0,0x0,8
tick,0x7ffd093d1d94,91930291,0,0x0,8
tick,0x7ffd093d1d94,91946131,0,0x0,8
tick,0x7ffd093d1d94,91961445,0,0x0,8
tick,0x7ffd093d1d94,91976988,0,0x0,8
tick,0x7ffd093d1d94,91992350,0,0x0,8
tick,0x7ffd093d1d94,92008240,0,0x0,8
tick,0x7ffd093d1d94,92023249,0,0x0,8
tick,0x7ffd093d1d94,92038937,0,0x0,8
tick,0x7ffd093d1d94,92054549,0,0x0,8
tick,0x7ffd093d1d94,92070359,0,0x0,8
tick,0x7ffd093d1d94,92086178,0,0x0,8
tick,0x7ffd093d1d94,92102195,0,0x0,8
tick,0x7ffd093d1d94,92117707,0,0x0,8
tick,0x7ffd093d1d94,92133817,0,0x0,8
tick,0x7ffd093d1d94,92149759,0,0x0,8
tick,0x7ffd093d1d94,92165835,0,0x0,8
tick,0x7ffd093d1d94,92181764,0,0x0,8
tick,0x7ffd093d1d94,92197179,0,0x0,8
tick,0x7ffd093d1d94,92212468,0,0x0,8
tick,0x7ffd093d1d94,92228230,0,0x0,8
tick,0x7ffd093d1d94,92243810,0,0x0,8
tick,0x7ffd093d1d94,92258903,0,0x0,8
tick,0x7ffd093d1d94,92274624,0,0x0,8
tick,0x7ffd093d1d94,92290017,0,0x0,8
tick,0x7ffd093d1d94,92305837,0,0x0,8
tick,0x7ffd093d1d94,92321933,0,0x0,8
tick,0x7ffd093d1d94,92337540,0,0x0,8
tick,0x7ffd093d1d94,92353435,0,0x0,8
tick,0x7ffd093d1d94,92368728,0,0x0,8
tick,0x7ffd093d1d94,92384493,0,0x0,8
tick,0x7ffd093d1d94,92399544,0,0x0,8
tick,0x7ffd093d1d94,92415129,0,0x0,8
tick,0x7ffd093d1d94,92430836,0,0x0,8
tick,0x7ffd093d1d94,92446662,0,0x0,8
tick,0x7ffd093d1d94,92461819,0,0x0,8
tick,0x7ffd093d1d94,92477946,0,0x0,8
tick,0x7ffd093d1d94,92493215,0,0x0,8
tick,0x7ffd093d1d94,92508870,0,0x0,8
tick,0x7ffd093d1d94,92524519,0,0x0,8
tick,0x7ffd093d1d94,92538960,0,0x0,8
tick,0x7ffd093d1d94,92553983,0,0x0,8
tick,0x7ffd093d1d94,92569988,0,0x0,8
tick,0x7ffd093d1d94,92585967,0,0x0,8
tick,0x7ffd093d1d94,92601155,0,0x0,8
tick,0x7ffd093d1d94,92616279,0,0x0,8
tick,0x7ffd093d1d94,92632040,0,0x0,8
tick,0x7ffd093d1d94,92647440,0,0x0,8
tick,0x7ffd093d1d94,92662572,0,0x0,8
tick,0x7ffd093d1d94,92678496,0,0x0,8
tick,0x7ffd093d1d94,92693675,0,0x0,8
tick,0x7ffd093d1d94,92708421,0,0x0,8
tick,0x7ffd093d1d94,92724756,0,0x0,8
tick,0x7ffd093d1d94,92740794,0,0x0,8
tick,0x7ffd093d1d94,92756174,0,0x0,8
tick,0x7ffd093d1d94,92772146,0,0x0,8
tick,0x7ffd093d1d94,92787460,0,0x0,8
tick,0x7ffd093d1d94,92803014,0,0x0,8
tick,0x7ffd093d1d94,92818755,0,0x0,8
tick,0x7ffd093d1d94,92834651,0,0x0,8
tick,0x7ffd093d1d94,92850410,0,0x0,8
tick,0x7ffd093d1d94,92865964,0,0x0,8
tick,0x7ffd093d1d94,92881682,0,0x0,8
tick,0x7ffd093d1d94,92897339,0,0x0,8
tick,0x7ffd093d1d94,92913084,0,0x0,8
tick,0x7ffd093d1d94,92928583,0,0x0,8
tick,0x7ffd093d1d94,92943312,0,0x0,8
tick,0x7ffd093d1d94,92958627,0,0x0,8
tick,0x7ffd093d1d94,92974638,0,0x0,8
tick,0x7ffd093d1d94,92990689,0,0x0,8
tick,0x7ffd093d1d94,93006239,0,0x0,8
tick,0x7ffd093d1d94,93021831,0,0x0,8
tick,0x7ffd093d1d94,93037222,0,0x0,8
tick,0x7ffd093d1d94,93052564,0,0x0,8
tick,0x7ffd093d1d94,93068228,0,0x0,8
tick,0x7ffd093d1d94,93083493,0,0x0,8
tick,0x7ffd093d1d94,93098354,0,0x0,8
tick,0x7ffd093d1d94,93114342,0,0x0,8
tick,0x7ffd093d1d94,93130279,0,0x0,8
tick,0x7ffd093d1d94,93145388,0,0x0,8
tick,0x7ffd093d1d94,93160604,0,0x0,8
tick,0x7ffd093d1d94,93176250,0,0x0,8
tick,0x7ffd093d1d94,93191308,0,0x0,8
tick,0x7ffd093d1d94,93206503,0,0x0,8
tick,0x7ffd093d1d94,93221757,0,0x0,8
tick,0x7ffd093d1d94,93237066,0,0x0,8
tick,0x7ffd093d1d94,93252766,0,0x0,8
tick,0x7ffd093d1d94,93268452,0,0x0,8
tick,0x7ffd093d1d94,93284084,0,0x0,8
tick,0x7ffd093d1d94,93299459,0,0x0,8
tick,0x7ffd093d1d94,93315209,0,0x0,8
tick,0x7ffd093d1d94,93331281,0,0x0,8
tick,0x7ffd093d1d94,93346502,0,0x0,8
tick,0x7ffd093d1d94,93362000,0,0x0,8
tick,0x7ffd093d1d94,93377235,0,0x0,8
tick,0x7ffd093d1d94,93392459,0,0x0,8
tick,0x7ffd093d1d94,93407868,0,0x0,8
tick,0x7ffd093d1d94,93423956,0,0x0,8
tick,0x7ffd093d1d94,93439622,0,0x0,8
tick,0x7ffd093d1d94,93456343,0,0x0,8
tick,0x7ffd093d1d94,93472126,0,0x0,8
tick,0x7ffd093d1d94,93488008,0,0x0,8
tick,0x7ffd093d1d94,93503869,0,0x0,8
tick,0x7ffd093d1d94,93519353,0,0x0,8
tick,0x7ffd093d1d94,93534205,0,0x0,8
tick,0x7ffd093d1d94,93550395,0,0x0,8
tick,0x7ffd093d1d94,93566139,0,0x0,8
tick,0x7ffd093d1d94,93581745,0,0x0,8
tick,0x7ffd093d1d94,93598226,0,0x0,8
tick,0x7ffd093d1d94,93613663,0,0x0,8
tick,0x7ffd093d1d94,93629305,0,0x0,8
tick,0x7ffd093d1d94,93644168,0,0x0,8
tick,0x7ffd093d1d94,93659389,0,0x0,8
tick,0x7ffd093d1d94,93674832,0,0x0,8
tick,0x7ffd093d1d94,93691125,0,0x0,8
tick,0x7ffd093d1d94,93707297,0,0x0,8
tick,0x7ffd093d1d94,93722801,0,0x0,8
tick,0x7ffd093d1d94,93738687,0,0x0,8
tick,0x7ffd093d1d94,93755040,0,0x0,8
tick,0x7ffd093d1d94,93770620,0,0x0,8
tick,0x7ffd093d1d94,93785787,0,0x0,8
tick,0x7ffd093d1d94,93800828,0,0x0,8
tick,0x7ffd093d1d94,93816254,0,0x0,8
tick,0x7ffd093d1d94,93831800,0,0x0,8
tick,0x7ffd093d1d94,93847598,0,0x0,8
tick,0x7ffd093d1d94,93862646,0,0x0,8
tick,0x7ffd093d1d94,93878279,0,0x0,8
tick,0x7ffd093d1d94,93893180,0,0x0,8
tick,0x7ffd093d1d94,93909117,0,0x0,8
tick,0x7ffd093d1d94,93924921,0,0x0,8
tick,0x7ffd093d1d94,93939852,0,0x0,8
tick,0x7ffd093d1d94,93955647,0,0x0,8
tick,0x7ffd093d1d94,93970860,0,0x0,8
tick,0x7ffd093d1d94,93986604,0,0x0,8
tick,0x7ffd093d1d94,94001723,0,0x0,8
tick,0x7ffd093d1d94,94017108,0,0x0,8
tick,0x7ffd093d1d94,94032673,0,0x0,8
tick,0x7ffd093d1d94,94048258,0,0x0,8
tick,0x7ffd093d1d94,94064187,0,0x0,8
tick,0x7ffd093d1d94,94079949,0,0x0,8
tick,0x7ffd093d1d94,94095053,0,0x0,8
tick,0x7ffd093d1d94,94110984,0,0x0,8
tick,0x7ffd093d1d94,94125983,0,0x0,8
tick,0x7ffd093d1d94,94141359,0,0x0,8
tick,0x7ffd093d1d94,94157878,0,0x0,8
tick,0x7ffd093d1d94,94172940,0,0x0,8
tick,0x7ffd093d1d94,94188821,0,0x0,8
tick,0x7ffd093d1d94,94204113,0,0x0,8
tick,0x7ffd093d1d94,94219602,0,0x0,8
tick,0x7ffd093d1d94,94235653,0,0x0,8
tick,0x7ffd093d1d94,94250044,0,0x0,8
tick,0x7ffd093d1d94,94265960,0,0x0,8
tick,0x7ffd093d1d94,94281672,0,0x0,8
tick,0x7ffd093d1d94,94297077,0,0x0,8
tick,0x7ffd093d1d94,94312248,0,0x0,8
tick,0x7ffd093d1d94,94327432,0,0x0,8
tick,0x7ffd093d1d94,94343068,0,0x0,8
tick,0x7ffd093d1d94,94359120,0,0x0,8
tick,0x7ffd093d1d94,94375198,0,0x0,8
tick,0x7ffd093d1d94,94390194,0,0x0,8
tick,0x7ffd093d1d94,94405218,0,0x0,8
tick,0x7ffd093d1d94,94421029,0,0x0,8
tick,0x7ffd093d1d94,94436543,0,0x0,8
tick,0x7ffd093d1d94,94452550,0,0x0,8
tick,0x7ffd093d1d94,94468681,0,0x0,8
tick,0x7ffd093d1d94,94484159,0,0x0,8
tick,0x7ffd093d1d94,94499742,0,0x0,8
tick,0x7ffd093d1d94,94515519,0,0x0,8
tick,0x7ffd093d1d94,94531123,0,0x0,8
tick,0x7ffd093d1d94,94546885,0,0x0,8
tick,0x7ffd093d1d94,94562048,0,0x0,8
tick,0x7ffd093d1d94,94577815,0,0x0,8
tick,0x7ffd093d1d94,94592932,0,0x0,8
tick,0x7ffd093d1d94,94608124,0,0x0,8
tick,0x7ffd093d1d94,94623666,0,0x0,8
tick,0x7ffd093d1d94,94639244,0,0x0,8
tick,0x7ffd093d1d94,94654680,0,0x0,8
tick,0x7ffd093d1d94,94669553,0,0x0,8
tick,0x7ffd093d1d94,94684984,0,0x0,8
tick,0x7ffd093d1d94,94700198,0,0x0,8
tick,0x7ffd093d1d94,94715820,0,0x0,8
tick,0x7ffd093d1d94,94730973,0,0x0,8
tick,0x7ffd093d1d94,94747201,0,0x0,8
tick,0x7ffd093d1d94,94763206,0,0x0,8
tick,0x7ffd093d1d94,94779562,0,0x0,8
tick,0x7ffd093d1d94,94795191,0,0x0,8
tick,0x7ffd093d1d94,94811195,0,0x0,8
tick,0x7ffd093d1d94,94826659,0,0x0,8
tick,0x7ffd093d1d94,94842611,0,0x0,8
tick,0x7ffd093d1d94,94859122,0,0x0,8
tick,0x7ffd093d1d94,94874666,0,0x0,8
tick,0x7ffd093d1d94,94890710,0,0x0,8
tick,0x7ffd093d1d94,94906793,0,0x0,8
tick,0x7ffd093d1d94,94921128,0,0x0,8
tick,0x7ffd093d1d94,94935943,0,0x0,8
tick,0x7ffd093d1d94,94951667,0,0x0,8
tick,0x7ffd093d1d94,94967300,0,0x0,8
tick,0x7ffd093d1d94,94983336,0,0x0,8
tick,0x7ffd093d1d94,94999565,0,0x0,8
tick,0x7ffd093d1d94,95014057,0,0x0,8
tick,0x7ffd093d1d94,95029201,0,0x0,8
tick,0x7ffd093d1d94,95044434,0,0x0,8
tick,0x7ffd093d1d94,95059419,0,0x0,8
tick,0x7ffd093d1d94,95075171,0,0x0,8
tick,0x7ffd093d1d94,95090778,0,0x0,8
tick,0x7ffd093d1d94,95106433,0,0x0,8
tick,0x7ffd093d1d94,95121724,0,0x0,8
tick,0x7ffd093d1d94,95137761,0,0x0,8
tick,0x7ffd093d1d94,95153100,0,0x0,8
tick,0x7ffd093d1d94,95169000,0,0x0,8
tick,0x7ffd093d1d94,95184268,0,0x0,8
tick,0x7ffd093d1d94,95199744,0,0x0,8
tick,0x7ffd093d1d94,95215313,0,0x0,8
tick,0x7ffd093d1d94,95230146,0,0x0,8
tick,0x7ffd093d1d94,95245594,0,0x0,8
tick,0x7ffd093d1d94,95260685,0,0x0,8
tick,0x7ffd093d1d94,95276149,0,0x0,8
tick,0x7ffd093d1d94,95291656,0,0x0,8
tick,0x7ffd093d1d94,95306942,0,0x0,8
tick,0x7ffd093d1d94,95322256,0,0x0,8
tick,0x7ffd093d1d94,95338184,0,0x0,8
tick,0x7ffd093d1d94,95353458,0,0x0,8
tick,0x7ffd093d1d94,95368896,0,0x0,8
tick,0x7ffd093d1d94,95384985,0,0x0,8
tick,0x7ffd093d1d94,95400568,0,0x0,8
tick,0x7ffd093d1d94,95416281,0,0x0,8
tick,0x7ffd093d1d94,95431837,0,0x0,8
tick,0x7ffd093d1d94,95446761,0,0x0,8
tick,0x7ffd093d1d94,95462489,0,0x0,8
tick,0x7ffd093d1d94,95478273,0,0x0,8
tick,0x7ffd093d1d94,95494446,0,0x0,8
tick,0x7ffd093d1d94,95510523,0,0x0,8
tick,0x7ffd093d1d94,95525905,0,0x0,8
tick,0x7ffd093d1d94,95541366,0,0x0,8
tick,0x7ffd093d1d94,95556713,0,0x0,8
tick,0x7ffd093d1d94,95572164,0,0x0,8
tick,0x7ffd093d1d94,95587516,0,0x0,8
tick,0x7ffd093d1d94,95603530,0,0x0,8
tick,0x7ffd093d1d94,95618736,0,0x0,8
tick,0x7ffd093d1d94,95634020,0,0x0,8
tick,0x7ffd093d1d94,95649578,0,0x0,8
tick,0x7ffd093d1d94,95664728,0,0x0,8
tick,0x7ffd093d1d94,95680704,0,0x0,8
tick,0x7ffd093d1d94,95696347,0,0x0,8
tick,0x7ffd093d1d94,95711393,0,0x0,8
tick,0x7ffd093d1d94,95727062,0,0x0,8
tick,0x7ffd093d1d94,95742600,0,0x0,8
tick,0x7ffd093d1d94,95757800,0,0x0,8
tick,0x7ffd093d1d94,95773990,0,0x0,8
tick,0x7ffd093d1d94,95789168,0,0x0,8
tick,0x7ffd093d1d94,95805184,0,0x0,8
tick,0x7ffd093d1d94,95820858,0,0x0,8
tick,0x7ffd093d1d94,95836742,0,0x0,8
tick,0x7ffd093d1d94,95852837,0,0x0,8
tick,0x7ffd093d1d94,95868469,0,0x0,8
tick,0x7ffd093d1d94,95883852,0,0x0,8
tick,0x7ffd093d1d94,95899412,0,0x0,8
tick,0x7ffd093d1d94,95914676,0,0x0,8
tick,0x7ffd093d1d94,95929972,0,0x0,8
tick,0x7ffd093d1d94,95944553,0,0x0,8
tick,0x7ffd093d1d94,95959922,0,0x0,8
tick,0x7ffd093d1d94,95975489,0,0x0,8
tick,0x7ffd093d1d94,95991474,0,0x0,8
tick,0x7ffd093d1d94,96007183,0,0x0,8
tick,0x7ffd093d1d94,96022904,0,0x0,8
tick,0x7ffd093d1d94,96038614,0,0x0,8
tick,0x7ffd093d1d94,96054178,0,0x0,8
tick,0x7ffd093d1d94,96068991,0,0x0,8
tick,0x7ffd093d1d94,96084903,0,0x0,8
tick,0x7ffd093d1d94,96100158,0,0x0,8
tick,0x7ffd093d1d94,96114973,0,0x0,8
tick,0x7ffd093d1d94,96131126,0,0x0,8
tick,0x7ffd093d1d94,96146450,0,0x0,8
tick,0x7ffd093d1d94,96162165,0,0x0,8
tick,0x7ffd093d1d94,96178075,0,0x0,8
tick,0x7ffd093d1d94,96194434,0,0x0,8
tick,0x7ffd093d1d94,96209963,0,0x0,8
tick,0x7ffd093d1d94,96225177,0,0x0,8
tick,0x7ffd093d1d94,96241269,0,0x0,8
tick,0x7ffd093d1d94,96256915,0,0x0,8
tick,0x7ffd093d1d94,96273232,0,0x0,8
tick,0x7ffd093d1d94,96288383,0,0x0,8
tick,0x7ffd093d1d94,96305127,0,0x0,8
tick,0x7ffd093d1d94,96318800,0,0x0,8
tick,0x7ffd093d1d94,96334007,0,0x0,8
tick,0x7ffd093d1d94,96350737,0,0x0,8
tick,0x7ffd093d1d94,96365974,0,0x0,8
tick,0x7ffd093d1d94,96381137,0,0x0,8
tick,0x7ffd093d1d94,96396407,0,0x0,8
tick,0x7ffd093d1d94,96411871,0,0x0,8
tick,0x7ffd093d1d94,96427861,0,0x0,8
tick,0x7ffd093d1d94,96443923,0,0x0,8
tick,0x7ffd093d1d94,96458772,0,0x0,8
tick,0x7ffd093d1d94,96473910,0,0x0,8
tick,0x7ffd093d1d94,96489901,0,0x0,8
tick,0x7ffd093d1d94,96506086,0,0x0,8
tick,0x7ffd093d1d94,96521178,0,0x0,8
tick,0x7ffd093d1d94,96537221,0,0x0,8
tick,0x7ffd093d1d94,96552050,0,0x0,8
tick,0x7ffd093d1d94,96567484,0,0x0,8
tick,0x7ffd093d1d94,96583203,0,0x0,8
tick,0x7ffd093d1d94,96598188,0,0x0,8
tick,0x7ffd093d1d94,96613998,0,0x0,8
tick,0x7ffd093d1d94,96630002,0,0x0,8
tick,0x7ffd093d1d94,96645471,0,0x0,8
tick,0x7ffd093d1d94,96661134,0,0x0,8
tick,0x7ffd093d1d94,96676282,0,0x0,8
tick,0x7ffd093d1d94,96691455,0,0x0,8
tick,0x7ffd093d1d94,96706557,0,0x0,8
tick,0x7ffd093d1d94,96722135,0,0x0,8
tick,0x7ffd093d1d94,96737880,0,0x0,8
tick,0x7ffd093d1d94,96753313,0,0x0,8
tick,0x7ffd093d1d94,96769081,0,0x0,8
tick,0x7ffd093d1d94,96784909,0,0x0,8
tick,0x7ffd093d1d94,96800573,0,0x0,8
tick,0x7ffd093d1d94,96816466,0,0x0,8
tick,0x7ffd093d1d94,96832582,0,0x0,8
tick,0x7ffd093d1d94,96848466,0,0x0,8
tick,0x7ffd093d1d94,96864571,0,0x0,8
tick,0x7ffd093d1d94,96880093,0,0x0,8
tick,0x7ffd093d1d94,96895521,0,0x0,8
tick,0x7ffd093d1d94,96911034,0,0x0,8
tick,0x7ffd093d1d94,96926438,0,0x0,8
tick,0x7ffd093d1d94,96942029,0,0x0,8
tick,0x7ffd093d1d94,96957693,0,0x0,8
tick,0x7ffd093d1d94,96973346,0,0x0,8
tick,0x7ffd093d1d94,96988956,0,0x0,8
tick,0x7ffd093d1d94,97004291,0,0x0,8
tick,0x7ffd093d1d94,97019964,0,0x0,8
tick,0x7ffd093d1d94,97035648,0,0x0,8
tick,0x7ffd093d1d94,97050824,0,0x0,8
tick,0x7ffd093d1d94,97066332,0,0x0,8
tick,0x7ffd093d1d94,97081521,0,0x0,8
tick,0x7ffd093d1d94,97096652,0,0x0,8
tick,0x7ffd093d1d94,97111999,0,0x0,8
tick,0x7ffd093d1d94,97128050,0,0x0,8
tick,0x7ffd093d1d94,97143160,0,0x0,8
tick,0x7ffd093d1d94,97158389,0,0x0,8
tick,0x7ffd093d1d94,97174885,0,0x0,8
tick,0x7ffd093d1d94,97190623,0,0x0,8
tick,0x7ffd093d1d94,97206435,0,0x0,8
tick,0x7ffd093d1d94,97221904,0,0x0,8
tick,0x7ffd093d1d94,97237627,0,0x0,8
tick,0x7ffd093d1d94,97252850,0,0x0,8
tick,0x7ffd093d1d94,97268282,0,0x0,8
tick,0x7ffd093d1d94,97283895,0,0x0,8
tick,0x7ffd093d1d94,97299739,0,0x0,8
tick,0x7ffd093d1d94,97315432,0,0x0,8
tick,0x7ffd093d1d94,97331391,0,0x0,8
tick,0x7ffd093d1d94,97347382,0,0x0,8
tick,0x7ffd093d1d94,97362822,0,0x0,8
tick,0x7ffd093d1d94,97378139,0,0x0,8
tick,0x7ffd093d1d94,97393428,0,0x0,8
tick,0x7ffd093d1d94,97409045,0,0x0,8
tick,0x7ffd093d1d94,97424118,0,0x0,8
tick,0x7ffd093d1d94,97439190,0,0x0,8
tick,0x7ffd093d1d94,97454752,0,0x0,8
tick,0x7ffd093d1d94,97470042,0,0x0,8
tick,0x7ffd093d1d94,97485667,0,0x0,8
tick,0x7ffd093d1d94,97501403,0,0x0,8
tick,0x7ffd093d1d94,97516689,0,0x0,8
tick,0x7ffd093d1d94,97531546,0,0x0,8
tick,0x7ffd093d1d94,97546672,0,0x0,8
tick,0x7ffd093d1d94,97562458,0,0x0,8
tick,0x7ffd093d1d94,97578289,0,0x0,8
tick,0x7ffd093d1d94,97594254,0,0x0,8
tick,0x7ffd093d1d94,97609607,0,0x0,8
tick,0x7ffd093d1d94,97624912,0,0x0,8
tick,0x7ffd093d1d94,97640731,0,0x0,8
tick,0x7ffd093d1d94,97655977,0,0x0,8
tick,0x7ffd093d1d94,97671792,0,0x0,8
tick,0x7ffd093d1d94,97687307,0,0x0,8
tick,0x7ffd093d1d94,97702853,0,0x0,8
tick,0x7ffd093d1d94,97718065,0,0x0,8
tick,0x7ffd093d1d94,97733343,0,0x0,8
tick,0x7ffd093d1d94,97748886,0,0x0,8
tick,0x7ffd093d1d94,97764019,0,0x0,8
tick,0x7ffd093d1d94,97779471,0,0x0,8
tick,0x7ffd093d1d94,97795132,0,0x0,8
tick,0x7ffd093d1d94,97810271,0,0x0,8
tick,0x7ffd093d1d94,97825320,0,0x0,8
tick,0x7ffd093d1d94,97840690,0,0x0,8
tick,0x7ffd093d1d94,97855962,0,0x0,8
tick,0x7ffd093d1d94,97871896,0,0x0,8
tick,0x7ffd093d1d94,97886570,0,0x0,8
tick,0x7ffd093d1d94,97902528,0,0x0,8
tick,0x7ffd093d1d94,97917867,0,0x0,8
tick,0x7ffd093d1d94,97933521,0,0x0,8
tick,0x7ffd093d1d94,97949337,0,0x0,8
tick,0x7ffd093d1d94,97964949,0,0x0,8
tick,0x7ffd093d1d94,97980200,0,0x0,8
tick,0x7ffd093d1d94,97996163,0,0x0,8
tick,0x7ffd093d1d94,98011634,0,0x0,8
tick,0x7ffd093d1d94,98027691,0,0x0,8
tick,0x7ffd093d1d94,98043655,0,0x0,8
tick,0x7ffd093d1d94,98059391,0,0x0,8
tick,0x7ffd093d1d94,98074640,0,0x0,8
tick,0x7ffd093d1d94,98090750,0,0x0,8
tick,0x7ffd093d1d94,98106812,0,0x0,8
tick,0x7ffd093d1d94,98121953,0,0x0,8
tick,0x7ffd093d1d94,98137480,0,0x0,8
tick,0x7ffd093d1d94,98152969,0,0x0,8
tick,0x7ffd093d1d94,98169030,0,0x0,8
tick,0x7ffd093d1d94,98185182,0,0x0,8
tick,0x7ffd093d1d94,98200758,0,0x0,8
tick,0x7ffd093d1d94,98216102,0,0x0,8
tick,0x7ffd093d1d94,98231355,0,0x0,8
tick,0x7ffd093d1d94,98247689,0,0x0,8
tick,0x7ffd093d1d94,98263488,0,0x0,8
tick,0x7ffd093d1d94,98278891,0,0x0,8
tick,0x7ffd093d1d94,98293843,0,0x0,8
tick,0x7ffd093d1d94,98308904,0,0x0,8
tick,0x7ffd093d1d94,98325120,0,0x0,8
tick,0x7ffd093d1d94,98340101,0,0x0,8
tick,0x7ffd093d1d94,98355528,0,0x0,8
tick,0x7ffd093d1d94,98371582,0,0x0,8
tick,0x7ffd093d1d94,98386741,0,0x0,8
tick,0x7ffd093d1d94,98402659,0,0x0,8
tick,0x7ffd093d1d94,98417856,0,0x0,8
tick,0x7ffd093d1d94,98433909,0,0x0,8
tick,0x7ffd093d1d94,98449860,0,0x0,8
tick,0x7ffd093d1d94,98465116,0,0x0,8
tick,0x7ffd093d1d94,98480636,0,0x0,8
tick,0x7ffd093d1d94,98496219,0,0x0,8
tick,0x7ffd093d1d94,98511513,0,0x0,8
tick,0x7ffd093d1d94,98526590,0,0x0,8
tick,0x7ffd093d1d94,98541595,0,0x0,8
tick,0x7ffd093d1d94,98556582,0,0x0,8
tick,0x7ffd093d1d94,98572109,0,0x0,8
tick,0x7ffd093d1d94,98588302,0,0x0,8
tick,0x7ffd093d1d94,98604300,0,0x0,8
tick,0x7ffd093d1d94,98620205,0,0x0,8
tick,0x7ffd093d1d94,98634994,0,0x0,8
tick,0x7ffd093d1d94,98650638,0,0x0,8
tick,0x7ffd093d1d94,98665660,0,0x0,8
tick,0x7ffd093d1d94,98680914,0,0x0,8
tick,0x7ffd093d1d94,98696676,0,0x0,8
tick,0x7ffd093d1d94,98712111,0,0x0,8
tick,0x7ffd093d1d94,98728581,0,0x0,8
tick,0x7ffd093d1d94,98743969,0,0x0,8
tick,0x7ffd093d1d94,98759630,0,0x0,8
tick,0x7ffd093d1d94,98775214,0,0x0,8
tick,0x7ffd093d1d94,98790882,0,0x0,8
tick,0x7ffd093d1d94,98806981,0,0x0,8
tick,0x7ffd093d1d94,98822221,0,0x0,8
tick,0x7ffd093d1d94,98837696,0,0x0,8
tick,0x7ffd093d1d94,98853577,0,0x0,8
tick,0x7ffd093d1d94,98868771,0,0x0,8
tick,0x7ffd093d1d94,98884220,0,0x0,8
tick,0x7ffd093d1d94,98899689,0,0x0,8
tick,0x7ffd093d1d94,98915695,0,0x0,8
tick,0x7ffd093d1d94,98931232,0,0x0,8
tick,0x7ffd093d1d94,98946439,0,0x0,8
tick,0x7ffd093d1d94,98961944,0,0x0,8
tick,0x7ffd093d1d94,98977535,0,0x0,8
tick,0x7ffd093d1d94,98992551,0,0x0,8
tick,0x7ffd093d1d94,99008040,0,0x0,8
tick,0x7ffd093d1d94,99023072,0,0x0,8
tick,0x7ffd093d1d94,99039081,0,0x0,8
tick,0x7ffd093d1d94,99054232,0,0x0,8
tick,0x7ffd093d1d94,99069044,0,0x0,8
tick,0x7ffd093d1d94,99085071,0,0x0,8
tick,0x7ffd093d1d94,99101093,0,0x0,8
tick,0x7ffd093d1d94,99117265,0,0x0,8
tick,0x7ffd093d1d94,99132866,0,0x0,8
tick,0x7ffd093d1d94,99148673,0,0x0,8
tick,0x7ffd093d1d94,99164344,0,0x0,8
tick,0x7ffd093d1d94,99179656,0,0x0,8
tick,0x7ffd093d1d94,99195162,0,0x0,8
tick,0x7ffd093d1d94,99210897,0,0x0,8
tick,0x7ffd093d1d94,99226902,0,0x0,8
tick,0x7ffd093d1d94,99242861,0,0x0,8
tick,0x7ffd093d1d94,99258210,0,0x0,8
tick,0x7ffd093d1d94,99274263,0,0x0,8
tick,0x7ffd093d1d94,99289434,0,0x0,8
tick,0x7ffd093d1d94,99305399,0,0x0,8
tick,0x7ffd093d1d94,99320381,0,0x0,8
tick,0x7ffd093d1d94,99336209,0,0x0,8
tick,0x7ffd093d1d94,99351342,0,0x0,8
tick,0x7ffd093d1d94,99366548,0,0x0,8
tick,0x7ffd093d1d94,99381831,0,0x0,8
tick,0x7ffd093d1d94,99397370,0,0x0,8
tick,0x7ffd093d1d94,99412719,0,0x0,8
tick,0x7ffd093d1d94,99428169,0,0x0,8
tick,0x7ffd093d1d94,99443864,0,0x0,8
tick,0x7ffd093d1d94,99458686,0,0x0,8
tick,0x7ffd093d1d94,99474501,0,0x0,8
tick,0x7ffd093d1d94,99489758,0,0x0,8
tick,0x7ffd093d1d94,99505195,0,0x0,8
tick,0x7ffd093d1d94,99520534,0,0x0,8
tick,0x7ffd093d1d94,99536114,0,0x0,8
tick,0x7ffd093d1d94,99551544,0,0x0,8
tick,0x7ffd093d1d94,99566954,0,0x0,8
tick,0x7ffd093d1d94,99582391,0,0x0,8
tick,0x7ffd093d1d94,99598302,0,0x0,8
tick,0x7ffd093d1d94,99616293,0,0x0,8
tick,0x7ffd093d1d94,99628707,0,0x0,8
tick,0x7ffd093d1d94,99644168,0,0x0,8
tick,0x7ffd093d1d94,99659638,0,0x0,8
tick,0x7ffd093d1d94,99675678,0,0x0,8
tick,0x7ffd093d1d94,99690825,0,0x0,8
tick,0x7ffd093d1d94,99706006,0,0x0,8
tick,0x7ffd093d1d94,99721267,0,0x0,8
tick,0x7ffd093d1d94,99737316,0,0x0,8
tick,0x7ffd093d1d94,99752756,0,0x0,8
tick,0x7ffd093d1d94,99768953,0,0x0,8
tick,0x7ffd093d1d94,99784598,0,0x0,8
tick,0x7ffd093d1d94,99800086,0,0x0,8
tick,0x7ffd093d1d94,99815646,0,0x0,8
tick,0x7ffd093d1d94,99831157,0,0x0,8
tick,0x7ffd093d1d94,99846654,0,0x0,8
tick,0x7ffd093d1d94,99862812,0,0x0,8
tick,0x7ffd093d1d94,99878521,0,0x0,8
tick,0x7ffd093d1d94,99893961,0,0x0,8
tick,0x7ffd093d1d94,99909176,0,0x0,8
tick,0x7ffd093d1d94,99924896,0,0x0,8
tick,0x7ffd093d1d94,99940174,0,0x0,8
tick,0x7ffd093d1d94,99955976,0,0x0,8
tick,0x7ffd093d1d94,99971173,0,0x0,8
tick,0x7ffd093d1d94,99986940,0,0x0,8
tick,0x7ffd093d1d94,100001862,0,0x0,8
tick,0x7ffd093d1d94,100017512,0,0x0,8
tick,0x7ffd093d1d94,100033297,0,0x0,8
tick,0x7ffd093d1d94,100048837,0,0x0,8
tick,0x7ffd093d1d94,100064070,0,0x0,8
tick,0x7ffd093d1d94,100079544,0,0x0,8
tick,0x7ffd093d1d94,100095512,0,0x0,8
tick,0x7ffd093d1d94,100110711,0,0x0,8
tick,0x7ffd093d1d94,100125976,0,0x0,8
tick,0x7ffd093d1d94,100141583,0,0x0,8
tick,0x7ffd093d1d94,100156959,0,0x0,8
tick,0x7ffd093d1d94,100172214,0,0x0,8
tick,0x7ffd093d1d94,100188011,0,0x0,8
tick,0x7ffd093d1d94,100203582,0,0x0,8
tick,0x7ffd093d1d94,100218767,0,0x0,8
tick,0x7ffd093d1d94,100234406,0,0x0,8
tick,0x7ffd093d1d94,100250094,0,0x0,8
tick,0x7ffd093d1d94,100266519,0,0x0,8
tick,0x7ffd093d1d94,100282037,0,0x0,8
tick,0x7ffd093d1d94,100297625,0,0x0,8
tick,0x7ffd093d1d94,100313536,0,0x0,8
tick,0x7ffd093d1d94,100329225,0,0x0,8
tick,0x7ffd093d1d94,100345165,0,0x0,8
tick,0x7ffd093d1d94,100361229,0,0x0,8
tick,0x7ffd093d1d94,100376736,0,0x0,8
tick,0x7ffd093d1d94,100392596,0,0x0,8
tick,0x7ffd093d1d94,100407694,0,0x0,8
tick,0x7ffd093d1d94,100422926,0,0x0,8
tick,0x7ffd093d1d94,100438320,0,0x0,8
tick,0x7ffd093d1d94,100454497,0,0x0,8
tick,0x7ffd093d1d94,100470371,0,0x0,8
tick,0x7ffd093d1d94,100485943,0,0x0,8
tick,0x7ffd093d1d94,100500888,0,0x0,8
tick,0x7ffd093d1d94,100516186,0,0x0,8
tick,0x7ffd093d1d94,100531870,0,0x0,8
tick,0x7ffd093d1d94,100547813,0,0x0,8
tick,0x7ffd093d1d94,100563669,0,0x0,8
tick,0x7ffd093d1d94,100578935,0,0x0,8
tick,0x7ffd093d1d94,100594626,0,0x0,8
tick,0x7ffd093d1d94,100609971,0,0x0,8
tick,0x7ffd093d1d94,100624845,0,0x0,8
tick,0x7ffd093d1d94,100640080,0,0x0,8
tick,0x7ffd093d1d94,100655628,0,0x0,8
tick,0x7ffd093d1d94,100671398,0,0x0,8
tick,0x7ffd093d1d94,100686768,0,0x0,8
tick,0x7ffd093d1d94,100702239,0,0x0,8
tick,0x7ffd093d1d94,100717900,0,0x0,8
tick,0x7ffd093d1d94,100732999,0,0x0,8
tick,0x7ffd093d1d94,100748765,0,0x0,8
tick,0x7ffd093d1d94,100764393,0,0x0,8
tick,0x7ffd093d1d94,100780013,0,0x0,8
tick,0x7ffd093d1d94,100795377,0,0x0,8
tick,0x7ffd093d1d94,100811061,0,0x0,8
tick,0x7ffd093d1d94,100826754,0,0x0,8
tick,0x7ffd093d1d94,100841964,0,0x0,8
tick,0x7ffd093d1d94,100857888,0,0x0,8
tick,0x7ffd093d1d94,100873369,0,0x0,8
tick,0x7ffd093d1d94,100889645,0,0x0,8
tick,0x7ffd093d1d94,100905701,0,0x0,8
tick,0x7ffd093d1d94,100921511,0,0x0,8
tick,0x7ffd093d1d94,100937220,0,0x0,8
tick,0x7ffd093d1d94,100953203,0,0x0,8
tick,0x7ffd093d1d94,100969302,0,0x0,8
tick,0x7ffd093d1d94,100985859,0,0x0,8
tick,0x7ffd093d1d94,101000416,0,0x0,8
tick,0x7ffd093d1d94,101015777,0,0x0,8
tick,0x7ffd093d1d94,101031448,0,0x0,8
tick,0x7ffd093d1d94,101047397,0,0x0,8
tick,0x7ffd093d1d94,101063365,0,0x0,8
tick,0x7ffd093d1d94,101078493,0,0x0,8
tick,0x7ffd093d1d94,101094047,0,0x0,8
tick,0x7ffd093d1d94,101109724,0,0x0,8
tick,0x7ffd093d1d94,101125152,0,0x0,8
tick,0x7ffd093d1d94,101141125,0,0x0,8
tick,0x7ffd093d1d94,101155829,0,0x0,8
tick,0x7ffd093d1d94,101172570,0,0x0,8
tick,0x7ffd093d1d94,101187502,0,0x0,8
tick,0x7ffd093d1d94,101202703,0,0x0,8
tick,0x7ffd093d1d94,101218003,0,0x0,8
tick,0x7ffd093d1d94,101234152,0,0x0,8
tick,0x7ffd093d1d94,101249539,0,0x0,8
tick,0x7ffd093d1d94,101264806,0,0x0,8
tick,0x7ffd093d1d94,101280345,0,0x0,8
tick,0x7ffd093d1d94,101295848,0,0x0,8
tick,0x7ffd093d1d94,101311431,0,0x0,8
tick,0x7ffd093d1d94,101326583,0,0x0,8
tick,0x7ffd093d1d94,101341848,0,0x0,8
tick,0x7ffd093d1d94,101357449,0,0x0,8
tick,0x7ffd093d1d94,101372386,0,0x0,8
tick,0x7ffd093d1d94,101387813,0,0x0,8
tick,0x7ffd093d1d94,101403981,0,0x0,8
tick,0x7ffd093d1d94,101419108,0,0x0,8
tick,0x7ffd093d1d94,101434938,0,0x0,8
tick,0x7ffd093d1d94,101450753,0,0x0,8
tick,0x7ffd093d1d94,101466075,0,0x0,8
tick,0x7ffd093d1d94,101481744,0,0x0,8
tick,0x7ffd093d1d94,101497452,0,0x0,8
tick,0x7ffd093d1d94,101513377,0,0x0,8
tick,0x7ffd093d1d94,101528733,0,0x0,8
tick,0x7ffd093d1d94,101543470,0,0x0,8
tick,0x7ffd093d1d94,101559446,0,0x0,8
tick,0x7ffd093d1d94,101575322,0,0x0,8
tick,0x7ffd093d1d94,101590679,0,0x0,8
tick,0x7ffd093d1d94,101605868,0,0x0,8
tick,0x7ffd093d1d94,101621715,0,0x0,8
tick,0x7ffd093d1d94,101637316,0,0x0,8
tick,0x7ffd093d1d94,101652695,0,0x0,8
tick,0x7ffd093d1d94,101667788,0,0x0,8
tick,0x7ffd093d1d94,101682926,0,0x0,8
tick,0x7ffd093d1d94,101698348,0,0x0,8
tick,0x7ffd093d1d94,101713716,0,0x0,8
tick,0x7ffd093d1d94,101729573,0,0x0,8
tick,0x7ffd093d1d94,101744719,0,0x0,8
tick,0x7ffd093d1d94,101760023,0,0x0,8
tick,0x7ffd093d1d94,101775633,0,0x0,8
tick,0x7ffd093d1d94,101791229,0,0x0,8
tick,0x7ffd093d1d94,101806705,0,0x0,8
tick,0x7ffd093d1d94,101822311,0,0x0,8
tick,0x7ffd093d1d94,101837952,0,0x0,8
tick,0x7ffd093d1d94,101853596,0,0x0,8
tick,0x7ffd093d1d94,101869442,0,0x0,8
tick,0x7ffd093d1d94,101884955,0,0x0,8
tick,0x7ffd093d1d94,101900527,0,0x0,8
tick,0x7ffd093d1d94,101915498,0,0x0,8
tick,0x7ffd093d1d94,101931173,0,0x0,8
tick,0x7ffd093d1d94,101946235,0,0x0,8
tick,0x7ffd093d1d94,101961573,0,0x0,8
tick,0x7ffd093d1d94,101977079,0,0x0,8
tick,0x7ffd093d1d94,101993017,0,0x0,8
tick,0x7ffd093d1d94,102008058,0,0x0,8
tick,0x7ffd093d1d94,102023411,0,0x0,8
tick,0x7ffd093d1d94,102039187,0,0x0,8
tick,0x7ffd093d1d94,102055193,0,0x0,8
tick,0x7ffd093d1d94,102070973,0,0x0,8
tick,0x7ffd093d1d94,102086225,0,0x0,8
tick,0x7ffd093d1d94,102102152,0,0x0,8
tick,0x7ffd093d1d94,102117336,0,0x0,8
tick,0x7ffd093d1d94,102133055,0,0x0,8
tick,0x7ffd093d1d94,102148649,0,0x0,8
tick,0x7ffd093d1d94,102164202,0,0x0,8
tick,0x7ffd093d1d94,102179961,0,0x0,8
tick,0x7ffd093d1d94,102195413,0,0x0,8
tick,0x7ffd093d1d94,102211437,0,0x0,8
tick,0x7ffd093d1d94,102226160,0,0x0,8
tick,0x7ffd093d1d94,102241706,0,0x0,8
tick,0x7ffd093d1d94,102257158,0,0x0,8
tick,0x7ffd093d1d94,102272537,0,0x0,8
tick,0x7ffd093d1d94,102287706,0,0x0,8
tick,0x7ffd093d1d94,102303830,0,0x0,8
tick,0x7ffd093d1d94,102320011,0,0x0,8
tick,0x7ffd093d1d94,102335245,0,0x0,8
tick,0x7ffd093d1d94,102351045,0,0x0,8
tick,0x7ffd093d1d94,102366273,0,0x0,8
tick,0x7ffd093d1d94,102381634,0,0x0,8
tick,0x7ffd093d1d94,102397038,0,0x0,8
tick,0x7ffd093d1d94,102412808,0,0x0,8
tick,0x7ffd093d1d94,102428418,0,0x0,8
tick,0x7ffd093d1d94,102443788,0,0x0,8
tick,0x7ffd093d1d94,102459408,0,0x0,8
tick,0x7ffd093d1d94,102475288,0,0x0,8
tick,0x7ffd093d1d94,102491057,0,0x0,8
tick,0x7ffd093d1d94,102507387,0,0x0,8
tick,0x7ffd093d1d94,102522314,0,0x0,8
tick,0x7ffd093d1d94,102537495,0,0x0,8
tick,0x7ffd093d1d94,102552966,0,0x0,8
tick,0x7ffd093d1d94,102568698,0,0x0,8
tick,0x7ffd093d1d94,102584081,0,0x0,8
tick,0x7ffd093d1d94,102600014,0,0x0,8
tick,0x7ffd093d1d94,102615623,0,0x0,8
tick,0x7ffd093d1d94,102631138,0,0x0,8
tick,0x7ffd093d1d94,102646582,0,0x0,8
tick,0x7ffd093d1d94,102662749,0,0x0,8
tick,0x7ffd093d1d94,102678564,0,0x0,8
tick,0x7ffd093d1d94,102694103,0,0x0,8
tick,0x7ffd093d1d94,102709988,0,0x0,8
tick,0x7ffd093d1d94,102725472,0,0x0,8
tick,0x7ffd093d1d94,102741171,0,0x0,8
tick,0x7ffd093d1d94,102756334,0,0x0,8
tick,0x7ffd093d1d94,102772081,0,0x0,8
tick,0x7ffd093d1d94,102787578,0,0x0,8
tick,0x7ffd093d1d94,102803783,0,0x0,8
tick,0x7ffd093d1d94,102819068,0,0x0,8
tick,0x7ffd093d1d94,102834818,0,0x0,8
tick,0x7ffd093d1d94,102850302,0,0x0,8
tick,0x7ffd093d1d94,102866066,0,0x0,8
tick,0x7ffd093d1d94,102881516,0,0x0,8
tick,0x7ffd093d1d94,102896965,0,0x0,8
tick,0x7ffd093d1d94,102912768,0,0x0,8
tick,0x7ffd093d1d94,102928705,0,0x0,8
tick,0x7ffd093d1d94,102943932,0,0x0,8
tick,0x7ffd093d1d94,102959743,0,0x0,8
tick,0x7ffd093d1d94,102974975,0,0x0,8
tick,0x7ffd093d1d94,102989980,0,0x0,8
tick,0x7ffd093d1d94,103005509,0,0x0,8
tick,0x7ffd093d1d94,103021036,0,0x0,8
tick,0x7ffd093d1d94,103036038,0,0x0,8
tick,0x7ffd093d1d94,103052405,0,0x0,8
tick,0x7ffd093d1d94,103068517,0,0x0,8
tick,0x7ffd093d1d94,103084141,0,0x0,8
tick,0x7ffd093d1d94,103099749,0,0x0,8
tick,0x7ffd093d1d94,103115481,0,0x0,8
tick,0x7ffd093d1d94,103130276,0,0x0,8
tick,0x7ffd093d1d94,103145776,0,0x0,8
tick,0x7ffd093d1d94,103161475,0,0x0,8
tick,0x7ffd093d1d94,103176948,0,0x0,8
tick,0x7ffd093d1d94,103192477,0,0x0,8
tick,0x7ffd093d1d94,103207679,0,0x0,8
tick,0x7ffd093d1d94,103223574,0,0x0,8
tick,0x7ffd093d1d94,103239231,0,0x0,8
tick,0x7ffd093d1d94,103254891,0,0x0,8
tick,0x7ffd093d1d94,103271461,0,0x0,8
tick,0x7ffd093d1d94,103286998,0,0x0,8
tick,0x7ffd093d1d94,103302037,0,0x0,8
tick,0x7ffd093d1d94,103317632,0,0x0,8
tick,0x7ffd093d1d94,103333091,0,0x0,8
tick,0x7ffd093d1d94,103349253,0,0x0,8
tick,0x7ffd093d1d94,103365336,0,0x0,8
tick,0x7ffd093d1d94,103381000,0,0x0,8
tick,0x7ffd093d1d94,103396569,0,0x0,8
tick,0x7ffd093d1d94,103412636,0,0x0,8
tick,0x7ffd093d1d94,103428249,0,0x0,8
tick,0x7ffd093d1d94,103443732,0,0x0,8
tick,0x7ffd093d1d94,103458497,0,0x0,8
tick,0x7ffd093d1d94,103473931,0,0x0,8
tick,0x7ffd093d1d94,103490086,0,0x0,8
tick,0x7ffd093d1d94,103504959,0,0x0,8
tick,0x7ffd093d1d94,103521022,0,0x0,8
tick,0x7ffd093d1d94,103536361,0,0x0,8
tick,0x7ffd093d1d94,103551973,0,0x0,8
tick,0x7ffd093d1d94,103566879,0,0x0,8
tick,0x7ffd093d1d94,103582332,0,0x0,8
tick,0x7ffd093d1d94,103597793,0,0x0,8
tick,0x7ffd093d1d94,103613548,0,0x0,8
tick,0x7ffd093d1d94,103628374,0,0x0,8
tick,0x7ffd093d1d94,103644347,0,0x0,8
tick,0x7ffd093d1d94,103660142,0,0x0,8
tick,0x7ffd093d1d94,103675486,0,0x0,8
tick,0x7ffd093d1d94,103690642,0,0x0,8
tick,0x7ffd093d1d94,103706415,0,0x0,8
tick,0x7ffd093d1d94,103722426,0,0x0,8
tick,0x7ffd093d1d94,103738384,0,0x0,8
tick,0x7ffd093d1d94,103754237,0,0x0,8
tick,0x7ffd093d1d94,103769936,0,0x0,8
tick,0x7ffd093d1d94,103785074,0,0x0,8
tick,0x7ffd093d1d94,103800487,0,0x0,8
tick,0x7ffd093d1d94,103816443,0,0x0,8
tick,0x7ffd093d1d94,103831586,0,0x0,8
tick,0x7ffd093d1d94,103846866,0,0x0,8
tick,0x7ffd093d1d94,103862521,0,0x0,8
tick,0x7ffd093d1d94,103878081,0,0x0,8
tick,0x7ffd093d1d94,103894058,0,0x0,8
tick,0x7ffd093d1d94,103910117,0,0x0,8
tick,0x7ffd093d1d94,103925899,0,0x0,8
tick,0x7ffd093d1d94,103940952,0,0x0,8
tick,0x7ffd093d1d94,103956641,0,0x0,8
tick,0x7ffd093d1d94,103972545,0,0x0,8
tick,0x7ffd093d1d94,103988722,0,0x0,8
tick,0x7ffd093d1d94,104004621,0,0x0,8
tick,0x7ffd093d1d94,104020037,0,0x0,8
tick,0x7ffd093d1d94,104035959,0,0x0,8
tick,0x7ffd093d1d94,104051724,0,0x0,8
tick,0x7ffd093d1d94,104067215,0,0x0,8
tick,0x7ffd093d1d94,104082895,0,0x0,8
tick,0x7ffd093d1d94,104098912,0,0x0,8
tick,0x7ffd093d1d94,104113566,0,0x0,8
tick,0x7ffd093d1d94,104129449,0,0x0,8
tick,0x7ffd093d1d94,104145411,0,0x0,8
tick,0x7ffd093d1d94,104160821,0,0x0,8
tick,0x7ffd093d1d94,104176973,0,0x0,8
tick,0x7ffd093d1d94,104192777,0,0x0,8
tick,0x7ffd093d1d94,104208253,0,0x0,8
tick,0x7ffd093d1d94,104223315,0,0x0,8
tick,0x7ffd093d1d94,104238931,0,0x0,8
tick,0x7ffd093d1d94,104254452,0,0x0,8
tick,0x7ffd093d1d94,104269445,0,0x0,8
tick,0x7ffd093d1d94,104284982,0,0x0,8
tick,0x7ffd093d1d94,104300510,0,0x0,8
tick,0x7ffd093d1d94,104315515,0,0x0,8
tick,0x7ffd093d1d94,104330906,0,0x0,8
tick,0x7ffd093d1d94,104346676,0,0x0,8
tick,0x7ffd093d1d94,104362183,0,0x0,8
tick,0x7ffd093d1d94,104378136,0,0x0,8
tick,0x7ffd093d1d94,104393849,0,0x0,8
tick,0x7ffd093d1d94,104409163,0,0x0,8
tick,0x7ffd093d1d94,104424890,0,0x0,8
tick,0x7ffd093d1d94,104440122,0,0x0,8
tick,0x7ffd093d1d94,104455330,0,0x0,8
tick,0x7ffd093d1d94,104470361,0,0x0,8
tick,0x7ffd093d1d94,104485797,0,0x0,8
tick,0x7ffd093d1d94,104501571,0,0x0,8
tick,0x7ffd093d1d94,104517353,0,0x0,8
tick,0x7ffd093d1d94,104532615,0,0x0,8
tick,0x7ffd093d1d94,104547957,0,0x0,8
tick,0x7ffd093d1d94,104562968,0,0x0,8
tick,0x7ffd093d1d94,104578244,0,0x0,8
tick,0x7ffd093d1d94,104594100,0,0x0,8
tick,0x7ffd093d1d94,104609590,0,0x0,8
tick,0x7ffd093d1d94,104625327,0,0x0,8
tick,0x7ffd093d1d94,104640630,0,0x0,8
tick,0x7ffd093d1d94,104655734,0,0x0,8
tick,0x7ffd093d1d94,104670950,0,0x0,8
tick,0x7ffd093d1d94,104686058,0,0x0,8
tick,0x7ffd093d1d94,104701304,0,0x0,8
tick,0x7ffd093d1d94,104717205,0,0x0,8
tick,0x7ffd093d1d94,104732447,0,0x0,8
tick,0x7ffd093d1d94,104747754,0,0x0,8
tick,0x7ffd093d1d94,104763463,0,0x0,8
tick,0x7ffd093d1d94,104778784,0,0x0,8
tick,0x7ffd093d1d94,104794792,0,0x0,8
tick,0x7ffd093d1d94,104810541,0,0x0,8
tick,0x7ffd093d1d94,104825971,0,0x0,8
tick,0x7ffd093d1d94,104841951,0,0x0,8
tick,0x7ffd093d1d94,104857390,0,0x0,8
tick,0x7ffd093d1d94,104873090,0,0x0,8
tick,0x7ffd093d1d94,104888388,0,0x0,8
tick,0x7ffd093d1d94,104903580,0,0x0,8
tick,0x7ffd093d1d94,104919133,0,0x0,8
tick,0x7ffd093d1d94,104934323,0,0x0,8
tick,0x7ffd093d1d94,104950290,0,0x0,8
tick,0x7ffd093d1d94,104965368,0,0x0,8
tick,0x7ffd093d1d94,104981141,0,0x0,8
tick,0x7ffd093d1d94,104996181,0,0x0,8
tick,0x7ffd093d1d94,105012285,0,0x0,8
tick,0x7ffd093d1d94,105027418,0,0x0,8
tick,0x7ffd093d1d94,105043236,0,0x0,8
tick,0x7ffd093d1d94,105059518,0,0x0,8
tick,0x7ffd093d1d94,105074740,0,0x0,8
tick,0x7ffd093d1d94,105090604,0,0x0,8
tick,0x7ffd093d1d94,105106271,0,0x0,8
tick,0x7ffd093d1d94,105121763,0,0x0,8
tick,0x7ffd093d1d94,105137463,0,0x0,8
tick,0x7ffd093d1d94,105153395,0,0x0,8
tick,0x7ffd093d1d94,105168771,0,0x0,8
tick,0x7ffd093d1d94,105184094,0,0x0,8
tick,0x7ffd093d1d94,105199863,0,0x0,8
tick,0x7ffd093d1d94,105215221,0,0x0,8
tick,0x7ffd093d1d94,105230572,0,0x0,8
tick,0x7ffd093d1d94,105245907,0,0x0,8
tick,0x7ffd093d1d94,105262077,0,0x0,8
tick,0x7ffd093d1d94,105277354,0,0x0,8
tick,0x7ffd093d1d94,105292507,0,0x0,8
tick,0x7ffd093d1d94,105308518,0,0x0,8
tick,0x7ffd093d1d94,105323683,0,0x0,8
tick,0x7ffd093d1d94,105338940,0,0x0,8
tick,0x7ffd093d1d94,105354266,0,0x0,8
tick,0x7ffd093d1d94,105369734,0,0x0,8
tick,0x7ffd093d1d94,105385574,0,0x0,8
tick,0x7ffd093d1d94,105401374,0,0x0,8
tick,0x7ffd093d1d94,105417466,0,0x0,8
tick,0x7ffd093d1d94,105432693,0,0x0,8
tick,0x7ffd093d1d94,105447447,0,0x0,8
tick,0x7ffd093d1d94,105463324,0,0x0,8
tick,0x7ffd093d1d94,105479073,0,0x0,8
tick,0x7ffd093d1d94,105494806,0,0x0,8
tick,0x7ffd093d1d94,105510057,0,0x0,8
tick,0x7ffd093d1d94,105525672,0,0x0,8
tick,0x7ffd093d1d94,105541850,0,0x0,8
tick,0x7ffd093d1d94,105556662,0,0x0,8
tick,0x7ffd093d1d94,105572242,0,0x0,8
tick,0x7ffd093d1d94,105587772,0,0x0,8
tick,0x7ffd093d1d94,105603798,0,0x0,8
tick,0x7ffd093d1d94,105619783,0,0x0,8
tick,0x7ffd093d1d94,105635166,0,0x0,8
tick,0x7ffd093d1d94,105651463,0,0x0,8
tick,0x7ffd093d1d94,105667262,0,0x0,8
tick,0x7ffd093d1d94,105682403,0,0x0,8
tick,0x7ffd093d1d94,105697707,0,0x0,8
tick,0x7ffd093d1d94,105712995,0,0x0,8
tick,0x7ffd093d1d94,105728887,0,0x0,8
tick,0x7ffd093d1d94,105744482,0,0x0,8
tick,0x7ffd093d1d94,105760471,0,0x0,8
tick,0x7ffd093d1d94,105775114,0,0x0,8
tick,0x7ffd093d1d94,105790397,0,0x0,8
tick,0x7ffd093d1d94,105806390,0,0x0,8
tick,0x7ffd093d1d94,105821931,0,0x0,8
tick,0x7ffd093d1d94,105837722,0,0x0,8
tick,0x7ffd093d1d94,105852744,0,0x0,8
tick,0x7ffd093d1d94,105868186,0,0x0,8
tick,0x7ffd093d1d94,105883728,0,0x0,8
tick,0x7ffd093d1d94,105899017,0,0x0,8
tick,0x7ffd093d1d94,105914101,0,0x0,8
tick,0x7ffd093d1d94,105929630,0,0x0,8
tick,0x7ffd093d1d94,105944359,0,0x0,8
tick,0x7ffd093d1d94,105960260,0,0x0,8
tick,0x7ffd093d1d94,105976207,0,0x0,8
tick,0x7ffd093d1d94,105992184,0,0x0,8
tick,0x7ffd093d1d94,106007699,0,0x0,8
tick,0x7ffd093d1d94,106023899,0,0x0,8
tick,0x7ffd093d1d94,106039759,0,0x0,8
tick,0x7ffd093d1d94,106054924,0,0x0,8
tick,0x7ffd093d1d94,106070335,0,0x0,8
tick,0x7ffd093d1d94,106085521,0,0x0,8
tick,0x7ffd093d1d94,106100754,0,0x0,8
tick,0x7ffd093d1d94,106115954,0,0x0,8
tick,0x7ffd093d1d94,106132278,0,0x0,8
tick,0x7ffd093d1d94,106147997,0,0x0,8
tick,0x7ffd093d1d94,106163922,0,0x0,8
tick,0x7ffd093d1d94,106179452,0,0x0,8
tick,0x7ffd093d1d94,106195138,0,0x0,8
tick,0x7ffd093d1d94,106210747,0,0x0,8
tick,0x7ffd093d1d94,106226427,0,0x0,8
tick,0x7ffd093d1d94,106241794,0,0x0,8
tick,0x7ffd093d1d94,106257851,0,0x0,8
tick,0x7ffd093d1d94,106273861,0,0x0,8
tick,0x7ffd093d1d94,106288798,0,0x0,8
tick,0x7ffd093d1d94,106304260,0,0x0,8
tick,0x7ffd093d1d94,106320103,0,0x0,8
tick,0x7ffd093d1d94,106335956,0,0x0,8
tick,0x7ffd093d1d94,106350916,0,0x0,8
tick,0x7ffd093d1d94,106366346,0,0x0,8
tick,0x7ffd093d1d94,106381366,0,0x0,8
tick,0x7ffd093d1d94,106397011,0,0x0,8
tick,0x7ffd093d1d94,106412238,0,0x0,8
tick,0x7ffd093d1d94,106427804,0,0x0,8
tick,0x7ffd093d1d94,106443365,0,0x0,8
tick,0x7ffd093d1d94,106458686,0,0x0,8
tick,0x7ffd093d1d94,106474574,0,0x0,8
tick,0x7ffd093d1d94,106490961,0,0x0,8
tick,0x7ffd093d1d94,106505567,0,0x0,8
tick,0x7ffd093d1d94,106521244,0,0x0,8
tick,0x7ffd093d1d94,106536546,0,0x0,8
tick,0x7ffd093d1d94,106552140,0,0x0,8
tick,0x7ffd093d1d94,106567537,0,0x0,8
tick,0x7ffd093d1d94,106582978,0,0x0,8
tick,0x7ffd093d1d94,106598752,0,0x0,8
tick,0x7ffd093d1d94,106614494,0,0x0,8
tick,0x7ffd093d1d94,106630125,0,0x0,8
tick,0x7ffd093d1d94,106646022,0,0x0,8
tick,0x7ffd093d1d94,106661577,0,0x0,8
tick,0x7ffd093d1d94,106677085,0,0x0,8
tick,0x7ffd093d1d94,106692414,0,0x0,8
tick,0x7ffd093d1d94,106707961,0,0x0,8
tick,0x7ffd093d1d94,106723712,0,0x0,8
tick,0x7ffd093d1d94,106739850,0,0x0,8
tick,0x7ffd093d1d94,106756058,0,0x0,8
tick,0x7ffd093d1d94,106772058,0,0x0,8
tick,0x7ffd093d1d94,106787100,0,0x0,8
tick,0x7ffd093d1d94,106802768,0,0x0,8
tick,0x7ffd093d1d94,106818803,0,0x0,8
tick,0x7ffd093d1d94,106834598,0,0x0,8
tick,0x7ffd093d1d94,106849760,0,0x0,8
tick,0x7ffd093d1d94,106865539,0,0x0,8
tick,0x7ffd093d1d94,106881778,0,0x0,8
tick,0x7ffd093d1d94,106897101,0,0x0,8
tick,0x7ffd093d1d94,106912612,0,0x0,8
tick,0x7ffd093d1d94,106927904,0,0x0,8
tick,0x7ffd093d1d94,106943752,0,0x0,8
tick,0x7ffd093d1d94,106959890,0,0x0,8
tick,0x7ffd093d1d94,106975354,0,0x0,8
tick,0x7ffd093d1d94,106991011,0,0x0,8
tick,0x7ffd093d1d94,107007020,0,0x0,8
tick,0x7ffd093d1d94,107022364,0,0x0,8
tick,0x7ffd093d1d94,107037737,0,0x0,8
tick,0x7ffd093d1d94,107053252,0,0x0,8
tick,0x7ffd093d1d94,107068951,0,0x0,8
tick,0x7ffd093d1d94,107084640,0,0x0,8
tick,0x7ffd093d1d94,107100647,0,0x0,8
tick,0x7ffd093d1d94,107116229,0,0x0,8
tick,0x7ffd093d1d94,107132119,0,0x0,8
tick,0x7ffd093d1d94,107147668,0,0x0,8
tick,0x7ffd093d1d94,107163596,0,0x0,8
tick,0x7ffd093d1d94,107179036,0,0x0,8
tick,0x7ffd093d1d94,107194989,0,0x0,8
tick,0x7ffd093d1d94,107210534,0,0x0,8
tick,0x7ffd093d1d94,107226169,0,0x0,8
tick,0x7ffd093d1d94,107241231,0,0x0,8
tick,0x7ffd093d1d94,107256638,0,0x0,8
tick,0x7ffd093d1d94,107271788,0,0x0,8
tick,0x7ffd093d1d94,107287128,0,0x0,8
tick,0x7ffd093d1d94,107303020,0,0x0,8
tick,0x7ffd093d1d94,107318353,0,0x0,8
tick,0x7ffd093d1d94,107333686,0,0x0,8
tick,0x7ffd093d1d94,107349071,0,0x0,8
tick,0x7ffd093d1d94,107365556,0,0x0,8
tick,0x7ffd093d1d94,107380979,0,0x0,8
tick,0x7ffd093d1d94,107396619,0,0x0,8
tick,0x7ffd093d1d94,107413167,0,0x0,8
tick,0x7ffd093d1d94,107428395,0,0x0,8
tick,0x7ffd093d1d94,107444237,0,0x0,8
tick,0x7ffd093d1d94,107459706,0,0x0,8
tick,0x7ffd093d1d94,107475651,0,0x0,8
tick,0x7ffd093d1d94,107491671,0,0x0,8
tick,0x7ffd093d1d94,107506951,0,0x0,8
tick,0x7ffd093d1d94,107522471,0,0x0,8
tick,0x7ffd093d1d94,107537863,0,0x0,8
tick,0x7ffd093d1d94,107553183,0,0x0,8
tick,0x7ffd093d1d94,107568389,0,0x0,8
tick,0x7ffd093d1d94,107584023,0,0x0,8
tick,0x7ffd093d1d94,107599657,0,0x0,8
tick,0x7ffd093d1d94,107614665,0,0x0,8
tick,0x7ffd093d1d94,107629995,0,0x0,8
tick,0x7ffd093d1d94,107644992,0,0x0,8
tick,0x7ffd093d1d94,107660195,0,0x0,8
tick,0x7ffd093d1d94,107675979,0,0x0,8
tick,0x7ffd093d1d94,107691395,0,0x0,8
tick,0x7ffd093d1d94,107707362,0,0x0,8
tick,0x7ffd093d1d94,107723006,0,0x0,8
tick,0x7ffd093d1d94,107738965,0,0x0,8
tick,0x7ffd093d1d94,107755509,0,0x0,8
tick,0x7ffd093d1d94,107771045,0,0x0,8
tick,0x7ffd093d1d94,107786553,0,0x0,8
tick,0x7ffd093d1d94,107801527,0,0x0,8
tick,0x7ffd093d1d94,107817575,0,0x0,8
tick,0x7ffd093d1d94,107833569,0,0x0,8
tick,0x7ffd093d1d94,107849535,0,0x0,8
tick,0x7ffd093d1d94,107864575,0,0x0,8
tick,0x7ffd093d1d94,107879558,0,0x0,8
tick,0x7ffd093d1d94,107895544,0,0x0,8
tick,0x7ffd093d1d94,107911158,0,0x0,8
tick,0x7ffd093d1d94,107926312,0,0x0,8
tick,0x7ffd093d1d94,107941931,0,0x0,8
tick,0x7ffd093d1d94,107956952,0,0x0,8
tick,0x7ffd093d1d94,107972637,0,0x0,8
tick,0x7ffd093d1d94,107988392,0,0x0,8
tick,0x7ffd093d1d94,108003890,0,0x0,8
tick,0x7ffd093d1d94,108019935,0,0x0,8
tick,0x7ffd093d1d94,108035748,0,0x0,8
tick,0x7ffd093d1d94,108050726,0,0x0,8
tick,0x7ffd093d1d94,108066572,0,0x0,8
tick,0x7ffd093d1d94,108082946,0,0x0,8
tick,0x7ffd093d1d94,108098477,0,0x0,8
tick,0x7ffd093d1d94,108114483,0,0x0,8
tick,0x7ffd093d1d94,108129301,0,0x0,8
tick,0x7ffd093d1d94,108145206,0,0x0,8
tick,0x7ffd093d1d94,108160864,0,0x0,8
tick,0x7ffd093d1d94,108177028,0,0x0,8
tick,0x7ffd093d1d94,108191671,0,0x0,8
tick,0x7ffd093d1d94,108207283,0,0x0,8
tick,0x7ffd093d1d94,108223411,0,0x0,8
tick,0x7ffd093d1d94,108238761,0,0x0,8
tick,0x7ffd093d1d94,108253840,0,0x0,8
tick,0x7ffd093d1d94,108269697,0,0x0,8
tick,0x7ffd093d1d94,108285771,0,0x0,8
tick,0x7ffd093d1d94,108301574,0,0x0,8
tick,0x7ffd093d1d94,108317362,0,0x0,8
tick,0x7ffd093d1d94,108333104,0,0x0,8
tick,0x7ffd093d1d94,108349101,0,0x0,8
tick,0x7ffd093d1d94,108364232,0,0x0,8
tick,0x7ffd093d1d94,108379653,0,0x0,8
tick,0x7ffd093d1d94,108395451,0,0x0,8
tick,0x7ffd093d1d94,108411011,0,0x0,8
tick,0x7ffd093d1d94,108426518,0,0x0,8
tick,0x7ffd093d1d94,108442289,0,0x0,8
tick,0x7ffd093d1d94,108457209,0,0x0,8
tick,0x7ffd093d1d94,108473325,0,0x0,8
tick,0x7ffd093d1d94,108488574,0,0x0,8
tick,0x7ffd093d1d94,108504091,0,0x0,8
tick,0x7ffd093d1d94,108519439,0,0x0,8
tick,0x7ffd093d1d94,108534741,0,0x0,8
tick,0x7ffd093d1d94,108549976,0,0x0,8
tick,0x7ffd093d1d94,108565844,0,0x0,8
tick,0x7ffd093d1d94,108581127,0,0x0,8
tick,0x7ffd093d1d94,108596846,0,0x0,8
tick,0x7ffd093d1d94,108611822,0,0x0,8
tick,0x7ffd093d1d94,108626980,0,0x0,8
tick,0x7ffd093d1d94,108642857,0,0x0,8
tick,0x7ffd093d1d94,108658025,0,0x0,8
tick,0x7ffd093d1d94,108673767,0,0x0,8
tick,0x7ffd093d1d94,108688482,0,0x0,8
tick,0x7ffd093d1d94,108704155,0,0x0,8
tick,0x7ffd093d1d94,108719444,0,0x0,8
tick,0x7ffd093d1d94,108735419,0,0x0,8
tick,0x7ffd093d1d94,108750510,0,0x0,8
tick,0x7ffd093d1d94,108765442,0,0x0,8
tick,0x7ffd093d1d94,108781387,0,0x0,8
tick,0x7ffd093d1d94,108797413,0,0x0,8
tick,0x7ffd093d1d94,108813083,0,0x0,8
tick,0x7ffd093d1d94,108828736,0,0x0,8
tick,0x7ffd093d1d94,108844232,0,0x0,8
tick,0x7ffd093d1d94,108860010,0,0x0,8
tick,0x7ffd093d1d94,108875998,0,0x0,8
tick,0x7ffd093d1d94,108891693,0,0x0,8
tick,0x7ffd093d1d94,108907082,0,0x0,8
tick,0x7ffd093d1d94,108922851,0,0x0,8
tick,0x7ffd093d1d94,108937718,0,0x0,8
tick,0x7ffd093d1d94,108953370,0,0x0,8
tick,0x7ffd093d1d94,108969041,0,0x0,8
tick,0x7ffd093d1d94,108984009,0,0x0,8
tick,0x7ffd093d1d94,108999660,0,0x0,8
tick,0x7ffd093d1d94,109015341,0,0x0,8
tick,0x7ffd093d1d94,109030529,0,0x0,8
tick,0x7ffd093d1d94,109046217,0,0x0,8
tick,0x7ffd093d1d94,109061729,0,0x0,8
tick,0x7ffd093d1d94,109077604,0,0x0,8
tick,0x7ffd093d1d94,109092711,0,0x0,8
tick,0x7ffd093d1d94,109108492,0,0x0,8
tick,0x7ffd093d1d94,109123447,0,0x0,8
tick,0x7ffd093d1d94,109139315,0,0x0,8
tick,0x7ffd093d1d94,109154557,0,0x0,8
tick,0x7ffd093d1d94,109169897,0,0x0,8
tick,0x7ffd093d1d94,109185104,0,0x0,8
tick,0x7ffd093d1d94,109200482,0,0x0,8
tick,0x7ffd093d1d94,109216413,0,0x0,8
tick,0x7ffd093d1d94,109232345,0,0x0,8
tick,0x7ffd093d1d94,109249010,0,0x0,8
tick,0x7ffd093d1d94,109264563,0,0x0,8
tick,0x7ffd093d1d94,109279864,0,0x0,8
tick,0x7ffd093d1d94,109295416,0,0x0,8
tick,0x7ffd093d1d94,109311073,0,0x0,8
tick,0x7ffd093d1d94,109326926,0,0x0,8
tick,0x7ffd093d1d94,109342662,0,0x0,8
tick,0x7ffd093d1d94,109357844,0,0x0,8
tick,0x7ffd093d1d94,109374032,0,0x0,8
tick,0x7ffd093d1d94,109389911,0,0x0,8
tick,0x7ffd093d1d94,109406049,0,0x0,8
tick,0x7ffd093d1d94,109422354,0,0x0,8
tick,0x7ffd093d1d94,109438067,0,0x0,8
tick,0x7ffd093d1d94,109453430,0,0x0,8
tick,0x7ffd093d1d94,109469455,0,0x0,8
tick,0x7ffd093d1d94,109485459,0,0x0,8
tick,0x7ffd093d1d94,109500992,0,0x0,8
tick,0x7ffd093d1d94,109516563,0,0x0,8
tick,0x7ffd093d1d94,109532461,0,0x0,8
tick,0x7ffd093d1d94,109547241,0,0x0,8
tick,0x7ffd093d1d94,109562673,0,0x0,8
tick,0x7ffd093d1d94,109577650,0,0x0,8
tick,0x7ffd093d1d94,109592393,0,0x0,8
tick,0x7ffd093d1d94,109607925,0,0x0,8
tick,0x7ffd093d1d94,109623115,0,0x0,8
tick,0x7ffd093d1d94,109638193,0,0x0,8
tick,0x7ffd093d1d94,109654194,0,0x0,8
tick,0x7ffd093d1d94,109669816,0,0x0,8
tick,0x7ffd093d1d94,109685588,0,0x0,8
tick,0x7ffd093d1d94,109701489,0,0x0,8
tick,0x7ffd093d1d94,109717178,0,0x0,8
tick,0x7ffd093d1d94,109732630,0,0x0,8
tick,0x7ffd093d1d94,109748411,0,0x0,8
tick,0x7ffd093d1d94,109763622,0,0x0,8
tick,0x7ffd093d1d94,109778753,0,0x0,8
tick,0x7ffd093d1d94,109794198,0,0x0,8
tick,0x7ffd093d1d94,109809311,0,0x0,8
tick,0x7ffd093d1d94,109824452,0,0x0,8
tick,0x7ffd093d1d94,109840449,0,0x0,8
tick,0x7ffd093d1d94,109856696,0,0x0,8
tick,0x7ffd093d1d94,109873025,0,0x0,8
tick,0x7ffd093d1d94,109888574,0,0x0,8
tick,0x7ffd093d1d94,109903768,0,0x0,8
tick,0x7ffd093d1d94,109919284,0,0x0,8
tick,0x7ffd093d1d94,109935000,0,0x0,8
tick,0x7ffd093d1d94,109949972,0,0x0,8
tick,0x7ffd093d1d94,109966360,0,0x0,8
tick,0x7ffd093d1d94,109982273,0,0x0,8
tick,0x7ffd093d1d94,109996810,0,0x0,8
tick,0x7ffd093d1d94,110012310,0,0x0,8
tick,0x7ffd093d1d94,110027648,0,0x0,8
tick,0x7ffd093d1d94,110043178,0,0x0,8
tick,0x7ffd093d1d94,110058265,0,0x0,8
tick,0x7ffd093d1d94,110073952,0,0x0,8
tick,0x7ffd093d1d94,110090871,0,0x0,8
tick,0x7ffd093d1d94,110105329,0,0x0,8
tick,0x7ffd093d1d94,110120728,0,0x0,8
tick,0x7ffd093d1d94,110136159,0,0x0,8
tick,0x7ffd093d1d94,110152201,0,0x0,8
tick,0x7ffd093d1d94,110167457,0,0x0,8
tick,0x7ffd093d1d94,110183272,0,0x0,8
tick,0x7ffd093d1d94,110198004,0,0x0,8
tick,0x7ffd093d1d94,110213534,0,0x0,8
tick,0x7ffd093d1d94,110229177,0,0x0,8
tick,0x7ffd093d1d94,110244221,0,0x0,8
tick,0x7ffd093d1d94,110260317,0,0x0,8
tick,0x7ffd093d1d94,110276265,0,0x0,8
tick,0x7ffd093d1d94,110291844,0,0x0,8
tick,0x7ffd093d1d94,110306515,0,0x0,8
tick,0x7ffd093d1d94,110322564,0,0x0,8
tick,0x7ffd093d1d94,110338568,0,0x0,8
tick,0x7ffd093d1d94,110354765,0,0x0,8
tick,0x7ffd093d1d94,110369366,0,0x0,8
tick,0x7ffd093d1d94,110385236,0,0x0,8
tick,0x7ffd093d1d94,110400697,0,0x0,8
tick,0x7ffd093d1d94,110415970,0,0x0,8
tick,0x7ffd093d1d94,110432278,0,0x0,8
tick,0x7ffd093d1d94,110446710,0,0x0,8
tick,0x7ffd093d1d94,110461838,0,0x0,8
tick,0x7ffd093d1d94,110477740,0,0x0,8
tick,0x7ffd093d1d94,110493154,0,0x0,8
tick,0x7ffd093d1d94,110508605,0,0x0,8
tick,0x7ffd093d1d94,110523911,0,0x0,8
tick,0x7ffd093d1d94,110540157,0,0x0,8
tick,0x7ffd093d1d94,110555682,0,0x0,8
tick,0x7ffd093d1d94,110572020,0,0x0,8
tick,0x7ffd093d1d94,110587155,0,0x0,8
tick,0x7ffd093d1d94,110602599,0,0x0,8
tick,0x7ffd093d1d94,110617624,0,0x0,8
tick,0x7ffd093d1d94,110632749,0,0x0,8
tick,0x7ffd093d1d94,110648711,0,0x0,8
tick,0x7ffd093d1d94,110664215,0,0x0,8
tick,0x7ffd093d1d94,110680279,0,0x0,8
tick,0x7ffd093d1d94,110696372,0,0x0,8
tick,0x7ffd093d1d94,110711622,0,0x0,8
tick,0x7ffd093d1d94,110726518,0,0x0,8
tick,0x7ffd093d1d94,110742426,0,0x0,8
tick,0x7ffd093d1d94,110758866,0,0x0,8
tick,0x7ffd093d1d94,110773749,0,0x0,8
tick,0x7ffd093d1d94,110789790,0,0x0,8
tick,0x7ffd093d1d94,110805503,0,0x0,8
tick,0x7ffd093d1d94,110821282,0,0x0,8
tick,0x7ffd093d1d94,110835859,0,0x0,8
tick,0x7ffd093d1d94,110851727,0,0x0,8
tick,0x7ffd093d1d94,110867546,0,0x0,8
tick,0x7ffd093d1d94,110883218,0,0x0,8
tick,0x7ffd093d1d94,110899154,0,0x0,8
tick,0x7ffd093d1d94,110913889,0,0x0,8
tick,0x7ffd093d1d94,110929278,0,0x0,8
tick,0x7ffd093d1d94,110944643,0,0x0,8
tick,0x7ffd093d1d94,110960244,0,0x0,8
tick,0x7ffd093d1d94,110975823,0,0x0,8
tick,0x7ffd093d1d94,110990891,0,0x0,8
tick,0x7ffd093d1d94,111006327,0,0x0,8
tick,0x7ffd093d1d94,111021938,0,0x0,8
tick,0x7ffd093d1d94,111038266,0,0x0,8
tick,0x7ffd093d1d94,111054676,0,0x0,8
tick,0x7ffd093d1d94,111070440,0,0x0,8
tick,0x7ffd093d1d94,111086320,0,0x0,8
tick,0x7ffd093d1d94,111102375,0,0x0,8
tick,0x7ffd093d1d94,111117741,0,0x0,8
tick,0x7ffd093d1d94,111133287,0,0x0,8
tick,0x7ffd093d1d94,111148418,0,0x0,8
tick,0x7ffd093d1d94,111163803,0,0x0,8
tick,0x7ffd093d1d94,111178910,0,0x0,8
tick,0x7ffd093d1d94,111194998,0,0x0,8
tick,0x7ffd093d1d94,111211226,0,0x0,8
tick,0x7ffd093d1d94,111226837,0,0x0,8
tick,0x7ffd093d1d94,111242529,0,0x0,8
tick,0x7ffd093d1d94,111258473,0,0x0,8
tick,0x7ffd093d1d94,111274254,0,0x0,8
tick,0x7ffd093d1d94,111289044,0,0x0,8
tick,0x7ffd093d1d94,111304272,0,0x0,8
tick,0x7ffd093d1d94,111319821,0,0x0,8
tick,0x7ffd093d1d94,111335429,0,0x0,8
tick,0x7ffd093d1d94,111351038,0,0x0,8
tick,0x7ffd093d1d94,111366130,0,0x0,8
tick,0x7ffd093d1d94,111381804,0,0x0,8
tick,0x7ffd093d1d94,111397609,0,0x0,8
tick,0x7ffd093d1d94,111412813,0,0x0,8
tick,0x7ffd093d1d94,111427840,0,0x0,8
tick,0x7ffd093d1d94,111443367,0,0x0,8
tick,0x7ffd093d1d94,111459752,0,0x0,8
tick,0x7ffd093d1d94,111474911,0,0x0,8
tick,0x7ffd093d1d94,111489805,0,0x0,8
tick,0x7ffd093d1d94,111504954,0,0x0,8
tick,0x7ffd093d1d94,111520824,0,0x0,8
tick,0x7ffd093d1d94,111535792,0,0x0,8
tick,0x7ffd093d1d94,111551104,0,0x0,8
tick,0x7ffd093d1d94,111566369,0,0x0,8
tick,0x7ffd093d1d94,111582114,0,0x0,8
tick,0x7ffd093d1d94,111597185,0,0x0,8
tick,0x7ffd093d1d94,111612944,0,0x0,8
tick,0x7ffd093d1d94,111628554,0,0x0,8
tick,0x7ffd093d1d94,111644627,0,0x0,8
tick,0x7ffd093d1d94,111660055,0,0x0,8
tick,0x7ffd093d1d94,111676355,0,0x0,8
tick,0x7ffd093d1d94,111692050,0,0x0,8
tick,0x7ffd093d1d94,111707269,0,0x0,8
tick,0x7ffd093d1d94,111723560,0,0x0,8
tick,0x7ffd093d1d94,111739081,0,0x0,8
tick,0x7ffd093d1d94,111754557,0,0x0,8
tick,0x7ffd093d1d94,111769417,0,0x0,8
tick,0x7ffd093d1d94,111785460,0,0x0,8
tick,0x7ffd093d1d94,111801230,0,0x0,8
tick,0x7ffd093d1d94,111817035,0,0x0,8
tick,0x7ffd093d1d94,111833331,0,0x0,8
tick,0x7ffd093d1d94,111847945,0,0x0,8
tick,0x7ffd093d1d94,111863547,0,0x0,8
tick,0x7ffd093d1d94,111878621,0,0x0,8
tick,0x7ffd093d1d94,111894412,0,0x0,8
tick,0x7ffd093d1d94,111909469,0,0x0,8
tick,0x7ffd093d1d94,111925017,0,0x0,8
tick,0x7ffd093d1d94,111941338,0,0x0,8
tick,0x7ffd093d1d94,111957123,0,0x0,8
tick,0x7ffd093d1d94,111972916,0,0x0,8
tick,0x7ffd093d1d94,111988544,0,0x0,8
tick,0x7ffd093d1d94,112004670,0,0x0,8
tick,0x7ffd093d1d94,112020101,0,0x0,8
tick,0x7ffd093d1d94,112036369,0,0x0,8
tick,0x7ffd093d1d94,112052144,0,0x0,8
tick,0x7ffd093d1d94,112068261,0,0x0,8
tick,0x7ffd093d1d94,112083862,0,0x0,8
tick,0x7ffd093d1d94,112099300,0,0x0,8
tick,0x7ffd093d1d94,112114687,0,0x0,8
tick,0x7ffd093d1d94,112129814,0,0x0,8
tick,0x7ffd093d1d94,112145273,0,0x0,8
tick,0x7ffd093d1d94,112161183,0,0x0,8
tick,0x7ffd093d1d94,112177032,0,0x0,8
tick,0x7ffd093d1d94,112193089,0,0x0,8
tick,0x7ffd093d1d94,112208827,0,0x0,8
tick,0x7ffd093d1d94,112223614,0,0x0,8
tick,0x7ffd093d1d94,112238831,0,0x0,8
tick,0x7ffd093d1d94,112253950,0,0x0,8
tick,0x7ffd093d1d94,112269602,0,0x0,8
tick,0x7ffd093d1d94,112284885,0,0x0,8
tick,0x7ffd093d1d94,112300789,0,0x0,8
tick,0x7ffd093d1d94,112316440,0,0x0,8
tick,0x7ffd093d1d94,112332171,0,0x0,8
tick,0x7ffd093d1d94,112347798,0,0x0,8
tick,0x7ffd093d1d94,112363542,0,0x0,8
tick,0x7ffd093d1d94,112379700,0,0x0,8
tick,0x7ffd093d1d94,112394797,0,0x0,8
tick,0x7ffd093d1d94,112410778,0,0x0,8
tick,0x7ffd093d1d94,112425878,0,0x0,8
tick,0x7ffd093d1d94,112441434,0,0x0,8
tick,0x7ffd093d1d94,112456828,0,0x0,8
tick,0x7ffd093d1d94,112471546,0,0x0,8
tick,0x7ffd093d1d94,112486796,0,0x0,8
tick,0x7ffd093d1d94,112502590,0,0x0,8
tick,0x7ffd093d1d94,112518690,0,0x0,8
tick,0x7ffd093d1d94,112534665,0,0x0,8
tick,0x7ffd093d1d94,112550664,0,0x0,8
tick,0x7ffd093d1d94,112565983,0,0x0,8
tick,0x7ffd093d1d94,112582209,0,0x0,8
tick,0x7ffd093d1d94,112598080,0,0x0,8
tick,0x7ffd093d1d94,112613922,0,0x0,8
tick,0x7ffd093d1d94,112628926,0,0x0,8
tick,0x7ffd093d1d94,112643837,0,0x0,8
tick,0x7ffd093d1d94,112659685,0,0x0,8
tick,0x7ffd093d1d94,112675163,0,0x0,8
tick,0x7ffd093d1d94,112690417,0,0x0,8
tick,0x7ffd093d1d94,112705930,0,0x0,8
tick,0x7ffd093d1d94,112721611,0,0x0,8
tick,0x7ffd093d1d94,112736444,0,0x0,8
tick,0x7ffd093d1d94,112752017,0,0x0,8
tick,0x7ffd093d1d94,112767619,0,0x0,8
tick,0x7ffd093d1d94,112783342,0,0x0,8
tick,0x7ffd093d1d94,112798338,0,0x0,8
tick,0x7ffd093d1d94,112814541,0,0x0,8
tick,0x7ffd093d1d94,112830173,0,0x0,8
tick,0x7ffd093d1d94,112845233,0,0x0,8
tick,0x7ffd093d1d94,112861522,0,0x0,8
tick,0x7ffd093d1d94,112877287,0,0x0,8
tick,0x7ffd093d1d94,112892497,0,0x0,8
tick,0x7ffd093d1d94,112908144,0,0x0,8
tick,0x7ffd093d1d94,112923338,0,0x0,8
tick,0x7ffd093d1d94,112939639,0,0x0,8
tick,0x7ffd093d1d94,112955174,0,0x0,8
tick,0x7ffd093d1d94,112971095,0,0x0,8
tick,0x7ffd093d1d94,112986704,0,0x0,8
tick,0x7ffd093d1d94,113002512,0,0x0,8
tick,0x7ffd093d1d94,113018177,0,0x0,8
tick,0x7ffd093d1d94,113033344,0,0x0,8
tick,0x7ffd093d1d94,113049706,0,0x0,8
tick,0x7ffd093d1d94,113064547,0,0x0,8
tick,0x7ffd093d1d94,113079997,0,0x0,8
tick,0x7ffd093d1d94,113095399,0,0x0,8
tick,0x7ffd093d1d94,113110514,0,0x0,8
tick,0x7ffd093d1d94,113126486,0,0x0,8
tick,0x7ffd093d1d94,113142019,0,0x0,8
tick,0x7ffd093d1d94,113157495,0,0x0,8
tick,0x7ffd093d1d94,113172873,0,0x0,8
tick,0x7ffd093d1d94,113188571,0,0x0,8
tick,0x7ffd093d1d94,113203758,0,0x0,8
tick,0x7ffd093d1d94,113219532,0,0x0,8
tick,0x7ffd093d1d94,113235005,0,0x0,8
tick,0x7ffd093d1d94,113250393,0,0x0,8
tick,0x7ffd093d1d94,113265780,0,0x0,8
tick,0x7ffd093d1d94,113281162,0,0x0,8
tick,0x7ffd093d1d94,113296764,0,0x0,8
tick,0x7ffd093d1d94,113312004,0,0x0,8
tick,0x7ffd093d1d94,113327386,0,0x0,8
tick,0x7ffd093d1d94,113342930,0,0x0,8
tick,0x7ffd093d1d94,113358584,0,0x0,8
tick,0x7ffd093d1d94,113373945,0,0x0,8
tick,0x7ffd093d1d94,113389544,0,0x0,8
tick,0x7ffd093d1d94,113405456,0,0x0,8
tick,0x7ffd093d1d94,113421418,0,0x0,8
tick,0x7ffd093d1d94,113436469,0,0x0,8
tick,0x7ffd093d1d94,113451873,0,0x0,8
tick,0x7ffd093d1d94,113467050,0,0x0,8
tick,0x7ffd093d1d94,113483316,0,0x0,8
tick,0x7ffd093d1d94,113498735,0,0x0,8
tick,0x7ffd093d1d94,113514907,0,0x0,8
tick,0x7ffd093d1d94,113529664,0,0x0,8
tick,0x7ffd093d1d94,113545043,0,0x0,8
tick,0x7ffd093d1d94,113560236,0,0x0,8
tick,0x7ffd093d1d94,113576099,0,0x0,8
tick,0x7ffd093d1d94,113591430,0,0x0,8
tick,0x7ffd093d1d94,113606696,0,0x0,8
tick,0x7ffd093d1d94,113622451,0,0x0,8
tick,0x7ffd093d1d94,113638645,0,0x0,8
tick,0x7ffd093d1d94,113654220,0,0x0,8
tick,0x7ffd093d1d94,113669691,0,0x0,8
tick,0x7ffd093d1d94,113684772,0,0x0,8
tick,0x7ffd093d1d94,113700697,0,0x0,8
tick,0x7ffd093d1d94,113715624,0,0x0,8
tick,0x7ffd093d1d94,113731420,0,0x0,8
tick,0x7ffd093d1d94,113747315,0,0x0,8
tick,0x7ffd093d1d94,113762514,0,0x0,8
tick,0x7ffd093d1d94,113777419,0,0x0,8
tick,0x7ffd093d1d94,113793295,0,0x0,8
tick,0x7ffd093d1d94,113809169,0,0x0,8
tick,0x7ffd093d1d94,113823364,0,0x0,8
tick,0x7ffd093d1d94,113838472,0,0x0,8
tick,0x7ffd093d1d94,113854285,0,0x0,8
tick,0x7ffd093d1d94,113870378,0,0x0,8
tick,0x7ffd093d1d94,113887099,0,0x0,8
tick,0x7ffd093d1d94,113900697,0,0x0,8
tick,0x7ffd093d1d94,113916414,0,0x0,8
tick,0x7ffd093d1d94,113931560,0,0x0,8
tick,0x7ffd093d1d94,113946702,0,0x0,8
tick,0x7ffd093d1d94,113962144,0,0x0,8
tick,0x7ffd093d1d94,113978218,0,0x0,8
tick,0x7ffd093d1d94,113993373,0,0x0,8
tick,0x7ffd093d1d94,114008820,0,0x0,8
tick,0x7ffd093d1d94,114025343,0,0x0,8
tick,0x7ffd093d1d94,114041117,0,0x0,8
tick,0x7ffd093d1d94,114056079,0,0x0,8
tick,0x7ffd093d1d94,114072083,0,0x0,8
tick,0x7ffd093d1d94,114087813,0,0x0,8
tick,0x7ffd093d1d94,114104235,0,0x0,8
tick,0x7ffd093d1d94,114117907,0,0x0,8
tick,0x7ffd093d1d94,114133282,0,0x0,8
tick,0x7ffd093d1d94,114148600,0,0x0,8
tick,0x7ffd093d1d94,114163605,0,0x0,8
tick,0x7ffd093d1d94,114179333,0,0x0,8
tick,0x7ffd093d1d94,114194552,0,0x0,8
tick,0x7ffd093d1d94,114211173,0,0x0,8
tick,0x7ffd093d1d94,114225090,0,0x0,8
tick,0x7ffd093d1d94,114240439,0,0x0,8
tick,0x7ffd093d1d94,114256427,0,0x0,8
tick,0x7ffd093d1d94,114271176,0,0x0,8
tick,0x7ffd093d1d94,114286186,0,0x0,8
tick,0x7ffd093d1d94,114302206,0,0x0,8
tick,0x7ffd093d1d94,114317708,0,0x0,8
tick,0x7ffd093d1d94,114333444,0,0x0,8
tick,0x7ffd093d1d94,114348494,0,0x0,8
tick,0x7ffd093d1d94,114363879,0,0x0,8
tick,0x7ffd093d1d94,114380288,0,0x0,8
tick,0x7ffd093d1d94,114395242,0,0x0,8
tick,0x7ffd093d1d94,114410234,0,0x0,8
tick,0x7ffd093d1d94,114426501,0,0x0,8
tick,0x7ffd093d1d94,114441566,0,0x0,8
tick,0x7ffd093d1d94,114456718,0,0x0,8
tick,0x7ffd093d1d94,114472249,0,0x0,8
tick,0x7ffd093d1d94,114488112,0,0x0,8
tick,0x7ffd093d1d94,114504183,0,0x0,8
tick,0x7ffd093d1d94,114519890,0,0x0,8
tick,0x7ffd093d1d94,114535575,0,0x0,8
tick,0x7ffd093d1d94,114551097,0,0x0,8
tick,0x7ffd093d1d94,114567527,0,0x0,8
tick,0x7ffd093d1d94,114583147,0,0x0,8
tick,0x7ffd093d1d94,114598643,0,0x0,8
tick,0x7ffd093d1d94,114614659,0,0x0,8
tick,0x7ffd093d1d94,114630636,0,0x0,8
tick,0x7ffd093d1d94,114645627,0,0x0,8
tick,0x7ffd093d1d94,114660635,0,0x0,8
tick,0x7ffd093d1d94,114676605,0,0x0,8
tick,0x7ffd093d1d94,114692674,0,0x0,8
tick,0x7ffd093d1d94,114708137,0,0x0,8
tick,0x7ffd093d1d94,114723149,0,0x0,8
tick,0x7ffd093d1d94,114739149,0,0x0,8
tick,0x7ffd093d1d94,114754154,0,0x0,8
tick,0x7ffd093d1d94,114770416,0,0x0,8
tick,0x7ffd093d1d94,114785978,0,0x0,8
tick,0x7ffd093d1d94,114801602,0,0x0,8
tick,0x7ffd093d1d94,114817505,0,0x0,8
tick,0x7ffd093d1d94,114833070,0,0x0,8
tick,0x7ffd093d1d94,114848423,0,0x0,8
tick,0x7ffd093d1d94,114863996,0,0x0,8
tick,0x7ffd093d1d94,114879714,0,0x0,8
tick,0x7ffd093d1d94,114895192,0,0x0,8
tick,0x7ffd093d1d94,114910025,0,0x0,8
tick,0x7ffd093d1d94,114925823,0,0x0,8
tick,0x7ffd093d1d94,114940600,0,0x0,8
tick,0x7ffd093d1d94,114956254,0,0x0,8
tick,0x7ffd093d1d94,114971288,0,0x0,8
tick,0x7ffd093d1d94,114987750,0,0x0,8
tick,0x7ffd093d1d94,115003086,0,0x0,8
tick,0x7ffd093d1d94,115018008,0,0x0,8
tick,0x7ffd093d1d94,115033616,0,0x0,8
tick,0x7ffd093d1d94,115048756,0,0x0,8
tick,0x7ffd093d1d94,115064427,0,0x0,8
tick,0x7ffd093d1d94,115080374,0,0x0,8
tick,0x7ffd093d1d94,115095385,0,0x0,8
tick,0x7ffd093d1d94,115111188,0,0x0,8
tick,0x7ffd093d1d94,115127348,0,0x0,8
tick,0x7ffd093d1d94,115142930,0,0x0,8
tick,0x7ffd093d1d94,115158477,0,0x0,8
tick,0x7ffd093d1d94,115173938,0,0x0,8
tick,0x7ffd093d1d94,115189340,0,0x0,8
tick,0x7ffd093d1d94,115205025,0,0x0,8
tick,0x7ffd093d1d94,115221041,0,0x0,8
tick,0x7ffd093d1d94,115236502,0,0x0,8
tick,0x7ffd093d1d94,115252270,0,0x0,8
tick,0x7ffd093d1d94,115267371,0,0x0,8
tick,0x7ffd093d1d94,115282720,0,0x0,8
tick,0x7ffd093d1d94,115298012,0,0x0,8
tick,0x7ffd093d1d94,115313783,0,0x0,8
tick,0x7ffd093d1d94,115329368,0,0x0,8
tick,0x7ffd093d1d94,115345177,0,0x0,8
tick,0x7ffd093d1d94,115360644,0,0x0,8
tick,0x7ffd093d1d94,115376506,0,0x0,8
tick,0x7ffd093d1d94,115392599,0,0x0,8
tick,0x7ffd093d1d94,115408020,0,0x0,8
tick,0x7ffd093d1d94,115423654,0,0x0,8
tick,0x7ffd093d1d94,115438737,0,0x0,8
tick,0x7ffd093d1d94,115454118,0,0x0,8
tick,0x7ffd093d1d94,115469314,0,0x0,8
tick,0x7ffd093d1d94,115485156,0,0x0,8
tick,0x7ffd093d1d94,115500456,0,0x0,8
tick,0x7ffd093d1d94,115516852,0,0x0,8
tick,0x7ffd093d1d94,115531685,0,0x0,8
tick,0x7ffd093d1d94,115547084,0,0x0,8
tick,0x7ffd093d1d94,115562585,0,0x0,8
tick,0x7ffd093d1d94,115578297,0,0x0,8
tick,0x7ffd093d1d94,115592965,0,0x0,8
tick,0x7ffd093d1d94,115609077,0,0x0,8
tick,0x7ffd093d1d94,115625201,0,0x0,8
tick,0x7ffd093d1d94,115640984,0,0x0,8
tick,0x7ffd093d1d94,115656132,0,0x0,8
tick,0x7ffd093d1d94,115671205,0,0x0,8
tick,0x7ffd093d1d94,115686966,0,0x0,8
tick,0x7ffd093d1d94,115702103,0,0x0,8
tick,0x7ffd093d1d94,115717747,0,0x0,8
tick,0x7ffd093d1d94,115733492,0,0x0,8
tick,0x7ffd093d1d94,115748806,0,0x0,8
tick,0x7ffd093d1d94,115763945,0,0x0,8
tick,0x7ffd093d1d94,115779371,0,0x0,8
tick,0x7ffd093d1d94,115795027,0,0x0,8
tick,0x7ffd093d1d94,115809826,0,0x0,8
tick,0x7ffd093d1d94,115825278,0,0x0,8
tick,0x7ffd093d1d94,115841365,0,0x0,8
tick,0x7ffd093d1d94,115858161,0,0x0,8
tick,0x7ffd093d1d94,115873081,0,0x0,8
tick,0x7ffd093d1d94,115889001,0,0x0,8
tick,0x7ffd093d1d94,115905084,0,0x0,8
tick,0x7ffd093d1d94,115920754,0,0x0,8
tick,0x7ffd093d1d94,115936208,0,0x0,8
tick,0x7ffd093d1d94,115951114,0,0x0,8
tick,0x7ffd093d1d94,115965840,0,0x0,8
tick,0x7ffd093d1d94,115981433,0,0x0,8
tick,0x7ffd093d1d94,115997295,0,0x0,8
tick,0x7ffd093d1d94,116012575,0,0x0,8
tick,0x7ffd093d1d94,116028232,0,0x0,8
tick,0x7ffd093d1d94,116043547,0,0x0,8
tick,0x7ffd093d1d94,116058746,0,0x0,8
tick,0x7ffd093d1d94,116074599,0,0x0,8
tick,0x7ffd093d1d94,116090103,0,0x0,8
tick,0x7ffd093d1d94,116105069,0,0x0,8
tick,0x7ffd093d1d94,116120642,0,0x0,8
tick,0x7ffd093d1d94,116136252,0,0x0,8
tick,0x7ffd093d1d94,116152634,0,0x0,8
tick,0x7ffd093d1d94,116168370,0,0x0,8
tick,0x7ffd093d1d94,116183861,0,0x0,8
tick,0x7ffd093d1d94,116199040,0,0x0,8
tick,0x7ffd093d1d94,116215004,0,0x0,8
tick,0x7ffd093d1d94,116230810,0,0x0,8
tick,0x7ffd093d1d94,116246429,0,0x0,8
tick,0x7ffd093d1d94,116261776,0,0x0,8
tick,0x7ffd093d1d94,116277730,0,0x0,8
tick,0x7ffd093d1d94,116293270,0,0x0,8
tick,0x7ffd093d1d94,116308872,0,0x0,8
tick,0x7ffd093d1d94,116324050,0,0x0,8
tick,0x7ffd093d1d94,116339985,0,0x0,8
tick,0x7ffd093d1d94,116355290,0,0x0,8
tick,0x7ffd093d1d94,116370800,0,0x0,8
tick,0x7ffd093d1d94,116385851,0,0x0,8
tick,0x7ffd093d1d94,116402141,0,0x0,8
tick,0x7ffd093d1d94,116417344,0,0x0,8
tick,0x7ffd093d1d94,116433150,0,0x0,8
tick,0x7ffd093d1d94,116448397,0,0x0,8
tick,0x7ffd093d1d94,116463979,0,0x0,8
tick,0x7ffd093d1d94,116479308,0,0x0,8
tick,0x7ffd093d1d94,116494559,0,0x0,8
tick,0x7ffd093d1d94,116510059,0,0x0,8
tick,0x7ffd093d1d94,116525439,0,0x0,8
tick,0x7ffd093d1d94,116540950,0,0x0,8
tick,0x7ffd093d1d94,116556416,0,0x0,8
tick,0x7ffd093d1d94,116571686,0,0x0,8
tick,0x7ffd093d1d94,116587046,0,0x0,8
tick,0x7ffd093d1d94,116602516,0,0x0,8
tick,0x7ffd093d1d94,116618053,0,0x0,8
tick,0x7ffd093d1d94,116633170,0,0x0,8
tick,0x7ffd093d1d94,116649038,0,0x0,8
tick,0x7ffd093d1d94,116665028,0,0x0,8
tick,0x7ffd093d1d94,116681005,0,0x0,8
tick,0x7ffd093d1d94,116695680,0,0x0,8
tick,0x7ffd093d1d94,116710873,0,0x0,8
tick,0x7ffd093d1d94,116726451,0,0x0,8
tick,0x7ffd093d1d94,116741376,0,0x0,8
tick,0x7ffd093d1d94,116756600,0,0x0,8
tick,0x7ffd093d1d94,116772346,0,0x0,8
tick,0x7ffd093d1d94,116787765,0,0x0,8
tick,0x7ffd093d1d94,116803833,0,0x0,8
tick,0x7ffd093d1d94,116819526,0,0x0,8
tick,0x7ffd093d1d94,116835053,0,0x0,8
tick,0x7ffd093d1d94,116850959,0,0x0,8
tick,0x7ffd093d1d94,116866659,0,0x0,8
tick,0x7ffd093d1d94,116881604,0,0x0,8
tick,0x7ffd093d1d94,116897513,0,0x0,8
tick,0x7ffd093d1d94,116912934,0,0x0,8
tick,0x7ffd093d1d94,116928385,0,0x0,8
tick,0x7ffd093d1d94,116943814,0,0x0,8
tick,0x7ffd093d1d94,116959795,0,0x0,8
tick,0x7ffd093d1d94,116975424,0,0x0,8
tick,0x7ffd093d1d94,116991640,0,0x0,8
tick,0x7ffd093d1d94,117006873,0,0x0,8
tick,0x7ffd093d1d94,117021809,0,0x0,8
tick,0x7ffd093d1d94,117036940,0,0x0,8
tick,0x7ffd093d1d94,117052984,0,0x0,8
tick,0x7ffd093d1d94,117069000,0,0x0,8
tick,0x7ffd093d1d94,117084866,0,0x0,8
tick,0x7ffd093d1d94,117100267,0,0x0,8
tick,0x7ffd093d1d94,117116647,0,0x0,8
tick,0x7ffd093d1d94,117132220,0,0x0,8
tick,0x7ffd093d1d94,117147951,0,0x0,8
tick,0x7ffd093d1d94,117163225,0,0x0,8
tick,0x7ffd093d1d94,117178380,0,0x0,8
tick,0x7ffd093d1d94,117194402,0,0x0,8
tick,0x7ffd093d1d94,117210052,0,0x0,8
tick,0x7ffd093d1d94,117225180,0,0x0,8
tick,0x7ffd093d1d94,117241151,0,0x0,8
tick,0x7ffd093d1d94,117256512,0,0x0,8
tick,0x7ffd093d1d94,117272626,0,0x0,8
tick,0x7ffd093d1d94,117288461,0,0x0,8
tick,0x7ffd093d1d94,117303922,0,0x0,8
tick,0x7ffd093d1d94,117319361,0,0x0,8
tick,0x7ffd093d1d94,117334799,0,0x0,8
tick,0x7ffd093d1d94,117350228,0,0x0,8
tick,0x7ffd093d1d94,117365992,0,0x0,8
tick,0x7ffd093d1d94,117381909,0,0x0,8
tick,0x7ffd093d1d94,117396897,0,0x0,8
tick,0x7ffd093d1d94,117412315,0,0x0,8
tick,0x7ffd093d1d94,117427220,0,0x0,8
tick,0x7ffd093d1d94,117442270,0,0x0,8
tick,0x7ffd093d1d94,117457232,0,0x0,8
tick,0x7ffd093d1d94,117472721,0,0x0,8
tick,0x7ffd093d1d94,117487912,0,0x0,8
tick,0x7ffd093d1d94,117503867,0,0x0,8
tick,0x7ffd093d1d94,117519617,0,0x0,8
tick,0x7ffd093d1d94,117535055,0,0x0,8
tick,0x7ffd093d1d94,117550618,0,0x0,8
tick,0x7ffd093d1d94,117565627,0,0x0,8
tick,0x7ffd093d1d94,117581584,0,0x0,8
tick,0x7ffd093d1d94,117596815,0,0x0,8
tick,0x7ffd093d1d94,117613062,0,0x0,8
tick,0x7ffd093d1d94,117628315,0,0x0,8
tick,0x7ffd093d1d94,117643271,0,0x0,8
tick,0x7ffd093d1d94,117659371,0,0x0,8
tick,0x7ffd093d1d94,117674373,0,0x0,8
tick,0x7ffd093d1d94,117689593,0,0x0,8
tick,0x7ffd093d1d94,117705177,0,0x0,8
tick,0x7ffd093d1d94,117721663,0,0x0,8
tick,0x7ffd093d1d94,117737385,0,0x0,8
tick,0x7ffd093d1d94,117753374,0,0x0,8
tick,0x7ffd093d1d94,117769346,0,0x0,8
tick,0x7ffd093d1d94,117784739,0,0x0,8
tick,0x7ffd093d1d94,117800042,0,0x0,8
tick,0x7ffd093d1d94,117815239,0,0x0,8
tick,0x7ffd093d1d94,117830480,0,0x0,8
tick,0x7ffd093d1d94,117846224,0,0x0,8
tick,0x7ffd093d1d94,117861981,0,0x0,8
tick,0x7ffd093d1d94,117877451,0,0x0,8
tick,0x7ffd093d1d94,117893472,0,0x0,8
tick,0x7ffd093d1d94,117909436,0,0x0,8
tick,0x7ffd093d1d94,117925494,0,0x0,8
tick,0x7ffd093d1d94,117941336,0,0x0,8
tick,0x7ffd093d1d94,117956727,0,0x0,8
tick,0x7ffd093d1d94,117971997,0,0x0,8
tick,0x7ffd093d1d94,117988063,0,0x0,8
tick,0x7ffd093d1d94,118003275,0,0x0,8
tick,0x7ffd093d1d94,118019228,0,0x0,8
tick,0x7ffd093d1d94,118035002,0,0x0,8
tick,0x7ffd093d1d94,118050920,0,0x0,8
tick,0x7ffd093d1d94,118066859,0,0x0,8
tick,0x7ffd093d1d94,118082042,0,0x0,8
tick,0x7ffd093d1d94,118097197,0,0x0,8
tick,0x7ffd093d1d94,118113718,0,0x0,8
tick,0x7ffd093d1d94,118129237,0,0x0,8
tick,0x7ffd093d1d94,118144479,0,0x0,8
tick,0x7ffd093d1d94,118160108,0,0x0,8
tick,0x7ffd093d1d94,118175801,0,0x0,8
tick,0x7ffd093d1d94,118191150,0,0x0,8
tick,0x7ffd093d1d94,118207188,0,0x0,8
tick,0x7ffd093d1d94,118222328,0,0x0,8
tick,0x7ffd093d1d94,118237498,0,0x0,8
tick,0x7ffd093d1d94,118252861,0,0x0,8
tick,0x7ffd093d1d94,118268394,0,0x0,8
tick,0x7ffd093d1d94,118284508,0,0x0,8
tick,0x7ffd093d1d94,118298962,0,0x0,8
tick,0x7ffd093d1d94,118314404,0,0x0,8
tick,0x7ffd093d1d94,118330450,0,0x0,8
tick,0x7ffd093d1d94,118345646,0,0x0,8
tick,0x7ffd093d1d94,118360818,0,0x0,8
tick,0x7ffd093d1d94,118376872,0,0x0,8
tick,0x7ffd093d1d94,118392414,0,0x0,8
tick,0x7ffd093d1d94,118407576,0,0x0,8
tick,0x7ffd093d1d94,118423501,0,0x0,8
tick,0x7ffd093d1d94,118438438,0,0x0,8
tick,0x7ffd093d1d94,118453616,0,0x0,8
tick,0x7ffd093d1d94,118469430,0,0x0,8
tick,0x7ffd093d1d94,118484318,0,0x0,8
tick,0x7ffd093d1d94,118499531,0,0x0,8
tick,0x7ffd093d1d94,118515171,0,0x0,8
tick,0x7ffd093d1d94,118530088,0,0x0,8
tick,0x7ffd093d1d94,118545453,0,0x0,8
tick,0x7ffd093d1d94,118560814,0,0x0,8
tick,0x7ffd093d1d94,118576063,0,0x0,8
tick,0x7ffd093d1d94,118591533,0,0x0,8
tick,0x7ffd093d1d94,118607403,0,0x0,8
tick,0x7ffd093d1d94,118623213,0,0x0,8
tick,0x7ffd093d1d94,118638639,0,0x0,8
tick,0x7ffd093d1d94,118653549,0,0x0,8
tick,0x7ffd093d1d94,118668527,0,0x0,8
tick,0x7ffd093d1d94,118684780,0,0x0,8
tick,0x7ffd093d1d94,118700945,0,0x0,8
tick,0x7ffd093d1d94,118716700,0,0x0,8
tick,0x7ffd093d1d94,118732011,0,0x0,8
tick,0x7ffd093d1d94,118747175,0,0x0,8
tick,0x7ffd093d1d94,118763116,0,0x0,8
tick,0x7ffd093d1d94,118778383,0,0x0,8
tick,0x7ffd093d1d94,118794428,0,0x0,8
tick,0x7ffd093d1d94,118810270,0,0x0,8
tick,0x7ffd093d1d94,118826080,0,0x0,8
tick,0x7ffd093d1d94,118841988,0,0x0,8
tick,0x7ffd093d1d94,118858006,0,0x0,8
tick,0x7ffd093d1d94,118873304,0,0x0,8
tick,0x7ffd093d1d94,118888543,0,0x0,8
tick,0x7ffd093d1d94,118904051,0,0x0,8
tick,0x7ffd093d1d94,118920166,0,0x0,8
tick,0x7ffd093d1d94,118936592,0,0x0,8
tick,0x7ffd093d1d94,118952709,0,0x0,8
tick,0x7ffd093d1d94,118968189,0,0x0,8
tick,0x7ffd093d1d94,118983959,0,0x0,8
tick,0x7ffd093d1d94,118998935,0,0x0,8
tick,0x7ffd093d1d94,119014792,0,0x0,8
tick,0x7ffd093d1d94,119030224,0,0x0,8
tick,0x7ffd093d1d94,119046063,0,0x0,8
tick,0x7ffd093d1d94,119060849,0,0x0,8
tick,0x7ffd093d1d94,119076384,0,0x0,8
tick,0x7ffd093d1d94,119091489,0,0x0,8
tick,0x7ffd093d1d94,119106963,0,0x0,8
tick,0x7ffd093d1d94,119121985,0,0x0,8
tick,0x7ffd093d1d94,119137407,0,0x0,8
tick,0x7ffd093d1d94,119153331,0,0x0,8
tick,0x7ffd093d1d94,119169023,0,0x0,8
tick,0x7ffd093d1d94,119184067,0,0x0,8
tick,0x7ffd093d1d94,119200533,0,0x0,8
tick,0x7ffd093d1d94,119215219,0,0x0,8
tick,0x7ffd093d1d94,119231292,0,0x0,8
tick,0x7ffd093d1d94,119246687,0,0x0,8
tick,0x7ffd093d1d94,119262332,0,0x0,8
tick,0x7ffd093d1d94,119278219,0,0x0,8
tick,0x7ffd093d1d94,119293769,0,0x0,8
tick,0x7ffd093d1d94,119309590,0,0x0,8
tick,0x7ffd093d1d94,119325420,0,0x0,8
tick,0x7ffd093d1d94,119340135,0,0x0,8
tick,0x7ffd093d1d94,119355718,0,0x0,8
tick,0x7ffd093d1d94,119371293,0,0x0,8
tick,0x7ffd093d1d94,119386340,0,0x0,8
tick,0x7ffd093d1d94,119402387,0,0x0,8
tick,0x7ffd093d1d94,119417964,0,0x0,8
tick,0x7ffd093d1d94,119433715,0,0x0,8
tick,0x7ffd093d1d94,119449102,0,0x0,8
tick,0x7ffd093d1d94,119464622,0,0x0,8
tick,0x7ffd093d1d94,119479749,0,0x0,8
tick,0x7ffd093d1d94,119495799,0,0x0,8
tick,0x7ffd093d1d94,119511512,0,0x0,8
tick,0x7ffd093d1d94,119526496,0,0x0,8
tick,0x7ffd093d1d94,119541803,0,0x0,8
tick,0x7ffd093d1d94,119557142,0,0x0,8
tick,0x7ffd093d1d94,119573040,0,0x0,8
tick,0x7ffd093d1d94,119588726,0,0x0,8
tick,0x7ffd093d1d94,119604262,0,0x0,8
tick,0x7ffd093d1d94,119620221,0,0x0,8
tick,0x7ffd093d1d94,119636016,0,0x0,8
tick,0x7ffd093d1d94,119651497,0,0x0,8
tick,0x7ffd093d1d94,119666708,0,0x0,8
tick,0x7ffd093d1d94,119682673,0,0x0,8
tick,0x7ffd093d1d94,119698055,0,0x0,8
tick,0x7ffd093d1d94,119713437,0,0x0,8
tick,0x7ffd093d1d94,119728989,0,0x0,8
tick,0x7ffd093d1d94,119744325,0,0x0,8
tick,0x7ffd093d1d94,119759769,0,0x0,8
tick,0x7ffd093d1d94,119774813,0,0x0,8
tick,0x7ffd093d1d94,119790138,0,0x0,8
tick,0x7ffd093d1d94,119806220,0,0x0,8
tick,0x7ffd093d1d94,119822436,0,0x0,8
tick,0x7ffd093d1d94,119838084,0,0x0,8
tick,0x7ffd093d1d94,119853454,0,0x0,8
tick,0x7ffd093d1d94,119869117,0,0x0,8
tick,0x7ffd093d1d94,119884526,0,0x0,8
tick,0x7ffd093d1d94,119899359,0,0x0,8
tick,0x7ffd093d1d94,119914640,0,0x0,8
tick,0x7ffd093d1d94,119930546,0,0x0,8
tick,0x7ffd093d1d94,119945944,0,0x0,8
tick,0x7ffd093d1d94,119961922,0,0x0,8
tick,0x7ffd093d1d94,119976806,0,0x0,8
tick,0x7ffd093d1d94,119992280,0,0x0,8
tick,0x7ffd093d1d94,120007652,0,0x0,8
tick,0x7ffd093d1d94,120023935,0,0x0,8
tick,0x7ffd093d1d94,120039634,0,0x0,8
tick,0x7ffd093d1d94,120054688,0,0x0,8
tick,0x7ffd093d1d94,120069552,0,0x0,8
tick,0x7ffd093d1d94,120085104,0,0x0,8
tick,0x7ffd093d1d94,120100730,0,0x0,8
tick,0x7ffd093d1d94,120115557,0,0x0,8
tick,0x7ffd093d1d94,120131215,0,0x0,8
tick,0x7ffd093d1d94,120146420,0,0x0,8
tick,0x7ffd093d1d94,120161908,0,0x0,8
tick,0x7ffd093d1d94,120177710,0,0x0,8
tick,0x7ffd093d1d94,120193655,0,0x0,8
tick,0x7ffd093d1d94,120207778,0,0x0,8
tick,0x7ffd093d1d94,120224262,0,0x0,8
tick,0x7ffd093d1d94,120239375,0,0x0,8
tick,0x7ffd093d1d94,120255780,0,0x0,8
tick,0x7ffd093d1d94,120271210,0,0x0,8
tick,0x7ffd093d1d94,120286868,0,0x0,8
tick,0x7ffd093d1d94,120302595,0,0x0,8
tick,0x7ffd093d1d94,120317250,0,0x0,8
tick,0x7ffd093d1d94,120332642,0,0x0,8
tick,0x7ffd093d1d94,120347847,0,0x0,8
tick,0x7ffd093d1d94,120363861,0,0x0,8
tick,0x7ffd093d1d94,120379304,0,0x0,8
tick,0x7ffd093d1d94,120395179,0,0x0,8
tick,0x7ffd093d1d94,120410686,0,0x0,8
tick,0x7ffd093d1d94,120426173,0,0x0,8
tick,0x7ffd093d1d94,120441826,0,0x0,8
tick,0x7ffd093d1d94,120457747,0,0x0,8
tick,0x7ffd093d1d94,120472059,0,0x0,8
tick,0x7ffd093d1d94,120488297,0,0x0,8
tick,0x7ffd093d1d94,120503743,0,0x0,8
tick,0x7ffd093d1d94,120519437,0,0x0,8
tick,0x7ffd093d1d94,120535388,0,0x0,8
tick,0x7ffd093d1d94,120551439,0,0x0,8
tick,0x7ffd093d1d94,120567455,0,0x0,8
tick,0x7ffd093d1d94,120583283,0,0x0,8
tick,0x7ffd093d1d94,120598502,0,0x0,8
tick,0x7ffd093d1d94,120613943,0,0x0,8
tick,0x7ffd093d1d94,120629463,0,0x0,8
tick,0x7ffd093d1d94,120645125,0,0x0,8
tick,0x7ffd093d1d94,120661109,0,0x0,8
tick,0x7ffd093d1d94,120676761,0,0x0,8
tick,0x7ffd093d1d94,120692851,0,0x0,8
tick,0x7ffd093d1d94,120708789,0,0x0,8
tick,0x7ffd093d1d94,120724410,0,0x0,8
tick,0x7ffd093d1d94,120740434,0,0x0,8
tick,0x7ffd093d1d94,120755119,0,0x0,8
tick,0x7ffd093d1d94,120770640,0,0x0,8
tick,0x7ffd093d1d94,120785278,0,0x0,8
tick,0x7ffd093d1d94,120801354,0,0x0,8
tick,0x7ffd093d1d94,120816068,0,0x0,8
tick,0x7ffd093d1d94,120832104,0,0x0,8
tick,0x7ffd093d1d94,120848150,0,0x0,8
tick,0x7ffd093d1d94,120864046,0,0x0,8
tick,0x7ffd093d1d94,120879317,0,0x0,8
tick,0x7ffd093d1d94,120894286,0,0x0,8
tick,0x7ffd093d1d94,120909765,0,0x0,8
tick,0x7ffd093d1d94,120925783,0,0x0,8
tick,0x7ffd093d1d94,120941747,0,0x0,8
tick,0x7ffd093d1d94,120956232,0,0x0,8
tick,0x7ffd093d1d94,120971268,0,0x0,8
tick,0x7ffd093d1d94,120987386,0,0x0,8
tick,0x7ffd093d1d94,121002837,0,0x0,8
tick,0x7ffd093d1d94,121018837,0,0x0,8
tick,0x7ffd093d1d94,121034563,0,0x0,8
tick,0x7ffd093d1d94,121050595,0,0x0,8
tick,0x7ffd093d1d94,121066507,0,0x0,8
tick,0x7ffd093d1d94,121082619,0,0x0,8
tick,0x7ffd093d1d94,121097894,0,0x0,8
tick,0x7ffd093d1d94,121113325,0,0x0,8
tick,0x7ffd093d1d94,121129378,0,0x0,8
tick,0x7ffd093d1d94,121144476,0,0x0,8
tick,0x7ffd093d1d94,121160482,0,0x0,8
tick,0x7ffd093d1d94,121175338,0,0x0,8
tick,0x7ffd093d1d94,121190299,0,0x0,8
tick,0x7ffd093d1d94,121205513,0,0x0,8
tick,0x7ffd093d1d94,121220778,0,0x0,8
tick,0x7ffd093d1d94,121237025,0,0x0,8
tick,0x7ffd093d1d94,121252397,0,0x0,8
tick,0x7ffd093d1d94,121268205,0,0x0,8
tick,0x7ffd093d1d94,121283342,0,0x0,8
tick,0x7ffd093d1d94,121298289,0,0x0,8
tick,0x7ffd093d1d94,121314004,0,0x0,8
tick,0x7ffd093d1d94,121329598,0,0x0,8
tick,0x7ffd093d1d94,121345056,0,0x0,8
tick,0x7ffd093d1d94,121360333,0,0x0,8
tick,0x7ffd093d1d94,121375926,0,0x0,8
tick,0x7ffd093d1d94,121391983,0,0x0,8
tick,0x7ffd093d1d94,121407485,0,0x0,8
tick,0x7ffd093d1d94,121422645,0,0x0,8
tick,0x7ffd093d1d94,121438224,0,0x0,8
tick,0x7ffd093d1d94,121454170,0,0x0,8
tick,0x7ffd093d1d94,121469615,0,0x0,8
tick,0x7ffd093d1d94,121485104,0,0x0,8
tick,0x7ffd093d1d94,121501373,0,0x0,8
tick,0x7ffd093d1d94,121516915,0,0x0,8
tick,0x7ffd093d1d94,121532619,0,0x0,8
tick,0x7ffd093d1d94,121548813,0,0x0,8
tick,0x7ffd093d1d94,121564860,0,0x0,8
tick,0x7ffd093d1d94,121580961,0,0x0,8
tick,0x7ffd093d1d94,121597001,0,0x0,8
tick,0x7ffd093d1d94,121612622,0,0x0,8
tick,0x7ffd093d1d94,121628237,0,0x0,8
tick,0x7ffd093d1d94,121643827,0,0x0,8
tick,0x7ffd093d1d94,121659569,0,0x0,8
tick,0x7ffd093d1d94,121674740,0,0x0,8
tick,0x7ffd093d1d94,121690033,0,0x0,8
tick,0x7ffd093d1d94,121705627,0,0x0,8
tick,0x7ffd093d1d94,121721314,0,0x0,8
tick,0x7ffd093d1d94,121736193,0,0x0,8
tick,0x7ffd093d1d94,121751492,0,0x0,8
tick,0x7ffd093d1d94,121767330,0,0x0,8
tick,0x7ffd093d1d94,121782498,0,0x0,8
tick,0x7ffd093d1d94,121798467,0,0x0,8
tick,0x7ffd093d1d94,121813700,0,0x0,8
tick,0x7ffd093d1d94,121828774,0,0x0,8
tick,0x7ffd093d1d94,121844798,0,0x0,8
tick,0x7ffd093d1d94,121860537,0,0x0,8
tick,0x7ffd093d1d94,121875777,0,0x0,8
tick,0x7ffd093d1d94,121891293,0,0x0,8
tick,0x7ffd093d1d94,121906494,0,0x0,8
tick,0x7ffd093d1d94,121922239,0,0x0,8
tick,0x7ffd093d1d94,121937887,0,0x0,8
tick,0x7ffd093d1d94,121953855,0,0x0,8
tick,0x7ffd093d1d94,121969790,0,0x0,8
tick,0x7ffd093d1d94,121984949,0,0x0,8
tick,0x7ffd093d1d94,122000739,0,0x0,8
tick,0x7ffd093d1d94,122015949,0,0x0,8
tick,0x7ffd093d1d94,122031090,0,0x0,8
tick,0x7ffd093d1d94,122047128,0,0x0,8
tick,0x7ffd093d1d94,122062377,0,0x0,8
tick,0x7ffd093d1d94,122077964,0,0x0,8
tick,0x7ffd093d1d94,122093251,0,0x0,8
tick,0x7ffd093d1d94,122108309,0,0x0,8
tick,0x7ffd093d1d94,122123520,0,0x0,8
tick,0x7ffd093d1d94,122138715,0,0x0,8
tick,0x7ffd093d1d94,122153878,0,0x0,8
tick,0x7ffd093d1d94,122169002,0,0x0,8
tick,0x7ffd093d1d94,122184477,0,0x0,8
tick,0x7ffd093d1d94,122200148,0,0x0,8
tick,0x7ffd093d1d94,122216276,0,0x0,8
tick,0x7ffd093d1d94,122232182,0,0x0,8
tick,0x7ffd093d1d94,122248236,0,0x0,8
tick,0x7ffd093d1d94,122263916,0,0x0,8
tick,0x7ffd093d1d94,122279175,0,0x0,8
tick,0x7ffd093d1d94,122294668,0,0x0,8
tick,0x7ffd093d1d94,122309844,0,0x0,8
tick,0x7ffd093d1d94,122325764,0,0x0,8
tick,0x7ffd093d1d94,122341777,0,0x0,8
tick,0x7ffd093d1d94,122358204,0,0x0,8
tick,0x7ffd093d1d94,122373114,0,0x0,8
tick,0x7ffd093d1d94,122387929,0,0x0,8
tick,0x7ffd093d1d94,122403285,0,0x0,8
tick,0x7ffd093d1d94,122419342,0,0x0,8
tick,0x7ffd093d1d94,122435266,0,0x0,8
tick,0x7ffd093d1d94,122451301,0,0x0,8
tick,0x7ffd093d1d94,122467325,0,0x0,8
tick,0x7ffd093d1d94,122483298,0,0x0,8
tick,0x7ffd093d1d94,122499476,0,0x0,8
tick,0x7ffd093d1d94,122514828,0,0x0,8
tick,0x7ffd093d1d94,122531455,0,0x0,8
tick,0x7ffd093d1d94,122547007,0,0x0,8
tick,0x7ffd093d1d94,122563179,0,0x0,8
tick,0x7ffd093d1d94,122578226,0,0x0,8
tick,0x7ffd093d1d94,122593804,0,0x0,8
tick,0x7ffd093d1d94,122609140,0,0x0,8
tick,0x7ffd093d1d94,122624785,0,0x0,8
tick,0x7ffd093d1d94,122639536,0,0x0,8
tick,0x7ffd093d1d94,122655004,0,0x0,8
tick,0x7ffd093d1d94,122670439,0,0x0,8
tick,0x7ffd093d1d94,122686217,0,0x0,8
tick,0x7ffd093d1d94,122702141,0,0x0,8
tick,0x7ffd093d1d94,122717715,0,0x0,8
tick,0x7ffd093d1d94,122733802,0,0x0,8
tick,0x7ffd093d1d94,122749324,0,0x0,8
tick,0x7ffd093d1d94,122765368,0,0x0,8
tick,0x7ffd093d1d94,122780479,0,0x0,8
tick,0x7ffd093d1d94,122796022,0,0x0,8
tick,0x7ffd093d1d94,122811706,0,0x0,8
tick,0x7ffd093d1d94,122827434,0,0x0,8
tick,0x7ffd093d1d94,122843436,0,0x0,8
tick,0x7ffd093d1d94,122859760,0,0x0,8
tick,0x7ffd093d1d94,122875035,0,0x0,8
tick,0x7ffd093d1d94,122891321,0,0x0,8
tick,0x7ffd093d1d94,122907381,0,0x0,8
tick,0x7ffd093d1d94,122923666,0,0x0,8
tick,0x7ffd093d1d94,122939583,0,0x0,8
tick,0x7ffd093d1d94,122954996,0,0x0,8
tick,0x7ffd093d1d94,122970290,0,0x0,8
tick,0x7ffd093d1d94,122986528,0,0x0,8
tick,0x7ffd093d1d94,123001787,0,0x0,8
tick,0x7ffd093d1d94,123017336,0,0x0,8
tick,0x7ffd093d1d94,123032926,0,0x0,8
tick,0x7ffd093d1d94,123048359,0,0x0,8
tick,0x7ffd093d1d94,123064544,0,0x0,8
tick,0x7ffd093d1d94,123080325,0,0x0,8
tick,0x7ffd093d1d94,123095783,0,0x0,8
tick,0x7ffd093d1d94,123111597,0,0x0,8
tick,0x7ffd093d1d94,123127233,0,0x0,8
tick,0x7ffd093d1d94,123142850,0,0x0,8
tick,0x7ffd093d1d94,123158010,0,0x0,8
tick,0x7ffd093d1d94,123173828,0,0x0,8
tick,0x7ffd093d1d94,123190137,0,0x0,8
tick,0x7ffd093d1d94,123205827,0,0x0,8
tick,0x7ffd093d1d94,123221697,0,0x0,8
tick,0x7ffd093d1d94,123238095,0,0x0,8
tick,0x7ffd093d1d94,123252962,0,0x0,8
tick,0x7ffd093d1d94,123267887,0,0x0,8
tick,0x7ffd093d1d94,123283705,0,0x0,8
tick,0x7ffd093d1d94,123299132,0,0x0,8
tick,0x7ffd093d1d94,123314281,0,0x0,8
tick,0x7ffd093d1d94,123329944,0,0x0,8
tick,0x7ffd093d1d94,123345370,0,0x0,8
tick,0x7ffd093d1d94,123360721,0,0x0,8
tick,0x7ffd093d1d94,123376829,0,0x0,8
tick,0x7ffd093d1d94,123392315,0,0x0,8
tick,0x7ffd093d1d94,123407623,0,0x0,8
tick,0x7ffd093d1d94,123423351,0,0x0,8
tick,0x7ffd093d1d94,123438699,0,0x0,8
tick,0x7ffd093d1d94,123454544,0,0x0,8
tick,0x7ffd093d1d94,123469453,0,0x0,8
tick,0x7ffd093d1d94,123485438,0,0x0,8
tick,0x7ffd093d1d94,123501311,0,0x0,8
tick,0x7ffd093d1d94,123516808,0,0x0,8
tick,0x7ffd093d1d94,123532343,0,0x0,8
tick,0x7ffd093d1d94,123548055,0,0x0,8
tick,0x7ffd093d1d94,123563659,0,0x0,8
tick,0x7ffd093d1d94,123579272,0,0x0,8
tick,0x7ffd093d1d94,123594207,0,0x0,8
tick,0x7ffd093d1d94,123609680,0,0x0,8
tick,0x7ffd093d1d94,123625684,0,0x0,8
tick,0x7ffd093d1d94,123641710,0,0x0,8
tick,0x7ffd093d1d94,123657676,0,0x0,8
tick,0x7ffd093d1d94,123674057,0,0x0,8
tick,0x7ffd093d1d94,123689798,0,0x0,8
tick,0x7ffd093d1d94,123705219,0,0x0,8
tick,0x7ffd093d1d94,123721218,0,0x0,8
tick,0x7ffd093d1d94,123737716,0,0x0,8
tick,0x7ffd093d1d94,123752709,0,0x0,8
tick,0x7ffd093d1d94,123767332,0,0x0,8
tick,0x7ffd093d1d94,123783214,0,0x0,8
tick,0x7ffd093d1d94,123799234,0,0x0,8
tick,0x7ffd093d1d94,123814729,0,0x0,8
tick,0x7ffd093d1d94,123830716,0,0x0,8
tick,0x7ffd093d1d94,123846446,0,0x0,8
tick,0x7ffd093d1d94,123861640,0,0x0,8
tick,0x7ffd093d1d94,123877173,0,0x0,8
tick,0x7ffd093d1d94,123892431,0,0x0,8
tick,0x7ffd093d1d94,123908476,0,0x0,8
tick,0x7ffd093d1d94,123923905,0,0x0,8
tick,0x7ffd093d1d94,123939511,0,0x0,8
tick,0x7ffd093d1d94,123955052,0,0x0,8
tick,0x7ffd093d1d94,123970746,0,0x0,8
tick,0x7ffd093d1d94,123985408,0,0x0,8
tick,0x7ffd093d1d94,124000434,0,0x0,8
tick,0x7ffd093d1d94,124016405,0,0x0,8
tick,0x7ffd093d1d94,124031825,0,0x0,8
tick,0x7ffd093d1d94,124046770,0,0x0,8
tick,0x7ffd093d1d94,124062377,0,0x0,8
tick,0x7ffd093d1d94,124077940,0,0x0,8
tick,0x7ffd093d1d94,124093558,0,0x0,8
tick,0x7ffd093d1d94,124109064,0,0x0,8
tick,0x7ffd093d1d94,124124324,0,0x0,8
tick,0x7ffd093d1d94,124140019,0,0x0,8
tick,0x7ffd093d1d94,124155924,0,0x0,8
tick,0x7ffd093d1d94,124171216,0,0x0,8
tick,0x7ffd093d1d94,124187591,0,0x0,8
tick,0x7ffd093d1d94,124203201,0,0x0,8
tick,0x7ffd093d1d94,124218803,0,0x0,8
tick,0x7ffd093d1d94,124234952,0,0x0,8
tick,0x7ffd093d1d94,124250441,0,0x0,8
tick,0x7ffd093d1d94,124265747,0,0x0,8
tick,0x7ffd093d1d94,124281641,0,0x0,8
tick,0x7ffd093d1d94,124297151,0,0x0,8
tick,0x7ffd093d1d94,124313317,0,0x0,8
tick,0x7ffd093d1d94,124328480,0,0x0,8
tick,0x7ffd093d1d94,124344552,0,0x0,8
tick,0x7ffd093d1d94,124359947,0,0x0,8
tick,0x7ffd093d1d94,124376016,0,0x0,8
tick,0x7ffd093d1d94,124391415,0,0x0,8
tick,0x7ffd093d1d94,124406808,0,0x0,8
tick,0x7ffd093d1d94,124422754,0,0x0,8
tick,0x7ffd093d1d94,124438232,0,0x0,8
tick,0x7ffd093d1d94,124454446,0,0x0,8
tick,0x7ffd093d1d94,124469972,0,0x0,8
tick,0x7ffd093d1d94,124485111,0,0x0,8
tick,0x7ffd093d1d94,124500236,0,0x0,8
tick,0x7ffd093d1d94,124515997,0,0x0,8
tick,0x7ffd093d1d94,124532325,0,0x0,8
tick,0x7ffd093d1d94,124546804,0,0x0,8
tick,0x7ffd093d1d94,124562720,0,0x0,8
tick,0x7ffd093d1d94,124578660,0,0x0,8
tick,0x7ffd093d1d94,124593926,0,0x0,8
tick,0x7ffd093d1d94,124609672,0,0x0,8
tick,0x7ffd093d1d94,124625668,0,0x0,8
tick,0x7ffd093d1d94,124640376,0,0x0,8
tick,0x7ffd093d1d94,124655856,0,0x0,8
tick,0x7ffd093d1d94,124672670,0,0x0,8
tick,0x7ffd093d1d94,124687546,0,0x0,8
tick,0x7ffd093d1d94,124703434,0,0x0,8
tick,0x7ffd093d1d94,124719634,0,0x0,8
tick,0x7ffd093d1d94,124736249,0,0x0,8
tick,0x7ffd093d1d94,124750772,0,0x0,8
tick,0x7ffd093d1d94,124766313,0,0x0,8
tick,0x7ffd093d1d94,124782072,0,0x0,8
tick,0x7ffd093d1d94,124797772,0,0x0,8
tick,0x7ffd093d1d94,124813345,0,0x0,8
tick,0x7ffd093d1d94,124828244,0,0x0,8
tick,0x7ffd093d1d94,124843444,0,0x0,8
tick,0x7ffd093d1d94,124858683,0,0x0,8
tick,0x7ffd093d1d94,124873982,0,0x0,8
tick,0x7ffd093d1d94,124889782,0,0x0,8
tick,0x7ffd093d1d94,124906250,0,0x0,8
tick,0x7ffd093d1d94,124920127,0,0x0,8
tick,0x7ffd093d1d94,124936170,0,0x0,8
tick,0x7ffd093d1d94,124952606,0,0x0,8
tick,0x7ffd093d1d94,124967018,0,0x0,8
tick,0x7ffd093d1d94,124982177,0,0x0,8
tick,0x7ffd093d1d94,124997540,0,0x0,8
tick,0x7ffd093d1d94,125012944,0,0x0,8
tick,0x7ffd093d1d94,125028149,0,0x0,8
tick,0x7ffd093d1d94,125043876,0,0x0,8
tick,0x7ffd093d1d94,125059406,0,0x0,8
tick,0x7ffd093d1d94,125074957,0,0x0,8
tick,0x7ffd093d1d94,125090812,0,0x0,8
tick,0x7ffd093d1d94,125106543,0,0x0,8
tick,0x7ffd093d1d94,125121985,0,0x0,8
tick,0x7ffd093d1d94,125137159,0,0x0,8
tick,0x7ffd093d1d94,125152369,0,0x0,8
tick,0x7ffd093d1d94,125168541,0,0x0,8
tick,0x7ffd093d1d94,125183635,0,0x0,8
tick,0x7ffd093d1d94,125199015,0,0x0,8
tick,0x7ffd093d1d94,125214881,0,0x0,8
tick,0x7ffd093d1d94,125230964,0,0x0,8
tick,0x7ffd093d1d94,125246368,0,0x0,8
tick,0x7ffd093d1d94,125262067,0,0x0,8
tick,0x7ffd093d1d94,125277247,0,0x0,8
tick,0x7ffd093d1d94,125292761,0,0x0,8
tick,0x7ffd093d1d94,125308604,0,0x0,8
tick,0x7ffd093d1d94,125323659,0,0x0,8
tick,0x7ffd093d1d94,125339598,0,0x0,8
tick,0x7ffd093d1d94,125354636,0,0x0,8
tick,0x7ffd093d1d94,125370258,0,0x0,8
tick,0x7ffd093d1d94,125385909,0,0x0,8
tick,0x7ffd093d1d94,125401071,0,0x0,8
tick,0x7ffd093d1d94,125416644,0,0x0,8
tick,0x7ffd093d1d94,125431305,0,0x0,8
tick,0x7ffd093d1d94,125446402,0,0x0,8
tick,0x7ffd093d1d94,125461878,0,0x0,8
tick,0x7ffd093d1d94,125477044,0,0x0,8
tick,0x7ffd093d1d94,125492613,0,0x0,8
tick,0x7ffd093d1d94,125507909,0,0x0,8
tick,0x7ffd093d1d94,125523850,0,0x0,8
tick,0x7ffd093d1d94,125539007,0,0x0,8
tick,0x7ffd093d1d94,125554557,0,0x0,8
tick,0x7ffd093d1d94,125570395,0,0x0,8
tick,0x7ffd093d1d94,125586088,0,0x0,8
tick,0x7ffd093d1d94,125601395,0,0x0,8
tick,0x7ffd093d1d94,125617156,0,0x0,8
tick,0x7ffd093d1d94,125632335,0,0x0,8
tick,0x7ffd093d1d94,125647982,0,0x0,8
tick,0x7ffd093d1d94,125663139,0,0x0,8
tick,0x7ffd093d1d94,125678414,0,0x0,8
tick,0x7ffd093d1d94,125694450,0,0x0,8
tick,0x7ffd093d1d94,125709546,0,0x0,8
tick,0x7ffd093d1d94,125725093,0,0x0,8
tick,0x7ffd093d1d94,125740494,0,0x0,8
tick,0x7ffd093d1d94,125755962,0,0x0,8
tick,0x7ffd093d1d94,125772067,0,0x0,8
tick,0x7ffd093d1d94,125788068,0,0x0,8
tick,0x7ffd093d1d94,125803730,0,0x0,8
tick,0x7ffd093d1d94,125819641,0,0x0,8
tick,0x7ffd093d1d94,125834867,0,0x0,8
tick,0x7ffd093d1d94,125850543,0,0x0,8
tick,0x7ffd093d1d94,125865997,0,0x0,8
tick,0x7ffd093d1d94,125881278,0,0x0,8
tick,0x7ffd093d1d94,125897519,0,0x0,8
tick,0x7ffd093d1d94,125912679,0,0x0,8
tick,0x7ffd093d1d94,125928249,0,0x0,8
tick,0x7ffd093d1d94,125943239,0,0x0,8
tick,0x7ffd093d1d94,125959215,0,0x0,8
tick,0x7ffd093d1d94,125975171,0,0x0,8
tick,0x7ffd093d1d94,125991198,0,0x0,8
tick,0x7ffd093d1d94,126007640,0,0x0,8
tick,0x7ffd093d1d94,126022904,0,0x0,8
tick,0x7ffd093d1d94,126038781,0,0x0,8
tick,0x7ffd093d1d94,126054817,0,0x0,8
tick,0x7ffd093d1d94,126069721,0,0x0,8
tick,0x7ffd093d1d94,126084678,0,0x0,8
tick,0x7ffd093d1d94,126100738,0,0x0,8
tick,0x7ffd093d1d94,126116236,0,0x0,8
tick,0x7ffd093d1d94,126132733,0,0x0,8
tick,0x7ffd093d1d94,126148344,0,0x0,8
tick,0x7ffd093d1d94,126163337,0,0x0,8
tick,0x7ffd093d1d94,126178359,0,0x0,8
tick,0x7ffd093d1d94,126194186,0,0x0,8
tick,0x7ffd093d1d94,126210649,0,0x0,8
tick,0x7ffd093d1d94,126225940,0,0x0,8
tick,0x7ffd093d1d94,126241422,0,0x0,8
tick,0x7ffd093d1d94,126256975,0,0x0,8
tick,0x7ffd093d1d94,126271970,0,0x0,8
tick,0x7ffd093d1d94,126287690,0,0x0,8
tick,0x7ffd093d1d94,126303481,0,0x0,8
tick,0x7ffd093d1d94,126318786,0,0x0,8
tick,0x7ffd093d1d94,126333805,0,0x0,8
tick,0x7ffd093d1d94,126349574,0,0x0,8
tick,0x7ffd093d1d94,126365286,0,0x0,8
tick,0x7ffd093d1d94,126380638,0,0x0,8
tick,0x7ffd093d1d94,126396166,0,0x0,8
tick,0x7ffd093d1d94,126411236,0,0x0,8
tick,0x7ffd093d1d94,126426458,0,0x0,8
tick,0x7ffd093d1d94,126441502,0,0x0,8
tick,0x7ffd093d1d94,126457121,0,0x0,8
tick,0x7ffd093d1d94,126472536,0,0x0,8
tick,0x7ffd093d1d94,126487774,0,0x0,8
tick,0x7ffd093d1d94,126503452,0,0x0,8
tick,0x7ffd093d1d94,126519577,0,0x0,8
tick,0x7ffd093d1d94,126535192,0,0x0,8
tick,0x7ffd093d1d94,126550423,0,0x0,8
tick,0x7ffd093d1d94,126566042,0,0x0,8
tick,0x7ffd093d1d94,126581434,0,0x0,8
tick,0x7ffd093d1d94,126597576,0,0x0,8
tick,0x7ffd093d1d94,126612959,0,0x0,8
tick,0x7ffd093d1d94,126628017,0,0x0,8
tick,0x7ffd093d1d94,126643140,0,0x0,8
tick,0x7ffd093d1d94,126658388,0,0x0,8
tick,0x7ffd093d1d94,126674056,0,0x0,8
tick,0x7ffd093d1d94,126689905,0,0x0,8
tick,0x7ffd093d1d94,126705990,0,0x0,8
tick,0x7ffd093d1d94,126721166,0,0x0,8
tick,0x7ffd093d1d94,126736898,0,0x0,8
tick,0x7ffd093d1d94,126752190,0,0x0,8
tick,0x7ffd093d1d94,126768024,0,0x0,8
tick,0x7ffd093d1d94,126783368,0,0x0,8
tick,0x7ffd093d1d94,126799369,0,0x0,8
tick,0x7ffd093d1d94,126814543,0,0x0,8
tick,0x7ffd093d1d94,126830910,0,0x0,8
tick,0x7ffd093d1d94,126845830,0,0x0,8
tick,0x7ffd093d1d94,126860959,0,0x0,8
tick,0x7ffd093d1d94,126876583,0,0x0,8
tick,0x7ffd093d1d94,126892209,0,0x0,8
tick,0x7ffd093d1d94,126908418,0,0x0,8
tick,0x7ffd093d1d94,126924008,0,0x0,8
tick,0x7ffd093d1d94,126939598,0,0x0,8
tick,0x7ffd093d1d94,126954207,0,0x0,8
tick,0x7ffd093d1d94,126970118,0,0x0,8
tick,0x7ffd093d1d94,126985658,0,0x0,8
tick,0x7ffd093d1d94,127001609,0,0x0,8
tick,0x7ffd093d1d94,127017332,0,0x0,8
tick,0x7ffd093d1d94,127033007,0,0x0,8
tick,0x7ffd093d1d94,127048305,0,0x0,8
tick,0x7ffd093d1d94,127064274,0,0x0,8
tick,0x7ffd093d1d94,127080045,0,0x0,8
tick,0x7ffd093d1d94,127095684,0,0x0,8
tick,0x7ffd093d1d94,127111719,0,0x0,8
tick,0x7ffd093d1d94,127126848,0,0x0,8
tick,0x7ffd093d1d94,127142447,0,0x0,8
tick,0x7ffd093d1d94,127157971,0,0x0,8
tick,0x7ffd093d1d94,127172938,0,0x0,8
tick,0x7ffd093d1d94,127188768,0,0x0,8
tick,0x7ffd093d1d94,127205175,0,0x0,8
tick,0x7ffd093d1d94,127220128,0,0x0,8
tick,0x7ffd093d1d94,127235927,0,0x0,8
tick,0x7ffd093d1d94,127251181,0,0x0,8
tick,0x7ffd093d1d94,127266661,0,0x0,8
tick,0x7ffd093d1d94,127282349,0,0x0,8
tick,0x7ffd093d1d94,127297309,0,0x0,8
tick,0x7ffd093d1d94,127312230,0,0x0,8
tick,0x7ffd093d1d94,127327075,0,0x0,8
tick,0x7ffd093d1d94,127342622,0,0x0,8
tick,0x7ffd093d1d94,127358217,0,0x0,8
tick,0x7ffd093d1d94,127373848,0,0x0,8
tick,0x7ffd093d1d94,127390083,0,0x0,8
tick,0x7ffd093d1d94,127405959,0,0x0,8
tick,0x7ffd093d1d94,127422138,0,0x0,8
tick,0x7ffd093d1d94,127437843,0,0x0,8
tick,0x7ffd093d1d94,127453426,0,0x0,8
tick,0x7ffd093d1d94,127468811,0,0x0,8
tick,0x7ffd093d1d94,127484296,0,0x0,8
tick,0x7ffd093d1d94,127499896,0,0x0,8
tick,0x7ffd093d1d94,127515607,0,0x0,8
tick,0x7ffd093d1d94,127531470,0,0x0,8
tick,0x7ffd093d1d94,127546641,0,0x0,8
tick,0x7ffd093d1d94,127562451,0,0x0,8
tick,0x7ffd093d1d94,127577415,0,0x0,8
tick,0x7ffd093d1d94,127593235,0,0x0,8
tick,0x7ffd093d1d94,127608527,0,0x0,8
tick,0x7ffd093d1d94,127624211,0,0x0,8
tick,0x7ffd093d1d94,127638960,0,0x0,8
tick,0x7ffd093d1d94,127654000,0,0x0,8
tick,0x7ffd093d1d94,127669206,0,0x0,8
tick,0x7ffd093d1d94,127685132,0,0x0,8
tick,0x7ffd093d1d94,127701030,0,0x0,8
tick,0x7ffd093d1d94,127716813,0,0x0,8
tick,0x7ffd093d1d94,127732519,0,0x0,8
tick,0x7ffd093d1d94,127748222,0,0x0,8
tick,0x7ffd093d1d94,127764134,0,0x0,8
tick,0x7ffd093d1d94,127779620,0,0x0,8
tick,0x7ffd093d1d94,127795145,0,0x0,8
tick,0x7ffd093d1d94,127810312,0,0x0,8
tick,0x7ffd093d1d94,127826208,0,0x0,8
tick,0x7ffd093d1d94,127841483,0,0x0,8
tick,0x7ffd093d1d94,127856898,0,0x0,8
tick,0x7ffd093d1d94,127872619,0,0x0,8
tick,0x7ffd093d1d94,127888456,0,0x0,8
tick,0x7ffd093d1d94,127903702,0,0x0,8
tick,0x7ffd093d1d94,127919655,0,0x0,8
tick,0x7ffd093d1d94,127935662,0,0x0,8
tick,0x7ffd093d1d94,127951226,0,0x0,8
tick,0x7ffd093d1d94,127967591,0,0x0,8
tick,0x7ffd093d1d94,127982643,0,0x0,8
tick,0x7ffd093d1d94,127998090,0,0x0,8
tick,0x7ffd093d1d94,128013546,0,0x0,8
tick,0x7ffd093d1d94,128029326,0,0x0,8
tick,0x7ffd093d1d94,128045024,0,0x0,8
tick,0x7ffd093d1d94,128061282,0,0x0,8
tick,0x7ffd093d1d94,128076972,0,0x0,8
tick,0x7ffd093d1d94,128092663,0,0x0,8
tick,0x7ffd093d1d94,128107850,0,0x0,8
tick,0x7ffd093d1d94,128123437,0,0x0,8
tick,0x7ffd093d1d94,128138879,0,0x0,8
tick,0x7ffd093d1d94,128154779,0,0x0,8
tick,0x7ffd093d1d94,128170618,0,0x0,8
tick,0x7ffd093d1d94,128186249,0,0x0,8
tick,0x7ffd093d1d94,128202378,0,0x0,8
tick,0x7ffd093d1d94,128218031,0,0x0,8
tick,0x7ffd093d1d94,128233867,0,0x0,8
tick,0x7ffd093d1d94,128249364,0,0x0,8
tick,0x7ffd093d1d94,128265105,0,0x0,8
tick,0x7ffd093d1d94,128281062,0,0x0,8
tick,0x7ffd093d1d94,128296065,0,0x0,8
tick,0x7ffd093d1d94,128311420,0,0x0,8
tick,0x7ffd093d1d94,128327196,0,0x0,8
tick,0x7ffd093d1d94,128342427,0,0x0,8
tick,0x7ffd093d1d94,128358191,0,0x0,8
tick,0x7ffd093d1d94,128373993,0,0x0,8
tick,0x7ffd093d1d94,128390298,0,0x0,8
tick,0x7ffd093d1d94,128405153,0,0x0,8
tick,0x7ffd093d1d94,128420515,0,0x0,8
tick,0x7ffd093d1d94,128436399,0,0x0,8
tick,0x7ffd093d1d94,128452611,0,0x0,8
tick,0x7ffd093d1d94,128468710,0,0x0,8
tick,0x7ffd093d1d94,128484103,0,0x0,8
tick,0x7ffd093d1d94,128500210,0,0x0,8
tick,0x7ffd093d1d94,128515932,0,0x0,8
tick,0x7ffd093d1d94,128531617,0,0x0,8
tick,0x7ffd093d1d94,128546893,0,0x0,8
tick,0x7ffd093d1d94,128562037,0,0x0,8
tick,0x7ffd093d1d94,128577755,0,0x0,8
tick,0x7ffd093d1d94,128593754,0,0x0,8
tick,0x7ffd093d1d94,128608843,0,0x0,8
tick,0x7ffd093d1d94,128624472,0,0x0,8
tick,0x7ffd093d1d94,128640086,0,0x0,8
tick,0x7ffd093d1d94,128655978,0,0x0,8
tick,0x7ffd093d1d94,128671249,0,0x0,8
tick,0x7ffd093d1d94,128687481,0,0x0,8
tick,0x7ffd093d1d94,128703658,0,0x0,8
tick,0x7ffd093d1d94,128719743,0,0x0,8
tick,0x7ffd093d1d94,128735813,0,0x0,8
tick,0x7ffd093d1d94,128750762,0,0x0,8
tick,0x7ffd093d1d94,128766300,0,0x0,8
tick,0x7ffd093d1d94,128782019,0,0x0,8
tick,0x7ffd093d1d94,128797298,0,0x0,8
tick,0x7ffd093d1d94,128813157,0,0x0,8
tick,0x7ffd093d1d94,128828939,0,0x0,8
tick,0x7ffd093d1d94,128844543,0,0x0,8
tick,0x7ffd093d1d94,128860143,0,0x0,8
tick,0x7ffd093d1d94,128875732,0,0x0,8
tick,0x7ffd093d1d94,128891166,0,0x0,8
tick,0x7ffd093d1d94,128907105,0,0x0,8
tick,0x7ffd093d1d94,128922752,0,0x0,8
tick,0x7ffd093d1d94,128938187,0,0x0,8
tick,0x7ffd093d1d94,128954540,0,0x0,8
tick,0x7ffd093d1d94,128969743,0,0x0,8
tick,0x7ffd093d1d94,128985578,0,0x0,8
tick,0x7ffd093d1d94,129001054,0,0x0,8
tick,0x7ffd093d1d94,129016734,0,0x0,8
tick,0x7ffd093d1d94,129031869,0,0x0,8
tick,0x7ffd093d1d94,129047495,0,0x0,8
tick,0x7ffd093d1d94,129063231,0,0x0,8
tick,0x7ffd093d1d94,129078722,0,0x0,8
tick,0x7ffd093d1d94,129094337,0,0x0,8
tick,0x7ffd093d1d94,129110074,0,0x0,8
tick,0x7ffd093d1d94,129126010,0,0x0,8
tick,0x7ffd093d1d94,129141796,0,0x0,8
tick,0x7ffd093d1d94,129157223,0,0x0,8
tick,0x7ffd093d1d94,129172443,0,0x0,8
tick,0x7ffd093d1d94,129187726,0,0x0,8
tick,0x7ffd093d1d94,129203716,0,0x0,8
tick,0x7ffd093d1d94,129219665,0,0x0,8
tick,0x7ffd093d1d94,129235829,0,0x0,8
tick,0x7ffd093d1d94,129251789,0,0x0,8
tick,0x7ffd093d1d94,129267647,0,0x0,8
tick,0x7ffd093d1d94,129283108,0,0x0,8
tick,0x7ffd093d1d94,129298709,0,0x0,8
tick,0x7ffd093d1d94,129314382,0,0x0,8
tick,0x7ffd093d1d94,129329901,0,0x0,8
tick,0x7ffd093d1d94,129345331,0,0x0,8
tick,0x7ffd093d1d94,129360643,0,0x0,8
tick,0x7ffd093d1d94,129376465,0,0x0,8
tick,0x7ffd093d1d94,129392583,0,0x0,8
tick,0x7ffd093d1d94,129408507,0,0x0,8
tick,0x7ffd093d1d94,129424640,0,0x0,8
tick,0x7ffd093d1d94,129440580,0,0x0,8
tick,0x7ffd093d1d94,129455749,0,0x0,8
tick,0x7ffd093d1d94,129471606,0,0x0,8
tick,0x7ffd093d1d94,129486281,0,0x0,8
tick,0x7ffd093d1d94,129502402,0,0x0,8
tick,0x7ffd093d1d94,129518688,0,0x0,8
tick,0x7ffd093d1d94,129533973,0,0x0,8
tick,0x7ffd093d1d94,129549311,0,0x0,8
tick,0x7ffd093d1d94,129565104,0,0x0,8
tick,0x7ffd093d1d94,129580345,0,0x0,8
tick,0x7ffd093d1d94,129595986,0,0x0,8
tick,0x7ffd093d1d94,129611370,0,0x0,8
tick,0x7ffd093d1d94,129627520,0,0x0,8
tick,0x7ffd093d1d94,129642595,0,0x0,8
tick,0x7ffd093d1d94,129658256,0,0x0,8
tick,0x7ffd093d1d94,129673299,0,0x0,8
tick,0x7ffd093d1d94,129688274,0,0x0,8
tick,0x7ffd093d1d94,129704034,0,0x0,8
tick,0x7ffd093d1d94,129719629,0,0x0,8
tick,0x7ffd093d1d94,129735584,0,0x0,8
tick,0x7ffd093d1d94,129750748,0,0x0,8
tick,0x7ffd093d1d94,129766492,0,0x0,8
tick,0x7ffd093d1d94,129782389,0,0x0,8
tick,0x7ffd093d1d94,129797974,0,0x0,8
tick,0x7ffd093d1d94,129813311,0,0x0,8
tick,0x7ffd093d1d94,129828783,0,0x0,8
tick,0x7ffd093d1d94,129845020,0,0x0,8
tick,0x7ffd093d1d94,129860668,0,0x0,8
tick,0x7ffd093d1d94,129875425,0,0x0,8
tick,0x7ffd093d1d94,129891212,0,0x0,8
tick,0x7ffd093d1d94,129906734,0,0x0,8
tick,0x7ffd093d1d94,129922490,0,0x0,8
tick,0x7ffd093d1d94,129938584,0,0x0,8
tick,0x7ffd093d1d94,129954348,0,0x0,8
tick,0x7ffd093d1d94,129970414,0,0x0,8
tick,0x7ffd093d1d94,129985582,0,0x0,8
tick,0x7ffd093d1d94,130001764,0,0x0,8
tick,0x7ffd093d1d94,130018366,0,0x0,8
tick,0x7ffd093d1d94,130033916,0,0x0,8
tick,0x7ffd093d1d94,130049534,0,0x0,8
tick,0x7ffd093d1d94,130064417,0,0x0,8
tick,0x7ffd093d1d94,130080094,0,0x0,8
tick,0x7ffd093d1d94,130095701,0,0x0,8
tick,0x7ffd093d1d94,130111065,0,0x0,8
tick,0x7ffd093d1d94,130126307,0,0x0,8
tick,0x7ffd093d1d94,130141232,0,0x0,8
tick,0x7ffd093d1d94,130157128,0,0x0,8
tick,0x7ffd093d1d94,130172079,0,0x0,8
tick,0x7ffd093d1d94,130187231,0,0x0,8
tick,0x7ffd093d1d94,130202833,0,0x0,8
tick,0x7ffd093d1d94,130218577,0,0x0,8
tick,0x7ffd093d1d94,130234713,0,0x0,8
tick,0x7ffd093d1d94,130249847,0,0x0,8
tick,0x7ffd093d1d94,130265339,0,0x0,8
tick,0x7ffd093d1d94,130280743,0,0x0,8
tick,0x7ffd093d1d94,130296773,0,0x0,8
tick,0x7ffd093d1d94,130312067,0,0x0,8
tick,0x7ffd093d1d94,130327164,0,0x0,8
tick,0x7ffd093d1d94,130341973,0,0x0,8
tick,0x7ffd093d1d94,130357800,0,0x0,8
tick,0x7ffd093d1d94,130372916,0,0x0,8
tick,0x7ffd093d1d94,130388965,0,0x0,8
tick,0x7ffd093d1d94,130404977,0,0x0,8
tick,0x7ffd093d1d94,130420445,0,0x0,8
tick,0x7ffd093d1d94,130435684,0,0x0,8
tick,0x7ffd093d1d94,130451074,0,0x0,8
tick,0x7ffd093d1d94,130466462,0,0x0,8
tick,0x7ffd093d1d94,130482125,0,0x0,8
tick,0x7ffd093d1d94,130498055,0,0x0,8
tick,0x7ffd093d1d94,130513771,0,0x0,8
tick,0x7ffd093d1d94,130529797,0,0x0,8
tick,0x7ffd093d1d94,130545792,0,0x0,8
tick,0x7ffd093d1d94,130561423,0,0x0,8
tick,0x7ffd093d1d94,130577257,0,0x0,8
tick,0x7ffd093d1d94,130592851,0,0x0,8
tick,0x7ffd093d1d94,130607426,0,0x0,8
tick,0x7ffd093d1d94,130623027,0,0x0,8
tick,0x7ffd093d1d94,130638944,0,0x0,8
tick,0x7ffd093d1d94,130655306,0,0x0,8
tick,0x7ffd093d1d94,130669912,0,0x0,8
tick,0x7ffd093d1d94,130685040,0,0x0,8
tick,0x7ffd093d1d94,130700284,0,0x0,8
tick,0x7ffd093d1d94,130715821,0,0x0,8
tick,0x7ffd093d1d94,130731633,0,0x0,8
tick,0x7ffd093d1d94,130747678,0,0x0,8
tick,0x7ffd093d1d94,130763098,0,0x0,8
tick,0x7ffd093d1d94,130778153,0,0x0,8
tick,0x7ffd093d1d94,130794132,0,0x0,8
tick,0x7ffd093d1d94,130809564,0,0x0,8
tick,0x7ffd093d1d94,130825050,0,0x0,8
tick,0x7ffd093d1d94,130840410,0,0x0,8
tick,0x7ffd093d1d94,130855875,0,0x0,8
tick,0x7ffd093d1d94,130871689,0,0x0,8
tick,0x7ffd093d1d94,130886927,0,0x0,8
tick,0x7ffd093d1d94,130902142,0,0x0,8
tick,0x7ffd093d1d94,130918861,0,0x0,8
tick,0x7ffd093d1d94,130934906,0,0x0,8
tick,0x7ffd093d1d94,130950193,0,0x0,8
tick,0x7ffd093d1d94,130965318,0,0x0,8
tick,0x7ffd093d1d94,130980316,0,0x0,8
tick,0x7ffd093d1d94,130996129,0,0x0,8
tick,0x7ffd093d1d94,131011809,0,0x0,8
tick,0x7ffd093d1d94,131027471,0,0x0,8
tick,0x7ffd093d1d94,131043459,0,0x0,8
tick,0x7ffd093d1d94,131059002,0,0x0,8
tick,0x7ffd093d1d94,131074551,0,0x0,8
tick,0x7ffd093d1d94,131090099,0,0x0,8
tick,0x7ffd093d1d94,131105157,0,0x0,8
tick,0x7ffd093d1d94,131121181,0,0x0,8
tick,0x7ffd093d1d94,131136516,0,0x0,8
tick,0x7ffd093d1d94,131151588,0,0x0,8
tick,0x7ffd093d1d94,131167554,0,0x0,8
tick,0x7ffd093d1d94,131182881,0,0x0,8
tick,0x7ffd093d1d94,131198420,0,0x0,8
tick,0x7ffd093d1d94,131213703,0,0x0,8
tick,0x7ffd093d1d94,131228860,0,0x0,8
tick,0x7ffd093d1d94,131244253,0,0x0,8
tick,0x7ffd093d1d94,131259613,0,0x0,8
tick,0x7ffd093d1d94,131275283,0,0x0,8
tick,0x7ffd093d1d94,131290810,0,0x0,8
tick,0x7ffd093d1d94,131306207,0,0x0,8
tick,0x7ffd093d1d94,131322197,0,0x0,8
tick,0x7ffd093d1d94,131337790,0,0x0,8
tick,0x7ffd093d1d94,131353054,0,0x0,8
tick,0x7ffd093d1d94,131368555,0,0x0,8
tick,0x7ffd093d1d94,131383909,0,0x0,8
tick,0x7ffd093d1d94,131399454,0,0x0,8
tick,0x7ffd093d1d94,131415660,0,0x0,8
tick,0x7ffd093d1d94,131431329,0,0x0,8
tick,0x7ffd093d1d94,131447168,0,0x0,8
tick,0x7ffd093d1d94,131462776,0,0x0,8
tick,0x7ffd093d1d94,131477948,0,0x0,8
tick,0x7ffd093d1d94,131493668,0,0x0,8
tick,0x7ffd093d1d94,131509419,0,0x0,8
tick,0x7ffd093d1d94,131524801,0,0x0,8
tick,0x7ffd093d1d94,131540769,0,0x0,8
tick,0x7ffd093d1d94,131556646,0,0x0,8
tick,0x7ffd093d1d94,131572714,0,0x0,8
tick,0x7ffd093d1d94,131588412,0,0x0,8
tick,0x7ffd093d1d94,131604151,0,0x0,8
tick,0x7ffd093d1d94,131619654,0,0x0,8
tick,0x7ffd093d1d94,131635019,0,0x0,8
tick,0x7ffd093d1d94,131651022,0,0x0,8
tick,0x7ffd093d1d94,131665830,0,0x0,8
tick,0x7ffd093d1d94,131681749,0,0x0,8
tick,0x7ffd093d1d94,131697157,0,0x0,8
tick,0x7ffd093d1d94,131712370,0,0x0,8
tick,0x7ffd093d1d94,131727748,0,0x0,8
tick,0x7ffd093d1d94,131743436,0,0x0,8
tick,0x7ffd093d1d94,131759187,0,0x0,8
tick,0x7ffd093d1d94,131774521,0,0x0,8
tick,0x7ffd093d1d94,131790403,0,0x0,8
tick,0x7ffd093d1d94,131805664,0,0x0,8
tick,0x7ffd093d1d94,131821158,0,0x0,8
tick,0x7ffd093d1d94,131835937,0,0x0,8
tick,0x7ffd093d1d94,131852349,0,0x0,8
tick,0x7ffd093d1d94,131868512,0,0x0,8
tick,0x7ffd093d1d94,131885082,0,0x0,8
tick,0x7ffd093d1d94,131899594,0,0x0,8
tick,0x7ffd093d1d94,131914620,0,0x0,8
tick,0x7ffd093d1d94,131930775,0,0x0,8
tick,0x7ffd093d1d94,131946241,0,0x0,8
tick,0x7ffd093d1d94,131960947,0,0x0,8
tick,0x7ffd093d1d94,131976289,0,0x0,8
tick,0x7ffd093d1d94,131991851,0,0x0,8
tick,0x7ffd093d1d94,132007973,0,0x0,8
tick,0x7ffd093d1d94,132023190,0,0x0,8
tick,0x7ffd093d1d94,132039326,0,0x0,8
tick,0x7ffd093d1d94,132054794,0,0x0,8
tick,0x7ffd093d1d94,132070256,0,0x0,8
tick,0x7ffd093d1d94,132086056,0,0x0,8
tick,0x7ffd093d1d94,132101408,0,0x0,8
tick,0x7ffd093d1d94,132116540,0,0x0,8
tick,0x7ffd093d1d94,132132333,0,0x0,8
tick,0x7ffd093d1d94,132148182,0,0x0,8
tick,0x7ffd093d1d94,132163459,0,0x0,8
tick,0x7ffd093d1d94,132179377,0,0x0,8
tick,0x7ffd093d1d94,132195738,0,0x0,8
tick,0x7ffd093d1d94,132210994,0,0x0,8
tick,0x7ffd093d1d94,132226683,0,0x0,8
tick,0x7ffd093d1d94,132241380,0,0x0,8
tick,0x7ffd093d1d94,132257387,0,0x0,8
tick,0x7ffd093d1d94,132272707,0,0x0,8
tick,0x7ffd093d1d94,132288364,0,0x0,8
tick,0x7ffd093d1d94,132303762,0,0x0,8
tick,0x7ffd093d1d94,132320068,0,0x0,8
tick,0x7ffd093d1d94,132334917,0,0x0,8
tick,0x7ffd093d1d94,132350331,0,0x0,8
tick,0x7ffd093d1d94,132365850,0,0x0,8
tick,0x7ffd093d1d94,132381584,0,0x0,8
tick,0x7ffd093d1d94,132397257,0,0x0,8
tick,0x7ffd093d1d94,132412432,0,0x0,8
tick,0x7ffd093d1d94,132427883,0,0x0,8
tick,0x7ffd093d1d94,132443639,0,0x0,8
tick,0x7ffd093d1d94,132459504,0,0x0,8
tick,0x7ffd093d1d94,132475512,0,0x0,8
tick,0x7ffd093d1d94,132490741,0,0x0,8
tick,0x7ffd093d1d94,132505809,0,0x0,8
tick,0x7ffd093d1d94,132521780,0,0x0,8
tick,0x7ffd093d1d94,132537610,0,0x0,8
tick,0x7ffd093d1d94,132553374,0,0x0,8
tick,0x7ffd093d1d94,132568889,0,0x0,8
tick,0x7ffd093d1d94,132584123,0,0x0,8
tick,0x7ffd093d1d94,132599609,0,0x0,8
tick,0x7ffd093d1d94,132615554,0,0x0,8
tick,0x7ffd093d1d94,132631008,0,0x0,8
tick,0x7ffd093d1d94,132646747,0,0x0,8
tick,0x7ffd093d1d94,132661817,0,0x0,8
tick,0x7ffd093d1d94,132677523,0,0x0,8
tick,0x7ffd093d1d94,132693292,0,0x0,8
tick,0x7ffd093d1d94,132708623,0,0x0,8
tick,0x7ffd093d1d94,132723546,0,0x0,8
tick,0x7ffd093d1d94,132738835,0,0x0,8
tick,0x7ffd093d1d94,132754168,0,0x0,8
tick,0x7ffd093d1d94,132769173,0,0x0,8
tick,0x7ffd093d1d94,132784683,0,0x0,8
tick,0x7ffd093d1d94,132801194,0,0x0,8
tick,0x7ffd093d1d94,132816055,0,0x0,8
tick,0x7ffd093d1d94,132832251,0,0x0,8
tick,0x7ffd093d1d94,132847408,0,0x0,8
tick,0x7ffd093d1d94,132862838,0,0x0,8
tick,0x7ffd093d1d94,132878917,0,0x0,8
tick,0x7ffd093d1d94,132893524,0,0x0,8
tick,0x7ffd093d1d94,132909297,0,0x0,8
tick,0x7ffd093d1d94,132925424,0,0x0,8
tick,0x7ffd093d1d94,132940506,0,0x0,8
tick,0x7ffd093d1d94,132955635,0,0x0,8
tick,0x7ffd093d1d94,132971257,0,0x0,8
tick,0x7ffd093d1d94,132986774,0,0x0,8
tick,0x7ffd093d1d94,133001955,0,0x0,8
tick,0x7ffd093d1d94,133018037,0,0x0,8
tick,0x7ffd093d1d94,133033697,0,0x0,8
tick,0x7ffd093d1d94,133049276,0,0x0,8
tick,0x7ffd093d1d94,133065059,0,0x0,8
tick,0x7ffd093d1d94,133081039,0,0x0,8
tick,0x7ffd093d1d94,133097168,0,0x0,8
tick,0x7ffd093d1d94,133112479,0,0x0,8
tick,0x7ffd093d1d94,133127946,0,0x0,8
tick,0x7ffd093d1d94,133142990,0,0x0,8
tick,0x7ffd093d1d94,133159054,0,0x0,8
tick,0x7ffd093d1d94,133174613,0,0x0,8
tick,0x7ffd093d1d94,133190159,0,0x0,8
tick,0x7ffd093d1d94,133205951,0,0x0,8
tick,0x7ffd093d1d94,133221168,0,0x0,8
tick,0x7ffd093d1d94,133236887,0,0x0,8
tick,0x7ffd093d1d94,133252856,0,0x0,8
tick,0x7ffd093d1d94,133268016,0,0x0,8
tick,0x7ffd093d1d94,133283953,0,0x0,8
tick,0x7ffd093d1d94,133298909,0,0x0,8
tick,0x7ffd093d1d94,133314495,0,0x0,8
tick,0x7ffd093d1d94,133329560,0,0x0,8
tick,0x7ffd093d1d94,133345245,0,0x0,8
tick,0x7ffd093d1d94,133360514,0,0x0,8
tick,0x7ffd093d1d94,133376045,0,0x0,8
tick,0x7ffd093d1d94,133392107,0,0x0,8
tick,0x7ffd093d1d94,133408151,0,0x0,8
tick,0x7ffd093d1d94,133423307,0,0x0,8
tick,0x7ffd093d1d94,133438337,0,0x0,8
tick,0x7ffd093d1d94,133453200,0,0x0,8
tick,0x7ffd093d1d94,133468651,0,0x0,8
tick,0x7ffd093d1d94,133484833,0,0x0,8
tick,0x7ffd093d1d94,133501338,0,0x0,8
tick,0x7ffd093d1d94,133516776,0,0x0,8
tick,0x7ffd093d1d94,133532765,0,0x0,8
tick,0x7ffd093d1d94,133548033,0,0x0,8
tick,0x7ffd093d1d94,133563975,0,0x0,8
tick,0x7ffd093d1d94,133579407,0,0x0,8
tick,0x7ffd093d1d94,133595099,0,0x0,8
tick,0x7ffd093d1d94,133611217,0,0x0,8
tick,0x7ffd093d1d94,133626843,0,0x0,8
tick,0x7ffd093d1d94,133642616,0,0x0,8
tick,0x7ffd093d1d94,133658084,0,0x0,8
tick,0x7ffd093d1d94,133673165,0,0x0,8
tick,0x7ffd093d1d94,133688150,0,0x0,8
tick,0x7ffd093d1d94,133703789,0,0x0,8
tick,0x7ffd093d1d94,133719072,0,0x0,8
tick,0x7ffd093d1d94,133735087,0,0x0,8
tick,0x7ffd093d1d94,133750546,0,0x0,8
tick,0x7ffd093d1d94,133765496,0,0x0,8
tick,0x7ffd093d1d94,133781130,0,0x0,8
tick,0x7ffd093d1d94,133796386,0,0x0,8
tick,0x7ffd093d1d94,133811979,0,0x0,8
tick,0x7ffd093d1d94,133827020,0,0x0,8
tick,0x7ffd093d1d94,133842253,0,0x0,8
tick,0x7ffd093d1d94,133857346,0,0x0,8
tick,0x7ffd093d1d94,133872518,0,0x0,8
tick,0x7ffd093d1d94,133887723,0,0x0,8
tick,0x7ffd093d1d94,133903624,0,0x0,8
tick,0x7ffd093d1d94,133918632,0,0x0,8
tick,0x7ffd093d1d94,133934724,0,0x0,8
tick,0x7ffd093d1d94,133950234,0,0x0,8
tick,0x7ffd093d1d94,133966524,0,0x0,8
tick,0x7ffd093d1d94,133982710,0,0x0,8
tick,0x7ffd093d1d94,133998297,0,0x0,8
tick,0x7ffd093d1d94,134014408,0,0x0,8
tick,0x7ffd093d1d94,134029794,0,0x0,8
tick,0x7ffd093d1d94,134045758,0,0x0,8
tick,0x7ffd093d1d94,134061734,0,0x0,8
tick,0x7ffd093d1d94,134077876,0,0x0,8
tick,0x7ffd093d1d94,134093268,0,0x0,8
tick,0x7ffd093d1d94,134108976,0,0x0,8
tick,0x7ffd093d1d94,134124348,0,0x0,8
tick,0x7ffd093d1d94,134140268,0,0x0,8
tick,0x7ffd093d1d94,134156286,0,0x0,8
tick,0x7ffd093d1d94,134171758,0,0x0,8
tick,0x7ffd093d1d94,134186998,0,0x0,8
tick,0x7ffd093d1d94,134202357,0,0x0,8
tick,0x7ffd093d1d94,134218134,0,0x0,8
tick,0x7ffd093d1d94,134234213,0,0x0,8
tick,0x7ffd093d1d94,134249439,0,0x0,8
tick,0x7ffd093d1d94,134265398,0,0x0,8
tick,0x7ffd093d1d94,134280736,0,0x0,8
tick,0x7ffd093d1d94,134296654,0,0x0,8
tick,0x7ffd093d1d94,134311860,0,0x0,8
tick,0x7ffd093d1d94,134327311,0,0x0,8
tick,0x7ffd093d1d94,134343317,0,0x0,8
tick,0x7ffd093d1d94,134358937,0,0x0,8
tick,0x7ffd093d1d94,134374526,0,0x0,8
tick,0x7ffd093d1d94,134389823,0,0x0,8
tick,0x7ffd093d1d94,134405244,0,0x0,8
tick,0x7ffd093d1d94,134420304,0,0x0,8
tick,0x7ffd093d1d94,134435984,0,0x0,8
tick,0x7ffd093d1d94,134452110,0,0x0,8
tick,0x7ffd093d1d94,134467636,0,0x0,8
tick,0x7ffd093d1d94,134483728,0,0x0,8
tick,0x7ffd093d1d94,134499181,0,0x0,8
tick,0x7ffd093d1d94,134514246,0,0x0,8
tick,0x7ffd093d1d94,134529857,0,0x0,8
tick,0x7ffd093d1d94,134545033,0,0x0,8
tick,0x7ffd093d1d94,134560309,0,0x0,8
tick,0x7ffd093d1d94,134575513,0,0x0,8
tick,0x7ffd093d1d94,134590982,0,0x0,8
tick,0x7ffd093d1d94,134606669,0,0x0,8
tick,0x7ffd093d1d94,134622242,0,0x0,8
tick,0x7ffd093d1d94,134637614,0,0x0,8
tick,0x7ffd093d1d94,134653546,0,0x0,8
tick,0x7ffd093d1d94,134669731,0,0x0,8
tick,0x7ffd093d1d94,134685328,0,0x0,8
tick,0x7ffd093d1d94,134701329,0,0x0,8
tick,0x7ffd093d1d94,134716767,0,0x0,8
tick,0x7ffd093d1d94,134732547,0,0x0,8
tick,0x7ffd093d1d94,134748546,0,0x0,8
tick,0x7ffd093d1d94,134763595,0,0x0,8
tick,0x7ffd093d1d94,134779460,0,0x0,8
tick,0x7ffd093d1d94,134795326,0,0x0,8
tick,0x7ffd093d1d94,134810359,0,0x0,8
tick,0x7ffd093d1d94,134826074,0,0x0,8
tick,0x7ffd093d1d94,134840838,0,0x0,8
tick,0x7ffd093d1d94,134856559,0,0x0,8
tick,0x7ffd093d1d94,134872190,0,0x0,8
tick,0x7ffd093d1d94,134887000,0,0x0,8
tick,0x7ffd093d1d94,134902943,0,0x0,8
tick,0x7ffd093d1d94,134917982,0,0x0,8
tick,0x7ffd093d1d94,134933416,0,0x0,8
tick,0x7ffd093d1d94,134949347,0,0x0,8
tick,0x7ffd093d1d94,134965124,0,0x0,8
tick,0x7ffd093d1d94,134980516,0,0x0,8
tick,0x7ffd093d1d94,134996008,0,0x0,8
tick,0x7ffd093d1d94,135011597,0,0x0,8
tick,0x7ffd093d1d94,135026896,0,0x0,8
tick,0x7ffd093d1d94,135043170,0,0x0,8
tick,0x7ffd093d1d94,135058899,0,0x0,8
tick,0x7ffd093d1d94,135073918,0,0x0,8
tick,0x7ffd093d1d94,135089625,0,0x0,8
tick,0x7ffd093d1d94,135105001,0,0x0,8
tick,0x7ffd093d1d94,135120968,0,0x0,8
tick,0x7ffd093d1d94,135136859,0,0x0,8
tick,0x7ffd093d1d94,135152402,0,0x0,8
tick,0x7ffd093d1d94,135167225,0,0x0,8
tick,0x7ffd093d1d94,135182434,0,0x0,8
tick,0x7ffd093d1d94,135197953,0,0x0,8
tick,0x7ffd093d1d94,135213391,0,0x0,8
tick,0x7ffd093d1d94,135229176,0,0x0,8
tick,0x7ffd093d1d94,135244429,0,0x0,8
tick,0x7ffd093d1d94,135259491,0,0x0,8
tick,0x7ffd093d1d94,135275240,0,0x0,8
tick,0x7ffd093d1d94,135291318,0,0x0,8
tick,0x7ffd093d1d94,135307369,0,0x0,8
tick,0x7ffd093d1d94,135323015,0,0x0,8
tick,0x7ffd093d1d94,135338779,0,0x0,8
tick,0x7ffd093d1d94,135354595,0,0x0,8
tick,0x7ffd093d1d94,135370446,0,0x0,8
tick,0x7ffd093d1d94,135386175,0,0x0,8
tick,0x7ffd093d1d94,135402484,0,0x0,8
tick,0x7ffd093d1d94,135418013,0,0x0,8
tick,0x7ffd093d1d94,135433679,0,0x0,8
tick,0x7ffd093d1d94,135449067,0,0x0,8
tick,0x7ffd093d1d94,135464179,0,0x0,8
tick,0x7ffd093d1d94,135479804,0,0x0,8
tick,0x7ffd093d1d94,135495214,0,0x0,8
tick,0x7ffd093d1d94,135510430,0,0x0,8
tick,0x7ffd093d1d94,135526179,0,0x0,8
tick,0x7ffd093d1d94,135541632,0,0x0,8
tick,0x7ffd093d1d94,135557280,0,0x0,8
tick,0x7ffd093d1d94,135573191,0,0x0,8
tick,0x7ffd093d1d94,135588747,0,0x0,8
tick,0x7ffd093d1d94,135604028,0,0x0,8
tick,0x7ffd093d1d94,135619851,0,0x0,8
tick,0x7ffd093d1d94,135635949,0,0x0,8
tick,0x7ffd093d1d94,135651456,0,0x0,8
tick,0x7ffd093d1d94,135666937,0,0x0,8
tick,0x7ffd093d1d94,135683274,0,0x0,8
tick,0x7ffd093d1d94,135699068,0,0x0,8
tick,0x7ffd093d1d94,135715168,0,0x0,8
tick,0x7ffd093d1d94,135730930,0,0x0,8
tick,0x7ffd093d1d94,135745539,0,0x0,8
tick,0x7ffd093d1d94,135760159,0,0x0,8
tick,0x7ffd093d1d94,135775871,0,0x0,8
tick,0x7ffd093d1d94,135791528,0,0x0,8
tick,0x7ffd093d1d94,135806518,0,0x0,8
tick,0x7ffd093d1d94,135822690,0,0x0,8
tick,0x7ffd093d1d94,135837381,0,0x0,8
tick,0x7ffd093d1d94,135852951,0,0x0,8
tick,0x7ffd093d1d94,135867953,0,0x0,8
tick,0x7ffd093d1d94,135883136,0,0x0,8
tick,0x7ffd093d1d94,135898215,0,0x0,8
tick,0x7ffd093d1d94,135913791,0,0x0,8
tick,0x7ffd093d1d94,135929965,0,0x0,8
tick,0x7ffd093d1d94,135944979,0,0x0,8
tick,0x7ffd093d1d94,135960403,0,0x0,8
tick,0x7ffd093d1d94,135975997,0,0x0,8
tick,0x7ffd093d1d94,135991156,0,0x0,8
tick,0x7ffd093d1d94,136006727,0,0x0,8
tick,0x7ffd093d1d94,136022372,0,0x0,8
tick,0x7ffd093d1d94,136037081,0,0x0,8
tick,0x7ffd093d1d94,136052434,0,0x0,8
tick,0x7ffd093d1d94,136067997,0,0x0,8
tick,0x7ffd093d1d94,136083604,0,0x0,8
tick,0x7ffd093d1d94,136100266,0,0x0,8
tick,0x7ffd093d1d94,136116102,0,0x0,8
tick,0x7ffd093d1d94,136131252,0,0x0,8
tick,0x7ffd093d1d94,136146937,0,0x0,8
tick,0x7ffd093d1d94,136162980,0,0x0,8
tick,0x7ffd093d1d94,136177798,0,0x0,8
tick,0x7ffd093d1d94,136193092,0,0x0,8
tick,0x7ffd093d1d94,136208503,0,0x0,8
tick,0x7ffd093d1d94,136223879,0,0x0,8
tick,0x7ffd093d1d94,136238831,0,0x0,8
tick,0x7ffd093d1d94,136254150,0,0x0,8
tick,0x7ffd093d1d94,136270513,0,0x0,8
tick,0x7ffd093d1d94,136285834,0,0x0,8
tick,0x7ffd093d1d94,136301171,0,0x0,8
tick,0x7ffd093d1d94,136316873,0,0x0,8
tick,0x7ffd093d1d94,136333074,0,0x0,8
tick,0x7ffd093d1d94,136348403,0,0x0,8
tick,0x7ffd093d1d94,136364016,0,0x0,8
tick,0x7ffd093d1d94,136380126,0,0x0,8
tick,0x7ffd093d1d94,136395573,0,0x0,8
tick,0x7ffd093d1d94,136410772,0,0x0,8
tick,0x7ffd093d1d94,136426523,0,0x0,8
tick,0x7ffd093d1d94,136442833,0,0x0,8
tick,0x7ffd093d1d94,136458709,0,0x0,8
tick,0x7ffd093d1d94,136473995,0,0x0,8
tick,0x7ffd093d1d94,136488724,0,0x0,8
tick,0x7ffd093d1d94,136504658,0,0x0,8
tick,0x7ffd093d1d94,136520125,0,0x0,8
tick,0x7ffd093d1d94,136535536,0,0x0,8
tick,0x7ffd093d1d94,136551243,0,0x0,8
tick,0x7ffd093d1d94,136566657,0,0x0,8
tick,0x7ffd093d1d94,136582241,0,0x0,8
tick,0x7ffd093d1d94,136597298,0,0x0,8
tick,0x7ffd093d1d94,136612541,0,0x0,8
tick,0x7ffd093d1d94,136627843,0,0x0,8
tick,0x7ffd093d1d94,136643541,0,0x0,8
tick,0x7ffd093d1d94,136659038,0,0x0,8
tick,0x7ffd093d1d94,136674625,0,0x0,8
tick,0x7ffd093d1d94,136689736,0,0x0,8
tick,0x7ffd093d1d94,136704749,0,0x0,8
tick,0x7ffd093d1d94,136720233,0,0x0,8
tick,0x7ffd093d1d94,136735822,0,0x0,8
tick,0x7ffd093d1d94,136751338,0,0x0,8
tick,0x7ffd093d1d94,136767020,0,0x0,8
tick,0x7ffd093d1d94,136781894,0,0x0,8
tick,0x7ffd093d1d94,136797577,0,0x0,8
tick,0x7ffd093d1d94,136812730,0,0x0,8
tick,0x7ffd093d1d94,136828582,0,0x0,8
tick,0x7ffd093d1d94,136843703,0,0x0,8
tick,0x7ffd093d1d94,136859574,0,0x0,8
tick,0x7ffd093d1d94,136874456,0,0x0,8
tick,0x7ffd093d1d94,136890197,0,0x0,8
tick,0x7ffd093d1d94,136905015,0,0x0,8
tick,0x7ffd093d1d94,136920686,0,0x0,8
tick,0x7ffd093d1d94,136936966,0,0x0,8
tick,0x7ffd093d1d94,136952628,0,0x0,8
tick,0x7ffd093d1d94,136968855,0,0x0,8
tick,0x7ffd093d1d94,136984673,0,0x0,8
tick,0x7ffd093d1d94,137000004,0,0x0,8
tick,0x7ffd093d1d94,137015095,0,0x0,8
tick,0x7ffd093d1d94,137030122,0,0x0,8
tick,0x7ffd093d1d94,137045683,0,0x0,8
tick,0x7ffd093d1d94,137061381,0,0x0,8
tick,0x7ffd093d1d94,137076914,0,0x0,8
tick,0x7ffd093d1d94,137092432,0,0x0,8
tick,0x7ffd093d1d94,137108073,0,0x0,8
tick,0x7ffd093d1d94,137123247,0,0x0,8
tick,0x7ffd093d1d94,137139199,0,0x0,8
tick,0x7ffd093d1d94,137154815,0,0x0,8
tick,0x7ffd093d1d94,137170303,0,0x0,8
tick,0x7ffd093d1d94,137185822,0,0x0,8
tick,0x7ffd093d1d94,137201642,0,0x0,8
tick,0x7ffd093d1d94,137217254,0,0x0,8
tick,0x7ffd093d1d94,137232618,0,0x0,8
tick,0x7ffd093d1d94,137247803,0,0x0,8
tick,0x7ffd093d1d94,137263204,0,0x0,8
tick,0x7ffd093d1d94,137278263,0,0x0,8
tick,0x7ffd093d1d94,137293603,0,0x0,8
tick,0x7ffd093d1d94,137308919,0,0x0,8
tick,0x7ffd093d1d94,137324899,0,0x0,8
tick,0x7ffd093d1d94,137340454,0,0x0,8
tick,0x7ffd093d1d94,137356010,0,0x0,8
tick,0x7ffd093d1d94,137371409,0,0x0,8
tick,0x7ffd093d1d94,137386639,0,0x0,8
tick,0x7ffd093d1d94,137401866,0,0x0,8
tick,0x7ffd093d1d94,137417627,0,0x0,8
tick,0x7ffd093d1d94,137432899,0,0x0,8
tick,0x7ffd093d1d94,137448184,0,0x0,8
tick,0x7ffd093d1d94,137463772,0,0x0,8
tick,0x7ffd093d1d94,137479431,0,0x0,8
tick,0x7ffd093d1d94,137494557,0,0x0,8
tick,0x7ffd093d1d94,137510108,0,0x0,8
tick,0x7ffd093d1d94,137526194,0,0x0,8
tick,0x7ffd093d1d94,137541351,0,0x0,8
tick,0x7ffd093d1d94,137557060,0,0x0,8
tick,0x7ffd093d1d94,137572470,0,0x0,8
tick,0x7ffd093d1d94,137587838,0,0x0,8
tick,0x7ffd093d1d94,137603607,0,0x0,8
tick,0x7ffd093d1d94,137618992,0,0x0,8
tick,0x7ffd093d1d94,137634849,0,0x0,8
tick,0x7ffd093d1d94,137649637,0,0x0,8
tick,0x7ffd093d1d94,137665615,0,0x0,8
tick,0x7ffd093d1d94,137681156,0,0x0,8
tick,0x7ffd093d1d94,137696912,0,0x0,8
tick,0x7ffd093d1d94,137712459,0,0x0,8
tick,0x7ffd093d1d94,137727601,0,0x0,8
tick,0x7ffd093d1d94,137743155,0,0x0,8
tick,0x7ffd093d1d94,137758710,0,0x0,8
tick,0x7ffd093d1d94,137774043,0,0x0,8
tick,0x7ffd093d1d94,137789333,0,0x0,8
tick,0x7ffd093d1d94,137805025,0,0x0,8
tick,0x7ffd093d1d94,137819816,0,0x0,8
tick,0x7ffd093d1d94,137835753,0,0x0,8
tick,0x7ffd093d1d94,137851226,0,0x0,8
tick,0x7ffd093d1d94,137866012,0,0x0,8
tick,0x7ffd093d1d94,137881686,0,0x0,8
tick,0x7ffd093d1d94,137896489,0,0x0,8
tick,0x7ffd093d1d94,137912912,0,0x0,8
tick,0x7ffd093d1d94,137928289,0,0x0,8
tick,0x7ffd093d1d94,137943638,0,0x0,8
tick,0x7ffd093d1d94,137959455,0,0x0,8
tick,0x7ffd093d1d94,137974910,0,0x0,8
tick,0x7ffd093d1d94,137991055,0,0x0,8
tick,0x7ffd093d1d94,138006570,0,0x0,8
tick,0x7ffd093d1d94,138022946,0,0x0,8
tick,0x7ffd093d1d94,138038464,0,0x0,8
tick,0x7ffd093d1d94,138054292,0,0x0,8
tick,0x7ffd093d1d94,138069613,0,0x0,8
tick,0x7ffd093d1d94,138085401,0,0x0,8
tick,0x7ffd093d1d94,138100177,0,0x0,8
tick,0x7ffd093d1d94,138116320,0,0x0,8
tick,0x7ffd093d1d94,138131343,0,0x0,8
tick,0x7ffd093d1d94,138146406,0,0x0,8
tick,0x7ffd093d1d94,138162280,0,0x0,8
tick,0x7ffd093d1d94,138177772,0,0x0,8
tick,0x7ffd093d1d94,138193428,0,0x0,8
tick,0x7ffd093d1d94,138208587,0,0x0,8
tick,0x7ffd093d1d94,138224821,0,0x0,8
tick,0x7ffd093d1d94,138239854,0,0x0,8
tick,0x7ffd093d1d94,138255265,0,0x0,8
tick,0x7ffd093d1d94,138271145,0,0x0,8
tick,0x7ffd093d1d94,138286288,0,0x0,8
tick,0x7ffd093d1d94,138302075,0,0x0,8
tick,0x7ffd093d1d94,138317707,0,0x0,8
tick,0x7ffd093d1d94,138332993,0,0x0,8
tick,0x7ffd093d1d94,138348340,0,0x0,8
tick,0x7ffd093d1d94,138363951,0,0x0,8
tick,0x7ffd093d1d94,138379395,0,0x0,8
tick,0x7ffd093d1d94,138394309,0,0x0,8
tick,0x7ffd093d1d94,138409723,0,0x0,8
tick,0x7ffd093d1d94,138425299,0,0x0,8
tick,0x7ffd093d1d94,138441162,0,0x0,8
tick,0x7ffd093d1d94,138456722,0,0x0,8
tick,0x7ffd093d1d94,138472723,0,0x0,8
tick,0x7ffd093d1d94,138489073,0,0x0,8
tick,0x7ffd093d1d94,138504307,0,0x0,8
tick,0x7ffd093d1d94,138519631,0,0x0,8
tick,0x7ffd093d1d94,138535093,0,0x0,8
tick,0x7ffd093d1d94,138551233,0,0x0,8
tick,0x7ffd093d1d94,138566276,0,0x0,8
tick,0x7ffd093d1d94,138582128,0,0x0,8
tick,0x7ffd093d1d94,138597588,0,0x0,8
tick,0x7ffd093d1d94,138613751,0,0x0,8
tick,0x7ffd093d1d94,138629508,0,0x0,8
tick,0x7ffd093d1d94,138645847,0,0x0,8
tick,0x7ffd093d1d94,138660600,0,0x0,8
tick,0x7ffd093d1d94,138676000,0,0x0,8
tick,0x7ffd093d1d94,138692103,0,0x0,8
tick,0x7ffd093d1d94,138707866,0,0x0,8
tick,0x7ffd093d1d94,138723948,0,0x0,8
tick,0x7ffd093d1d94,138740050,0,0x0,8
tick,0x7ffd093d1d94,138755288,0,0x0,8
tick,0x7ffd093d1d94,138771224,0,0x0,8
tick,0x7ffd093d1d94,138786642,0,0x0,8
tick,0x7ffd093d1d94,138802185,0,0x0,8
tick,0x7ffd093d1d94,138817813,0,0x0,8
tick,0x7ffd093d1d94,138833284,0,0x0,8
tick,0x7ffd093d1d94,138848881,0,0x0,8
tick,0x7ffd093d1d94,138864727,0,0x0,8
tick,0x7ffd093d1d94,138880860,0,0x0,8
tick,0x7ffd093d1d94,138896633,0,0x0,8
tick,0x7ffd093d1d94,138912514,0,0x0,8
tick,0x7ffd093d1d94,138927799,0,0x0,8
tick,0x7ffd093d1d94,138943084,0,0x0,8
tick,0x7ffd093d1d94,138959086,0,0x0,8
tick,0x7ffd093d1d94,138974663,0,0x0,8
tick,0x7ffd093d1d94,138990327,0,0x0,8
tick,0x7ffd093d1d94,139005397,0,0x0,8
tick,0x7ffd093d1d94,139021835,0,0x0,8
tick,0x7ffd093d1d94,139037521,0,0x0,8
tick,0x7ffd093d1d94,139053404,0,0x0,8
tick,0x7ffd093d1d94,139068740,0,0x0,8
tick,0x7ffd093d1d94,139084579,0,0x0,8
tick,0x7ffd093d1d94,139100575,0,0x0,8
tick,0x7ffd093d1d94,139116380,0,0x0,8
tick,0x7ffd093d1d94,139131239,0,0x0,8
tick,0x7ffd093d1d94,139146862,0,0x0,8
tick,0x7ffd093d1d94,139162687,0,0x0,8
tick,0x7ffd093d1d94,139178750,0,0x0,8
tick,0x7ffd093d1d94,139194743,0,0x0,8
tick,0x7ffd093d1d94,139210349,0,0x0,8
tick,0x7ffd093d1d94,139226408,0,0x0,8
tick,0x7ffd093d1d94,139241246,0,0x0,8
tick,0x7ffd093d1d94,139257384,0,0x0,8
tick,0x7ffd093d1d94,139273281,0,0x0,8
tick,0x7ffd093d1d94,139288570,0,0x0,8
tick,0x7ffd093d1d94,139303857,0,0x0,8
tick,0x7ffd093d1d94,139319928,0,0x0,8
tick,0x7ffd093d1d94,139335243,0,0x0,8
tick,0x7ffd093d1d94,139351221,0,0x0,8
tick,0x7ffd093d1d94,139367241,0,0x0,8
tick,0x7ffd093d1d94,139382413,0,0x0,8
tick,0x7ffd093d1d94,139397690,0,0x0,8
tick,0x7ffd093d1d94,139413341,0,0x0,8
tick,0x7ffd093d1d94,139429335,0,0x0,8
tick,0x7ffd093d1d94,139445414,0,0x0,8
tick,0x7ffd093d1d94,139461097,0,0x0,8
tick,0x7ffd093d1d94,139477180,0,0x0,8
tick,0x7ffd093d1d94,139492532,0,0x0,8
tick,0x7ffd093d1d94,139507957,0,0x0,8
tick,0x7ffd093d1d94,139523546,0,0x0,8
tick,0x7ffd093d1d94,139538889,0,0x0,8
tick,0x7ffd093d1d94,139554512,0,0x0,8
tick,0x7ffd093d1d94,139570318,0,0x0,8
tick,0x7ffd093d1d94,139585801,0,0x0,8
tick,0x7ffd093d1d94,139601092,0,0x0,8
tick,0x7ffd093d1d94,139616745,0,0x0,8
tick,0x7ffd093d1d94,139632217,0,0x0,8
tick,0x7ffd093d1d94,139647909,0,0x0,8
tick,0x7ffd093d1d94,139663535,0,0x0,8
tick,0x7ffd093d1d94,139679383,0,0x0,8
tick,0x7ffd093d1d94,139694398,0,0x0,8
tick,0x7ffd093d1d94,139709973,0,0x0,8
tick,0x7ffd093d1d94,139725765,0,0x0,8
tick,0x7ffd093d1d94,139741571,0,0x0,8
tick,0x7ffd093d1d94,139756223,0,0x0,8
tick,0x7ffd093d1d94,139771997,0,0x0,8
tick,0x7ffd093d1d94,139787495,0,0x0,8
tick,0x7ffd093d1d94,139803103,0,0x0,8
tick,0x7ffd093d1d94,139818639,0,0x0,8
tick,0x7ffd093d1d94,139833575,0,0x0,8
tick,0x7ffd093d1d94,139849441,0,0x0,8
tick,0x7ffd093d1d94,139865321,0,0x0,8
tick,0x7ffd093d1d94,139881567,0,0x0,8
tick,0x7ffd093d1d94,139896877,0,0x0,8
tick,0x7ffd093d1d94,139912751,0,0x0,8
tick,0x7ffd093d1d94,139928660,0,0x0,8
tick,0x7ffd093d1d94,139944161,0,0x0,8
tick,0x7ffd093d1d94,139960266,0,0x0,8
tick,0x7ffd093d1d94,139976352,0,0x0,8
tick,0x7ffd093d1d94,139991341,0,0x0,8
tick,0x7ffd093d1d94,140006320,0,0x0,8
tick,0x7ffd093d1d94,140022375,0,0x0,8
tick,0x7ffd093d1d94,140038399,0,0x0,8
tick,0x7ffd093d1d94,140055342,0,0x0,8
tick,0x7ffd093d1d94,140069219,0,0x0,8
tick,0x7ffd093d1d94,140084767,0,0x0,8
tick,0x7ffd093d1d94,140100255,0,0x0,8
tick,0x7ffd093d1d94,140115831,0,0x0,8
tick,0x7ffd093d1d94,140131955,0,0x0,8
tick,0x7ffd093d1d94,140147582,0,0x0,8
tick,0x7ffd093d1d94,140163379,0,0x0,8
tick,0x7ffd093d1d94,140178749,0,0x0,8
tick,0x7ffd093d1d94,140194743,0,0x0,8
tick,0x7ffd093d1d94,140210187,0,0x0,8
tick,0x7ffd093d1d94,140226276,0,0x0,8
tick,0x7ffd093d1d94,140242649,0,0x0,8
tick,0x7ffd093d1d94,140257436,0,0x0,8
tick,0x7ffd093d1d94,140272097,0,0x0,8
tick,0x7ffd093d1d94,140288376,0,0x0,8
tick,0x7ffd093d1d94,140303802,0,0x0,8
tick,0x7ffd093d1d94,140319072,0,0x0,8
tick,0x7ffd093d1d94,140334546,0,0x0,8
tick,0x7ffd093d1d94,140350804,0,0x0,8
tick,0x7ffd093d1d94,140366138,0,0x0,8
tick,0x7ffd093d1d94,140381677,0,0x0,8
tick,0x7ffd093d1d94,140397062,0,0x0,8
tick,0x7ffd093d1d94,140413324,0,0x0,8
tick,0x7ffd093d1d94,140428626,0,0x0,8
tick,0x7ffd093d1d94,140444691,0,0x0,8
tick,0x7ffd093d1d94,140460424,0,0x0,8
tick,0x7ffd093d1d94,140475721,0,0x0,8
tick,0x7ffd093d1d94,140491275,0,0x0,8
tick,0x7ffd093d1d94,140507010,0,0x0,8
tick,0x7ffd093d1d94,140522597,0,0x0,8
tick,0x7ffd093d1d94,140537844,0,0x0,8
tick,0x7ffd093d1d94,140553124,0,0x0,8
tick,0x7ffd093d1d94,140568830,0,0x0,8
tick,0x7ffd093d1d94,140583488,0,0x0,8
tick,0x7ffd093d1d94,140599412,0,0x0,8
tick,0x7ffd093d1d94,140614927,0,0x0,8
tick,0x7ffd093d1d94,140630006,0,0x0,8
tick,0x7ffd093d1d94,140645815,0,0x0,8
tick,0x7ffd093d1d94,140660977,0,0x0,8
tick,0x7ffd093d1d94,140677545,0,0x0,8
tick,0x7ffd093d1d94,140692531,0,0x0,8
tick,0x7ffd093d1d94,140707733,0,0x0,8
tick,0x7ffd093d1d94,140723623,0,0x0,8
tick,0x7ffd093d1d94,140739061,0,0x0,8
tick,0x7ffd093d1d94,140753752,0,0x0,8
tick,0x7ffd093d1d94,140768998,0,0x0,8
tick,0x7ffd093d1d94,140784745,0,0x0,8
tick,0x7ffd093d1d94,140800183,0,0x0,8
tick,0x7ffd093d1d94,140815837,0,0x0,8
tick,0x7ffd093d1d94,140831386,0,0x0,8
tick,0x7ffd093d1d94,140846899,0,0x0,8
tick,0x7ffd093d1d94,140861994,0,0x0,8
tick,0x7ffd093d1d94,140877630,0,0x0,8
tick,0x7ffd093d1d94,140893403,0,0x0,8
tick,0x7ffd093d1d94,140908704,0,0x0,8
tick,0x7ffd093d1d94,140923877,0,0x0,8
tick,0x7ffd093d1d94,140939603,0,0x0,8
tick,0x7ffd093d1d94,140955837,0,0x0,8
tick,0x7ffd093d1d94,140971742,0,0x0,8
tick,0x7ffd093d1d94,140986952,0,0x0,8
tick,0x7ffd093d1d94,141002176,0,0x0,8
tick,0x7ffd093d1d94,141017714,0,0x0,8
tick,0x7ffd093d1d94,141033084,0,0x0,8
tick,0x7ffd093d1d94,141048744,0,0x0,8
tick,0x7ffd093d1d94,141063757,0,0x0,8
tick,0x7ffd093d1d94,141079906,0,0x0,8
tick,0x7ffd093d1d94,141095402,0,0x0,8
tick,0x7ffd093d1d94,141110877,0,0x0,8
tick,0x7ffd093d1d94,141126318,0,0x0,8
tick,0x7ffd093d1d94,141141858,0,0x0,8
tick,0x7ffd093d1d94,141157069,0,0x0,8
tick,0x7ffd093d1d94,141172592,0,0x0,8
tick,0x7ffd093d1d94,141187775,0,0x0,8
tick,0x7ffd093d1d94,141202835,0,0x0,8
tick,0x7ffd093d1d94,141218844,0,0x0,8
tick,0x7ffd093d1d94,141233901,0,0x0,8
tick,0x7ffd093d1d94,141249302,0,0x0,8
tick,0x7ffd093d1d94,141265391,0,0x0,8
tick,0x7ffd093d1d94,141281472,0,0x0,8
tick,0x7ffd093d1d94,141297282,0,0x0,8
tick,0x7ffd093d1d94,141312523,0,0x0,8
tick,0x7ffd093d1d94,141327880,0,0x0,8
tick,0x7ffd093d1d94,141343396,0,0x0,8
tick,0x7ffd093d1d94,141359716,0,0x0,8
tick,0x7ffd093d1d94,141376008,0,0x0,8
tick,0x7ffd093d1d94,141392266,0,0x0,8
tick,0x7ffd093d1d94,141407134,0,0x0,8
tick,0x7ffd093d1d94,141422921,0,0x0,8
tick,0x7ffd093d1d94,141438518,0,0x0,8
tick,0x7ffd093d1d94,141454470,0,0x0,8
tick,0x7ffd093d1d94,141470315,0,0x0,8
tick,0x7ffd093d1d94,141485302,0,0x0,8
tick,0x7ffd093d1d94,141500718,0,0x0,8
tick,0x7ffd093d1d94,141515897,0,0x0,8
tick,0x7ffd093d1d94,141531195,0,0x0,8
tick,0x7ffd093d1d94,141546999,0,0x0,8
tick,0x7ffd093d1d94,141562032,0,0x0,8
tick,0x7ffd093d1d94,141578235,0,0x0,8
tick,0x7ffd093d1d94,141594126,0,0x0,8
tick,0x7ffd093d1d94,141609561,0,0x0,8
tick,0x7ffd093d1d94,141625332,0,0x0,8
tick,0x7ffd093d1d94,141640809,0,0x0,8
tick,0x7ffd093d1d94,141656570,0,0x0,8
tick,0x7ffd093d1d94,141671875,0,0x0,8
tick,0x7ffd093d1d94,141687458,0,0x0,8
tick,0x7ffd093d1d94,141703339,0,0x0,8
tick,0x7ffd093d1d94,141718815,0,0x0,8
tick,0x7ffd093d1d94,141734144,0,0x0,8
tick,0x7ffd093d1d94,141750226,0,0x0,8
tick,0x7ffd093d1d94,141766240,0,0x0,8
tick,0x7ffd093d1d94,141782361,0,0x0,8
tick,0x7ffd093d1d94,141798542,0,0x0,8
tick,0x7ffd093d1d94,141813457,0,0x0,8
tick,0x7ffd093d1d94,141828533,0,0x0,8
tick,0x7ffd093d1d94,141844168,0,0x0,8
tick,0x7ffd093d1d94,141860009,0,0x0,8
tick,0x7ffd093d1d94,141875743,0,0x0,8
tick,0x7ffd093d1d94,141891694,0,0x0,8
tick,0x7ffd093d1d94,141907346,0,0x0,8
tick,0x7ffd093d1d94,141922951,0,0x0,8
tick,0x7ffd093d1d94,141938588,0,0x0,8
tick,0x7ffd093d1d94,141953963,0,0x0,8
tick,0x7ffd093d1d94,141969440,0,0x0,8
tick,0x7ffd093d1d94,141985847,0,0x0,8
tick,0x7ffd093d1d94,142001273,0,0x0,8
tick,0x7ffd093d1d94,142016694,0,0x0,8
tick,0x7ffd093d1d94,142032582,0,0x0,8
tick,0x7ffd093d1d94,142048467,0,0x0,8
tick,0x7ffd093d1d94,142064041,0,0x0,8
tick,0x7ffd093d1d94,142079831,0,0x0,8
tick,0x7ffd093d1d94,142094755,0,0x0,8
tick,0x7ffd093d1d94,142110004,0,0x0,8
tick,0x7ffd093d1d94,142125685,0,0x0,8
tick,0x7ffd093d1d94,142141627,0,0x0,8
tick,0x7ffd093d1d94,142156616,0,0x0,8
tick,0x7ffd093d1d94,142172148,0,0x0,8
tick,0x7ffd093d1d94,142188213,0,0x0,8
tick,0x7ffd093d1d94,142203820,0,0x0,8
tick,0x7ffd093d1d94,142219134,0,0x0,8
tick,0x7ffd093d1d94,142233965,0,0x0,8
tick,0x7ffd093d1d94,142249763,0,0x0,8
tick,0x7ffd093d1d94,142265769,0,0x0,8
tick,0x7ffd093d1d94,142281423,0,0x0,8
tick,0x7ffd093d1d94,142296900,0,0x0,8
tick,0x7ffd093d1d94,142312997,0,0x0,8
tick,0x7ffd093d1d94,142328413,0,0x0,8
tick,0x7ffd093d1d94,142344520,0,0x0,8
tick,0x7ffd093d1d94,142360302,0,0x0,8
tick,0x7ffd093d1d94,142375772,0,0x0,8
tick,0x7ffd093d1d94,142390679,0,0x0,8
tick,0x7ffd093d1d94,142406113,0,0x0,8
tick,0x7ffd093d1d94,142422100,0,0x0,8
tick,0x7ffd093d1d94,142437652,0,0x0,8
tick,0x7ffd093d1d94,142453083,0,0x0,8
tick,0x7ffd093d1d94,142468790,0,0x0,8
tick,0x7ffd093d1d94,142484814,0,0x0,8
tick,0x7ffd093d1d94,142500543,0,0x0,8
tick,0x7ffd093d1d94,142516532,0,0x0,8
tick,0x7ffd093d1d94,142532093,0,0x0,8
tick,0x7ffd093d1d94,142547840,0,0x0,8
tick,0x7ffd093d1d94,142564134,0,0x0,8
tick,0x7ffd093d1d94,142579256,0,0x0,8
tick,0x7ffd093d1d94,142594099,0,0x0,8
tick,0x7ffd093d1d94,142609643,0,0x0,8
tick,0x7ffd093d1d94,142625363,0,0x0,8
tick,0x7ffd093d1d94,142641048,0,0x0,8
tick,0x7ffd093d1d94,142657043,0,0x0,8
tick,0x7ffd093d1d94,142672345,0,0x0,8
tick,0x7ffd093d1d94,142687378,0,0x0,8
tick,0x7ffd093d1d94,142703201,0,0x0,8
tick,0x7ffd093d1d94,142719233,0,0x0,8
tick,0x7ffd093d1d94,142733779,0,0x0,8
tick,0x7ffd093d1d94,142749139,0,0x0,8
tick,0x7ffd093d1d94,142765651,0,0x0,8
tick,0x7ffd093d1d94,142780818,0,0x0,8
tick,0x7ffd093d1d94,142796253,0,0x0,8
tick,0x7ffd093d1d94,142811628,0,0x0,8
tick,0x7ffd093d1d94,142827617,0,0x0,8
tick,0x7ffd093d1d94,142843309,0,0x0,8
tick,0x7ffd093d1d94,142859331,0,0x0,8
tick,0x7ffd093d1d94,142875040,0,0x0,8
tick,0x7ffd093d1d94,142890830,0,0x0,8
tick,0x7ffd093d1d94,142906758,0,0x0,8
tick,0x7ffd093d1d94,142922274,0,0x0,8
tick,0x7ffd093d1d94,142938239,0,0x0,8
tick,0x7ffd093d1d94,142953934,0,0x0,8
tick,0x7ffd093d1d94,142969905,0,0x0,8
tick,0x7ffd093d1d94,142985669,0,0x0,8
tick,0x7ffd093d1d94,143001838,0,0x0,8
tick,0x7ffd093d1d94,143017100,0,0x0,8
tick,0x7ffd093d1d94,143031680,0,0x0,8
tick,0x7ffd093d1d94,143046807,0,0x0,8
tick,0x7ffd093d1d94,143062116,0,0x0,8
tick,0x7ffd093d1d94,143076894,0,0x0,8
tick,0x7ffd093d1d94,143092204,0,0x0,8
tick,0x7ffd093d1d94,143107918,0,0x0,8
tick,0x7ffd093d1d94,143123758,0,0x0,8
tick,0x7ffd093d1d94,143139636,0,0x0,8
tick,0x7ffd093d1d94,143154901,0,0x0,8
tick,0x7ffd093d1d94,143170230,0,0x0,8
tick,0x7ffd093d1d94,143185788,0,0x0,8
tick,0x7ffd093d1d94,143201876,0,0x0,8
tick,0x7ffd093d1d94,143217065,0,0x0,8
tick,0x7ffd093d1d94,143232579,0,0x0,8
tick,0x7ffd093d1d94,143248499,0,0x0,8
tick,0x7ffd093d1d94,143263737,0,0x0,8
tick,0x7ffd093d1d94,143279305,0,0x0,8
tick,0x7ffd093d1d94,143294485,0,0x0,8
tick,0x7ffd093d1d94,143310425,0,0x0,8
tick,0x7ffd093d1d94,143326073,0,0x0,8
tick,0x7ffd093d1d94,143341525,0,0x0,8
tick,0x7ffd093d1d94,143357210,0,0x0,8
tick,0x7ffd093d1d94,143372043,0,0x0,8
tick,0x7ffd093d1d94,143387443,0,0x0,8
tick,0x7ffd093d1d94,143403247,0,0x0,8
tick,0x7ffd093d1d94,143418625,0,0x0,8
tick,0x7ffd093d1d94,143434840,0,0x0,8
tick,0x7ffd093d1d94,143450984,0,0x0,8
tick,0x7ffd093d1d94,143466632,0,0x0,8
tick,0x7ffd093d1d94,143482101,0,0x0,8
tick,0x7ffd093d1d94,143498198,0,0x0,8
tick,0x7ffd093d1d94,143513961,0,0x0,8
tick,0x7ffd093d1d94,143530035,0,0x0,8
tick,0x7ffd093d1d94,143545667,0,0x0,8
tick,0x7ffd093d1d94,143561036,0,0x0,8
tick,0x7ffd093d1d94,143576548,0,0x0,8
tick,0x7ffd093d1d94,143592774,0,0x0,8
tick,0x7ffd093d1d94,143608444,0,0x0,8
tick,0x7ffd093d1d94,143624655,0,0x0,8
tick,0x7ffd093d1d94,143640070,0,0x0,8
tick,0x7ffd093d1d94,143655598,0,0x0,8
tick,0x7ffd093d1d94,143670831,0,0x0,8
tick,0x7ffd093d1d94,143686971,0,0x0,8
tick,0x7ffd093d1d94,143702786,0,0x0,8
tick,0x7ffd093d1d94,143718607,0,0x0,8
tick,0x7ffd093d1d94,143734018,0,0x0,8
tick,0x7ffd093d1d94,143749795,0,0x0,8
tick,0x7ffd093d1d94,143764043,0,0x0,8
tick,0x7ffd093d1d94,143779780,0,0x0,8
tick,0x7ffd093d1d94,143795355,0,0x0,8
tick,0x7ffd093d1d94,143810564,0,0x0,8
tick,0x7ffd093d1d94,143825995,0,0x0,8
tick,0x7ffd093d1d94,143842310,0,0x0,8
tick,0x7ffd093d1d94,143858242,0,0x0,8
tick,0x7ffd093d1d94,143874127,0,0x0,8
tick,0x7ffd093d1d94,143890012,0,0x0,8
tick,0x7ffd093d1d94,143905496,0,0x0,8
tick,0x7ffd093d1d94,143920695,0,0x0,8
tick,0x7ffd093d1d94,143935846,0,0x0,8
tick,0x7ffd093d1d94,143951483,0,0x0,8
tick,0x7ffd093d1d94,143967102,0,0x0,8
tick,0x7ffd093d1d94,143982477,0,0x0,8
tick,0x7ffd093d1d94,143997900,0,0x0,8
tick,0x7ffd093d1d94,144013835,0,0x0,8
tick,0x7ffd093d1d94,144029415,0,0x0,8
tick,0x7ffd093d1d94,144044399,0,0x0,8
tick,0x7ffd093d1d94,144059915,0,0x0,8
tick,0x7ffd093d1d94,144075685,0,0x0,8
tick,0x7ffd093d1d94,144091491,0,0x0,8
tick,0x7ffd093d1d94,144106905,0,0x0,8
tick,0x7ffd093d1d94,144122913,0,0x0,8
tick,0x7ffd093d1d94,144138232,0,0x0,8
tick,0x7ffd093d1d94,144154047,0,0x0,8
tick,0x7ffd093d1d94,144169193,0,0x0,8
tick,0x7ffd093d1d94,144185734,0,0x0,8
tick,0x7ffd093d1d94,144201527,0,0x0,8
tick,0x7ffd093d1d94,144216740,0,0x0,8
tick,0x7ffd093d1d94,144232260,0,0x0,8
tick,0x7ffd093d1d94,144247373,0,0x0,8
tick,0x7ffd093d1d94,144262860,0,0x0,8
tick,0x7ffd093d1d94,144279308,0,0x0,8
tick,0x7ffd093d1d94,144294980,0,0x0,8
tick,0x7ffd093d1d94,144310751,0,0x0,8
tick,0x7ffd093d1d94,144326373,0,0x0,8
tick,0x7ffd093d1d94,144342500,0,0x0,8
tick,0x7ffd093d1d94,144358630,0,0x0,8
tick,0x7ffd093d1d94,144374793,0,0x0,8
tick,0x7ffd093d1d94,144390633,0,0x0,8
tick,0x7ffd093d1d94,144405883,0,0x0,8
tick,0x7ffd093d1d94,144421607,0,0x0,8
tick,0x7ffd093d1d94,144437312,0,0x0,8
tick,0x7ffd093d1d94,144453436,0,0x0,8
tick,0x7ffd093d1d94,144469365,0,0x0,8
tick,0x7ffd093d1d94,144484546,0,0x0,8
tick,0x7ffd093d1d94,144500511,0,0x0,8
tick,0x7ffd093d1d94,144515846,0,0x0,8
tick,0x7ffd093d1d94,144530775,0,0x0,8
tick,0x7ffd093d1d94,144546333,0,0x0,8
tick,0x7ffd093d1d94,144561984,0,0x0,8
tick,0x7ffd093d1d94,144577342,0,0x0,8
tick,0x7ffd093d1d94,144593399,0,0x0,8
tick,0x7ffd093d1d94,144609087,0,0x0,8
tick,0x7ffd093d1d94,144624799,0,0x0,8
tick,0x7ffd093d1d94,144640233,0,0x0,8
tick,0x7ffd093d1d94,144655657,0,0x0,8
tick,0x7ffd093d1d94,144671213,0,0x0,8
tick,0x7ffd093d1d94,144686466,0,0x0,8
tick,0x7ffd093d1d94,144702083,0,0x0,8
tick,0x7ffd093d1d94,144717311,0,0x0,8
tick,0x7ffd093d1d94,144732748,0,0x0,8
tick,0x7ffd093d1d94,144748075,0,0x0,8
tick,0x7ffd093d1d94,144763947,0,0x0,8
tick,0x7ffd093d1d94,144779392,0,0x0,8
tick,0x7ffd093d1d94,144795420,0,0x0,8
tick,0x7ffd093d1d94,144811396,0,0x0,8
tick,0x7ffd093d1d94,144826793,0,0x0,8
tick,0x7ffd093d1d94,144842195,0,0x0,8
tick,0x7ffd093d1d94,144858014,0,0x0,8
tick,0x7ffd093d1d94,144873754,0,0x0,8
tick,0x7ffd093d1d94,144889238,0,0x0,8
tick,0x7ffd093d1d94,144903834,0,0x0,8
tick,0x7ffd093d1d94,144919707,0,0x0,8
tick,0x7ffd093d1d94,144935707,0,0x0,8
tick,0x7ffd093d1d94,144952718,0,0x0,8
tick,0x7ffd093d1d94,144967128,0,0x0,8
tick,0x7ffd093d1d94,144982752,0,0x0,8
tick,0x7ffd093d1d94,144999072,0,0x0,8
tick,0x7ffd093d1d94,145013967,0,0x0,8
tick,0x7ffd093d1d94,145030160,0,0x0,8
tick,0x7ffd093d1d94,145045326,0,0x0,8
tick,0x7ffd093d1d94,145060827,0,0x0,8
tick,0x7ffd093d1d94,145076548,0,0x0,8
tick,0x7ffd093d1d94,145091423,0,0x0,8
tick,0x7ffd093d1d94,145106513,0,0x0,8
tick,0x7ffd093d1d94,145121710,0,0x0,8
tick,0x7ffd093d1d94,145137905,0,0x0,8
tick,0x7ffd093d1d94,145153266,0,0x0,8
tick,0x7ffd093d1d94,145169053,0,0x0,8
tick,0x7ffd093d1d94,145190594,0,0x0,8
tick,0x7ffd093d1d94,145200356,0,0x0,8
tick,0x7ffd093d1d94,145215116,0,0x0,8
tick,0x7ffd093d1d94,145231119,0,0x0,8
tick,0x7ffd093d1d94,145246643,0,0x0,8
tick,0x7ffd093d1d94,145262013,0,0x0,8
tick,0x7ffd093d1d94,145277225,0,0x0,8
tick,0x7ffd093d1d94,145292930,0,0x0,8
tick,0x7ffd093d1d94,145308082,0,0x0,8
tick,0x7ffd093d1d94,145323599,0,0x0,8
tick,0x7ffd093d1d94,145339265,0,0x0,8
tick,0x7ffd093d1d94,145354988,0,0x0,8
tick,0x7ffd093d1d94,145370105,0,0x0,8
tick,0x7ffd093d1d94,145385820,0,0x0,8
tick,0x7ffd093d1d94,145401412,0,0x0,8
tick,0x7ffd093d1d94,145417187,0,0x0,8
tick,0x7ffd093d1d94,145432695,0,0x0,8
tick,0x7ffd093d1d94,145447834,0,0x0,8
tick,0x7ffd093d1d94,145463057,0,0x0,8
tick,0x7ffd093d1d94,145478728,0,0x0,8
tick,0x7ffd093d1d94,145494154,0,0x0,8
tick,0x7ffd093d1d94,145510009,0,0x0,8
tick,0x7ffd093d1d94,145525520,0,0x0,8
tick,0x7ffd093d1d94,145541381,0,0x0,8
tick,0x7ffd093d1d94,145557662,0,0x0,8
tick,0x7ffd093d1d94,145573169,0,0x0,8
tick,0x7ffd093d1d94,145588550,0,0x0,8
tick,0x7ffd093d1d94,145603663,0,0x0,8
tick,0x7ffd093d1d94,145618698,0,0x0,8
tick,0x7ffd093d1d94,145634602,0,0x0,8
tick,0x7ffd093d1d94,145649703,0,0x0,8
tick,0x7ffd093d1d94,145666325,0,0x0,8
tick,0x7ffd093d1d94,145682250,0,0x0,8
tick,0x7ffd093d1d94,145697932,0,0x0,8
tick,0x7ffd093d1d94,145713400,0,0x0,8
tick,0x7ffd093d1d94,145728985,0,0x0,8
tick,0x7ffd093d1d94,145744382,0,0x0,8
tick,0x7ffd093d1d94,145759781,0,0x0,8
tick,0x7ffd093d1d94,145776085,0,0x0,8
tick,0x7ffd093d1d94,145791203,0,0x0,8
tick,0x7ffd093d1d94,145806986,0,0x0,8
tick,0x7ffd093d1d94,145821843,0,0x0,8
tick,0x7ffd093d1d94,145837318,0,0x0,8
tick,0x7ffd093d1d94,145852960,0,0x0,8
tick,0x7ffd093d1d94,145869044,0,0x0,8
tick,0x7ffd093d1d94,145884392,0,0x0,8
tick,0x7ffd093d1d94,145900099,0,0x0,8
tick,0x7ffd093d1d94,145914526,0,0x0,8
tick,0x7ffd093d1d94,145929874,0,0x0,8
tick,0x7ffd093d1d94,145945843,0,0x0,8
tick,0x7ffd093d1d94,145961035,0,0x0,8
tick,0x7ffd093d1d94,145976458,0,0x0,8
tick,0x7ffd093d1d94,145992306,0,0x0,8
tick,0x7ffd093d1d94,146007122,0,0x0,8
tick,0x7ffd093d1d94,146022699,0,0x0,8
tick,0x7ffd093d1d94,146039065,0,0x0,8
tick,0x7ffd093d1d94,146055338,0,0x0,8
tick,0x7ffd093d1d94,146071327,0,0x0,8
tick,0x7ffd093d1d94,146086856,0,0x0,8
tick,0x7ffd093d1d94,146102496,0,0x0,8
tick,0x7ffd093d1d94,146117862,0,0x0,8
tick,0x7ffd093d1d94,146133733,0,0x0,8
tick,0x7ffd093d1d94,146149869,0,0x0,8
tick,0x7ffd093d1d94,146165443,0,0x0,8
tick,0x7ffd093d1d94,146180804,0,0x0,8
tick,0x7ffd093d1d94,146195774,0,0x0,8
tick,0x7ffd093d1d94,146210828,0,0x0,8
tick,0x7ffd093d1d94,146226755,0,0x0,8
tick,0x7ffd093d1d94,146242136,0,0x0,8
tick,0x7ffd093d1d94,146257606,0,0x0,8
tick,0x7ffd093d1d94,146272522,0,0x0,8
tick,0x7ffd093d1d94,146287928,0,0x0,8
tick,0x7ffd093d1d94,146302819,0,0x0,8
tick,0x7ffd093d1d94,146318227,0,0x0,8
tick,0x7ffd093d1d94,146336070,0,0x0,8
tick,0x7ffd093d1d94,146350014,0,0x0,8
tick,0x7ffd093d1d94,146366461,0,0x0,8
tick,0x7ffd093d1d94,146383334,0,0x0,8
tick,0x7ffd093d1d94,146397568,0,0x0,8
tick,0x7ffd093d1d94,146412747,0,0x0,8
tick,0x7ffd093d1d94,146428452,0,0x0,8
tick,0x7ffd093d1d94,146443654,0,0x0,8
tick,0x7ffd093d1d94,146458769,0,0x0,8
tick,0x7ffd093d1d94,146474870,0,0x0,8
tick,0x7ffd093d1d94,146490619,0,0x0,8
tick,0x7ffd093d1d94,146506311,0,0x0,8
tick,0x7ffd093d1d94,146521840,0,0x0,8
tick,0x7ffd093d1d94,146537278,0,0x0,8
tick,0x7ffd093d1d94,146552738,0,0x0,8
tick,0x7ffd093d1d94,146568079,0,0x0,8
tick,0x7ffd093d1d94,146584023,0,0x0,8
tick,0x7ffd093d1d94,146600506,0,0x0,8
tick,0x7ffd093d1d94,146616138,0,0x0,8
tick,0x7ffd093d1d94,146631496,0,0x0,8
tick,0x7ffd093d1d94,146646961,0,0x0,8
tick,0x7ffd093d1d94,146662660,0,0x0,8
tick,0x7ffd093d1d94,146678190,0,0x0,8
tick,0x7ffd093d1d94,146693631,0,0x0,8
tick,0x7ffd093d1d94,146708328,0,0x0,8
tick,0x7ffd093d1d94,146724693,0,0x0,8
tick,0x7ffd093d1d94,146739970,0,0x0,8
tick,0x7ffd093d1d94,146755495,0,0x0,8
tick,0x7ffd093d1d94,146770671,0,0x0,8
tick,0x7ffd093d1d94,146786859,0,0x0,8
tick,0x7ffd093d1d94,146802478,0,0x0,8
tick,0x7ffd093d1d94,146818559,0,0x0,8
tick,0x7ffd093d1d94,146833784,0,0x0,8
tick,0x7ffd093d1d94,146849250,0,0x0,8
tick,0x7ffd093d1d94,146864166,0,0x0,8
tick,0x7ffd093d1d94,146880088,0,0x0,8
tick,0x7ffd093d1d94,146895761,0,0x0,8
tick,0x7ffd093d1d94,146911557,0,0x0,8
tick,0x7ffd093d1d94,146927478,0,0x0,8
tick,0x7ffd093d1d94,146942823,0,0x0,8
tick,0x7ffd093d1d94,146957821,0,0x0,8
tick,0x7ffd093d1d94,146973328,0,0x0,8
tick,0x7ffd093d1d94,146988651,0,0x0,8
tick,0x7ffd093d1d94,147003900,0,0x0,8
tick,0x7ffd093d1d94,147019378,0,0x0,8
tick,0x7ffd093d1d94,147034787,0,0x0,8
tick,0x7ffd093d1d94,147050713,0,0x0,8
tick,0x7ffd093d1d94,147066416,0,0x0,8
tick,0x7ffd093d1d94,147081716,0,0x0,8
tick,0x7ffd093d1d94,147096769,0,0x0,8
tick,0x7ffd093d1d94,147112099,0,0x0,8
tick,0x7ffd093d1d94,147127552,0,0x0,8
tick,0x7ffd093d1d94,147143376,0,0x0,8
tick,0x7ffd093d1d94,147159167,0,0x0,8
tick,0x7ffd093d1d94,147175004,0,0x0,8
tick,0x7ffd093d1d94,147190107,0,0x0,8
tick,0x7ffd093d1d94,147206424,0,0x0,8
tick,0x7ffd093d1d94,147221876,0,0x0,8
tick,0x7ffd093d1d94,147237462,0,0x0,8
tick,0x7ffd093d1d94,147253198,0,0x0,8
tick,0x7ffd093d1d94,147268480,0,0x0,8
tick,0x7ffd093d1d94,147284555,0,0x0,8
tick,0x7ffd093d1d94,147300326,0,0x0,8
tick,0x7ffd093d1d94,147315892,0,0x0,8
tick,0x7ffd093d1d94,147332340,0,0x0,8
tick,0x7ffd093d1d94,147347166,0,0x0,8
tick,0x7ffd093d1d94,147363550,0,0x0,8
tick,0x7ffd093d1d94,147378610,0,0x0,8
tick,0x7ffd093d1d94,147393324,0,0x0,8
tick,0x7ffd093d1d94,147409729,0,0x0,8
tick,0x7ffd093d1d94,147424941,0,0x0,8
tick,0x7ffd093d1d94,147440597,0,0x0,8
tick,0x7ffd093d1d94,147456697,0,0x0,8
tick,0x7ffd093d1d94,147471521,0,0x0,8
tick,0x7ffd093d1d94,147486792,0,0x0,8
tick,0x7ffd093d1d94,147502402,0,0x0,8
tick,0x7ffd093d1d94,147518417,0,0x0,8
tick,0x7ffd093d1d94,147533862,0,0x0,8
tick,0x7ffd093d1d94,147549568,0,0x0,8
tick,0x7ffd093d1d94,147564706,0,0x0,8
tick,0x7ffd093d1d94,147579935,0,0x0,8
tick,0x7ffd093d1d94,147595036,0,0x0,8
tick,0x7ffd093d1d94,147611348,0,0x0,8
tick,0x7ffd093d1d94,147626403,0,0x0,8
tick,0x7ffd093d1d94,147642191,0,0x0,8
tick,0x7ffd093d1d94,147657565,0,0x0,8
tick,0x7ffd093d1d94,147673821,0,0x0,8
tick,0x7ffd093d1d94,147689448,0,0x0,8
tick,0x7ffd093d1d94,147704913,0,0x0,8
tick,0x7ffd093d1d94,147720133,0,0x0,8
tick,0x7ffd093d1d94,147735620,0,0x0,8
tick,0x7ffd093d1d94,147751515,0,0x0,8
tick,0x7ffd093d1d94,147767388,0,0x0,8
tick,0x7ffd093d1d94,147783433,0,0x0,8
tick,0x7ffd093d1d94,147799254,0,0x0,8
tick,0x7ffd093d1d94,147814352,0,0x0,8
tick,0x7ffd093d1d94,147829925,0,0x0,8
tick,0x7ffd093d1d94,147845590,0,0x0,8
tick,0x7ffd093d1d94,147860777,0,0x0,8
tick,0x7ffd093d1d94,147876156,0,0x0,8
tick,0x7ffd093d1d94,147891896,0,0x0,8
tick,0x7ffd093d1d94,147907731,0,0x0,8
tick,0x7ffd093d1d94,147923746,0,0x0,8
tick,0x7ffd093d1d94,147939166,0,0x0,8
tick,0x7ffd093d1d94,147955143,0,0x0,8
tick,0x7ffd093d1d94,147970735,0,0x0,8
tick,0x7ffd093d1d94,147986775,0,0x0,8
tick,0x7ffd093d1d94,148001957,0,0x0,8
tick,0x7ffd093d1d94,148018198,0,0x0,8
tick,0x7ffd093d1d94,148033731,0,0x0,8
tick,0x7ffd093d1d94,148049078,0,0x0,8
tick,0x7ffd093d1d94,148064417,0,0x0,8
tick,0x7ffd093d1d94,148079494,0,0x0,8
tick,0x7ffd093d1d94,148095642,0,0x0,8
tick,0x7ffd093d1d94,148110761,0,0x0,8
tick,0x7ffd093d1d94,148126116,0,0x0,8
tick,0x7ffd093d1d94,148142186,0,0x0,8
tick,0x7ffd093d1d94,148156989,0,0x0,8
tick,0x7ffd093d1d94,148172461,0,0x0,8
tick,0x7ffd093d1d94,148188194,0,0x0,8
tick,0x7ffd093d1d94,148203788,0,0x0,8
tick,0x7ffd093d1d94,148218808,0,0x0,8
tick,0x7ffd093d1d94,148233956,0,0x0,8
tick,0x7ffd093d1d94,148249285,0,0x0,8
tick,0x7ffd093d1d94,148264712,0,0x0,8
tick,0x7ffd093d1d94,148280433,0,0x0,8
tick,0x7ffd093d1d94,148295221,0,0x0,8
tick,0x7ffd093d1d94,148311148,0,0x0,8
tick,0x7ffd093d1d94,148326403,0,0x0,8
tick,0x7ffd093d1d94,148341209,0,0x0,8
tick,0x7ffd093d1d94,148357031,0,0x0,8
tick,0x7ffd093d1d94,148373156,0,0x0,8
tick,0x7ffd093d1d94,148388386,0,0x0,8
tick,0x7ffd093d1d94,148403855,0,0x0,8
tick,0x7ffd093d1d94,148420363,0,0x0,8
tick,0x7ffd093d1d94,148435880,0,0x0,8
tick,0x7ffd093d1d94,148450983,0,0x0,8
tick,0x7ffd093d1d94,148466873,0,0x0,8
tick,0x7ffd093d1d94,148482429,0,0x0,8
tick,0x7ffd093d1d94,148497537,0,0x0,8
tick,0x7ffd093d1d94,148513401,0,0x0,8
tick,0x7ffd093d1d94,148529011,0,0x0,8
tick,0x7ffd093d1d94,148543973,0,0x0,8
tick,0x7ffd093d1d94,148559467,0,0x0,8
tick,0x7ffd093d1d94,148574972,0,0x0,8
tick,0x7ffd093d1d94,148590673,0,0x0,8
tick,0x7ffd093d1d94,148605381,0,0x0,8
tick,0x7ffd093d1d94,148620707,0,0x0,8
tick,0x7ffd093d1d94,148636550,0,0x0,8
tick,0x7ffd093d1d94,148652037,0,0x0,8
tick,0x7ffd093d1d94,148667367,0,0x0,8
tick,0x7ffd093d1d94,148682953,0,0x0,8
tick,0x7ffd093d1d94,148698590,0,0x0,8
tick,0x7ffd093d1d94,148714919,0,0x0,8
tick,0x7ffd093d1d94,148730361,0,0x0,8
tick,0x7ffd093d1d94,148745387,0,0x0,8
tick,0x7ffd093d1d94,148761341,0,0x0,8
tick,0x7ffd093d1d94,148776998,0,0x0,8
tick,0x7ffd093d1d94,148792897,0,0x0,8
tick,0x7ffd093d1d94,148807855,0,0x0,8
tick,0x7ffd093d1d94,148824260,0,0x0,8
tick,0x7ffd093d1d94,148839151,0,0x0,8
tick,0x7ffd093d1d94,148854495,0,0x0,8
tick,0x7ffd093d1d94,148870437,0,0x0,8
tick,0x7ffd093d1d94,148886441,0,0x0,8
tick,0x7ffd093d1d94,148901439,0,0x0,8
tick,0x7ffd093d1d94,148916458,0,0x0,8
tick,0x7ffd093d1d94,148934354,0,0x0,8
tick,0x7ffd093d1d94,148948982,0,0x0,8
tick,0x7ffd093d1d94,148964115,0,0x0,8
tick,0x7ffd093d1d94,148980064,0,0x0,8
tick,0x7ffd093d1d94,148996149,0,0x0,8
tick,0x7ffd093d1d94,149011914,0,0x0,8
tick,0x7ffd093d1d94,149027241,0,0x0,8
tick,0x7ffd093d1d94,149042672,0,0x0,8
tick,0x7ffd093d1d94,149058391,0,0x0,8
tick,0x7ffd093d1d94,149073538,0,0x0,8
tick,0x7ffd093d1d94,149089601,0,0x0,8
tick,0x7ffd093d1d94,149105052,0,0x0,8
tick,0x7ffd093d1d94,149120567,0,0x0,8
tick,0x7ffd093d1d94,149136423,0,0x0,8
tick,0x7ffd093d1d94,149151723,0,0x0,8
tick,0x7ffd093d1d94,149168229,0,0x0,8
tick,0x7ffd093d1d94,149183345,0,0x0,8
tick,0x7ffd093d1d94,149198854,0,0x0,8
tick,0x7ffd093d1d94,149214694,0,0x0,8
tick,0x7ffd093d1d94,149229928,0,0x0,8
tick,0x7ffd093d1d94,149245668,0,0x0,8
tick,0x7ffd093d1d94,149261565,0,0x0,8
tick,0x7ffd093d1d94,149277187,0,0x0,8
tick,0x7ffd093d1d94,149292408,0,0x0,8
tick,0x7ffd093d1d94,149307762,0,0x0,8
tick,0x7ffd093d1d94,149323738,0,0x0,8
tick,0x7ffd093d1d94,149339265,0,0x0,8
tick,0x7ffd093d1d94,149355098,0,0x0,8
tick,0x7ffd093d1d94,149370497,0,0x0,8
tick,0x7ffd093d1d94,149385583,0,0x0,8
tick,0x7ffd093d1d94,149401226,0,0x0,8
tick,0x7ffd093d1d94,149416850,0,0x0,8
tick,0x7ffd093d1d94,149432454,0,0x0,8
tick,0x7ffd093d1d94,149448106,0,0x0,8
tick,0x7ffd093d1d94,149463676,0,0x0,8
tick,0x7ffd093d1d94,149479838,0,0x0,8
tick,0x7ffd093d1d94,149495747,0,0x0,8
tick,0x7ffd093d1d94,149511127,0,0x0,8
tick,0x7ffd093d1d94,149526459,0,0x0,8
tick,0x7ffd093d1d94,149542470,0,0x0,8
tick,0x7ffd093d1d94,149558249,0,0x0,8
tick,0x7ffd093d1d94,149573499,0,0x0,8
tick,0x7ffd093d1d94,149588945,0,0x0,8
tick,0x7ffd093d1d94,149604387,0,0x0,8
tick,0x7ffd093d1d94,149620275,0,0x0,8
tick,0x7ffd093d1d94,149635946,0,0x0,8
tick,0x7ffd093d1d94,149651457,0,0x0,8
tick,0x7ffd093d1d94,149667442,0,0x0,8
tick,0x7ffd093d1d94,149683639,0,0x0,8
tick,0x7ffd093d1d94,149699460,0,0x0,8
tick,0x7ffd093d1d94,149715373,0,0x0,8
tick,0x7ffd093d1d94,149730564,0,0x0,8
tick,0x7ffd093d1d94,149745711,0,0x0,8
tick,0x7ffd093d1d94,149761777,0,0x0,8
tick,0x7ffd093d1d94,149777481,0,0x0,8
tick,0x7ffd093d1d94,149793222,0,0x0,8
tick,0x7ffd093d1d94,149809019,0,0x0,8
tick,0x7ffd093d1d94,149824674,0,0x0,8
tick,0x7ffd093d1d94,149840448,0,0x0,8
tick,0x7ffd093d1d94,149854904,0,0x0,8
tick,0x7ffd093d1d94,149869719,0,0x0,8
tick,0x7ffd093d1d94,149885401,0,0x0,8
tick,0x7ffd093d1d94,149901219,0,0x0,8
tick,0x7ffd093d1d94,149917293,0,0x0,8
tick,0x7ffd093d1d94,149932649,0,0x0,8
tick,0x7ffd093d1d94,149948193,0,0x0,8
tick,0x7ffd093d1d94,149963394,0,0x0,8
tick,0x7ffd093d1d94,149979939,0,0x0,8
tick,0x7ffd093d1d94,149995159,0,0x0,8
tick,0x7ffd093d1d94,150010287,0,0x0,8
tick,0x7ffd093d1d94,150026363,0,0x0,8
tick,0x7ffd093d1d94,150041269,0,0x0,8
tick,0x7ffd093d1d94,150057101,0,0x0,8
tick,0x7ffd093d1d94,150071860,0,0x0,8
tick,0x7ffd093d1d94,150087816,0,0x0,8
tick,0x7ffd093d1d94,150103784,0,0x0,8
tick,0x7ffd093d1d94,150118681,0,0x0,8
tick,0x7ffd093d1d94,150135590,0,0x0,8
tick,0x7ffd093d1d94,150150866,0,0x0,8
tick,0x7ffd093d1d94,150165317,0,0x0,8
tick,0x7ffd093d1d94,150181358,0,0x0,8
tick,0x7ffd093d1d94,150196612,0,0x0,8
tick,0x7ffd093d1d94,150212191,0,0x0,8
tick,0x7ffd093d1d94,150227834,0,0x0,8
tick,0x7ffd093d1d94,150243392,0,0x0,8
tick,0x7ffd093d1d94,150259356,0,0x0,8
tick,0x7ffd093d1d94,150274846,0,0x0,8
tick,0x7ffd093d1d94,150290388,0,0x0,8
tick,0x7ffd093d1d94,150305900,0,0x0,8
tick,0x7ffd093d1d94,150322116,0,0x0,8
tick,0x7ffd093d1d94,150337446,0,0x0,8
tick,0x7ffd093d1d94,150353166,0,0x0,8
tick,0x7ffd093d1d94,150368621,0,0x0,8
tick,0x7ffd093d1d94,150384839,0,0x0,8
tick,0x7ffd093d1d94,150399456,0,0x0,8
tick,0x7ffd093d1d94,150415506,0,0x0,8
tick,0x7ffd093d1d94,150430971,0,0x0,8
tick,0x7ffd093d1d94,150446606,0,0x0,8
tick,0x7ffd093d1d94,150461790,0,0x0,8
tick,0x7ffd093d1d94,150477764,0,0x0,8
tick,0x7ffd093d1d94,150492991,0,0x0,8
tick,0x7ffd093d1d94,150508581,0,0x0,8
tick,0x7ffd093d1d94,150524621,0,0x0,8
tick,0x7ffd093d1d94,150540194,0,0x0,8
tick,0x7ffd093d1d94,150555591,0,0x0,8
tick,0x7ffd093d1d94,150571096,0,0x0,8
tick,0x7ffd093d1d94,150586670,0,0x0,8
tick,0x7ffd093d1d94,150602679,0,0x0,8
tick,0x7ffd093d1d94,150618945,0,0x0,8
tick,0x7ffd093d1d94,150634498,0,0x0,8
tick,0x7ffd093d1d94,150650183,0,0x0,8
tick,0x7ffd093d1d94,150666009,0,0x0,8
tick,0x7ffd093d1d94,150681619,0,0x0,8
tick,0x7ffd093d1d94,150696995,0,0x0,8
tick,0x7ffd093d1d94,150712485,0,0x0,8
tick,0x7ffd093d1d94,150728634,0,0x0,8
tick,0x7ffd093d1d94,150744582,0,0x0,8
tick,0x7ffd093d1d94,150760331,0,0x0,8
tick,0x7ffd093d1d94,150775982,0,0x0,8
tick,0x7ffd093d1d94,150791661,0,0x0,8
tick,0x7ffd093d1d94,150807366,0,0x0,8
tick,0x7ffd093d1d94,150822695,0,0x0,8
tick,0x7ffd093d1d94,150838158,0,0x0,8
tick,0x7ffd093d1d94,150853480,0,0x0,8
tick,0x7ffd093d1d94,150868916,0,0x0,8
tick,0x7ffd093d1d94,150884077,0,0x0,8
tick,0x7ffd093d1d94,150899186,0,0x0,8
tick,0x7ffd093d1d94,150915353,0,0x0,8
tick,0x7ffd093d1d94,150930468,0,0x0,8
tick,0x7ffd093d1d94,150945689,0,0x0,8
tick,0x7ffd093d1d94,150960968,0,0x0,8
tick,0x7ffd093d1d94,150977074,0,0x0,8
tick,0x7ffd093d1d94,150993268,0,0x0,8
tick,0x7ffd093d1d94,151008419,0,0x0,8
tick,0x7ffd093d1d94,151024035,0,0x0,8
tick,0x7ffd093d1d94,151039573,0,0x0,8
tick,0x7ffd093d1d94,151054783,0,0x0,8
tick,0x7ffd093d1d94,151070306,0,0x0,8
tick,0x7ffd093d1d94,151086160,0,0x0,8
tick,0x7ffd093d1d94,151100680,0,0x0,8
tick,0x7ffd093d1d94,151116396,0,0x0,8
tick,0x7ffd093d1d94,151131564,0,0x0,8
tick,0x7ffd093d1d94,151146730,0,0x0,8
tick,0x7ffd093d1d94,151162098,0,0x0,8
tick,0x7ffd093d1d94,151177555,0,0x0,8
tick,0x7ffd093d1d94,151193075,0,0x0,8
tick,0x7ffd093d1d94,151208637,0,0x0,8
tick,0x7ffd093d1d94,151223742,0,0x0,8
tick,0x7ffd093d1d94,151240390,0,0x0,8
tick,0x7ffd093d1d94,151255967,0,0x0,8
tick,0x7ffd093d1d94,151271352,0,0x0,8
tick,0x7ffd093d1d94,151286451,0,0x0,8
tick,0x7ffd093d1d94,151302192,0,0x0,8
tick,0x7ffd093d1d94,151317315,0,0x0,8
tick,0x7ffd093d1d94,151333560,0,0x0,8
tick,0x7ffd093d1d94,151349710,0,0x0,8
tick,0x7ffd093d1d94,151365189,0,0x0,8
tick,0x7ffd093d1d94,151380794,0,0x0,8
tick,0x7ffd093d1d94,151396475,0,0x0,8
tick,0x7ffd093d1d94,151411374,0,0x0,8
tick,0x7ffd093d1d94,151427460,0,0x0,8
tick,0x7ffd093d1d94,151442734,0,0x0,8
tick,0x7ffd093d1d94,151458668,0,0x0,8
tick,0x7ffd093d1d94,151473589,0,0x0,8
tick,0x7ffd093d1d94,151488965,0,0x0,8
tick,0x7ffd093d1d94,151504842,0,0x0,8
tick,0x7ffd093d1d94,151520526,0,0x0,8
tick,0x7ffd093d1d94,151536430,0,0x0,8
tick,0x7ffd093d1d94,151552247,0,0x0,8
tick,0x7ffd093d1d94,151568036,0,0x0,8
tick,0x7ffd093d1d94,151583321,0,0x0,8
tick,0x7ffd093d1d94,151599008,0,0x0,8
tick,0x7ffd093d1d94,151614808,0,0x0,8
tick,0x7ffd093d1d94,151629918,0,0x0,8
tick,0x7ffd093d1d94,151645078,0,0x0,8
tick,0x7ffd093d1d94,151660298,0,0x0,8
tick,0x7ffd093d1d94,151676025,0,0x0,8
tick,0x7ffd093d1d94,151691042,0,0x0,8
tick,0x7ffd093d1d94,151707042,0,0x0,8
tick,0x7ffd093d1d94,151722688,0,0x0,8
tick,0x7ffd093d1d94,151738943,0,0x0,8
tick,0x7ffd093d1d94,151754019,0,0x0,8
tick,0x7ffd093d1d94,151770039,0,0x0,8
tick,0x7ffd093d1d94,151786189,0,0x0,8
tick,0x7ffd093d1d94,151801257,0,0x0,8
tick,0x7ffd093d1d94,151817018,0,0x0,8
tick,0x7ffd093d1d94,151832396,0,0x0,8
tick,0x7ffd093d1d94,151848535,0,0x0,8
tick,0x7ffd093d1d94,151863941,0,0x0,8
tick,0x7ffd093d1d94,151879134,0,0x0,8
tick,0x7ffd093d1d94,151894824,0,0x0,8
tick,0x7ffd093d1d94,151910570,0,0x0,8
tick,0x7ffd093d1d94,151925787,0,0x0,8
tick,0x7ffd093d1d94,151941261,0,0x0,8
tick,0x7ffd093d1d94,151956979,0,0x0,8
tick,0x7ffd093d1d94,151972734,0,0x0,8
tick,0x7ffd093d1d94,151988626,0,0x0,8
tick,0x7ffd093d1d94,152003779,0,0x0,8
tick,0x7ffd093d1d94,152019858,0,0x0,8
tick,0x7ffd093d1d94,152034758,0,0x0,8
tick,0x7ffd093d1d94,152050091,0,0x0,8
tick,0x7ffd093d1d94,152064747,0,0x0,8
tick,0x7ffd093d1d94,152080113,0,0x0,8
tick,0x7ffd093d1d94,152096120,0,0x0,8
tick,0x7ffd093d1d94,152112281,0,0x0,8
tick,0x7ffd093d1d94,152128033,0,0x0,8
tick,0x7ffd093d1d94,152143729,0,0x0,8
tick,0x7ffd093d1d94,152159125,0,0x0,8
tick,0x7ffd093d1d94,152174112,0,0x0,8
tick,0x7ffd093d1d94,152189836,0,0x0,8
tick,0x7ffd093d1d94,152205209,0,0x0,8
tick,0x7ffd093d1d94,152219994,0,0x0,8
tick,0x7ffd093d1d94,152235509,0,0x0,8
tick,0x7ffd093d1d94,152251146,0,0x0,8
tick,0x7ffd093d1d94,152266375,0,0x0,8
tick,0x7ffd093d1d94,152282931,0,0x0,8
tick,0x7ffd093d1d94,152299051,0,0x0,8
tick,0x7ffd093d1d94,152315000,0,0x0,8
tick,0x7ffd093d1d94,152329836,0,0x0,8
tick,0x7ffd093d1d94,152345149,0,0x0,8
tick,0x7ffd093d1d94,152360564,0,0x0,8
tick,0x7ffd093d1d94,152376763,0,0x0,8
tick,0x7ffd093d1d94,152391854,0,0x0,8
tick,0x7ffd093d1d94,152407536,0,0x0,8
tick,0x7ffd093d1d94,152423223,0,0x0,8
tick,0x7ffd093d1d94,152439227,0,0x0,8
tick,0x7ffd093d1d94,152454559,0,0x0,8
tick,0x7ffd093d1d94,152469972,0,0x0,8
tick,0x7ffd093d1d94,152485807,0,0x0,8
tick,0x7ffd093d1d94,152501036,0,0x0,8
tick,0x7ffd093d1d94,152516379,0,0x0,8
tick,0x7ffd093d1d94,152531529,0,0x0,8
tick,0x7ffd093d1d94,152547328,0,0x0,8
tick,0x7ffd093d1d94,152562494,0,0x0,8
tick,0x7ffd093d1d94,152578168,0,0x0,8
tick,0x7ffd093d1d94,152594045,0,0x0,8
tick,0x7ffd093d1d94,152609111,0,0x0,8
tick,0x7ffd093d1d94,152624591,0,0x0,8
tick,0x7ffd093d1d94,152639792,0,0x0,8
tick,0x7ffd093d1d94,152655567,0,0x0,8
tick,0x7ffd093d1d94,152670980,0,0x0,8
tick,0x7ffd093d1d94,152686440,0,0x0,8
tick,0x7ffd093d1d94,152702450,0,0x0,8
tick,0x7ffd093d1d94,152717853,0,0x0,8
tick,0x7ffd093d1d94,152733467,0,0x0,8
tick,0x7ffd093d1d94,152749155,0,0x0,8
tick,0x7ffd093d1d94,152764470,0,0x0,8
tick,0x7ffd093d1d94,152780188,0,0x0,8
tick,0x7ffd093d1d94,152795618,0,0x0,8
tick,0x7ffd093d1d94,152810571,0,0x0,8
tick,0x7ffd093d1d94,152826189,0,0x0,8
tick,0x7ffd093d1d94,152841230,0,0x0,8
tick,0x7ffd093d1d94,152856963,0,0x0,8
tick,0x7ffd093d1d94,152872809,0,0x0,8
tick,0x7ffd093d1d94,152888607,0,0x0,8
tick,0x7ffd093d1d94,152903938,0,0x0,8
tick,0x7ffd093d1d94,152919153,0,0x0,8
tick,0x7ffd093d1d94,152934674,0,0x0,8
tick,0x7ffd093d1d94,152950267,0,0x0,8
tick,0x7ffd093d1d94,152965795,0,0x0,8
tick,0x7ffd093d1d94,152981628,0,0x0,8
tick,0x7ffd093d1d94,152997612,0,0x0,8
tick,0x7ffd093d1d94,153013186,0,0x0,8
tick,0x7ffd093d1d94,153028194,0,0x0,8
tick,0x7ffd093d1d94,153044245,0,0x0,8
tick,0x7ffd093d1d94,153059349,0,0x0,8
tick,0x7ffd093d1d94,153075353,0,0x0,8
tick,0x7ffd093d1d94,153090646,0,0x0,8
tick,0x7ffd093d1d94,153106053,0,0x0,8
tick,0x7ffd093d1d94,153121546,0,0x0,8
tick,0x7ffd093d1d94,153136546,0,0x0,8
tick,0x7ffd093d1d94,153152642,0,0x0,8
tick,0x7ffd093d1d94,153167971,0,0x0,8
tick,0x7ffd093d1d94,153183278,0,0x0,8
tick,0x7ffd093d1d94,153198788,0,0x0,8
tick,0x7ffd093d1d94,153214416,0,0x0,8
tick,0x7ffd093d1d94,153229671,0,0x0,8
tick,0x7ffd093d1d94,153245264,0,0x0,8
tick,0x7ffd093d1d94,153261410,0,0x0,8
tick,0x7ffd093d1d94,153277336,0,0x0,8
tick,0x7ffd093d1d94,153292875,0,0x0,8
tick,0x7ffd093d1d94,153308359,0,0x0,8
tick,0x7ffd093d1d94,153323656,0,0x0,8
tick,0x7ffd093d1d94,153339104,0,0x0,8
tick,0x7ffd093d1d94,153354250,0,0x0,8
tick,0x7ffd093d1d94,153370461,0,0x0,8
tick,0x7ffd093d1d94,153386499,0,0x0,8
tick,0x7ffd093d1d94,153402438,0,0x0,8
tick,0x7ffd093d1d94,153418093,0,0x0,8
tick,0x7ffd093d1d94,153433407,0,0x0,8
tick,0x7ffd093d1d94,153448729,0,0x0,8
tick,0x7ffd093d1d94,153463936,0,0x0,8
tick,0x7ffd093d1d94,153480025,0,0x0,8
tick,0x7ffd093d1d94,153495185,0,0x0,8
tick,0x7ffd093d1d94,153510930,0,0x0,8
tick,0x7ffd093d1d94,153526523,0,0x0,8
tick,0x7ffd093d1d94,153542253,0,0x0,8
tick,0x7ffd093d1d94,153557683,0,0x0,8
tick,0x7ffd093d1d94,153573489,0,0x0,8
tick,0x7ffd093d1d94,153589582,0,0x0,8
tick,0x7ffd093d1d94,153605520,0,0x0,8
tick,0x7ffd093d1d94,153620992,0,0x0,8
tick,0x7ffd093d1d94,153636879,0,0x0,8
tick,0x7ffd093d1d94,153652067,0,0x0,8
tick,0x7ffd093d1d94,153667654,0,0x0,8
tick,0x7ffd093d1d94,153683602,0,0x0,8
tick,0x7ffd093d1d94,153698831,0,0x0,8
tick,0x7ffd093d1d94,153714389,0,0x0,8
tick,0x7ffd093d1d94,153729642,0,0x0,8
tick,0x7ffd093d1d94,153745408,0,0x0,8
tick,0x7ffd093d1d94,153761274,0,0x0,8
tick,0x7ffd093d1d94,153776625,0,0x0,8
tick,0x7ffd093d1d94,153792180,0,0x0,8
tick,0x7ffd093d1d94,153807741,0,0x0,8
tick,0x7ffd093d1d94,153823328,0,0x0,8
tick,0x7ffd093d1d94,153838685,0,0x0,8
tick,0x7ffd093d1d94,153854318,0,0x0,8
tick,0x7ffd093d1d94,153869982,0,0x0,8
tick,0x7ffd093d1d94,153885522,0,0x0,8
tick,0x7ffd093d1d94,153900803,0,0x0,8
tick,0x7ffd093d1d94,153916440,0,0x0,8
tick,0x7ffd093d1d94,153932098,0,0x0,8
tick,0x7ffd093d1d94,153947537,0,0x0,8
tick,0x7ffd093d1d94,153963458,0,0x0,8
tick,0x7ffd093d1d94,153979019,0,0x0,8
tick,0x7ffd093d1d94,153993614,0,0x0,8
tick,0x7ffd093d1d94,154008991,0,0x0,8
tick,0x7ffd093d1d94,154024393,0,0x0,8
tick,0x7ffd093d1d94,154039897,0,0x0,8
tick,0x7ffd093d1d94,154055360,0,0x0,8
tick,0x7ffd093d1d94,154070669,0,0x0,8
tick,0x7ffd093d1d94,154086303,0,0x0,8
tick,0x7ffd093d1d94,154101485,0,0x0,8
tick,0x7ffd093d1d94,154116929,0,0x0,8
tick,0x7ffd093d1d94,154132687,0,0x0,8
tick,0x7ffd093d1d94,154148052,0,0x0,8
tick,0x7ffd093d1d94,154162894,0,0x0,8
tick,0x7ffd093d1d94,154178455,0,0x0,8
tick,0x7ffd093d1d94,154194228,0,0x0,8
tick,0x7ffd093d1d94,154209811,0,0x0,8
tick,0x7ffd093d1d94,154224914,0,0x0,8
tick,0x7ffd093d1d94,154241365,0,0x0,8
tick,0x7ffd093d1d94,154256377,0,0x0,8
tick,0x7ffd093d1d94,154272274,0,0x0,8
tick,0x7ffd093d1d94,154287746,0,0x0,8
tick,0x7ffd093d1d94,154303206,0,0x0,8
tick,0x7ffd093d1d94,154318632,0,0x0,8
tick,0x7ffd093d1d94,154334601,0,0x0,8
tick,0x7ffd093d1d94,154350266,0,0x0,8
tick,0x7ffd093d1d94,154365563,0,0x0,8
tick,0x7ffd093d1d94,154380878,0,0x0,8
tick,0x7ffd093d1d94,154397065,0,0x0,8
tick,0x7ffd093d1d94,154412514,0,0x0,8
tick,0x7ffd093d1d94,154428509,0,0x0,8
tick,0x7ffd093d1d94,154444384,0,0x0,8
tick,0x7ffd093d1d94,154460059,0,0x0,8
tick,0x7ffd093d1d94,154475795,0,0x0,8
tick,0x7ffd093d1d94,154491359,0,0x0,8
tick,0x7ffd093d1d94,154506880,0,0x0,8
tick,0x7ffd093d1d94,154522476,0,0x0,8
tick,0x7ffd093d1d94,154538484,0,0x0,8
tick,0x7ffd093d1d94,154553800,0,0x0,8
tick,0x7ffd093d1d94,154569148,0,0x0,8
tick,0x7ffd093d1d94,154584895,0,0x0,8
tick,0x7ffd093d1d94,154601020,0,0x0,8
tick,0x7ffd093d1d94,154616068,0,0x0,8
tick,0x7ffd093d1d94,154632264,0,0x0,8
tick,0x7ffd093d1d94,154647412,0,0x0,8
tick,0x7ffd093d1d94,154662581,0,0x0,8
tick,0x7ffd093d1d94,154677978,0,0x0,8
tick,0x7ffd093d1d94,154693609,0,0x0,8
tick,0x7ffd093d1d94,154709181,0,0x0,8
tick,0x7ffd093d1d94,154724555,0,0x0,8
tick,0x7ffd093d1d94,154740128,0,0x0,8
tick,0x7ffd093d1d94,154755936,0,0x0,8
tick,0x7ffd093d1d94,154772322,0,0x0,8
tick,0x7ffd093d1d94,154788017,0,0x0,8
tick,0x7ffd093d1d94,154804029,0,0x0,8
tick,0x7ffd093d1d94,154819694,0,0x0,8
tick,0x7ffd093d1d94,154835148,0,0x0,8
tick,0x7ffd093d1d94,154850193,0,0x0,8
tick,0x7ffd093d1d94,154865330,0,0x0,8
tick,0x7ffd093d1d94,154880583,0,0x0,8
tick,0x7ffd093d1d94,154896193,0,0x0,8
tick,0x7ffd093d1d94,154911484,0,0x0,8
tick,0x7ffd093d1d94,154927626,0,0x0,8
tick,0x7ffd093d1d94,154942901,0,0x0,8
tick,0x7ffd093d1d94,154958759,0,0x0,8
tick,0x7ffd093d1d94,154974050,0,0x0,8
tick,0x7ffd093d1d94,154989277,0,0x0,8
tick,0x7ffd093d1d94,155004714,0,0x0,8
tick,0x7ffd093d1d94,155019579,0,0x0,8
tick,0x7ffd093d1d94,155034864,0,0x0,8
tick,0x7ffd093d1d94,155051198,0,0x0,8
tick,0x7ffd093d1d94,155066691,0,0x0,8
tick,0x7ffd093d1d94,155083135,0,0x0,8
tick,0x7ffd093d1d94,155098547,0,0x0,8
tick,0x7ffd093d1d94,155114104,0,0x0,8
tick,0x7ffd093d1d94,155130100,0,0x0,8
tick,0x7ffd093d1d94,155146031,0,0x0,8
tick,0x7ffd093d1d94,155161090,0,0x0,8
tick,0x7ffd093d1d94,155176461,0,0x0,8
tick,0x7ffd093d1d94,155191736,0,0x0,8
tick,0x7ffd093d1d94,155207143,0,0x0,8
tick,0x7ffd093d1d94,155222606,0,0x0,8
tick,0x7ffd093d1d94,155238804,0,0x0,8
tick,0x7ffd093d1d94,155254611,0,0x0,8
tick,0x7ffd093d1d94,155270032,0,0x0,8
tick,0x7ffd093d1d94,155286004,0,0x0,8
tick,0x7ffd093d1d94,155301864,0,0x0,8
tick,0x7ffd093d1d94,155318039,0,0x0,8
tick,0x7ffd093d1d94,155333731,0,0x0,8
tick,0x7ffd093d1d94,155349826,0,0x0,8
tick,0x7ffd093d1d94,155365488,0,0x0,8
tick,0x7ffd093d1d94,155380957,0,0x0,8
tick,0x7ffd093d1d94,155395983,0,0x0,8
tick,0x7ffd093d1d94,155411501,0,0x0,8
tick,0x7ffd093d1d94,155427340,0,0x0,8
tick,0x7ffd093d1d94,155442452,0,0x0,8
tick,0x7ffd093d1d94,155457564,0,0x0,8
tick,0x7ffd093d1d94,155473181,0,0x0,8
tick,0x7ffd093d1d94,155488148,0,0x0,8
tick,0x7ffd093d1d94,155503813,0,0x0,8
tick,0x7ffd093d1d94,155519029,0,0x0,8
tick,0x7ffd093d1d94,155534913,0,0x0,8
tick,0x7ffd093d1d94,155550836,0,0x0,8
tick,0x7ffd093d1d94,155566391,0,0x0,8
tick,0x7ffd093d1d94,155582003,0,0x0,8
tick,0x7ffd093d1d94,155597475,0,0x0,8
tick,0x7ffd093d1d94,155612863,0,0x0,8
tick,0x7ffd093d1d94,155628076,0,0x0,8
tick,0x7ffd093d1d94,155643411,0,0x0,8
tick,0x7ffd093d1d94,155658635,0,0x0,8
tick,0x7ffd093d1d94,155674088,0,0x0,8
tick,0x7ffd093d1d94,155689872,0,0x0,8
tick,0x7ffd093d1d94,155704819,0,0x0,8
tick,0x7ffd093d1d94,155721306,0,0x0,8
tick,0x7ffd093d1d94,155736162,0,0x0,8
tick,0x7ffd093d1d94,155752109,0,0x0,8
tick,0x7ffd093d1d94,155766924,0,0x0,8
tick,0x7ffd093d1d94,155782158,0,0x0,8
tick,0x7ffd093d1d94,155797769,0,0x0,8
tick,0x7ffd093d1d94,155813861,0,0x0,8
tick,0x7ffd093d1d94,155829049,0,0x0,8
tick,0x7ffd093d1d94,155844979,0,0x0,8
tick,0x7ffd093d1d94,155860174,0,0x0,8
tick,0x7ffd093d1d94,155875561,0,0x0,8
tick,0x7ffd093d1d94,155891769,0,0x0,8
tick,0x7ffd093d1d94,155907244,0,0x0,8
tick,0x7ffd093d1d94,155923401,0,0x0,8
tick,0x7ffd093d1d94,155939313,0,0x0,8
tick,0x7ffd093d1d94,155955295,0,0x0,8
tick,0x7ffd093d1d94,155971038,0,0x0,8
tick,0x7ffd093d1d94,155986323,0,0x0,8
tick,0x7ffd093d1d94,156002471,0,0x0,8
tick,0x7ffd093d1d94,156018180,0,0x0,8
tick,0x7ffd093d1d94,156034283,0,0x0,8
tick,0x7ffd093d1d94,156049417,0,0x0,8
tick,0x7ffd093d1d94,156065410,0,0x0,8
tick,0x7ffd093d1d94,156080996,0,0x0,8
tick,0x7ffd093d1d94,156097160,0,0x0,8
tick,0x7ffd093d1d94,156112419,0,0x0,8
tick,0x7ffd093d1d94,156128513,0,0x0,8
tick,0x7ffd093d1d94,156144600,0,0x0,8
tick,0x7ffd093d1d94,156160180,0,0x0,8
tick,0x7ffd093d1d94,156175655,0,0x0,8
tick,0x7ffd093d1d94,156190910,0,0x0,8
tick,0x7ffd093d1d94,156206733,0,0x0,8
tick,0x7ffd093d1d94,156222428,0,0x0,8
tick,0x7ffd093d1d94,156238325,0,0x0,8
tick,0x7ffd093d1d94,156253010,0,0x0,8
tick,0x7ffd093d1d94,156269198,0,0x0,8
tick,0x7ffd093d1d94,156284796,0,0x0,8
tick,0x7ffd093d1d94,156300355,0,0x0,8
tick,0x7ffd093d1d94,156316013,0,0x0,8
tick,0x7ffd093d1d94,156330608,0,0x0,8
tick,0x7ffd093d1d94,156346403,0,0x0,8
tick,0x7ffd093d1d94,156362709,0,0x0,8
tick,0x7ffd093d1d94,156378829,0,0x0,8
tick,0x7ffd093d1d94,156394134,0,0x0,8
tick,0x7ffd093d1d94,156410057,0,0x0,8
tick,0x7ffd093d1d94,156425459,0,0x0,8
tick,0x7ffd093d1d94,156440935,0,0x0,8
tick,0x7ffd093d1d94,156456141,0,0x0,8
tick,0x7ffd093d1d94,156471945,0,0x0,8
tick,0x7ffd093d1d94,156487106,0,0x0,8
tick,0x7ffd093d1d94,156502941,0,0x0,8
tick,0x7ffd093d1d94,156518457,0,0x0,8
tick,0x7ffd093d1d94,156534212,0,0x0,8
tick,0x7ffd093d1d94,156549667,0,0x0,8
tick,0x7ffd093d1d94,156564901,0,0x0,8
tick,0x7ffd093d1d94,156580375,0,0x0,8
tick,0x7ffd093d1d94,156595793,0,0x0,8
tick,0x7ffd093d1d94,156610919,0,0x0,8
tick,0x7ffd093d1d94,156627023,0,0x0,8
tick,0x7ffd093d1d94,156642180,0,0x0,8
tick,0x7ffd093d1d94,156657687,0,0x0,8
tick,0x7ffd093d1d94,156673629,0,0x0,8
tick,0x7ffd093d1d94,156689251,0,0x0,8
tick,0x7ffd093d1d94,156704165,0,0x0,8
tick,0x7ffd093d1d94,156719645,0,0x0,8
tick,0x7ffd093d1d94,156735167,0,0x0,8
tick,0x7ffd093d1d94,156751040,0,0x0,8
tick,0x7ffd093d1d94,156766303,0,0x0,8
tick,0x7ffd093d1d94,156781021,0,0x0,8
tick,0x7ffd093d1d94,156796908,0,0x0,8
tick,0x7ffd093d1d94,156812385,0,0x0,8
tick,0x7ffd093d1d94,156828350,0,0x0,8
tick,0x7ffd093d1d94,156844328,0,0x0,8
tick,0x7ffd093d1d94,156860344,0,0x0,8
tick,0x7ffd093d1d94,156875850,0,0x0,8
tick,0x7ffd093d1d94,156891841,0,0x0,8
tick,0x7ffd093d1d94,156907856,0,0x0,8
tick,0x7ffd093d1d94,156922854,0,0x0,8
tick,0x7ffd093d1d94,156939387,0,0x0,8
tick,0x7ffd093d1d94,156953958,0,0x0,8
tick,0x7ffd093d1d94,156969387,0,0x0,8
tick,0x7ffd093d1d94,156984389,0,0x0,8
tick,0x7ffd093d1d94,157000582,0,0x0,8
tick,0x7ffd093d1d94,157016965,0,0x0,8
tick,0x7ffd093d1d94,157031952,0,0x0,8
tick,0x7ffd093d1d94,157047181,0,0x0,8
tick,0x7ffd093d1d94,157062431,0,0x0,8
tick,0x7ffd093d1d94,157078373,0,0x0,8
tick,0x7ffd093d1d94,157094416,0,0x0,8
tick,0x7ffd093d1d94,157110628,0,0x0,8
tick,0x7ffd093d1d94,157125578,0,0x0,8
tick,0x7ffd093d1d94,157140703,0,0x0,8
tick,0x7ffd093d1d94,157156535,0,0x0,8
tick,0x7ffd093d1d94,157171887,0,0x0,8
tick,0x7ffd093d1d94,157187515,0,0x0,8
tick,0x7ffd093d1d94,157202935,0,0x0,8
tick,0x7ffd093d1d94,157218603,0,0x0,8
tick,0x7ffd093d1d94,157234057,0,0x0,8
tick,0x7ffd093d1d94,157249419,0,0x0,8
tick,0x7ffd093d1d94,157265655,0,0x0,8
tick,0x7ffd093d1d94,157281743,0,0x0,8
tick,0x7ffd093d1d94,157297292,0,0x0,8
tick,0x7ffd093d1d94,157312988,0,0x0,8
tick,0x7ffd093d1d94,157328372,0,0x0,8
tick,0x7ffd093d1d94,157343792,0,0x0,8
tick,0x7ffd093d1d94,157358999,0,0x0,8
tick,0x7ffd093d1d94,157374869,0,0x0,8
tick,0x7ffd093d1d94,157390685,0,0x0,8
tick,0x7ffd093d1d94,157406222,0,0x0,8
tick,0x7ffd093d1d94,157422625,0,0x0,8
tick,0x7ffd093d1d94,157437335,0,0x0,8
tick,0x7ffd093d1d94,157452846,0,0x0,8
tick,0x7ffd093d1d94,157468891,0,0x0,8
tick,0x7ffd093d1d94,157484788,0,0x0,8
tick,0x7ffd093d1d94,157499939,0,0x0,8
tick,0x7ffd093d1d94,157515463,0,0x0,8
tick,0x7ffd093d1d94,157531135,0,0x0,8
tick,0x7ffd093d1d94,157546163,0,0x0,8
tick,0x7ffd093d1d94,157561496,0,0x0,8
tick,0x7ffd093d1d94,157576877,0,0x0,8
tick,0x7ffd093d1d94,157592118,0,0x0,8
tick,0x7ffd093d1d94,157607606,0,0x0,8
tick,0x7ffd093d1d94,157623388,0,0x0,8
tick,0x7ffd093d1d94,157638466,0,0x0,8
tick,0x7ffd093d1d94,157654255,0,0x0,8
tick,0x7ffd093d1d94,157670110,0,0x0,8
tick,0x7ffd093d1d94,157685736,0,0x0,8
tick,0x7ffd093d1d94,157702141,0,0x0,8
tick,0x7ffd093d1d94,157717468,0,0x0,8
tick,0x7ffd093d1d94,157733450,0,0x0,8
tick,0x7ffd093d1d94,157749325,0,0x0,8
tick,0x7ffd093d1d94,157765349,0,0x0,8
tick,0x7ffd093d1d94,157780211,0,0x0,8
tick,0x7ffd093d1d94,157795730,0,0x0,8
tick,0x7ffd093d1d94,157811224,0,0x0,8
tick,0x7ffd093d1d94,157827255,0,0x0,8
tick,0x7ffd093d1d94,157843710,0,0x0,8
tick,0x7ffd093d1d94,157858324,0,0x0,8
tick,0x7ffd093d1d94,157873548,0,0x0,8
tick,0x7ffd093d1d94,157889391,0,0x0,8
tick,0x7ffd093d1d94,157905051,0,0x0,8
tick,0x7ffd093d1d94,157920238,0,0x0,8
tick,0x7ffd093d1d94,157935566,0,0x0,8
tick,0x7ffd093d1d94,157951666,0,0x0,8
tick,0x7ffd093d1d94,157966986,0,0x0,8
tick,0x7ffd093d1d94,157982657,0,0x0,8
tick,0x7ffd093d1d94,157998715,0,0x0,8
tick,0x7ffd093d1d94,158014817,0,0x0,8
tick,0x7ffd093d1d94,158030932,0,0x0,8
tick,0x7ffd093d1d94,158046455,0,0x0,8
tick,0x7ffd093d1d94,158062267,0,0x0,8
tick,0x7ffd093d1d94,158077685,0,0x0,8
tick,0x7ffd093d1d94,158093410,0,0x0,8
tick,0x7ffd093d1d94,158108895,0,0x0,8
tick,0x7ffd093d1d94,158125265,0,0x0,8
tick,0x7ffd093d1d94,158140597,0,0x0,8
tick,0x7ffd093d1d94,158156381,0,0x0,8
tick,0x7ffd093d1d94,158171669,0,0x0,8
tick,0x7ffd093d1d94,158187338,0,0x0,8
tick,0x7ffd093d1d94,158203384,0,0x0,8
tick,0x7ffd093d1d94,158219607,0,0x0,8
tick,0x7ffd093d1d94,158234744,0,0x0,8
tick,0x7ffd093d1d94,158250767,0,0x0,8
tick,0x7ffd093d1d94,158266126,0,0x0,8
tick,0x7ffd093d1d94,158281741,0,0x0,8
tick,0x7ffd093d1d94,158297116,0,0x0,8
tick,0x7ffd093d1d94,158313029,0,0x0,8
tick,0x7ffd093d1d94,158329211,0,0x0,8
tick,0x7ffd093d1d94,158344107,0,0x0,8
tick,0x7ffd093d1d94,158360040,0,0x0,8
tick,0x7ffd093d1d94,158375018,0,0x0,8
tick,0x7ffd093d1d94,158390670,0,0x0,8
tick,0x7ffd093d1d94,158406306,0,0x0,8
tick,0x7ffd093d1d94,158421763,0,0x0,8
tick,0x7ffd093d1d94,158436296,0,0x0,8
tick,0x7ffd093d1d94,158452224,0,0x0,8
tick,0x7ffd093d1d94,158467436,0,0x0,8
tick,0x7ffd093d1d94,158482747,0,0x0,8
tick,0x7ffd093d1d94,158498415,0,0x0,8
tick,0x7ffd093d1d94,158514630,0,0x0,8
tick,0x7ffd093d1d94,158529685,0,0x0,8
tick,0x7ffd093d1d94,158545015,0,0x0,8
tick,0x7ffd093d1d94,158560324,0,0x0,8
tick,0x7ffd093d1d94,158576282,0,0x0,8
tick,0x7ffd093d1d94,158591589,0,0x0,8
tick,0x7ffd093d1d94,158607275,0,0x0,8
tick,0x7ffd093d1d94,158623444,0,0x0,8
tick,0x7ffd093d1d94,158638684,0,0x0,8
tick,0x7ffd093d1d94,158653860,0,0x0,8
tick,0x7ffd093d1d94,158669526,0,0x0,8
tick,0x7ffd093d1d94,158685140,0,0x0,8
tick,0x7ffd093d1d94,158700291,0,0x0,8
tick,0x7ffd093d1d94,158715895,0,0x0,8
tick,0x7ffd093d1d94,158731277,0,0x0,8
tick,0x7ffd093d1d94,158747271,0,0x0,8
tick,0x7ffd093d1d94,158763277,0,0x0,8
tick,0x7ffd093d1d94,158779049,0,0x0,8
tick,0x7ffd093d1d94,158794360,0,0x0,8
tick,0x7ffd093d1d94,158809771,0,0x0,8
tick,0x7ffd093d1d94,158825281,0,0x0,8
tick,0x7ffd093d1d94,158840524,0,0x0,8
tick,0x7ffd093d1d94,158856321,0,0x0,8
tick,0x7ffd093d1d94,158872061,0,0x0,8
tick,0x7ffd093d1d94,158887314,0,0x0,8
tick,0x7ffd093d1d94,158903048,0,0x0,8
tick,0x7ffd093d1d94,158918960,0,0x0,8
tick,0x7ffd093d1d94,158933800,0,0x0,8
tick,0x7ffd093d1d94,158949365,0,0x0,8
tick,0x7ffd093d1d94,158966639,0,0x0,8
tick,0x7ffd093d1d94,158981238,0,0x0,8
tick,0x7ffd093d1d94,158996401,0,0x0,8
tick,0x7ffd093d1d94,159011639,0,0x0,8
tick,0x7ffd093d1d94,159027114,0,0x0,8
tick,0x7ffd093d1d94,159043669,0,0x0,8
tick,0x7ffd093d1d94,159059125,0,0x0,8
tick,0x7ffd093d1d94,159074664,0,0x0,8
tick,0x7ffd093d1d94,159090416,0,0x0,8
tick,0x7ffd093d1d94,159106017,0,0x0,8
tick,0x7ffd093d1d94,159121331,0,0x0,8
tick,0x7ffd093d1d94,159136875,0,0x0,8
tick,0x7ffd093d1d94,159152310,0,0x0,8
tick,0x7ffd093d1d94,159167960,0,0x0,8
tick,0x7ffd093d1d94,159183071,0,0x0,8
tick,0x7ffd093d1d94,159199041,0,0x0,8
tick,0x7ffd093d1d94,159214916,0,0x0,8
tick,0x7ffd093d1d94,159230315,0,0x0,8
tick,0x7ffd093d1d94,159245577,0,0x0,8
tick,0x7ffd093d1d94,159260891,0,0x0,8
tick,0x7ffd093d1d94,159276912,0,0x0,8
tick,0x7ffd093d1d94,159292453,0,0x0,8
tick,0x7ffd093d1d94,159307577,0,0x0,8
tick,0x7ffd093d1d94,159324193,0,0x0,8
tick,0x7ffd093d1d94,159339618,0,0x0,8
tick,0x7ffd093d1d94,159355260,0,0x0,8
tick,0x7ffd093d1d94,159370765,0,0x0,8
tick,0x7ffd093d1d94,159386269,0,0x0,8
tick,0x7ffd093d1d94,159401538,0,0x0,8
tick,0x7ffd093d1d94,159417914,0,0x0,8
tick,0x7ffd093d1d94,159434194,0,0x0,8
tick,0x7ffd093d1d94,159450156,0,0x0,8
tick,0x7ffd093d1d94,159465826,0,0x0,8
tick,0x7ffd093d1d94,159481602,0,0x0,8
tick,0x7ffd093d1d94,159497235,0,0x0,8
tick,0x7ffd093d1d94,159513427,0,0x0,8
tick,0x7ffd093d1d94,159529717,0,0x0,8
tick,0x7ffd093d1d94,159545516,0,0x0,8
tick,0x7ffd093d1d94,159560044,0,0x0,8
tick,0x7ffd093d1d94,159575437,0,0x0,8
tick,0x7ffd093d1d94,159590617,0,0x0,8
tick,0x7ffd093d1d94,159606083,0,0x0,8
tick,0x7ffd093d1d94,159623029,0,0x0,8
tick,0x7ffd093d1d94,159637675,0,0x0,8
tick,0x7ffd093d1d94,159653676,0,0x0,8
tick,0x7ffd093d1d94,159668676,0,0x0,8
tick,0x7ffd093d1d94,159684039,0,0x0,8
tick,0x7ffd093d1d94,159699366,0,0x0,8
tick,0x7ffd093d1d94,159715204,0,0x0,8
tick,0x7ffd093d1d94,159730145,0,0x0,8
tick,0x7ffd093d1d94,159745761,0,0x0,8
tick,0x7ffd093d1d94,159761251,0,0x0,8
tick,0x7ffd093d1d94,159776927,0,0x0,8
tick,0x7ffd093d1d94,159792658,0,0x0,8
tick,0x7ffd093d1d94,159808748,0,0x0,8
tick,0x7ffd093d1d94,159824341,0,0x0,8
tick,0x7ffd093d1d94,159841127,0,0x0,8
tick,0x7ffd093d1d94,159855418,0,0x0,8
tick,0x7ffd093d1d94,159871242,0,0x0,8
tick,0x7ffd093d1d94,159886137,0,0x0,8
tick,0x7ffd093d1d94,159901751,0,0x0,8
tick,0x7ffd093d1d94,159917248,0,0x0,8
tick,0x7ffd093d1d94,159932844,0,0x0,8
tick,0x7ffd093d1d94,159948092,0,0x0,8
tick,0x7ffd093d1d94,159965531,0,0x0,8
tick,0x7ffd093d1d94,159979107,0,0x0,8
tick,0x7ffd093d1d94,159995051,0,0x0,8
tick,0x7ffd093d1d94,160010043,0,0x0,8
tick,0x7ffd093d1d94,160025784,0,0x0,8
tick,0x7ffd093d1d94,160041838,0,0x0,8
tick,0x7ffd093d1d94,160057649,0,0x0,8
tick,0x7ffd093d1d94,160072759,0,0x0,8
tick,0x7ffd093d1d94,160088440,0,0x0,8
tick,0x7ffd093d1d94,160103690,0,0x0,8
tick,0x7ffd093d1d94,160119716,0,0x0,8
tick,0x7ffd093d1d94,160135740,0,0x0,8
tick,0x7ffd093d1d94,160151863,0,0x0,8
tick,0x7ffd093d1d94,160167400,0,0x0,8
tick,0x7ffd093d1d94,160183426,0,0x0,8
tick,0x7ffd093d1d94,160198666,0,0x0,8
tick,0x7ffd093d1d94,160214634,0,0x0,8
tick,0x7ffd093d1d94,160229842,0,0x0,8
tick,0x7ffd093d1d94,160245312,0,0x0,8
tick,0x7ffd093d1d94,160261243,0,0x0,8
tick,0x7ffd093d1d94,160275933,0,0x0,8
tick,0x7ffd093d1d94,160291439,0,0x0,8
tick,0x7ffd093d1d94,160306536,0,0x0,8
tick,0x7ffd093d1d94,160322326,0,0x0,8
tick,0x7ffd093d1d94,160337807,0,0x0,8
tick,0x7ffd093d1d94,160353839,0,0x0,8
tick,0x7ffd093d1d94,160369480,0,0x0,8
tick,0x7ffd093d1d94,160384732,0,0x0,8
tick,0x7ffd093d1d94,160399933,0,0x0,8
tick,0x7ffd093d1d94,160415652,0,0x0,8
tick,0x7ffd093d1d94,160431040,0,0x0,8
tick,0x7ffd093d1d94,160446832,0,0x0,8
tick,0x7ffd093d1d94,160462186,0,0x0,8
tick,0x7ffd093d1d94,160478008,0,0x0,8
tick,0x7ffd093d1d94,160493392,0,0x0,8
tick,0x7ffd093d1d94,160508769,0,0x0,8
tick,0x7ffd093d1d94,160524338,0,0x0,8
tick,0x7ffd093d1d94,160540029,0,0x0,8
tick,0x7ffd093d1d94,160556019,0,0x0,8
tick,0x7ffd093d1d94,160571544,0,0x0,8
tick,0x7ffd093d1d94,160587096,0,0x0,8
tick,0x7ffd093d1d94,160603115,0,0x0,8
tick,0x7ffd093d1d94,160618853,0,0x0,8
tick,0x7ffd093d1d94,160633808,0,0x0,8
tick,0x7ffd093d1d94,160649486,0,0x0,8
tick,0x7ffd093d1d94,160664932,0,0x0,8
tick,0x7ffd093d1d94,160680112,0,0x0,8
tick,0x7ffd093d1d94,160696056,0,0x0,8
tick,0x7ffd093d1d94,160711259,0,0x0,8
tick,0x7ffd093d1d94,160727562,0,0x0,8
tick,0x7ffd093d1d94,160742635,0,0x0,8
tick,0x7ffd093d1d94,160758579,0,0x0,8
tick,0x7ffd093d1d94,160774795,0,0x0,8
tick,0x7ffd093d1d94,160789868,0,0x0,8
tick,0x7ffd093d1d94,160805779,0,0x0,8
tick,0x7ffd093d1d94,160820630,0,0x0,8
tick,0x7ffd093d1d94,160836386,0,0x0,8
tick,0x7ffd093d1d94,160851132,0,0x0,8
tick,0x7ffd093d1d94,160867281,0,0x0,8
tick,0x7ffd093d1d94,160883322,0,0x0,8
tick,0x7ffd093d1d94,160898849,0,0x0,8
tick,0x7ffd093d1d94,160913653,0,0x0,8
tick,0x7ffd093d1d94,160928850,0,0x0,8
tick,0x7ffd093d1d94,160944665,0,0x0,8
tick,0x7ffd093d1d94,160959964,0,0x0,8
tick,0x7ffd093d1d94,160975534,0,0x0,8
tick,0x7ffd093d1d94,160991042,0,0x0,8
tick,0x7ffd093d1d94,161007439,0,0x0,8
tick,0x7ffd093d1d94,161022865,0,0x0,8
tick,0x7ffd093d1d94,161038832,0,0x0,8
tick,0x7ffd093d1d94,161054453,0,0x0,8
tick,0x7ffd093d1d94,161070573,0,0x0,8
tick,0x7ffd093d1d94,161087561,0,0x0,8
tick,0x7ffd093d1d94,161101661,0,0x0,8
tick,0x7ffd093d1d94,161117882,0,0x0,8
tick,0x7ffd093d1d94,161132676,0,0x0,8
tick,0x7ffd093d1d94,161147745,0,0x0,8
tick,0x7ffd093d1d94,161163690,0,0x0,8
tick,0x7ffd093d1d94,161180184,0,0x0,8
tick,0x7ffd093d1d94,161194561,0,0x0,8
tick,0x7ffd093d1d94,161209714,0,0x0,8
tick,0x7ffd093d1d94,161225608,0,0x0,8
tick,0x7ffd093d1d94,161241305,0,0x0,8
tick,0x7ffd093d1d94,161256447,0,0x0,8
tick,0x7ffd093d1d94,161271664,0,0x0,8
tick,0x7ffd093d1d94,161287153,0,0x0,8
tick,0x7ffd093d1d94,161302640,0,0x0,8
tick,0x7ffd093d1d94,161319480,0,0x0,8
tick,0x7ffd093d1d94,161334213,0,0x0,8
tick,0x7ffd093d1d94,161349951,0,0x0,8
tick,0x7ffd093d1d94,161365900,0,0x0,8
tick,0x7ffd093d1d94,161381255,0,0x0,8
tick,0x7ffd093d1d94,161396315,0,0x0,8
tick,0x7ffd093d1d94,161412272,0,0x0,8
tick,0x7ffd093d1d94,161427587,0,0x0,8
tick,0x7ffd093d1d94,161442815,0,0x0,8
tick,0x7ffd093d1d94,161458182,0,0x0,8
tick,0x7ffd093d1d94,161473580,0,0x0,8
tick,0x7ffd093d1d94,161488764,0,0x0,8
tick,0x7ffd093d1d94,161504542,0,0x0,8
tick,0x7ffd093d1d94,161520134,0,0x0,8
tick,0x7ffd093d1d94,161535692,0,0x0,8
tick,0x7ffd093d1d94,161551387,0,0x0,8
tick,0x7ffd093d1d94,161567260,0,0x0,8
tick,0x7ffd093d1d94,161582636,0,0x0,8
tick,0x7ffd093d1d94,161598747,0,0x0,8
tick,0x7ffd093d1d94,161614826,0,0x0,8
tick,0x7ffd093d1d94,161630996,0,0x0,8
tick,0x7ffd093d1d94,161646175,0,0x0,8
tick,0x7ffd093d1d94,161661953,0,0x0,8
tick,0x7ffd093d1d94,161678904,0,0x0,8
tick,0x7ffd093d1d94,161693659,0,0x0,8
tick,0x7ffd093d1d94,161709531,0,0x0,8
tick,0x7ffd093d1d94,161724841,0,0x0,8
tick,0x7ffd093d1d94,161740063,0,0x0,8
tick,0x7ffd093d1d94,161755642,0,0x0,8
tick,0x7ffd093d1d94,161771618,0,0x0,8
tick,0x7ffd093d1d94,161786723,0,0x0,8
tick,0x7ffd093d1d94,161802154,0,0x0,8
tick,0x7ffd093d1d94,161817633,0,0x0,8
tick,0x7ffd093d1d94,161833059,0,0x0,8
tick,0x7ffd093d1d94,161848071,0,0x0,8
tick,0x7ffd093d1d94,161864015,0,0x0,8
tick,0x7ffd093d1d94,161879695,0,0x0,8
tick,0x7ffd093d1d94,161895014,0,0x0,8
tick,0x7ffd093d1d94,161910668,0,0x0,8
tick,0x7ffd093d1d94,161925973,0,0x0,8
tick,0x7ffd093d1d94,161942020,0,0x0,8
tick,0x7ffd093d1d94,161957902,0,0x0,8
tick,0x7ffd093d1d94,161973458,0,0x0,8
tick,0x7ffd093d1d94,161988415,0,0x0,8
tick,0x7ffd093d1d94,162003746,0,0x0,8
tick,0x7ffd093d1d94,162019633,0,0x0,8
tick,0x7ffd093d1d94,162036140,0,0x0,8
tick,0x7ffd093d1d94,162051618,0,0x0,8
tick,0x7ffd093d1d94,162067704,0,0x0,8
tick,0x7ffd093d1d94,162083057,0,0x0,8
tick,0x7ffd093d1d94,162099031,0,0x0,8
tick,0x7ffd093d1d94,162113780,0,0x0,8
tick,0x7ffd093d1d94,162128662,0,0x0,8
tick,0x7ffd093d1d94,162144019,0,0x0,8
tick,0x7ffd093d1d94,162159821,0,0x0,8
tick,0x7ffd093d1d94,162175596,0,0x0,8
tick,0x7ffd093d1d94,162191476,0,0x0,8
tick,0x7ffd093d1d94,162207537,0,0x0,8
tick,0x7ffd093d1d94,162222425,0,0x0,8
tick,0x7ffd093d1d94,162237382,0,0x0,8
tick,0x7ffd093d1d94,162253318,0,0x0,8
tick,0x7ffd093d1d94,162268477,0,0x0,8
tick,0x7ffd093d1d94,162283441,0,0x0,8
tick,0x7ffd093d1d94,162299021,0,0x0,8
tick,0x7ffd093d1d94,162314766,0,0x0,8
tick,0x7ffd093d1d94,162330116,0,0x0,8
tick,0x7ffd093d1d94,162345241,0,0x0,8
tick,0x7ffd093d1d94,162360689,0,0x0,8
tick,0x7ffd093d1d94,162376594,0,0x0,8
tick,0x7ffd093d1d94,162391863,0,0x0,8
tick,0x7ffd093d1d94,162407110,0,0x0,8
tick,0x7ffd093d1d94,162422176,0,0x0,8
tick,0x7ffd093d1d94,162438028,0,0x0,8
tick,0x7ffd093d1d94,162453987,0,0x0,8
tick,0x7ffd093d1d94,162469915,0,0x0,8
tick,0x7ffd093d1d94,162485650,0,0x0,8
tick,0x7ffd093d1d94,162500799,0,0x0,8
tick,0x7ffd093d1d94,162516451,0,0x0,8
tick,0x7ffd093d1d94,162531859,0,0x0,8
tick,0x7ffd093d1d94,162547215,0,0x0,8
tick,0x7ffd093d1d94,162563149,0,0x0,8
tick,0x7ffd093d1d94,162578609,0,0x0,8
tick,0x7ffd093d1d94,162593942,0,0x0,8
tick,0x7ffd093d1d94,162609383,0,0x0,8
tick,0x7ffd093d1d94,162625496,0,0x0,8
tick,0x7ffd093d1d94,162641787,0,0x0,8
tick,0x7ffd093d1d94,162657120,0,0x0,8
tick,0x7ffd093d1d94,162672691,0,0x0,8
tick,0x7ffd093d1d94,162689500,0,0x0,8
tick,0x7ffd093d1d94,162703687,0,0x0,8
tick,0x7ffd093d1d94,162718731,0,0x0,8
tick,0x7ffd093d1d94,162733662,0,0x0,8
tick,0x7ffd093d1d94,162749862,0,0x0,8
tick,0x7ffd093d1d94,162764768,0,0x0,8
tick,0x7ffd093d1d94,162781661,0,0x0,8
tick,0x7ffd093d1d94,162797353,0,0x0,8
tick,0x7ffd093d1d94,162811354,0,0x0,8
tick,0x7ffd093d1d94,162829502,0,0x0,8
tick,0x7ffd093d1d94,162844256,0,0x0,8
tick,0x7ffd093d1d94,162868077,0,0x0,8
tick,0x7ffd093d1d94,162875265,0,0x0,8
tick,0x7ffd093d1d94,162891025,0,0x0,8
tick,0x7ffd093d1d94,162906838,0,0x0,8
tick,0x7ffd093d1d94,162922723,0,0x0,8
tick,0x7ffd093d1d94,162938961,0,0x0,8
tick,0x7ffd093d1d94,162956497,0,0x0,8
tick,0x7ffd093d1d94,162971164,0,0x0,8
tick,0x7ffd093d1d94,162986686,0,0x0,8
tick,0x7ffd093d1d94,163004638,0,0x0,8
tick,0x7ffd093d1d94,163015350,0,0x0,8
tick,0x7ffd093d1d94,163031809,0,0x0,8
tick,0x7ffd093d1d94,163047261,0,0x0,8
tick,0x7ffd093d1d94,163062411,0,0x0,8
tick,0x7ffd093d1d94,163078080,0,0x0,8
tick,0x7ffd093d1d94,163094757,0,0x0,8
tick,0x7ffd093d1d94,163109072,0,0x0,8
tick,0x7ffd093d1d94,163124124,0,0x0,8
tick,0x7ffd093d1d94,163140186,0,0x0,8
tick,0x7ffd093d1d94,163157570,0,0x0,8
tick,0x7ffd093d1d94,163172699,0,0x0,8
tick,0x7ffd093d1d94,163187726,0,0x0,8
tick,0x7ffd093d1d94,163203281,0,0x0,8
tick,0x7ffd093d1d94,163219319,0,0x0,8
tick,0x7ffd093d1d94,163234606,0,0x0,8
tick,0x7ffd093d1d94,163249930,0,0x0,8
tick,0x7ffd093d1d94,163265644,0,0x0,8
tick,0x7ffd093d1d94,163281312,0,0x0,8
tick,0x7ffd093d1d94,163297570,0,0x0,8
tick,0x7ffd093d1d94,163313295,0,0x0,8
tick,0x7ffd093d1d94,163328541,0,0x0,8
tick,0x7ffd093d1d94,163343040,0,0x0,8
tick,0x7ffd093d1d94,163358703,0,0x0,8
tick,0x7ffd093d1d94,163374702,0,0x0,8
tick,0x7ffd093d1d94,163390777,0,0x0,8
tick,0x7ffd093d1d94,163406398,0,0x0,8
tick,0x7ffd093d1d94,163422311,0,0x0,8
tick,0x7ffd093d1d94,163437097,0,0x0,8
tick,0x7ffd093d1d94,163453012,0,0x0,8
tick,0x7ffd093d1d94,163469098,0,0x0,8
tick,0x7ffd093d1d94,163484905,0,0x0,8
tick,0x7ffd093d1d94,163499943,0,0x0,8
tick,0x7ffd093d1d94,163515075,0,0x0,8
tick,0x7ffd093d1d94,163531580,0,0x0,8
tick,0x7ffd093d1d94,163546815,0,0x0,8
tick,0x7ffd093d1d94,163561852,0,0x0,8
tick,0x7ffd093d1d94,163577617,0,0x0,8
tick,0x7ffd093d1d94,163593732,0,0x0,8
tick,0x7ffd093d1d94,163608855,0,0x0,8
tick,0x7ffd093d1d94,163624174,0,0x0,8
tick,0x7ffd093d1d94,163639524,0,0x0,8
tick,0x7ffd093d1d94,163654988,0,0x0,8
tick,0x7ffd093d1d94,163670976,0,0x0,8
tick,0x7ffd093d1d94,163686502,0,0x0,8
tick,0x7ffd093d1d94,163702003,0,0x0,8
tick,0x7ffd093d1d94,163717203,0,0x0,8
tick,0x7ffd093d1d94,163734144,0,0x0,8
tick,0x7ffd093d1d94,163748545,0,0x0,8
tick,0x7ffd093d1d94,163763648,0,0x0,8
tick,0x7ffd093d1d94,163778512,0,0x0,8
tick,0x7ffd093d1d94,163793801,0,0x0,8
tick,0x7ffd093d1d94,163810077,0,0x0,8
tick,0x7ffd093d1d94,163825980,0,0x0,8
tick,0x7ffd093d1d94,163841404,0,0x0,8
tick,0x7ffd093d1d94,163857408,0,0x0,8
tick,0x7ffd093d1d94,163872452,0,0x0,8
tick,0x7ffd093d1d94,163887863,0,0x0,8
tick,0x7ffd093d1d94,163903219,0,0x0,8
tick,0x7ffd093d1d94,163919599,0,0x0,8
tick,0x7ffd093d1d94,163935019,0,0x0,8
tick,0x7ffd093d1d94,163950993,0,0x0,8
tick,0x7ffd093d1d94,163966866,0,0x0,8
tick,0x7ffd093d1d94,163982633,0,0x0,8
tick,0x7ffd093d1d94,163998780,0,0x0,8
tick,0x7ffd093d1d94,164014234,0,0x0,8
tick,0x7ffd093d1d94,164029880,0,0x0,8
tick,0x7ffd093d1d94,164050818,0,0x0,8
tick,0x7ffd093d1d94,164061396,0,0x0,8
tick,0x7ffd093d1d94,164076912,0,0x0,8
tick,0x7ffd093d1d94,164092474,0,0x0,8
tick,0x7ffd093d1d94,164108890,0,0x0,8
tick,0x7ffd093d1d94,164124345,0,0x0,8
tick,0x7ffd093d1d94,164139936,0,0x0,8
tick,0x7ffd093d1d94,164154870,0,0x0,8
tick,0x7ffd093d1d94,164170270,0,0x0,8
tick,0x7ffd093d1d94,164186458,0,0x0,8
tick,0x7ffd093d1d94,164201739,0,0x0,8
tick,0x7ffd093d1d94,164217410,0,0x0,8
tick,0x7ffd093d1d94,164233424,0,0x0,8
tick,0x7ffd093d1d94,164248632,0,0x0,8
tick,0x7ffd093d1d94,164265673,0,0x0,8
tick,0x7ffd093d1d94,164280670,0,0x0,8
tick,0x7ffd093d1d94,164295432,0,0x0,8
tick,0x7ffd093d1d94,164311216,0,0x0,8
tick,0x7ffd093d1d94,164327149,0,0x0,8
tick,0x7ffd093d1d94,164342355,0,0x0,8
tick,0x7ffd093d1d94,164358125,0,0x0,8
tick,0x7ffd093d1d94,164373703,0,0x0,8
tick,0x7ffd093d1d94,164389268,0,0x0,8
tick,0x7ffd093d1d94,164404660,0,0x0,8
tick,0x7ffd093d1d94,164420405,0,0x0,8
tick,0x7ffd093d1d94,164435283,0,0x0,8
tick,0x7ffd093d1d94,164451477,0,0x0,8
tick,0x7ffd093d1d94,164466159,0,0x0,8
tick,0x7ffd093d1d94,164481927,0,0x0,8
tick,0x7ffd093d1d94,164498287,0,0x0,8
tick,0x7ffd093d1d94,164512790,0,0x0,8
tick,0x7ffd093d1d94,164527723,0,0x0,8
tick,0x7ffd093d1d94,164543049,0,0x0,8
tick,0x7ffd093d1d94,164559501,0,0x0,8
tick,0x7ffd093d1d94,164574103,0,0x0,8
tick,0x7ffd093d1d94,164589121,0,0x0,8
tick,0x7ffd093d1d94,164604735,0,0x0,8
tick,0x7ffd093d1d94,164620539,0,0x0,8
tick,0x7ffd093d1d94,164635769,0,0x0,8
tick,0x7ffd093d1d94,164651219,0,0x0,8
tick,0x7ffd093d1d94,164666412,0,0x0,8
tick,0x7ffd093d1d94,164682526,0,0x0,8
tick,0x7ffd093d1d94,164698579,0,0x0,8
tick,0x7ffd093d1d94,164714973,0,0x0,8
tick,0x7ffd093d1d94,164729779,0,0x0,8
tick,0x7ffd093d1d94,164745124,0,0x0,8
tick,0x7ffd093d1d94,164760903,0,0x0,8
tick,0x7ffd093d1d94,164776216,0,0x0,8
tick,0x7ffd093d1d94,164791699,0,0x0,8
tick,0x7ffd093d1d94,164807048,0,0x0,8
tick,0x7ffd093d1d94,164822442,0,0x0,8
tick,0x7ffd093d1d94,164838422,0,0x0,8
tick,0x7ffd093d1d94,164853285,0,0x0,8
tick,0x7ffd093d1d94,164869028,0,0x0,8
tick,0x7ffd093d1d94,164884937,0,0x0,8
tick,0x7ffd093d1d94,164899714,0,0x0,8
tick,0x7ffd093d1d94,164914840,0,0x0,8
tick,0x7ffd093d1d94,164930783,0,0x0,8
tick,0x7ffd093d1d94,164946348,0,0x0,8
tick,0x7ffd093d1d94,164961341,0,0x0,8
tick,0x7ffd093d1d94,164977044,0,0x0,8
tick,0x7ffd093d1d94,164993271,0,0x0,8
tick,0x7ffd093d1d94,165007394,0,0x0,8
tick,0x7ffd093d1d94,165023225,0,0x0,8
tick,0x7ffd093d1d94,165039310,0,0x0,8
tick,0x7ffd093d1d94,165055336,0,0x0,8
tick,0x7ffd093d1d94,165070490,0,0x0,8
tick,0x7ffd093d1d94,165086152,0,0x0,8
tick,0x7ffd093d1d94,165100728,0,0x0,8
tick,0x7ffd093d1d94,165116861,0,0x0,8
tick,0x7ffd093d1d94,165133271,0,0x0,8
tick,0x7ffd093d1d94,165147028,0,0x0,8
tick,0x7ffd093d1d94,165162539,0,0x0,8
tick,0x7ffd093d1d94,165178561,0,0x0,8
tick,0x7ffd093d1d94,165194143,0,0x0,8
tick,0x7ffd093d1d94,165209555,0,0x0,8
tick,0x7ffd093d1d94,165224603,0,0x0,8
tick,0x7ffd093d1d94,165239334,0,0x0,8
tick,0x7ffd093d1d94,165255270,0,0x0,8
tick,0x7ffd093d1d94,165270920,0,0x0,8
tick,0x7ffd093d1d94,165286597,0,0x0,8
tick,0x7ffd093d1d94,165302283,0,0x0,8
tick,0x7ffd093d1d94,165318237,0,0x0,8
tick,0x7ffd093d1d94,165333805,0,0x0,8
tick,0x7ffd093d1d94,165349293,0,0x0,8
tick,0x7ffd093d1d94,165365605,0,0x0,8
tick,0x7ffd093d1d94,165380987,0,0x0,8
tick,0x7ffd093d1d94,165397168,0,0x0,8
tick,0x7ffd093d1d94,165411826,0,0x0,8
tick,0x7ffd093d1d94,165427197,0,0x0,8
tick,0x7ffd093d1d94,165443285,0,0x0,8
tick,0x7ffd093d1d94,165459683,0,0x0,8
tick,0x7ffd093d1d94,165475260,0,0x0,8
tick,0x7ffd093d1d94,165490977,0,0x0,8
tick,0x7ffd093d1d94,165506457,0,0x0,8
tick,0x7ffd093d1d94,165521210,0,0x0,8
tick,0x7ffd093d1d94,165536728,0,0x0,8
tick,0x7ffd093d1d94,165552275,0,0x0,8
tick,0x7ffd093d1d94,165567266,0,0x0,8
tick,0x7ffd093d1d94,165582497,0,0x0,8
tick,0x7ffd093d1d94,165597509,0,0x0,8
tick,0x7ffd093d1d94,165613443,0,0x0,8
tick,0x7ffd093d1d94,165628852,0,0x0,8
tick,0x7ffd093d1d94,165644881,0,0x0,8
tick,0x7ffd093d1d94,165660565,0,0x0,8
tick,0x7ffd093d1d94,165675676,0,0x0,8
tick,0x7ffd093d1d94,165691377,0,0x0,8
tick,0x7ffd093d1d94,165707807,0,0x0,8
tick,0x7ffd093d1d94,165722802,0,0x0,8
tick,0x7ffd093d1d94,165738324,0,0x0,8
tick,0x7ffd093d1d94,165754169,0,0x0,8
tick,0x7ffd093d1d94,165769606,0,0x0,8
tick,0x7ffd093d1d94,165785580,0,0x0,8
tick,0x7ffd093d1d94,165801642,0,0x0,8
tick,0x7ffd093d1d94,165817539,0,0x0,8
tick,0x7ffd093d1d94,165831994,0,0x0,8
tick,0x7ffd093d1d94,165847484,0,0x0,8
tick,0x7ffd093d1d94,165862809,0,0x0,8
tick,0x7ffd093d1d94,165879134,0,0x0,8
tick,0x7ffd093d1d94,165893848,0,0x0,8
tick,0x7ffd093d1d94,165909276,0,0x0,8
tick,0x7ffd093d1d94,165924200,0,0x0,8
tick,0x7ffd093d1d94,165940150,0,0x0,8
tick,0x7ffd093d1d94,165955396,0,0x0,8
tick,0x7ffd093d1d94,165970923,0,0x0,8
tick,0x7ffd093d1d94,165986463,0,0x0,8
tick,0x7ffd093d1d94,166001954,0,0x0,8
tick,0x7ffd093d1d94,166018419,0,0x0,8
tick,0x7ffd093d1d94,166033301,0,0x0,8
tick,0x7ffd093d1d94,166048401,0,0x0,8
tick,0x7ffd093d1d94,166064159,0,0x0,8
tick,0x7ffd093d1d94,166079497,0,0x0,8
tick,0x7ffd093d1d94,166094650,0,0x0,8
tick,0x7ffd093d1d94,166110190,0,0x0,8
tick,0x7ffd093d1d94,166126212,0,0x0,8
tick,0x7ffd093d1d94,166142187,0,0x0,8
tick,0x7ffd093d1d94,166157193,0,0x0,8
tick,0x7ffd093d1d94,166172233,0,0x0,8
tick,0x7ffd093d1d94,166187714,0,0x0,8
tick,0x7ffd093d1d94,166203717,0,0x0,8
tick,0x7ffd093d1d94,166219742,0,0x0,8
tick,0x7ffd093d1d94,166235716,0,0x0,8
tick,0x7ffd093d1d94,166251707,0,0x0,8
tick,0x7ffd093d1d94,166267096,0,0x0,8
tick,0x7ffd093d1d94,166283638,0,0x0,8
tick,0x7ffd093d1d94,166298294,0,0x0,8
tick,0x7ffd093d1d94,166313746,0,0x0,8
tick,0x7ffd093d1d94,166328837,0,0x0,8
tick,0x7ffd093d1d94,166344349,0,0x0,8
tick,0x7ffd093d1d94,166359654,0,0x0,8
tick,0x7ffd093d1d94,166375566,0,0x0,8
tick,0x7ffd093d1d94,166391205,0,0x0,8
tick,0x7ffd093d1d94,166406911,0,0x0,8
tick,0x7ffd093d1d94,166422173,0,0x0,8
tick,0x7ffd093d1d94,166437294,0,0x0,8
tick,0x7ffd093d1d94,166453327,0,0x0,8
tick,0x7ffd093d1d94,166469822,0,0x0,8
tick,0x7ffd093d1d94,166485526,0,0x0,8
tick,0x7ffd093d1d94,166501094,0,0x0,8
tick,0x7ffd093d1d94,166516263,0,0x0,8
tick,0x7ffd093d1d94,166532921,0,0x0,8
tick,0x7ffd093d1d94,166547191,0,0x0,8
tick,0x7ffd093d1d94,166562710,0,0x0,8
tick,0x7ffd093d1d94,166577923,0,0x0,8
tick,0x7ffd093d1d94,166593694,0,0x0,8
tick,0x7ffd093d1d94,166609078,0,0x0,8
tick,0x7ffd093d1d94,166624855,0,0x0,8
tick,0x7ffd093d1d94,166639863,0,0x0,8
tick,0x7ffd093d1d94,166655057,0,0x0,8
tick,0x7ffd093d1d94,166670503,0,0x0,8
tick,0x7ffd093d1d94,166686725,0,0x0,8
tick,0x7ffd093d1d94,166701389,0,0x0,8
tick,0x7ffd093d1d94,166717138,0,0x0,8
tick,0x7ffd093d1d94,166732660,0,0x0,8
tick,0x7ffd093d1d94,166748847,0,0x0,8
tick,0x7ffd093d1d94,166764238,0,0x0,8
tick,0x7ffd093d1d94,166779888,0,0x0,8
tick,0x7ffd093d1d94,166794970,0,0x0,8
tick,0x7ffd093d1d94,166810162,0,0x0,8
tick,0x7ffd093d1d94,166825835,0,0x0,8
tick,0x7ffd093d1d94,166840561,0,0x0,8
tick,0x7ffd093d1d94,166855549,0,0x0,8
tick,0x7ffd093d1d94,166871404,0,0x0,8
tick,0x7ffd093d1d94,166887370,0,0x0,8
tick,0x7ffd093d1d94,166903153,0,0x0,8
tick,0x7ffd093d1d94,166919131,0,0x0,8
tick,0x7ffd093d1d94,166934732,0,0x0,8
tick,0x7ffd093d1d94,166950207,0,0x0,8
tick,0x7ffd093d1d94,166965141,0,0x0,8
tick,0x7ffd093d1d94,166980512,0,0x0,8
tick,0x7ffd093d1d94,166995909,0,0x0,8
tick,0x7ffd093d1d94,167011680,0,0x0,8
tick,0x7ffd093d1d94,167026915,0,0x0,8
tick,0x7ffd093d1d94,167042901,0,0x0,8
tick,0x7ffd093d1d94,167058282,0,0x0,8
tick,0x7ffd093d1d94,167073822,0,0x0,8
tick,0x7ffd093d1d94,167089770,0,0x0,8
tick,0x7ffd093d1d94,167105832,0,0x0,8
tick,0x7ffd093d1d94,167120447,0,0x0,8
tick,0x7ffd093d1d94,167135432,0,0x0,8
tick,0x7ffd093d1d94,167150839,0,0x0,8
tick,0x7ffd093d1d94,167165622,0,0x0,8
tick,0x7ffd093d1d94,167180932,0,0x0,8
tick,0x7ffd093d1d94,167196929,0,0x0,8
tick,0x7ffd093d1d94,167213709,0,0x0,8
tick,0x7ffd093d1d94,167228969,0,0x0,8
tick,0x7ffd093d1d94,167244728,0,0x0,8
tick,0x7ffd093d1d94,167260216,0,0x0,8
tick,0x7ffd093d1d94,167275126,0,0x0,8
tick,0x7ffd093d1d94,167290307,0,0x0,8
tick,0x7ffd093d1d94,167305854,0,0x0,8
tick,0x7ffd093d1d94,167321252,0,0x0,8
tick,0x7ffd093d1d94,167336776,0,0x0,8
tick,0x7ffd093d1d94,167352505,0,0x0,8
tick,0x7ffd093d1d94,167368148,0,0x0,8
tick,0x7ffd093d1d94,167384121,0,0x0,8
tick,0x7ffd093d1d94,167400132,0,0x0,8
tick,0x7ffd093d1d94,167416103,0,0x0,8
tick,0x7ffd093d1d94,167432219,0,0x0,8
tick,0x7ffd093d1d94,167447945,0,0x0,8
tick,0x7ffd093d1d94,167463268,0,0x0,8
tick,0x7ffd093d1d94,167478489,0,0x0,8
tick,0x7ffd093d1d94,167494156,0,0x0,8
tick,0x7ffd093d1d94,167509849,0,0x0,8
tick,0x7ffd093d1d94,167525612,0,0x0,8
tick,0x7ffd093d1d94,167540965,0,0x0,8
tick,0x7ffd093d1d94,167556381,0,0x0,8
tick,0x7ffd093d1d94,167571834,0,0x0,8
tick,0x7ffd093d1d94,167588093,0,0x0,8
tick,0x7ffd093d1d94,167603300,0,0x0,8
tick,0x7ffd093d1d94,167618889,0,0x0,8
tick,0x7ffd093d1d94,167634998,0,0x0,8
tick,0x7ffd093d1d94,167649561,0,0x0,8
tick,0x7ffd093d1d94,167664941,0,0x0,8
tick,0x7ffd093d1d94,167680592,0,0x0,8
tick,0x7ffd093d1d94,167696076,0,0x0,8
tick,0x7ffd093d1d94,167711701,0,0x0,8
tick,0x7ffd093d1d94,167727033,0,0x0,8
tick,0x7ffd093d1d94,167742093,0,0x0,8
tick,0x7ffd093d1d94,167758413,0,0x0,8
tick,0x7ffd093d1d94,167773194,0,0x0,8
tick,0x7ffd093d1d94,167789013,0,0x0,8
tick,0x7ffd093d1d94,167804499,0,0x0,8
tick,0x7ffd093d1d94,167819762,0,0x0,8
tick,0x7ffd093d1d94,167835205,0,0x0,8
tick,0x7ffd093d1d94,167850676,0,0x0,8
tick,0x7ffd093d1d94,167865368,0,0x0,8
tick,0x7ffd093d1d94,167880008,0,0x0,8
tick,0x7ffd093d1d94,167895176,0,0x0,8
tick,0x7ffd093d1d94,167910588,0,0x0,8
tick,0x7ffd093d1d94,167926214,0,0x0,8
tick,0x7ffd093d1d94,167941116,0,0x0,8
tick,0x7ffd093d1d94,167955747,0,0x0,8
tick,0x7ffd093d1d94,167972137,0,0x0,8
tick,0x7ffd093d1d94,167987293,0,0x0,8
tick,0x7ffd093d1d94,168002967,0,0x0,8
tick,0x7ffd093d1d94,168017763,0,0x0,8
tick,0x7ffd093d1d94,168033028,0,0x0,8
tick,0x7ffd093d1d94,168048238,0,0x0,8
tick,0x7ffd093d1d94,168063973,0,0x0,8
tick,0x7ffd093d1d94,168079236,0,0x0,8
tick,0x7ffd093d1d94,168094317,0,0x0,8
tick,0x7ffd093d1d94,168109099,0,0x0,8
tick,0x7ffd093d1d94,168124031,0,0x0,8
tick,0x7ffd093d1d94,168139697,0,0x0,8
tick,0x7ffd093d1d94,168155661,0,0x0,8
tick,0x7ffd093d1d94,168170631,0,0x0,8
tick,0x7ffd093d1d94,168185410,0,0x0,8
tick,0x7ffd093d1d94,168201066,0,0x0,8
tick,0x7ffd093d1d94,168215643,0,0x0,8
tick,0x7ffd093d1d94,168230328,0,0x0,8
tick,0x7ffd093d1d94,168245230,0,0x0,8
tick,0x7ffd093d1d94,168260358,0,0x0,8
tick,0x7ffd093d1d94,168275446,0,0x0,8
tick,0x7ffd093d1d94,168290778,0,0x0,8
tick,0x7ffd093d1d94,168305615,0,0x0,8
tick,0x7ffd093d1d94,168320237,0,0x0,8
tick,0x7ffd093d1d94,168335062,0,0x0,8
tick,0x7ffd093d1d94,168349772,0,0x0,8
tick,0x7ffd093d1d94,168364554,0,0x0,8
tick,0x7ffd093d1d94,168379364,0,0x0,8
tick,0x7ffd093d1d94,168394379,0,0x0,8
tick,0x7ffd093d1d94,168409411,0,0x0,8
tick,0x7ffd093d1d94,168425755,0,0x0,8
tick,0x7ffd093d1d94,168440228,0,0x0,8
tick,0x7ffd093d1d94,168455714,0,0x0,8
tick,0x7ffd093d1d94,168470641,0,0x0,8
tick,0x7ffd093d1d94,168485998,0,0x0,8
tick,0x7ffd093d1d94,168501336,0,0x0,8
tick,0x7ffd093d1d94,168516869,0,0x0,8
tick,0x7ffd093d1d94,168532624,0,0x0,8
tick,0x7ffd093d1d94,168547870,0,0x0,8
tick,0x7ffd093d1d94,168563836,0,0x0,8
tick,0x7ffd093d1d94,168579035,0,0x0,8
tick,0x7ffd093d1d94,168594247,0,0x0,8
tick,0x7ffd093d1d94,168609987,0,0x0,8
tick,0x7ffd093d1d94,168625104,0,0x0,8
tick,0x7ffd093d1d94,168640880,0,0x0,8
tick,0x7ffd093d1d94,168656527,0,0x0,8
tick,0x7ffd093d1d94,168671933,0,0x0,8
tick,0x7ffd093d1d94,168687499,0,0x0,8
tick,0x7ffd093d1d94,168702783,0,0x0,8
tick,0x7ffd093d1d94,168718339,0,0x0,8
tick,0x7ffd093d1d94,168733400,0,0x0,8
tick,0x7ffd093d1d94,168749250,0,0x0,8
tick,0x7ffd093d1d94,168765399,0,0x0,8
tick,0x7ffd093d1d94,168780425,0,0x0,8
tick,0x7ffd093d1d94,168795805,0,0x0,8
tick,0x7ffd093d1d94,168811165,0,0x0,8
tick,0x7ffd093d1d94,168826600,0,0x0,8
tick,0x7ffd093d1d94,168842697,0,0x0,8
tick,0x7ffd093d1d94,168857972,0,0x0,8
tick,0x7ffd093d1d94,168874261,0,0x0,8
tick,0x7ffd093d1d94,168889837,0,0x0,8
tick,0x7ffd093d1d94,168905316,0,0x0,8
tick,0x7ffd093d1d94,168920310,0,0x0,8
tick,0x7ffd093d1d94,168935889,0,0x0,8
tick,0x7ffd093d1d94,168951531,0,0x0,8
tick,0x7ffd093d1d94,168966288,0,0x0,8
tick,0x7ffd093d1d94,168981101,0,0x0,8
tick,0x7ffd093d1d94,168997751,0,0x0,8
tick,0x7ffd093d1d94,169012874,0,0x0,8
tick,0x7ffd093d1d94,169028167,0,0x0,8
tick,0x7ffd093d1d94,169044102,0,0x0,8
tick,0x7ffd093d1d94,169059786,0,0x0,8
tick,0x7ffd093d1d94,169076203,0,0x0,8
tick,0x7ffd093d1d94,169092106,0,0x0,8
tick,0x7ffd093d1d94,169107842,0,0x0,8
tick,0x7ffd093d1d94,169122740,0,0x0,8
tick,0x7ffd093d1d94,169138858,0,0x0,8
tick,0x7ffd093d1d94,169155093,0,0x0,8
tick,0x7ffd093d1d94,169170743,0,0x0,8
tick,0x7ffd093d1d94,169186329,0,0x0,8
tick,0x7ffd093d1d94,169201843,0,0x0,8
tick,0x7ffd093d1d94,169216884,0,0x0,8
tick,0x7ffd093d1d94,169232740,0,0x0,8
tick,0x7ffd093d1d94,169248626,0,0x0,8
tick,0x7ffd093d1d94,169263770,0,0x0,8
tick,0x7ffd093d1d94,169279766,0,0x0,8
tick,0x7ffd093d1d94,169293413,0,0x0,8
tick,0x7ffd093d1d94,169308786,0,0x0,8
tick,0x7ffd093d1d94,169324252,0,0x0,8
tick,0x7ffd093d1d94,169339973,0,0x0,8
tick,0x7ffd093d1d94,169355005,0,0x0,8
tick,0x7ffd093d1d94,169371198,0,0x0,8
tick,0x7ffd093d1d94,169386678,0,0x0,8
tick,0x7ffd093d1d94,169402697,0,0x0,8
tick,0x7ffd093d1d94,169418300,0,0x0,8
tick,0x7ffd093d1d94,169433830,0,0x0,8
tick,0x7ffd093d1d94,169449704,0,0x0,8
tick,0x7ffd093d1d94,169464653,0,0x0,8
tick,0x7ffd093d1d94,169480802,0,0x0,8
tick,0x7ffd093d1d94,169495668,0,0x0,8
tick,0x7ffd093d1d94,169511720,0,0x0,8
tick,0x7ffd093d1d94,169527709,0,0x0,8
tick,0x7ffd093d1d94,169542930,0,0x0,8
tick,0x7ffd093d1d94,169558921,0,0x0,8
tick,0x7ffd093d1d94,169574325,0,0x0,8
tick,0x7ffd093d1d94,169589531,0,0x0,8
tick,0x7ffd093d1d94,169604731,0,0x0,8
tick,0x7ffd093d1d94,169620138,0,0x0,8
tick,0x7ffd093d1d94,169635536,0,0x0,8
tick,0x7ffd093d1d94,169651139,0,0x0,8
tick,0x7ffd093d1d94,169667026,0,0x0,8
tick,0x7ffd093d1d94,169682577,0,0x0,8
tick,0x7ffd093d1d94,169698404,0,0x0,8
tick,0x7ffd093d1d94,169713782,0,0x0,8
tick,0x7ffd093d1d94,169729053,0,0x0,8
tick,0x7ffd093d1d94,169744353,0,0x0,8
tick,0x7ffd093d1d94,169760107,0,0x0,8
tick,0x7ffd093d1d94,169776089,0,0x0,8
tick,0x7ffd093d1d94,169791676,0,0x0,8
tick,0x7ffd093d1d94,169807715,0,0x0,8
tick,0x7ffd093d1d94,169823473,0,0x0,8
tick,0x7ffd093d1d94,169839174,0,0x0,8
tick,0x7ffd093d1d94,169854086,0,0x0,8
tick,0x7ffd093d1d94,169869994,0,0x0,8
tick,0x7ffd093d1d94,169885303,0,0x0,8
tick,0x7ffd093d1d94,169900297,0,0x0,8
tick,0x7ffd093d1d94,169916142,0,0x0,8
tick,0x7ffd093d1d94,169932123,0,0x0,8
tick,0x7ffd093d1d94,169947739,0,0x0,8
tick,0x7ffd093d1d94,169962984,0,0x0,8
tick,0x7ffd093d1d94,169977514,0,0x0,8
tick,0x7ffd093d1d94,169992922,0,0x0,8
tick,0x7ffd093d1d94,170008898,0,0x0,8
tick,0x7ffd093d1d94,170023623,0,0x0,8
tick,0x7ffd093d1d94,170039386,0,0x0,8
tick,0x7ffd093d1d94,170054561,0,0x0,8
tick,0x7ffd093d1d94,170070660,0,0x0,8
tick,0x7ffd093d1d94,170087065,0,0x0,8
tick,0x7ffd093d1d94,170103233,0,0x0,8
tick,0x7ffd093d1d94,170118396,0,0x0,8
tick,0x7ffd093d1d94,170134507,0,0x0,8
tick,0x7ffd093d1d94,170150177,0,0x0,8
tick,0x7ffd093d1d94,170166192,0,0x0,8
tick,0x7ffd093d1d94,170181013,0,0x0,8
tick,0x7ffd093d1d94,170196466,0,0x0,8
tick,0x7ffd093d1d94,170211973,0,0x0,8
tick,0x7ffd093d1d94,170227502,0,0x0,8
tick,0x7ffd093d1d94,170242950,0,0x0,8
tick,0x7ffd093d1d94,170258325,0,0x0,8
tick,0x7ffd093d1d94,170273494,0,0x0,8
tick,0x7ffd093d1d94,170288963,0,0x0,8
tick,0x7ffd093d1d94,170304453,0,0x0,8
tick,0x7ffd093d1d94,170319950,0,0x0,8
tick,0x7ffd093d1d94,170335397,0,0x0,8
tick,0x7ffd093d1d94,170350874,0,0x0,8
tick,0x7ffd093d1d94,170366426,0,0x0,8
tick,0x7ffd093d1d94,170382187,0,0x0,8
tick,0x7ffd093d1d94,170397505,0,0x0,8
tick,0x7ffd093d1d94,170413375,0,0x0,8
tick,0x7ffd093d1d94,170428850,0,0x0,8
tick,0x7ffd093d1d94,170444734,0,0x0,8
tick,0x7ffd093d1d94,170460157,0,0x0,8
tick,0x7ffd093d1d94,170474891,0,0x0,8
tick,0x7ffd093d1d94,170490371,0,0x0,8
tick,0x7ffd093d1d94,170506558,0,0x0,8
tick,0x7ffd093d1d94,170522442,0,0x0,8
tick,0x7ffd093d1d94,170537249,0,0x0,8
tick,0x7ffd093d1d94,170552698,0,0x0,8
tick,0x7ffd093d1d94,170568454,0,0x0,8
tick,0x7ffd093d1d94,170584447,0,0x0,8
tick,0x7ffd093d1d94,170599916,0,0x0,8
tick,0x7ffd093d1d94,170615832,0,0x0,8
tick,0x7ffd093d1d94,170631124,0,0x0,8
tick,0x7ffd093d1d94,170647178,0,0x0,8
tick,0x7ffd093d1d94,170662788,0,0x0,8
tick,0x7ffd093d1d94,170678775,0,0x0,8
tick,0x7ffd093d1d94,170694279,0,0x0,8
tick,0x7ffd093d1d94,170710496,0,0x0,8
tick,0x7ffd093d1d94,170726012,0,0x0,8
tick,0x7ffd093d1d94,170741662,0,0x0,8
tick,0x7ffd093d1d94,170757120,0,0x0,8
tick,0x7ffd093d1d94,170772882,0,0x0,8
tick,0x7ffd093d1d94,170787559,0,0x0,8
tick,0x7ffd093d1d94,170803234,0,0x0,8
tick,0x7ffd093d1d94,170818100,0,0x0,8
tick,0x7ffd093d1d94,170833774,0,0x0,8
tick,0x7ffd093d1d94,170848480,0,0x0,8
tick,0x7ffd093d1d94,170864548,0,0x0,8
tick,0x7ffd093d1d94,170879382,0,0x0,8
tick,0x7ffd093d1d94,170894920,0,0x0,8
tick,0x7ffd093d1d94,170910662,0,0x0,8
tick,0x7ffd093d1d94,170926295,0,0x0,8
tick,0x7ffd093d1d94,170941725,0,0x0,8
tick,0x7ffd093d1d94,170956875,0,0x0,8
tick,0x7ffd093d1d94,170972774,0,0x0,8
tick,0x7ffd093d1d94,170988020,0,0x0,8
tick,0x7ffd093d1d94,171003563,0,0x0,8
tick,0x7ffd093d1d94,171019381,0,0x0,8
tick,0x7ffd093d1d94,171034922,0,0x0,8
tick,0x7ffd093d1d94,171050203,0,0x0,8
tick,0x7ffd093d1d94,171065797,0,0x0,8
tick,0x7ffd093d1d94,171081116,0,0x0,8
tick,0x7ffd093d1d94,171096995,0,0x0,8
tick,0x7ffd093d1d94,171112186,0,0x0,8
tick,0x7ffd093d1d94,171127009,0,0x0,8
tick,0x7ffd093d1d94,171143418,0,0x0,8
tick,0x7ffd093d1d94,171159413,0,0x0,8
tick,0x7ffd093d1d94,171174679,0,0x0,8
tick,0x7ffd093d1d94,171189826,0,0x0,8
tick,0x7ffd093d1d94,171205112,0,0x0,8
tick,0x7ffd093d1d94,171221137,0,0x0,8
tick,0x7ffd093d1d94,171236488,0,0x0,8
tick,0x7ffd093d1d94,171251940,0,0x0,8
tick,0x7ffd093d1d94,171267798,0,0x0,8
tick,0x7ffd093d1d94,171283329,0,0x0,8
tick,0x7ffd093d1d94,171298268,0,0x0,8
tick,0x7ffd093d1d94,171314039,0,0x0,8
tick,0x7ffd093d1d94,171330190,0,0x0,8
tick,0x7ffd093d1d94,171347349,0,0x0,8
tick,0x7ffd093d1d94,171361496,0,0x0,8
tick,0x7ffd093d1d94,171377094,0,0x0,8
tick,0x7ffd093d1d94,171393046,0,0x0,8
tick,0x7ffd093d1d94,171408729,0,0x0,8
tick,0x7ffd093d1d94,171424467,0,0x0,8
tick,0x7ffd093d1d94,171439835,0,0x0,8
tick,0x7ffd093d1d94,171455950,0,0x0,8
tick,0x7ffd093d1d94,171471972,0,0x0,8
tick,0x7ffd093d1d94,171487212,0,0x0,8
tick,0x7ffd093d1d94,171503354,0,0x0,8
tick,0x7ffd093d1d94,171519072,0,0x0,8
tick,0x7ffd093d1d94,171534564,0,0x0,8
tick,0x7ffd093d1d94,171550394,0,0x0,8
tick,0x7ffd093d1d94,171566223,0,0x0,8
tick,0x7ffd093d1d94,171582435,0,0x0,8
tick,0x7ffd093d1d94,171598489,0,0x0,8
tick,0x7ffd093d1d94,171614126,0,0x0,8
tick,0x7ffd093d1d94,171630002,0,0x0,8
tick,0x7ffd093d1d94,171646463,0,0x0,8
tick,0x7ffd093d1d94,171661836,0,0x0,8
tick,0x7ffd093d1d94,171677666,0,0x0,8
tick,0x7ffd093d1d94,171692973,0,0x0,8
tick,0x7ffd093d1d94,171708999,0,0x0,8
tick,0x7ffd093d1d94,171724478,0,0x0,8
tick,0x7ffd093d1d94,171740382,0,0x0,8
tick,0x7ffd093d1d94,171755458,0,0x0,8
tick,0x7ffd093d1d94,171770421,0,0x0,8
tick,0x7ffd093d1d94,171786276,0,0x0,8
tick,0x7ffd093d1d94,171802074,0,0x0,8
tick,0x7ffd093d1d94,171817132,0,0x0,8
tick,0x7ffd093d1d94,171833114,0,0x0,8
tick,0x7ffd093d1d94,171849126,0,0x0,8
tick,0x7ffd093d1d94,171863847,0,0x0,8
tick,0x7ffd093d1d94,171880452,0,0x0,8
tick,0x7ffd093d1d94,171895997,0,0x0,8
tick,0x7ffd093d1d94,171910907,0,0x0,8
tick,0x7ffd093d1d94,171926571,0,0x0,8
tick,0x7ffd093d1d94,171941083,0,0x0,8
tick,0x7ffd093d1d94,171957135,0,0x0,8
tick,0x7ffd093d1d94,171972487,0,0x0,8
tick,0x7ffd093d1d94,171988482,0,0x0,8
tick,0x7ffd093d1d94,172004087,0,0x0,8
tick,0x7ffd093d1d94,172019780,0,0x0,8
tick,0x7ffd093d1d94,172035715,0,0x0,8
tick,0x7ffd093d1d94,172051603,0,0x0,8
tick,0x7ffd093d1d94,172066809,0,0x0,8
tick,0x7ffd093d1d94,172081758,0,0x0,8
tick,0x7ffd093d1d94,172097682,0,0x0,8
tick,0x7ffd093d1d94,172112857,0,0x0,8
tick,0x7ffd093d1d94,172128059,0,0x0,8
tick,0x7ffd093d1d94,172143720,0,0x0,8
tick,0x7ffd093d1d94,172159550,0,0x0,8
tick,0x7ffd093d1d94,172175364,0,0x0,8
tick,0x7ffd093d1d94,172191066,0,0x0,8
tick,0x7ffd093d1d94,172207108,0,0x0,8
tick,0x7ffd093d1d94,172222661,0,0x0,8
tick,0x7ffd093d1d94,172238188,0,0x0,8
tick,0x7ffd093d1d94,172253830,0,0x0,8
tick,0x7ffd093d1d94,172269145,0,0x0,8
tick,0x7ffd093d1d94,172284990,0,0x0,8
tick,0x7ffd093d1d94,172301030,0,0x0,8
tick,0x7ffd093d1d94,172316315,0,0x0,8
tick,0x7ffd093d1d94,172331822,0,0x0,8
tick,0x7ffd093d1d94,172347646,0,0x0,8
tick,0x7ffd093d1d94,172362813,0,0x0,8
tick,0x7ffd093d1d94,172378256,0,0x0,8
tick,0x7ffd093d1d94,172394574,0,0x0,8
tick,0x7ffd093d1d94,172410005,0,0x0,8
tick,0x7ffd093d1d94,172425185,0,0x0,8
tick,0x7ffd093d1d94,172439777,0,0x0,8
tick,0x7ffd093d1d94,172454994,0,0x0,8
tick,0x7ffd093d1d94,172470840,0,0x0,8
tick,0x7ffd093d1d94,172485943,0,0x0,8
tick,0x7ffd093d1d94,172501410,0,0x0,8
tick,0x7ffd093d1d94,172516992,0,0x0,8
tick,0x7ffd093d1d94,172532613,0,0x0,8
tick,0x7ffd093d1d94,172548653,0,0x0,8
tick,0x7ffd093d1d94,172564378,0,0x0,8
tick,0x7ffd093d1d94,172580699,0,0x0,8
tick,0x7ffd093d1d94,172597357,0,0x0,8
tick,0x7ffd093d1d94,172612650,0,0x0,8
tick,0x7ffd093d1d94,172628411,0,0x0,8
tick,0x7ffd093d1d94,172642968,0,0x0,8
tick,0x7ffd093d1d94,172658099,0,0x0,8
tick,0x7ffd093d1d94,172673797,0,0x0,8
tick,0x7ffd093d1d94,172689073,0,0x0,8
tick,0x7ffd093d1d94,172704162,0,0x0,8
tick,0x7ffd093d1d94,172719784,0,0x0,8
tick,0x7ffd093d1d94,172735481,0,0x0,8
tick,0x7ffd093d1d94,172750335,0,0x0,8
tick,0x7ffd093d1d94,172765810,0,0x0,8
tick,0x7ffd093d1d94,172781672,0,0x0,8
tick,0x7ffd093d1d94,172797052,0,0x0,8
tick,0x7ffd093d1d94,172813029,0,0x0,8
tick,0x7ffd093d1d94,172828960,0,0x0,8
tick,0x7ffd093d1d94,172843998,0,0x0,8
tick,0x7ffd093d1d94,172859371,0,0x0,8
tick,0x7ffd093d1d94,172875205,0,0x0,8
tick,0x7ffd093d1d94,172890487,0,0x0,8
tick,0x7ffd093d1d94,172905888,0,0x0,8
tick,0x7ffd093d1d94,172920549,0,0x0,8
tick,0x7ffd093d1d94,172936291,0,0x0,8
tick,0x7ffd093d1d94,172952291,0,0x0,8
tick,0x7ffd093d1d94,172968287,0,0x0,8
tick,0x7ffd093d1d94,172984290,0,0x0,8
tick,0x7ffd093d1d94,173000360,0,0x0,8
tick,0x7ffd093d1d94,173016021,0,0x0,8
tick,0x7ffd093d1d94,173031867,0,0x0,8
tick,0x7ffd093d1d94,173047686,0,0x0,8
tick,0x7ffd093d1d94,173063113,0,0x0,8
tick,0x7ffd093d1d94,173078672,0,0x0,8
tick,0x7ffd093d1d94,173093939,0,0x0,8
tick,0x7ffd093d1d94,173109923,0,0x0,8
tick,0x7ffd093d1d94,173125184,0,0x0,8
tick,0x7ffd093d1d94,173141243,0,0x0,8
tick,0x7ffd093d1d94,173157304,0,0x0,8
tick,0x7ffd093d1d94,173172748,0,0x0,8
tick,0x7ffd093d1d94,173187940,0,0x0,8
tick,0x7ffd093d1d94,173203244,0,0x0,8
tick,0x7ffd093d1d94,173218746,0,0x0,8
tick,0x7ffd093d1d94,173234772,0,0x0,8
tick,0x7ffd093d1d94,173250377,0,0x0,8
tick,0x7ffd093d1d94,173265358,0,0x0,8
tick,0x7ffd093d1d94,173281502,0,0x0,8
tick,0x7ffd093d1d94,173297422,0,0x0,8
tick,0x7ffd093d1d94,173312970,0,0x0,8
tick,0x7ffd093d1d94,173328104,0,0x0,8
tick,0x7ffd093d1d94,173343959,0,0x0,8
tick,0x7ffd093d1d94,173358904,0,0x0,8
tick,0x7ffd093d1d94,173374399,0,0x0,8
tick,0x7ffd093d1d94,173389772,0,0x0,8
tick,0x7ffd093d1d94,173405945,0,0x0,8
tick,0x7ffd093d1d94,173421470,0,0x0,8
tick,0x7ffd093d1d94,173437445,0,0x0,8
tick,0x7ffd093d1d94,173453114,0,0x0,8
tick,0x7ffd093d1d94,173468132,0,0x0,8
tick,0x7ffd093d1d94,173484032,0,0x0,8
tick,0x7ffd093d1d94,173499763,0,0x0,8
tick,0x7ffd093d1d94,173516182,0,0x0,8
tick,0x7ffd093d1d94,173531491,0,0x0,8
tick,0x7ffd093d1d94,173546792,0,0x0,8
tick,0x7ffd093d1d94,173562272,0,0x0,8
tick,0x7ffd093d1d94,173578525,0,0x0,8
tick,0x7ffd093d1d94,173593699,0,0x0,8
tick,0x7ffd093d1d94,173609161,0,0x0,8
tick,0x7ffd093d1d94,173624840,0,0x0,8
tick,0x7ffd093d1d94,173640142,0,0x0,8
tick,0x7ffd093d1d94,173655936,0,0x0,8
tick,0x7ffd093d1d94,173671715,0,0x0,8
tick,0x7ffd093d1d94,173687872,0,0x0,8
tick,0x7ffd093d1d94,173703458,0,0x0,8
tick,0x7ffd093d1d94,173719482,0,0x0,8
tick,0x7ffd093d1d94,173734857,0,0x0,8
tick,0x7ffd093d1d94,173749847,0,0x0,8
tick,0x7ffd093d1d94,173764862,0,0x0,8
tick,0x7ffd093d1d94,173780101,0,0x0,8
tick,0x7ffd093d1d94,173796340,0,0x0,8
tick,0x7ffd093d1d94,173812481,0,0x0,8
tick,0x7ffd093d1d94,173827430,0,0x0,8
tick,0x7ffd093d1d94,173842778,0,0x0,8
tick,0x7ffd093d1d94,173858183,0,0x0,8
tick,0x7ffd093d1d94,173874105,0,0x0,8
tick,0x7ffd093d1d94,173889512,0,0x0,8
tick,0x7ffd093d1d94,173905449,0,0x0,8
tick,0x7ffd093d1d94,173920552,0,0x0,8
tick,0x7ffd093d1d94,173936090,0,0x0,8
tick,0x7ffd093d1d94,173951749,0,0x0,8
tick,0x7ffd093d1d94,173967269,0,0x0,8
tick,0x7ffd093d1d94,173982565,0,0x0,8
tick,0x7ffd093d1d94,173998214,0,0x0,8
tick,0x7ffd093d1d94,174013534,0,0x0,8
tick,0x7ffd093d1d94,174029689,0,0x0,8
tick,0x7ffd093d1d94,174045938,0,0x0,8
tick,0x7ffd093d1d94,174061708,0,0x0,8
tick,0x7ffd093d1d94,174077999,0,0x0,8
tick,0x7ffd093d1d94,174093558,0,0x0,8
tick,0x7ffd093d1d94,174108713,0,0x0,8
tick,0x7ffd093d1d94,174124472,0,0x0,8
tick,0x7ffd093d1d94,174140168,0,0x0,8
tick,0x7ffd093d1d94,174155403,0,0x0,8
tick,0x7ffd093d1d94,174171329,0,0x0,8
tick,0x7ffd093d1d94,174187142,0,0x0,8
tick,0x7ffd093d1d94,174203071,0,0x0,8
tick,0x7ffd093d1d94,174218017,0,0x0,8
tick,0x7ffd093d1d94,174233338,0,0x0,8
tick,0x7ffd093d1d94,174248672,0,0x0,8
tick,0x7ffd093d1d94,174264185,0,0x0,8
tick,0x7ffd093d1d94,174279647,0,0x0,8
tick,0x7ffd093d1d94,174295354,0,0x0,8
tick,0x7ffd093d1d94,174310903,0,0x0,8
tick,0x7ffd093d1d94,174326202,0,0x0,8
tick,0x7ffd093d1d94,174342366,0,0x0,8
tick,0x7ffd093d1d94,174357377,0,0x0,8
tick,0x7ffd093d1d94,174372842,0,0x0,8
tick,0x7ffd093d1d94,174387998,0,0x0,8
tick,0x7ffd093d1d94,174403385,0,0x0,8
tick,0x7ffd093d1d94,174418960,0,0x0,8
tick,0x7ffd093d1d94,174434265,0,0x0,8
tick,0x7ffd093d1d94,174449791,0,0x0,8
tick,0x7ffd093d1d94,174465814,0,0x0,8
tick,0x7ffd093d1d94,174480999,0,0x0,8
tick,0x7ffd093d1d94,174496274,0,0x0,8
tick,0x7ffd093d1d94,174512269,0,0x0,8
tick,0x7ffd093d1d94,174526889,0,0x0,8
tick,0x7ffd093d1d94,174542570,0,0x0,8
tick,0x7ffd093d1d94,174558834,0,0x0,8
tick,0x7ffd093d1d94,174574434,0,0x0,8
tick,0x7ffd093d1d94,174590805,0,0x0,8
tick,0x7ffd093d1d94,174606269,0,0x0,8
tick,0x7ffd093d1d94,174622017,0,0x0,8
tick,0x7ffd093d1d94,174637354,0,0x0,8
tick,0x7ffd093d1d94,174652772,0,0x0,8
tick,0x7ffd093d1d94,174667888,0,0x0,8
tick,0x7ffd093d1d94,174684170,0,0x0,8
tick,0x7ffd093d1d94,174699724,0,0x0,8
tick,0x7ffd093d1d94,174714865,0,0x0,8
tick,0x7ffd093d1d94,174730958,0,0x0,8
tick,0x7ffd093d1d94,174746632,0,0x0,8
tick,0x7ffd093d1d94,174762045,0,0x0,8
tick,0x7ffd093d1d94,174777284,0,0x0,8
tick,0x7ffd093d1d94,174793453,0,0x0,8
tick,0x7ffd093d1d94,174809359,0,0x0,8
tick,0x7ffd093d1d94,174824867,0,0x0,8
tick,0x7ffd093d1d94,174840298,0,0x0,8
tick,0x7ffd093d1d94,174855719,0,0x0,8
tick,0x7ffd093d1d94,174870994,0,0x0,8
tick,0x7ffd093d1d94,174886345,0,0x0,8
tick,0x7ffd093d1d94,174901095,0,0x0,8
tick,0x7ffd093d1d94,174917036,0,0x0,8
tick,0x7ffd093d1d94,174932179,0,0x0,8
tick,0x7ffd093d1d94,174947791,0,0x0,8
tick,0x7ffd093d1d94,174963258,0,0x0,8
tick,0x7ffd093d1d94,174979663,0,0x0,8
tick,0x7ffd093d1d94,174994269,0,0x0,8
tick,0x7ffd093d1d94,175009957,0,0x0,8
tick,0x7ffd093d1d94,175025584,0,0x0,8
tick,0x7ffd093d1d94,175041059,0,0x0,8
tick,0x7ffd093d1d94,175056227,0,0x0,8
tick,0x7ffd093d1d94,175071759,0,0x0,8
tick,0x7ffd093d1d94,175086873,0,0x0,8
tick,0x7ffd093d1d94,175101765,0,0x0,8
tick,0x7ffd093d1d94,175118033,0,0x0,8
tick,0x7ffd093d1d94,175135320,0,0x0,8
tick,0x7ffd093d1d94,175148343,0,0x0,8
tick,0x7ffd093d1d94,175163246,0,0x0,8
tick,0x7ffd093d1d94,175178767,0,0x0,8
tick,0x7ffd093d1d94,175194769,0,0x0,8
tick,0x7ffd093d1d94,175210495,0,0x0,8
tick,0x7ffd093d1d94,175225635,0,0x0,8
tick,0x7ffd093d1d94,175241520,0,0x0,8
tick,0x7ffd093d1d94,175256600,0,0x0,8
tick,0x7ffd093d1d94,175272372,0,0x0,8
tick,0x7ffd093d1d94,175288316,0,0x0,8
tick,0x7ffd093d1d94,175303611,0,0x0,8
tick,0x7ffd093d1d94,175319112,0,0x0,8
tick,0x7ffd093d1d94,175335203,0,0x0,8
tick,0x7ffd093d1d94,175350719,0,0x0,8
tick,0x7ffd093d1d94,175366598,0,0x0,8
tick,0x7ffd093d1d94,175382346,0,0x0,8
tick,0x7ffd093d1d94,175398164,0,0x0,8
tick,0x7ffd093d1d94,175413760,0,0x0,8
tick,0x7ffd093d1d94,175429105,0,0x0,8
tick,0x7ffd093d1d94,175444125,0,0x0,8
tick,0x7ffd093d1d94,175459492,0,0x0,8
tick,0x7ffd093d1d94,175475007,0,0x0,8
tick,0x7ffd093d1d94,175490437,0,0x0,8
tick,0x7ffd093d1d94,175505915,0,0x0,8
tick,0x7ffd093d1d94,175521022,0,0x0,8
tick,0x7ffd093d1d94,175536798,0,0x0,8
tick,0x7ffd093d1d94,175552796,0,0x0,8
tick,0x7ffd093d1d94,175568746,0,0x0,8
tick,0x7ffd093d1d94,175584536,0,0x0,8
tick,0x7ffd093d1d94,175600351,0,0x0,8
tick,0x7ffd093d1d94,175615934,0,0x0,8
tick,0x7ffd093d1d94,175631188,0,0x0,8
tick,0x7ffd093d1d94,175646416,0,0x0,8
tick,0x7ffd093d1d94,175661627,0,0x0,8
tick,0x7ffd093d1d94,175677328,0,0x0,8
tick,0x7ffd093d1d94,175692316,0,0x0,8
tick,0x7ffd093d1d94,175708511,0,0x0,8
tick,0x7ffd093d1d94,175724562,0,0x0,8
tick,0x7ffd093d1d94,175740797,0,0x0,8
tick,0x7ffd093d1d94,175757045,0,0x0,8
tick,0x7ffd093d1d94,175773526,0,0x0,8
tick,0x7ffd093d1d94,175788621,0,0x0,8
tick,0x7ffd093d1d94,175805014,0,0x0,8
tick,0x7ffd093d1d94,175820766,0,0x0,8
tick,0x7ffd093d1d94,175836748,0,0x0,8
tick,0x7ffd093d1d94,175852239,0,0x0,8
tick,0x7ffd093d1d94,175868525,0,0x0,8
tick,0x7ffd093d1d94,175884280,0,0x0,8
tick,0x7ffd093d1d94,175899791,0,0x0,8
tick,0x7ffd093d1d94,175915426,0,0x0,8
tick,0x7ffd093d1d94,175930586,0,0x0,8
tick,0x7ffd093d1d94,175945807,0,0x0,8
tick,0x7ffd093d1d94,175961891,0,0x0,8
tick,0x7ffd093d1d94,175977611,0,0x0,8
tick,0x7ffd093d1d94,175992896,0,0x0,8
tick,0x7ffd093d1d94,176007532,0,0x0,8
tick,0x7ffd093d1d94,176023111,0,0x0,8
tick,0x7ffd093d1d94,176038252,0,0x0,8
tick,0x7ffd093d1d94,176053774,0,0x0,8
tick,0x7ffd093d1d94,176068942,0,0x0,8
tick,0x7ffd093d1d94,176084092,0,0x0,8
tick,0x7ffd093d1d94,176100100,0,0x0,8
tick,0x7ffd093d1d94,176115414,0,0x0,8
tick,0x7ffd093d1d94,176131084,0,0x0,8
tick,0x7ffd093d1d94,176146714,0,0x0,8
tick,0x7ffd093d1d94,176162715,0,0x0,8
tick,0x7ffd093d1d94,176178159,0,0x0,8
tick,0x7ffd093d1d94,176193782,0,0x0,8
tick,0x7ffd093d1d94,176209824,0,0x0,8
tick,0x7ffd093d1d94,176225158,0,0x0,8
tick,0x7ffd093d1d94,176240277,0,0x0,8
tick,0x7ffd093d1d94,176255879,0,0x0,8
tick,0x7ffd093d1d94,176271953,0,0x0,8
tick,0x7ffd093d1d94,176287992,0,0x0,8
tick,0x7ffd093d1d94,176303527,0,0x0,8
tick,0x7ffd093d1d94,176318749,0,0x0,8
tick,0x7ffd093d1d94,176334656,0,0x0,8
tick,0x7ffd093d1d94,176350470,0,0x0,8
tick,0x7ffd093d1d94,176366499,0,0x0,8
tick,0x7ffd093d1d94,176382461,0,0x0,8
tick,0x7ffd093d1d94,176398689,0,0x0,8
tick,0x7ffd093d1d94,176414083,0,0x0,8
tick,0x7ffd093d1d94,176429069,0,0x0,8
tick,0x7ffd093d1d94,176444107,0,0x0,8
tick,0x7ffd093d1d94,176460044,0,0x0,8
tick,0x7ffd093d1d94,176475062,0,0x0,8
tick,0x7ffd093d1d94,176490057,0,0x0,8
tick,0x7ffd093d1d94,176505563,0,0x0,8
tick,0x7ffd093d1d94,176522000,0,0x0,8
tick,0x7ffd093d1d94,176536623,0,0x0,8
tick,0x7ffd093d1d94,176551588,0,0x0,8
tick,0x7ffd093d1d94,176566917,0,0x0,8
tick,0x7ffd093d1d94,176582542,0,0x0,8
tick,0x7ffd093d1d94,176598372,0,0x0,8
tick,0x7ffd093d1d94,176615206,0,0x0,8
tick,0x7ffd093d1d94,176630141,0,0x0,8
tick,0x7ffd093d1d94,176646153,0,0x0,8
tick,0x7ffd093d1d94,176662666,0,0x0,8
tick,0x7ffd093d1d94,176678636,0,0x0,8
tick,0x7ffd093d1d94,176693700,0,0x0,8
tick,0x7ffd093d1d94,176709955,0,0x0,8
tick,0x7ffd093d1d94,176725139,0,0x0,8
tick,0x7ffd093d1d94,176741112,0,0x0,8
tick,0x7ffd093d1d94,176756525,0,0x0,8
tick,0x7ffd093d1d94,176771707,0,0x0,8
tick,0x7ffd093d1d94,176787161,0,0x0,8
tick,0x7ffd093d1d94,176802781,0,0x0,8
tick,0x7ffd093d1d94,176818289,0,0x0,8
tick,0x7ffd093d1d94,176833302,0,0x0,8
tick,0x7ffd093d1d94,176848182,0,0x0,8
tick,0x7ffd093d1d94,176863725,0,0x0,8
tick,0x7ffd093d1d94,176878768,0,0x0,8
tick,0x7ffd093d1d94,176894807,0,0x0,8
tick,0x7ffd093d1d94,176910058,0,0x0,8
tick,0x7ffd093d1d94,176925453,0,0x0,8
tick,0x7ffd093d1d94,176940746,0,0x0,8
tick,0x7ffd093d1d94,176956202,0,0x0,8
tick,0x7ffd093d1d94,176971492,0,0x0,8
tick,0x7ffd093d1d94,176987193,0,0x0,8
tick,0x7ffd093d1d94,177002903,0,0x0,8
tick,0x7ffd093d1d94,177018478,0,0x0,8
tick,0x7ffd093d1d94,177033414,0,0x0,8
tick,0x7ffd093d1d94,177049352,0,0x0,8
tick,0x7ffd093d1d94,177064997,0,0x0,8
tick,0x7ffd093d1d94,177081360,0,0x0,8
tick,0x7ffd093d1d94,177096560,0,0x0,8
tick,0x7ffd093d1d94,177112368,0,0x0,8
tick,0x7ffd093d1d94,177127829,0,0x0,8
tick,0x7ffd093d1d94,177142801,0,0x0,8
tick,0x7ffd093d1d94,177158938,0,0x0,8
tick,0x7ffd093d1d94,177173752,0,0x0,8
tick,0x7ffd093d1d94,177189713,0,0x0,8
tick,0x7ffd093d1d94,177205718,0,0x0,8
tick,0x7ffd093d1d94,177221456,0,0x0,8
tick,0x7ffd093d1d94,177236793,0,0x0,8
tick,0x7ffd093d1d94,177251608,0,0x0,8
tick,0x7ffd093d1d94,177267167,0,0x0,8
tick,0x7ffd093d1d94,177281887,0,0x0,8
tick,0x7ffd093d1d94,177298037,0,0x0,8
tick,0x7ffd093d1d94,177313265,0,0x0,8
tick,0x7ffd093d1d94,177329251,0,0x0,8
tick,0x7ffd093d1d94,177344215,0,0x0,8
tick,0x7ffd093d1d94,177360283,0,0x0,8
tick,0x7ffd093d1d94,177376205,0,0x0,8
tick,0x7ffd093d1d94,177392208,0,0x0,8
tick,0x7ffd093d1d94,177407769,0,0x0,8
tick,0x7ffd093d1d94,177423272,0,0x0,8
tick,0x7ffd093d1d94,177438868,0,0x0,8
tick,0x7ffd093d1d94,177453738,0,0x0,8
tick,0x7ffd093d1d94,177468879,0,0x0,8
tick,0x7ffd093d1d94,177483920,0,0x0,8
tick,0x7ffd093d1d94,177499380,0,0x0,8
tick,0x7ffd093d1d94,177515324,0,0x0,8
tick,0x7ffd093d1d94,177531910,0,0x0,8
tick,0x7ffd093d1d94,177547329,0,0x0,8
tick,0x7ffd093d1d94,177563332,0,0x0,8
tick,0x7ffd093d1d94,177578807,0,0x0,8
tick,0x7ffd093d1d94,177595231,0,0x0,8
tick,0x7ffd093d1d94,177610492,0,0x0,8
tick,0x7ffd093d1d94,177625731,0,0x0,8
tick,0x7ffd093d1d94,177641505,0,0x0,8
tick,0x7ffd093d1d94,177657910,0,0x0,8
tick,0x7ffd093d1d94,177672855,0,0x0,8
tick,0x7ffd093d1d94,177688509,0,0x0,8
tick,0x7ffd093d1d94,177703847,0,0x0,8
tick,0x7ffd093d1d94,177719101,0,0x0,8
tick,0x7ffd093d1d94,177734978,0,0x0,8
tick,0x7ffd093d1d94,177750034,0,0x0,8
tick,0x7ffd093d1d94,177765892,0,0x0,8
tick,0x7ffd093d1d94,177782183,0,0x0,8
tick,0x7ffd093d1d94,177797549,0,0x0,8
tick,0x7ffd093d1d94,177813084,0,0x0,8
tick,0x7ffd093d1d94,177829096,0,0x0,8
tick,0x7ffd093d1d94,177844506,0,0x0,8
tick,0x7ffd093d1d94,177859564,0,0x0,8
tick,0x7ffd093d1d94,177875351,0,0x0,8
tick,0x7ffd093d1d94,177890919,0,0x0,8
tick,0x7ffd093d1d94,177906633,0,0x0,8
tick,0x7ffd093d1d94,177922107,0,0x0,8
tick,0x7ffd093d1d94,177936784,0,0x0,8
tick,0x7ffd093d1d94,177953024,0,0x0,8
tick,0x7ffd093d1d94,177968691,0,0x0,8
tick,0x7ffd093d1d94,177983928,0,0x0,8
tick,0x7ffd093d1d94,177999532,0,0x0,8
tick,0x7ffd093d1d94,178014297,0,0x0,8
tick,0x7ffd093d1d94,178029691,0,0x0,8
tick,0x7ffd093d1d94,178044769,0,0x0,8
tick,0x7ffd093d1d94,178060485,0,0x0,8
tick,0x7ffd093d1d94,178075975,0,0x0,8
tick,0x7ffd093d1d94,178091674,0,0x0,8
tick,0x7ffd093d1d94,178107028,0,0x0,8
tick,0x7ffd093d1d94,178122217,0,0x0,8
tick,0x7ffd093d1d94,178137331,0,0x0,8
tick,0x7ffd093d1d94,178153409,0,0x0,8
tick,0x7ffd093d1d94,178168927,0,0x0,8
tick,0x7ffd093d1d94,178184432,0,0x0,8
tick,0x7ffd093d1d94,178200014,0,0x0,8
tick,0x7ffd093d1d94,178215448,0,0x0,8
tick,0x7ffd093d1d94,178231173,0,0x0,8
tick,0x7ffd093d1d94,178246910,0,0x0,8
tick,0x7ffd093d1d94,178262759,0,0x0,8
tick,0x7ffd093d1d94,178278178,0,0x0,8
tick,0x7ffd093d1d94,178294294,0,0x0,8
tick,0x7ffd093d1d94,178309399,0,0x0,8
tick,0x7ffd093d1d94,178324636,0,0x0,8
tick,0x7ffd093d1d94,178340533,0,0x0,8
tick,0x7ffd093d1d94,178356242,0,0x0,8
tick,0x7ffd093d1d94,178371750,0,0x0,8
tick,0x7ffd093d1d94,178387756,0,0x0,8
tick,0x7ffd093d1d94,178403252,0,0x0,8
tick,0x7ffd093d1d94,178419123,0,0x0,8
tick,0x7ffd093d1d94,178434223,0,0x0,8
tick,0x7ffd093d1d94,178449314,0,0x0,8
tick,0x7ffd093d1d94,178465004,0,0x0,8
tick,0x7ffd093d1d94,178480212,0,0x0,8
tick,0x7ffd093d1d94,178495343,0,0x0,8
tick,0x7ffd093d1d94,178514517,0,0x0,8
tick,0x7ffd093d1d94,178525760,0,0x0,8
tick,0x7ffd093d1d94,178541389,0,0x0,8
tick,0x7ffd093d1d94,178557014,0,0x0,8
tick,0x7ffd093d1d94,178571974,0,0x0,8
tick,0x7ffd093d1d94,178587589,0,0x0,8
tick,0x7ffd093d1d94,178602941,0,0x0,8
tick,0x7ffd093d1d94,178618669,0,0x0,8
tick,0x7ffd093d1d94,178634622,0,0x0,8
tick,0x7ffd093d1d94,178648909,0,0x0,8
tick,0x7ffd093d1d94,178665671,0,0x0,8
tick,0x7ffd093d1d94,178680270,0,0x0,8
tick,0x7ffd093d1d94,178695598,0,0x0,8
tick,0x7ffd093d1d94,178710360,0,0x0,8
tick,0x7ffd093d1d94,178725040,0,0x0,8
tick,0x7ffd093d1d94,178741963,0,0x0,8
tick,0x7ffd093d1d94,178756217,0,0x0,8
tick,0x7ffd093d1d94,178771361,0,0x0,8
tick,0x7ffd093d1d94,178787015,0,0x0,8
tick,0x7ffd093d1d94,178802495,0,0x0,8
tick,0x7ffd093d1d94,178818194,0,0x0,8
tick,0x7ffd093d1d94,178833430,0,0x0,8
tick,0x7ffd093d1d94,178848910,0,0x0,8
tick,0x7ffd093d1d94,178865163,0,0x0,8
tick,0x7ffd093d1d94,178879517,0,0x0,8
tick,0x7ffd093d1d94,178895194,0,0x0,8
tick,0x7ffd093d1d94,178916286,0,0x0,8
tick,0x7ffd093d1d94,178930465,0,0x0,8
tick,0x7ffd093d1d94,178940901,0,0x0,8
tick,0x7ffd093d1d94,178956650,0,0x0,8
tick,0x7ffd093d1d94,178972261,0,0x0,8
tick,0x7ffd093d1d94,178988259,0,0x0,8
tick,0x7ffd093d1d94,179003814,0,0x0,8
tick,0x7ffd093d1d94,179018611,0,0x0,8
tick,0x7ffd093d1d94,179033728,0,0x0,8
tick,0x7ffd093d1d94,179049562,0,0x0,8
tick,0x7ffd093d1d94,179065539,0,0x0,8
tick,0x7ffd093d1d94,179081712,0,0x0,8
tick,0x7ffd093d1d94,179097114,0,0x0,8
tick,0x7ffd093d1d94,179112461,0,0x0,8
tick,0x7ffd093d1d94,179127990,0,0x0,8
tick,0x7ffd093d1d94,179143336,0,0x0,8
tick,0x7ffd093d1d94,179158492,0,0x0,8
tick,0x7ffd093d1d94,179174395,0,0x0,8
tick,0x7ffd093d1d94,179189461,0,0x0,8
tick,0x7ffd093d1d94,179205033,0,0x0,8
tick,0x7ffd093d1d94,179220934,0,0x0,8
tick,0x7ffd093d1d94,179236878,0,0x0,8
tick,0x7ffd093d1d94,179252135,0,0x0,8
tick,0x7ffd093d1d94,179267719,0,0x0,8
tick,0x7ffd093d1d94,179283103,0,0x0,8
tick,0x7ffd093d1d94,179298333,0,0x0,8
tick,0x7ffd093d1d94,179313888,0,0x0,8
tick,0x7ffd093d1d94,179329235,0,0x0,8
tick,0x7ffd093d1d94,179344503,0,0x0,8
tick,0x7ffd093d1d94,179360649,0,0x0,8
tick,0x7ffd093d1d94,179376467,0,0x0,8
tick,0x7ffd093d1d94,179391953,0,0x0,8
tick,0x7ffd093d1d94,179407770,0,0x0,8
tick,0x7ffd093d1d94,179422609,0,0x0,8
tick,0x7ffd093d1d94,179437917,0,0x0,8
tick,0x7ffd093d1d94,179453008,0,0x0,8
tick,0x7ffd093d1d94,179468959,0,0x0,8
tick,0x7ffd093d1d94,179485062,0,0x0,8
tick,0x7ffd093d1d94,179500848,0,0x0,8
tick,0x7ffd093d1d94,179516286,0,0x0,8
tick,0x7ffd093d1d94,179531840,0,0x0,8
tick,0x7ffd093d1d94,179547273,0,0x0,8
tick,0x7ffd093d1d94,179563101,0,0x0,8
tick,0x7ffd093d1d94,179578717,0,0x0,8
tick,0x7ffd093d1d94,179594587,0,0x0,8
tick,0x7ffd093d1d94,179609237,0,0x0,8
tick,0x7ffd093d1d94,179624543,0,0x0,8
tick,0x7ffd093d1d94,179640077,0,0x0,8
tick,0x7ffd093d1d94,179655666,0,0x0,8
tick,0x7ffd093d1d94,179670606,0,0x0,8
tick,0x7ffd093d1d94,179686241,0,0x0,8
tick,0x7ffd093d1d94,179701555,0,0x0,8
tick,0x7ffd093d1d94,179716627,0,0x0,8
tick,0x7ffd093d1d94,179732416,0,0x0,8
tick,0x7ffd093d1d94,179748338,0,0x0,8
tick,0x7ffd093d1d94,179763494,0,0x0,8
tick,0x7ffd093d1d94,179779733,0,0x0,8
tick,0x7ffd093d1d94,179794493,0,0x0,8
tick,0x7ffd093d1d94,179809852,0,0x0,8
tick,0x7ffd093d1d94,179825194,0,0x0,8
tick,0x7ffd093d1d94,179840829,0,0x0,8
tick,0x7ffd093d1d94,179856565,0,0x0,8
tick,0x7ffd093d1d94,179871562,0,0x0,8
tick,0x7ffd093d1d94,179886996,0,0x0,8
tick,0x7ffd093d1d94,179901481,0,0x0,8
tick,0x7ffd093d1d94,179916421,0,0x0,8
tick,0x7ffd093d1d94,179932288,0,0x0,8
tick,0x7ffd093d1d94,179947650,0,0x0,8
tick,0x7ffd093d1d94,179963091,0,0x0,8
tick,0x7ffd093d1d94,179979191,0,0x0,8
tick,0x7ffd093d1d94,179993690,0,0x0,8
tick,0x7ffd093d1d94,180009018,0,0x0,8
tick,0x7ffd093d1d94,180023873,0,0x0,8
tick,0x7ffd093d1d94,180039854,0,0x0,8
tick,0x7ffd093d1d94,180055441,0,0x0,8
tick,0x7ffd093d1d94,180070281,0,0x0,8
tick,0x7ffd093d1d94,180085977,0,0x0,8
tick,0x7ffd093d1d94,180101136,0,0x0,8
tick,0x7ffd093d1d94,180115617,0,0x0,8
tick,0x7ffd093d1d94,180131576,0,0x0,8
tick,0x7ffd093d1d94,180147355,0,0x0,8
tick,0x7ffd093d1d94,180162878,0,0x0,8
tick,0x7ffd093d1d94,180177729,0,0x0,8
tick,0x7ffd093d1d94,180193758,0,0x0,8
tick,0x7ffd093d1d94,180209295,0,0x0,8
tick,0x7ffd093d1d94,180225304,0,0x0,8
tick,0x7ffd093d1d94,180240932,0,0x0,8
tick,0x7ffd093d1d94,180256465,0,0x0,8
tick,0x7ffd093d1d94,180273041,0,0x0,8
tick,0x7ffd093d1d94,180289194,0,0x0,8
tick,0x7ffd093d1d94,180305013,0,0x0,8
tick,0x7ffd093d1d94,180321213,0,0x0,8
tick,0x7ffd093d1d94,180336682,0,0x0,8
tick,0x7ffd093d1d94,180352153,0,0x0,8
tick,0x7ffd093d1d94,180368008,0,0x0,8
tick,0x7ffd093d1d94,180382994,0,0x0,8
tick,0x7ffd093d1d94,180398426,0,0x0,8
tick,0x7ffd093d1d94,180414284,0,0x0,8
tick,0x7ffd093d1d94,180430176,0,0x0,8
tick,0x7ffd093d1d94,180446151,0,0x0,8
tick,0x7ffd093d1d94,180461314,0,0x0,8
tick,0x7ffd093d1d94,180476523,0,0x0,8
tick,0x7ffd093d1d94,180492229,0,0x0,8
tick,0x7ffd093d1d94,180507880,0,0x0,8
tick,0x7ffd093d1d94,180524235,0,0x0,8
tick,0x7ffd093d1d94,180539819,0,0x0,8
tick,0x7ffd093d1d94,180555296,0,0x0,8
tick,0x7ffd093d1d94,180570854,0,0x0,8
tick,0x7ffd093d1d94,180586072,0,0x0,8
tick,0x7ffd093d1d94,180601330,0,0x0,8
tick,0x7ffd093d1d94,180617003,0,0x0,8
tick,0x7ffd093d1d94,180632149,0,0x0,8
tick,0x7ffd093d1d94,180648077,0,0x0,8
tick,0x7ffd093d1d94,180664156,0,0x0,8
tick,0x7ffd093d1d94,180679526,0,0x0,8
tick,0x7ffd093d1d94,180694666,0,0x0,8
tick,0x7ffd093d1d94,180710244,0,0x0,8
tick,0x7ffd093d1d94,180725084,0,0x0,8
tick,0x7ffd093d1d94,180740336,0,0x0,8
tick,0x7ffd093d1d94,180756260,0,0x0,8
tick,0x7ffd093d1d94,180771860,0,0x0,8
tick,0x7ffd093d1d94,180788125,0,0x0,8
tick,0x7ffd093d1d94,180803453,0,0x0,8
tick,0x7ffd093d1d94,180818796,0,0x0,8
tick,0x7ffd093d1d94,180834728,0,0x0,8
tick,0x7ffd093d1d94,180851038,0,0x0,8
tick,0x7ffd093d1d94,180865217,0,0x0,8
tick,0x7ffd093d1d94,180880895,0,0x0,8
tick,0x7ffd093d1d94,180896831,0,0x0,8
tick,0x7ffd093d1d94,180912550,0,0x0,8
tick,0x7ffd093d1d94,180928216,0,0x0,8
tick,0x7ffd093d1d94,180943143,0,0x0,8
tick,0x7ffd093d1d94,180958790,0,0x0,8
tick,0x7ffd093d1d94,180975079,0,0x0,8
tick,0x7ffd093d1d94,180990974,0,0x0,8
tick,0x7ffd093d1d94,181007226,0,0x0,8
tick,0x7ffd093d1d94,181022283,0,0x0,8
tick,0x7ffd093d1d94,181037690,0,0x0,8
tick,0x7ffd093d1d94,181053464,0,0x0,8
tick,0x7ffd093d1d94,181069377,0,0x0,8
tick,0x7ffd093d1d94,181085337,0,0x0,8
tick,0x7ffd093d1d94,181100830,0,0x0,8
tick,0x7ffd093d1d94,181115917,0,0x0,8
tick,0x7ffd093d1d94,181131471,0,0x0,8
tick,0x7ffd093d1d94,181146619,0,0x0,8
tick,0x7ffd093d1d94,181162637,0,0x0,8
tick,0x7ffd093d1d94,181177760,0,0x0,8
tick,0x7ffd093d1d94,181193178,0,0x0,8
tick,0x7ffd093d1d94,181209011,0,0x0,8
tick,0x7ffd093d1d94,181224886,0,0x0,8
tick,0x7ffd093d1d94,181239770,0,0x0,8
tick,0x7ffd093d1d94,181254997,0,0x0,8
tick,0x7ffd093d1d94,181271091,0,0x0,8
tick,0x7ffd093d1d94,181287991,0,0x0,8
tick,0x7ffd093d1d94,181302454,0,0x0,8
tick,0x7ffd093d1d94,181318031,0,0x0,8
tick,0x7ffd093d1d94,181332820,0,0x0,8
tick,0x7ffd093d1d94,181349877,0,0x0,8
tick,0x7ffd093d1d94,181364627,0,0x0,8
tick,0x7ffd093d1d94,181380599,0,0x0,8
tick,0x7ffd093d1d94,181396708,0,0x0,8
tick,0x7ffd093d1d94,181411830,0,0x0,8
tick,0x7ffd093d1d94,181427371,0,0x0,8
tick,0x7ffd093d1d94,181443508,0,0x0,8
tick,0x7ffd093d1d94,181459455,0,0x0,8
tick,0x7ffd093d1d94,181474982,0,0x0,8
tick,0x7ffd093d1d94,181490471,0,0x0,8
tick,0x7ffd093d1d94,181505808,0,0x0,8
tick,0x7ffd093d1d94,181521562,0,0x0,8
tick,0x7ffd093d1d94,181537159,0,0x0,8
tick,0x7ffd093d1d94,181552418,0,0x0,8
tick,0x7ffd093d1d94,181568345,0,0x0,8
tick,0x7ffd093d1d94,181583866,0,0x0,8
tick,0x7ffd093d1d94,181599150,0,0x0,8
tick,0x7ffd093d1d94,181614755,0,0x0,8
tick,0x7ffd093d1d94,181630431,0,0x0,8
tick,0x7ffd093d1d94,181645521,0,0x0,8
tick,0x7ffd093d1d94,181661474,0,0x0,8
tick,0x7ffd093d1d94,181676768,0,0x0,8
tick,0x7ffd093d1d94,181692398,0,0x0,8
tick,0x7ffd093d1d94,181708065,0,0x0,8
tick,0x7ffd093d1d94,181723476,0,0x0,8
tick,0x7ffd093d1d94,181739184,0,0x0,8
tick,0x7ffd093d1d94,181755226,0,0x0,8
tick,0x7ffd093d1d94,181770776,0,0x0,8
tick,0x7ffd093d1d94,181786209,0,0x0,8
tick,0x7ffd093d1d94,181801783,0,0x0,8
tick,0x7ffd093d1d94,181817750,0,0x0,8
tick,0x7ffd093d1d94,181832892,0,0x0,8
tick,0x7ffd093d1d94,181848476,0,0x0,8
tick,0x7ffd093d1d94,181863994,0,0x0,8
tick,0x7ffd093d1d94,181878773,0,0x0,8
tick,0x7ffd093d1d94,181894317,0,0x0,8
tick,0x7ffd093d1d94,181909517,0,0x0,8
tick,0x7ffd093d1d94,181924789,0,0x0,8
tick,0x7ffd093d1d94,181940835,0,0x0,8
tick,0x7ffd093d1d94,181955826,0,0x0,8
tick,0x7ffd093d1d94,181971040,0,0x0,8
tick,0x7ffd093d1d94,181986142,0,0x0,8
tick,0x7ffd093d1d94,182001448,0,0x0,8
tick,0x7ffd093d1d94,182017213,0,0x0,8
tick,0x7ffd093d1d94,182033252,0,0x0,8
tick,0x7ffd093d1d94,182049006,0,0x0,8
tick,0x7ffd093d1d94,182065339,0,0x0,8
tick,0x7ffd093d1d94,182080512,0,0x0,8
tick,0x7ffd093d1d94,182096301,0,0x0,8
tick,0x7ffd093d1d94,182111641,0,0x0,8
tick,0x7ffd093d1d94,182126648,0,0x0,8
tick,0x7ffd093d1d94,182142489,0,0x0,8
tick,0x7ffd093d1d94,182157503,0,0x0,8
tick,0x7ffd093d1d94,182173055,0,0x0,8
tick,0x7ffd093d1d94,182188821,0,0x0,8
tick,0x7ffd093d1d94,182204358,0,0x0,8
tick,0x7ffd093d1d94,182220334,0,0x0,8
tick,0x7ffd093d1d94,182235639,0,0x0,8
tick,0x7ffd093d1d94,182250671,0,0x0,8
tick,0x7ffd093d1d94,182266362,0,0x0,8
tick,0x7ffd093d1d94,182282310,0,0x0,8
tick,0x7ffd093d1d94,182297463,0,0x0,8
tick,0x7ffd093d1d94,182313779,0,0x0,8
tick,0x7ffd093d1d94,182329608,0,0x0,8
tick,0x7ffd093d1d94,182345098,0,0x0,8
tick,0x7ffd093d1d94,182360145,0,0x0,8
tick,0x7ffd093d1d94,182376293,0,0x0,8
tick,0x7ffd093d1d94,182391567,0,0x0,8
tick,0x7ffd093d1d94,182407538,0,0x0,8
tick,0x7ffd093d1d94,182423586,0,0x0,8
tick,0x7ffd093d1d94,182438226,0,0x0,8
tick,0x7ffd093d1d94,182454034,0,0x0,8
tick,0x7ffd093d1d94,182469143,0,0x0,8
tick,0x7ffd093d1d94,182485137,0,0x0,8
tick,0x7ffd093d1d94,182501224,0,0x0,8
tick,0x7ffd093d1d94,182516913,0,0x0,8
tick,0x7ffd093d1d94,182532636,0,0x0,8
tick,0x7ffd093d1d94,182548560,0,0x0,8
tick,0x7ffd093d1d94,182564000,0,0x0,8
tick,0x7ffd093d1d94,182579951,0,0x0,8
tick,0x7ffd093d1d94,182594999,0,0x0,8
tick,0x7ffd093d1d94,182610423,0,0x0,8
tick,0x7ffd093d1d94,182625983,0,0x0,8
tick,0x7ffd093d1d94,182641654,0,0x0,8
tick,0x7ffd093d1d94,182656931,0,0x0,8
tick,0x7ffd093d1d94,182672147,0,0x0,8
tick,0x7ffd093d1d94,182687265,0,0x0,8
tick,0x7ffd093d1d94,182702737,0,0x0,8
tick,0x7ffd093d1d94,182718708,0,0x0,8
tick,0x7ffd093d1d94,182735056,0,0x0,8
tick,0x7ffd093d1d94,182750801,0,0x0,8
tick,0x7ffd093d1d94,182766414,0,0x0,8
tick,0x7ffd093d1d94,182781610,0,0x0,8
tick,0x7ffd093d1d94,182796891,0,0x0,8
tick,0x7ffd093d1d94,182812947,0,0x0,8
tick,0x7ffd093d1d94,182828171,0,0x0,8
tick,0x7ffd093d1d94,182843429,0,0x0,8
tick,0x7ffd093d1d94,182859257,0,0x0,8
tick,0x7ffd093d1d94,182875356,0,0x0,8
tick,0x7ffd093d1d94,182890809,0,0x0,8
tick,0x7ffd093d1d94,182905760,0,0x0,8
tick,0x7ffd093d1d94,182921658,0,0x0,8
tick,0x7ffd093d1d94,182936841,0,0x0,8
tick,0x7ffd093d1d94,182953004,0,0x0,8
tick,0x7ffd093d1d94,182968574,0,0x0,8
tick,0x7ffd093d1d94,182983157,0,0x0,8
tick,0x7ffd093d1d94,182998311,0,0x0,8
tick,0x7ffd093d1d94,183013812,0,0x0,8
tick,0x7ffd093d1d94,183029322,0,0x0,8
tick,0x7ffd093d1d94,183045084,0,0x0,8
tick,0x7ffd093d1d94,183060488,0,0x0,8
tick,0x7ffd093d1d94,183075295,0,0x0,8
tick,0x7ffd093d1d94,183091332,0,0x0,8
tick,0x7ffd093d1d94,183106608,0,0x0,8
tick,0x7ffd093d1d94,183122623,0,0x0,8
tick,0x7ffd093d1d94,183137664,0,0x0,8
tick,0x7ffd093d1d94,183153579,0,0x0,8
tick,0x7ffd093d1d94,183169053,0,0x0,8
tick,0x7ffd093d1d94,183184646,0,0x0,8
tick,0x7ffd093d1d94,183200177,0,0x0,8
tick,0x7ffd093d1d94,183216171,0,0x0,8
tick,0x7ffd093d1d94,183231771,0,0x0,8
tick,0x7ffd093d1d94,183246989,0,0x0,8
tick,0x7ffd093d1d94,183262231,0,0x0,8
tick,0x7ffd093d1d94,183277468,0,0x0,8
tick,0x7ffd093d1d94,183292909,0,0x0,8
tick,0x7ffd093d1d94,183308776,0,0x0,8
tick,0x7ffd093d1d94,183324541,0,0x0,8
tick,0x7ffd093d1d94,183340506,0,0x0,8
tick,0x7ffd093d1d94,183356155,0,0x0,8
tick,0x7ffd093d1d94,183372298,0,0x0,8
tick,0x7ffd093d1d94,183388550,0,0x0,8
tick,0x7ffd093d1d94,183403858,0,0x0,8
tick,0x7ffd093d1d94,183419351,0,0x0,8
tick,0x7ffd093d1d94,183434437,0,0x0,8
tick,0x7ffd093d1d94,183449805,0,0x0,8
tick,0x7ffd093d1d94,183465287,0,0x0,8
tick,0x7ffd093d1d94,183480603,0,0x0,8
tick,0x7ffd093d1d94,183495721,0,0x0,8
tick,0x7ffd093d1d94,183512023,0,0x0,8
tick,0x7ffd093d1d94,183527051,0,0x0,8
tick,0x7ffd093d1d94,183541648,0,0x0,8
tick,0x7ffd093d1d94,183556963,0,0x0,8
tick,0x7ffd093d1d94,183572490,0,0x0,8
tick,0x7ffd093d1d94,183587890,0,0x0,8
tick,0x7ffd093d1d94,183603215,0,0x0,8
tick,0x7ffd093d1d94,183618810,0,0x0,8
tick,0x7ffd093d1d94,183634843,0,0x0,8
tick,0x7ffd093d1d94,183650696,0,0x0,8
tick,0x7ffd093d1d94,183666037,0,0x0,8
tick,0x7ffd093d1d94,183681899,0,0x0,8
tick,0x7ffd093d1d94,183697384,0,0x0,8
tick,0x7ffd093d1d94,183712604,0,0x0,8
tick,0x7ffd093d1d94,183728647,0,0x0,8
tick,0x7ffd093d1d94,183744264,0,0x0,8
tick,0x7ffd093d1d94,183759689,0,0x0,8
tick,0x7ffd093d1d94,183774981,0,0x0,8
tick,0x7ffd093d1d94,183790551,0,0x0,8
tick,0x7ffd093d1d94,183805690,0,0x0,8
tick,0x7ffd093d1d94,183820864,0,0x0,8
tick,0x7ffd093d1d94,183836576,0,0x0,8
tick,0x7ffd093d1d94,183851292,0,0x0,8
tick,0x7ffd093d1d94,183866905,0,0x0,8
tick,0x7ffd093d1d94,183882701,0,0x0,8
tick,0x7ffd093d1d94,183898562,0,0x0,8
tick,0x7ffd093d1d94,183914239,0,0x0,8
tick,0x7ffd093d1d94,183931029,0,0x0,8
tick,0x7ffd093d1d94,183945579,0,0x0,8
tick,0x7ffd093d1d94,183960746,0,0x0,8
tick,0x7ffd093d1d94,183976813,0,0x0,8
tick,0x7ffd093d1d94,183992695,0,0x0,8
tick,0x7ffd093d1d94,184008717,0,0x0,8
tick,0x7ffd093d1d94,184023945,0,0x0,8
tick,0x7ffd093d1d94,184039084,0,0x0,8
tick,0x7ffd093d1d94,184054221,0,0x0,8
tick,0x7ffd093d1d94,184070245,0,0x0,8
tick,0x7ffd093d1d94,184085446,0,0x0,8
tick,0x7ffd093d1d94,184101125,0,0x0,8
tick,0x7ffd093d1d94,184116695,0,0x0,8
tick,0x7ffd093d1d94,184132487,0,0x0,8
tick,0x7ffd093d1d94,184148520,0,0x0,8
tick,0x7ffd093d1d94,184163847,0,0x0,8
tick,0x7ffd093d1d94,184179303,0,0x0,8
tick,0x7ffd093d1d94,184194820,0,0x0,8
tick,0x7ffd093d1d94,184210180,0,0x0,8
tick,0x7ffd093d1d94,184226333,0,0x0,8
tick,0x7ffd093d1d94,184242069,0,0x0,8
tick,0x7ffd093d1d94,184257464,0,0x0,8
tick,0x7ffd093d1d94,184272727,0,0x0,8
tick,0x7ffd093d1d94,184287601,0,0x0,8
tick,0x7ffd093d1d94,184303680,0,0x0,8
tick,0x7ffd093d1d94,184319031,0,0x0,8
tick,0x7ffd093d1d94,184334652,0,0x0,8
tick,0x7ffd093d1d94,184349913,0,0x0,8
tick,0x7ffd093d1d94,184365614,0,0x0,8
tick,0x7ffd093d1d94,184381180,0,0x0,8
tick,0x7ffd093d1d94,184396946,0,0x0,8
tick,0x7ffd093d1d94,184412568,0,0x0,8
tick,0x7ffd093d1d94,184427827,0,0x0,8
tick,0x7ffd093d1d94,184443041,0,0x0,8
tick,0x7ffd093d1d94,184458883,0,0x0,8
tick,0x7ffd093d1d94,184473739,0,0x0,8
tick,0x7ffd093d1d94,184489928,0,0x0,8
tick,0x7ffd093d1d94,184504989,0,0x0,8
tick,0x7ffd093d1d94,184520839,0,0x0,8
tick,0x7ffd093d1d94,184535907,0,0x0,8
tick,0x7ffd093d1d94,184551690,0,0x0,8
tick,0x7ffd093d1d94,184567402,0,0x0,8
tick,0x7ffd093d1d94,184582633,0,0x0,8
tick,0x7ffd093d1d94,184598636,0,0x0,8
tick,0x7ffd093d1d94,184614683,0,0x0,8
tick,0x7ffd093d1d94,184630429,0,0x0,8
tick,0x7ffd093d1d94,184645466,0,0x0,8
tick,0x7ffd093d1d94,184662077,0,0x0,8
tick,0x7ffd093d1d94,184677256,0,0x0,8
tick,0x7ffd093d1d94,184693587,0,0x0,8
tick,0x7ffd093d1d94,184709072,0,0x0,8
tick,0x7ffd093d1d94,184724830,0,0x0,8
tick,0x7ffd093d1d94,184740492,0,0x0,8
tick,0x7ffd093d1d94,184756648,0,0x0,8
tick,0x7ffd093d1d94,184771961,0,0x0,8
tick,0x7ffd093d1d94,184788449,0,0x0,8
tick,0x7ffd093d1d94,184804274,0,0x0,8
tick,0x7ffd093d1d94,184819395,0,0x0,8
tick,0x7ffd093d1d94,184835364,0,0x0,8
tick,0x7ffd093d1d94,184850858,0,0x0,8
tick,0x7ffd093d1d94,184866725,0,0x0,8
tick,0x7ffd093d1d94,184882456,0,0x0,8
tick,0x7ffd093d1d94,184898352,0,0x0,8
tick,0x7ffd093d1d94,184913490,0,0x0,8
tick,0x7ffd093d1d94,184929742,0,0x0,8
tick,0x7ffd093d1d94,184944627,0,0x0,8
tick,0x7ffd093d1d94,184960230,0,0x0,8
tick,0x7ffd093d1d94,184975655,0,0x0,8
tick,0x7ffd093d1d94,184991252,0,0x0,8
tick,0x7ffd093d1d94,185007120,0,0x0,8
tick,0x7ffd093d1d94,185022781,0,0x0,8
tick,0x7ffd093d1d94,185038004,0,0x0,8
tick,0x7ffd093d1d94,185053027,0,0x0,8
tick,0x7ffd093d1d94,185068844,0,0x0,8
tick,0x7ffd093d1d94,185083601,0,0x0,8
tick,0x7ffd093d1d94,185098958,0,0x0,8
tick,0x7ffd093d1d94,185114659,0,0x0,8
tick,0x7ffd093d1d94,185130659,0,0x0,8
tick,0x7ffd093d1d94,185145557,0,0x0,8
tick,0x7ffd093d1d94,185160629,0,0x0,8
tick,0x7ffd093d1d94,185176976,0,0x0,8
tick,0x7ffd093d1d94,185192067,0,0x0,8
tick,0x7ffd093d1d94,185208167,0,0x0,8
tick,0x7ffd093d1d94,185223661,0,0x0,8
tick,0x7ffd093d1d94,185239295,0,0x0,8
tick,0x7ffd093d1d94,185255579,0,0x0,8
tick,0x7ffd093d1d94,185270816,0,0x0,8
tick,0x7ffd093d1d94,185286416,0,0x0,8
tick,0x7ffd093d1d94,185301257,0,0x0,8
tick,0x7ffd093d1d94,185316398,0,0x0,8
tick,0x7ffd093d1d94,185332197,0,0x0,8
tick,0x7ffd093d1d94,185347968,0,0x0,8
tick,0x7ffd093d1d94,185363626,0,0x0,8
tick,0x7ffd093d1d94,185379268,0,0x0,8
tick,0x7ffd093d1d94,185394144,0,0x0,8
tick,0x7ffd093d1d94,185410106,0,0x0,8
tick,0x7ffd093d1d94,185425955,0,0x0,8
tick,0x7ffd093d1d94,185441074,0,0x0,8
tick,0x7ffd093d1d94,185457082,0,0x0,8
tick,0x7ffd093d1d94,185472384,0,0x0,8
tick,0x7ffd093d1d94,185488398,0,0x0,8
tick,0x7ffd093d1d94,185503519,0,0x0,8
tick,0x7ffd093d1d94,185519439,0,0x0,8
tick,0x7ffd093d1d94,185535766,0,0x0,8
tick,0x7ffd093d1d94,185551647,0,0x0,8
tick,0x7ffd093d1d94,185566348,0,0x0,8
tick,0x7ffd093d1d94,185581923,0,0x0,8
tick,0x7ffd093d1d94,185597438,0,0x0,8
tick,0x7ffd093d1d94,185612765,0,0x0,8
tick,0x7ffd093d1d94,185628554,0,0x0,8
tick,0x7ffd093d1d94,185644692,0,0x0,8
tick,0x7ffd093d1d94,185660544,0,0x0,8
tick,0x7ffd093d1d94,185676982,0,0x0,8
tick,0x7ffd093d1d94,185692013,0,0x0,8
tick,0x7ffd093d1d94,185707987,0,0x0,8
tick,0x7ffd093d1d94,185723897,0,0x0,8
tick,0x7ffd093d1d94,185740003,0,0x0,8
tick,0x7ffd093d1d94,185755473,0,0x0,8
tick,0x7ffd093d1d94,185771428,0,0x0,8
tick,0x7ffd093d1d94,185787044,0,0x0,8
tick,0x7ffd093d1d94,185802538,0,0x0,8
tick,0x7ffd093d1d94,185817599,0,0x0,8
tick,0x7ffd093d1d94,185832985,0,0x0,8
tick,0x7ffd093d1d94,185849177,0,0x0,8
tick,0x7ffd093d1d94,185864879,0,0x0,8
tick,0x7ffd093d1d94,185880462,0,0x0,8
tick,0x7ffd093d1d94,185896081,0,0x0,8
tick,0x7ffd093d1d94,185911191,0,0x0,8
tick,0x7ffd093d1d94,185926788,0,0x0,8
tick,0x7ffd093d1d94,185942413,0,0x0,8
tick,0x7ffd093d1d94,185957949,0,0x0,8
tick,0x7ffd093d1d94,185973720,0,0x0,8
tick,0x7ffd093d1d94,185989372,0,0x0,8
tick,0x7ffd093d1d94,186005028,0,0x0,8
tick,0x7ffd093d1d94,186020310,0,0x0,8
tick,0x7ffd093d1d94,186036406,0,0x0,8
tick,0x7ffd093d1d94,186052077,0,0x0,8
tick,0x7ffd093d1d94,186067009,0,0x0,8
tick,0x7ffd093d1d94,186082328,0,0x0,8
tick,0x7ffd093d1d94,186098521,0,0x0,8
tick,0x7ffd093d1d94,186114093,0,0x0,8
tick,0x7ffd093d1d94,186130033,0,0x0,8
tick,0x7ffd093d1d94,186145273,0,0x0,8
tick,0x7ffd093d1d94,186160825,0,0x0,8
tick,0x7ffd093d1d94,186176826,0,0x0,8
tick,0x7ffd093d1d94,186191927,0,0x0,8
tick,0x7ffd093d1d94,186206735,0,0x0,8
tick,0x7ffd093d1d94,186222904,0,0x0,8
tick,0x7ffd093d1d94,186238192,0,0x0,8
tick,0x7ffd093d1d94,186253752,0,0x0,8
tick,0x7ffd093d1d94,186269426,0,0x0,8
tick,0x7ffd093d1d94,186284886,0,0x0,8
tick,0x7ffd093d1d94,186300181,0,0x0,8
tick,0x7ffd093d1d94,186315886,0,0x0,8
tick,0x7ffd093d1d94,186331301,0,0x0,8
tick,0x7ffd093d1d94,186347106,0,0x0,8
tick,0x7ffd093d1d94,186362298,0,0x0,8
tick,0x7ffd093d1d94,186378272,0,0x0,8
tick,0x7ffd093d1d94,186394381,0,0x0,8
tick,0x7ffd093d1d94,186409081,0,0x0,8
tick,0x7ffd093d1d94,186425095,0,0x0,8
tick,0x7ffd093d1d94,186440700,0,0x0,8
tick,0x7ffd093d1d94,186456597,0,0x0,8
tick,0x7ffd093d1d94,186472117,0,0x0,8
tick,0x7ffd093d1d94,186487577,0,0x0,8
tick,0x7ffd093d1d94,186502993,0,0x0,8
tick,0x7ffd093d1d94,186518415,0,0x0,8
tick,0x7ffd093d1d94,186534368,0,0x0,8
tick,0x7ffd093d1d94,186550275,0,0x0,8
tick,0x7ffd093d1d94,186566149,0,0x0,8
tick,0x7ffd093d1d94,186582121,0,0x0,8
tick,0x7ffd093d1d94,186597231,0,0x0,8
tick,0x7ffd093d1d94,186612764,0,0x0,8
tick,0x7ffd093d1d94,186627735,0,0x0,8
tick,0x7ffd093d1d94,186644220,0,0x0,8
tick,0x7ffd093d1d94,186659154,0,0x0,8
tick,0x7ffd093d1d94,186675139,0,0x0,8
tick,0x7ffd093d1d94,186690543,0,0x0,8
tick,0x7ffd093d1d94,186705926,0,0x0,8
tick,0x7ffd093d1d94,186721708,0,0x0,8
tick,0x7ffd093d1d94,186736429,0,0x0,8
tick,0x7ffd093d1d94,186752498,0,0x0,8
tick,0x7ffd093d1d94,186767978,0,0x0,8
tick,0x7ffd093d1d94,186783416,0,0x0,8
tick,0x7ffd093d1d94,186799095,0,0x0,8
tick,0x7ffd093d1d94,186814799,0,0x0,8
tick,0x7ffd093d1d94,186830122,0,0x0,8
tick,0x7ffd093d1d94,186846155,0,0x0,8
tick,0x7ffd093d1d94,186861801,0,0x0,8
tick,0x7ffd093d1d94,186877843,0,0x0,8
tick,0x7ffd093d1d94,186893476,0,0x0,8
tick,0x7ffd093d1d94,186909684,0,0x0,8
tick,0x7ffd093d1d94,186925136,0,0x0,8
tick,0x7ffd093d1d94,186940639,0,0x0,8
tick,0x7ffd093d1d94,186955976,0,0x0,8
tick,0x7ffd093d1d94,186971163,0,0x0,8
tick,0x7ffd093d1d94,186986442,0,0x0,8
tick,0x7ffd093d1d94,187002494,0,0x0,8
tick,0x7ffd093d1d94,187017712,0,0x0,8
tick,0x7ffd093d1d94,187032973,0,0x0,8
tick,0x7ffd093d1d94,187048911,0,0x0,8
tick,0x7ffd093d1d94,187064488,0,0x0,8
tick,0x7ffd093d1d94,187079466,0,0x0,8
tick,0x7ffd093d1d94,187095292,0,0x0,8
tick,0x7ffd093d1d94,187110806,0,0x0,8
tick,0x7ffd093d1d94,187140148,0,0x0,8
tick,0x7ffd093d1d94,187142877,0,0x0,8
tick,0x7ffd093d1d94,187158475,0,0x0,8
tick,0x7ffd093d1d94,187174598,0,0x0,8
tick,0x7ffd093d1d94,187189299,0,0x0,8
tick,0x7ffd093d1d94,187205335,0,0x0,8
tick,0x7ffd093d1d94,187220423,0,0x0,8
tick,0x7ffd093d1d94,187236116,0,0x0,8
tick,0x7ffd093d1d94,187252118,0,0x0,8
tick,0x7ffd093d1d94,187267136,0,0x0,8
tick,0x7ffd093d1d94,187282902,0,0x0,8
tick,0x7ffd093d1d94,187298335,0,0x0,8
tick,0x7ffd093d1d94,187313933,0,0x0,8
tick,0x7ffd093d1d94,187329839,0,0x0,8
tick,0x7ffd093d1d94,187345437,0,0x0,8
tick,0x7ffd093d1d94,187361399,0,0x0,8
tick,0x7ffd093d1d94,187377094,0,0x0,8
tick,0x7ffd093d1d94,187392602,0,0x0,8
tick,0x7ffd093d1d94,187408565,0,0x0,8
tick,0x7ffd093d1d94,187424128,0,0x0,8
tick,0x7ffd093d1d94,187440001,0,0x0,8
tick,0x7ffd093d1d94,187455850,0,0x0,8
tick,0x7ffd093d1d94,187472034,0,0x0,8
tick,0x7ffd093d1d94,187487193,0,0x0,8
tick,0x7ffd093d1d94,187502765,0,0x0,8
tick,0x7ffd093d1d94,187518391,0,0x0,8
tick,0x7ffd093d1d94,187533063,0,0x0,8
tick,0x7ffd093d1d94,187548834,0,0x0,8
tick,0x7ffd093d1d94,187564305,0,0x0,8
tick,0x7ffd093d1d94,187579951,0,0x0,8
tick,0x7ffd093d1d94,187596038,0,0x0,8
tick,0x7ffd093d1d94,187611743,0,0x0,8
tick,0x7ffd093d1d94,187627891,0,0x0,8
tick,0x7ffd093d1d94,187643826,0,0x0,8
tick,0x7ffd093d1d94,187658992,0,0x0,8
tick,0x7ffd093d1d94,187674566,0,0x0,8
tick,0x7ffd093d1d94,187690108,0,0x0,8
tick,0x7ffd093d1d94,187705400,0,0x0,8
tick,0x7ffd093d1d94,187720771,0,0x0,8
tick,0x7ffd093d1d94,187736159,0,0x0,8
tick,0x7ffd093d1d94,187751484,0,0x0,8
tick,0x7ffd093d1d94,187766955,0,0x0,8
tick,0x7ffd093d1d94,187782559,0,0x0,8
tick,0x7ffd093d1d94,187816601,0,0x0,8
tick,0x7ffd093d1d94,187816624,0,0x0,8
tick,0x7ffd093d1d94,187829419,0,0x0,8
tick,0x7ffd093d1d94,187844940,0,0x0,8
tick,0x7ffd093d1d94,187859940,0,0x0,8
tick,0x7ffd093d1d94,187875292,0,0x0,8
tick,0x7ffd093d1d94,187890762,0,0x0,8
tick,0x7ffd093d1d94,187906379,0,0x0,8
tick,0x7ffd093d1d94,187921666,0,0x0,8
tick,0x7ffd093d1d94,187937384,0,0x0,8
tick,0x7ffd093d1d94,187952822,0,0x0,8
tick,0x7ffd093d1d94,187969125,0,0x0,8
tick,0x7ffd093d1d94,187984637,0,0x0,8
tick,0x7ffd093d1d94,188000556,0,0x0,8
tick,0x7ffd093d1d94,188016051,0,0x0,8
tick,0x7ffd093d1d94,188031000,0,0x0,8
tick,0x7ffd093d1d94,188046562,0,0x0,8
tick,0x7ffd093d1d94,188062532,0,0x0,8
tick,0x7ffd093d1d94,188078476,0,0x0,8
tick,0x7ffd093d1d94,188094561,0,0x0,8
tick,0x7ffd093d1d94,188110361,0,0x0,8
tick,0x7ffd093d1d94,188126376,0,0x0,8
tick,0x7ffd093d1d94,188142114,0,0x0,8
tick,0x7ffd093d1d94,188158114,0,0x0,8
tick,0x7ffd093d1d94,188173072,0,0x0,8
tick,0x7ffd093d1d94,188189263,0,0x0,8
tick,0x7ffd093d1d94,188204247,0,0x0,8
tick,0x7ffd093d1d94,188219695,0,0x0,8
tick,0x7ffd093d1d94,188235391,0,0x0,8
tick,0x7ffd093d1d94,188250474,0,0x0,8
tick,0x7ffd093d1d94,188266419,0,0x0,8
tick,0x7ffd093d1d94,188282179,0,0x0,8
tick,0x7ffd093d1d94,188297259,0,0x0,8
tick,0x7ffd093d1d94,188312814,0,0x0,8
tick,0x7ffd093d1d94,188328321,0,0x0,8
tick,0x7ffd093d1d94,188343604,0,0x0,8
tick,0x7ffd093d1d94,188359051,0,0x0,8
tick,0x7ffd093d1d94,188374595,0,0x0,8
tick,0x7ffd093d1d94,188390688,0,0x0,8
tick,0x7ffd093d1d94,188406273,0,0x0,8
tick,0x7ffd093d1d94,188421364,0,0x0,8
tick,0x7ffd093d1d94,188438161,0,0x0,8
tick,0x7ffd093d1d94,188471465,0,0x0,8
tick,0x7ffd093d1d94,188471532,0,0x0,8
tick,0x7ffd093d1d94,188483374,0,0x0,8
tick,0x7ffd093d1d94,188498517,0,0x0,8
tick,0x7ffd093d1d94,188513378,0,0x0,8
tick,0x7ffd093d1d94,188529480,0,0x0,8
tick,0x7ffd093d1d94,188545306,0,0x0,8
tick,0x7ffd093d1d94,188561217,0,0x0,8
tick,0x7ffd093d1d94,188576991,0,0x0,8
tick,0x7ffd093d1d94,188593176,0,0x0,8
tick,0x7ffd093d1d94,188609330,0,0x0,8
tick,0x7ffd093d1d94,188625017,0,0x0,8
tick,0x7ffd093d1d94,188640965,0,0x0,8
tick,0x7ffd093d1d94,188656500,0,0x0,8
tick,0x7ffd093d1d94,188672087,0,0x0,8
tick,0x7ffd093d1d94,188687258,0,0x0,8
tick,0x7ffd093d1d94,188702987,0,0x0,8
tick,0x7ffd093d1d94,188718671,0,0x0,8
tick,0x7ffd093d1d94,188733995,0,0x0,8
tick,0x7ffd093d1d94,188749669,0,0x0,8
tick,0x7ffd093d1d94,188765352,0,0x0,8
tick,0x7ffd093d1d94,188781108,0,0x0,8
tick,0x7ffd093d1d94,188796201,0,0x0,8
tick,0x7ffd093d1d94,188811492,0,0x0,8
tick,0x7ffd093d1d94,188827572,0,0x0,8
tick,0x7ffd093d1d94,188843043,0,0x0,8
tick,0x7ffd093d1d94,188858289,0,0x0,8
tick,0x7ffd093d1d94,188873131,0,0x0,8
tick,0x7ffd093d1d94,188888438,0,0x0,8
tick,0x7ffd093d1d94,188903969,0,0x0,8
tick,0x7ffd093d1d94,188919702,0,0x0,8
tick,0x7ffd093d1d94,188935509,0,0x0,8
tick,0x7ffd093d1d94,188950990,0,0x0,8
tick,0x7ffd093d1d94,188966289,0,0x0,8
tick,0x7ffd093d1d94,188981783,0,0x0,8
tick,0x7ffd093d1d94,188998021,0,0x0,8
tick,0x7ffd093d1d94,189013174,0,0x0,8
tick,0x7ffd093d1d94,189028516,0,0x0,8
tick,0x7ffd093d1d94,189044790,0,0x0,8
tick,0x7ffd093d1d94,189060664,0,0x0,8
tick,0x7ffd093d1d94,189076099,0,0x0,8
tick,0x7ffd093d1d94,189091635,0,0x0,8
tick,0x7ffd093d1d94,189107726,0,0x0,8
tick,0x7ffd093d1d94,189123642,0,0x0,8
tick,0x7ffd093d1d94,189139254,0,0x0,8
tick,0x7ffd093d1d94,189155028,0,0x0,8
tick,0x7ffd093d1d94,189171190,0,0x0,8
tick,0x7ffd093d1d94,189187516,0,0x0,8
tick,0x7ffd093d1d94,189203591,0,0x0,8
tick,0x7ffd093d1d94,189219535,0,0x0,8
tick,0x7ffd093d1d94,189235001,0,0x0,8
tick,0x7ffd093d1d94,189250824,0,0x0,8
tick,0x7ffd093d1d94,189266706,0,0x0,8
tick,0x7ffd093d1d94,189282987,0,0x0,8
tick,0x7ffd093d1d94,189298235,0,0x0,8
tick,0x7ffd093d1d94,189313426,0,0x0,8
tick,0x7ffd093d1d94,189328832,0,0x0,8
tick,0x7ffd093d1d94,189344899,0,0x0,8
tick,0x7ffd093d1d94,189360529,0,0x0,8
tick,0x7ffd093d1d94,189376355,0,0x0,8
tick,0x7ffd093d1d94,189392426,0,0x0,8
tick,0x7ffd093d1d94,189407559,0,0x0,8
tick,0x7ffd093d1d94,189423317,0,0x0,8
tick,0x7ffd093d1d94,189439556,0,0x0,8
tick,0x7ffd093d1d94,189455310,0,0x0,8
tick,0x7ffd093d1d94,189471595,0,0x0,8
tick,0x7ffd093d1d94,189486861,0,0x0,8
tick,0x7ffd093d1d94,189502421,0,0x0,8
tick,0x7ffd093d1d94,189518200,0,0x0,8
tick,0x7ffd093d1d94,189534159,0,0x0,8
tick,0x7ffd093d1d94,189549598,0,0x0,8
tick,0x7ffd093d1d94,189565471,0,0x0,8
tick,0x7ffd093d1d94,189581054,0,0x0,8
tick,0x7ffd093d1d94,189597630,0,0x0,8
tick,0x7ffd093d1d94,189613499,0,0x0,8
tick,0x7ffd093d1d94,189629353,0,0x0,8
tick,0x7ffd093d1d94,189645089,0,0x0,8
tick,0x7ffd093d1d94,189661020,0,0x0,8
tick,0x7ffd093d1d94,189676226,0,0x0,8
tick,0x7ffd093d1d94,189691581,0,0x0,8
tick,0x7ffd093d1d94,189707150,0,0x0,8
tick,0x7ffd093d1d94,189722703,0,0x0,8
tick,0x7ffd093d1d94,189738511,0,0x0,8
tick,0x7ffd093d1d94,189753923,0,0x0,8
tick,0x7ffd093d1d94,189769283,0,0x0,8
tick,0x7ffd093d1d94,189785457,0,0x0,8
tick,0x7ffd093d1d94,189801019,0,0x0,8
tick,0x7ffd093d1d94,189816789,0,0x0,8
tick,0x7ffd093d1d94,189832431,0,0x0,8
tick,0x7ffd093d1d94,189847894,0,0x0,8
tick,0x7ffd093d1d94,189863265,0,0x0,8
tick,0x7ffd093d1d94,189878476,0,0x0,8
tick,0x7ffd093d1d94,189894821,0,0x0,8
tick,0x7ffd093d1d94,189910427,0,0x0,8
tick,0x7ffd093d1d94,189925693,0,0x0,8
tick,0x7ffd093d1d94,189941304,0,0x0,8
tick,0x7ffd093d1d94,189957673,0,0x0,8
tick,0x7ffd093d1d94,189972659,0,0x0,8
tick,0x7ffd093d1d94,189988212,0,0x0,8
tick,0x7ffd093d1d94,190004174,0,0x0,8
tick,0x7ffd093d1d94,190020398,0,0x0,8
tick,0x7ffd093d1d94,190034820,0,0x0,8
tick,0x7ffd093d1d94,190050907,0,0x0,8
tick,0x7ffd093d1d94,190066712,0,0x0,8
tick,0x7ffd093d1d94,190081847,0,0x0,8
tick,0x7ffd093d1d94,190097753,0,0x0,8
tick,0x7ffd093d1d94,190113360,0,0x0,8
tick,0x7ffd093d1d94,190129017,0,0x0,8
tick,0x7ffd093d1d94,190144481,0,0x0,8
tick,0x7ffd093d1d94,190159420,0,0x0,8
tick,0x7ffd093d1d94,190175149,0,0x0,8
tick,0x7ffd093d1d94,190190802,0,0x0,8
tick,0x7ffd093d1d94,190206072,0,0x0,8
tick,0x7ffd093d1d94,190221311,0,0x0,8
tick,0x7ffd093d1d94,190237039,0,0x0,8
tick,0x7ffd093d1d94,190252290,0,0x0,8
tick,0x7ffd093d1d94,190268263,0,0x0,8
tick,0x7ffd093d1d94,190284595,0,0x0,8
tick,0x7ffd093d1d94,190300351,0,0x0,8
tick,0x7ffd093d1d94,190316081,0,0x0,8
tick,0x7ffd093d1d94,190331413,0,0x0,8
tick,0x7ffd093d1d94,190346315,0,0x0,8
tick,0x7ffd093d1d94,190362035,0,0x0,8
tick,0x7ffd093d1d94,190377165,0,0x0,8
tick,0x7ffd093d1d94,190393280,0,0x0,8
tick,0x7ffd093d1d94,190409322,0,0x0,8
tick,0x7ffd093d1d94,190424864,0,0x0,8
tick,0x7ffd093d1d94,190439896,0,0x0,8
tick,0x7ffd093d1d94,190455851,0,0x0,8
tick,0x7ffd093d1d94,190470737,0,0x0,8
tick,0x7ffd093d1d94,190486755,0,0x0,8
tick,0x7ffd093d1d94,190502306,0,0x0,8
tick,0x7ffd093d1d94,190518092,0,0x0,8
tick,0x7ffd093d1d94,190533778,0,0x0,8
tick,0x7ffd093d1d94,190549279,0,0x0,8
tick,0x7ffd093d1d94,190564551,0,0x0,8
tick,0x7ffd093d1d94,190579695,0,0x0,8
tick,0x7ffd093d1d94,190594908,0,0x0,8
tick,0x7ffd093d1d94,190610261,0,0x0,8
tick,0x7ffd093d1d94,190625821,0,0x0,8
tick,0x7ffd093d1d94,190641292,0,0x0,8
tick,0x7ffd093d1d94,190656868,0,0x0,8
tick,0x7ffd093d1d94,190672211,0,0x0,8
tick,0x7ffd093d1d94,190688075,0,0x0,8
tick,0x7ffd093d1d94,190703243,0,0x0,8
tick,0x7ffd093d1d94,190718377,0,0x0,8
tick,0x7ffd093d1d94,190733721,0,0x0,8
tick,0x7ffd093d1d94,190749661,0,0x0,8
tick,0x7ffd093d1d94,190765733,0,0x0,8
tick,0x7ffd093d1d94,190781175,0,0x0,8
tick,0x7ffd093d1d94,190796830,0,0x0,8
tick,0x7ffd093d1d94,190812270,0,0x0,8
tick,0x7ffd093d1d94,190827635,0,0x0,8
tick,0x7ffd093d1d94,190842224,0,0x0,8
tick,0x7ffd093d1d94,190858103,0,0x0,8
tick,0x7ffd093d1d94,190873522,0,0x0,8
tick,0x7ffd093d1d94,190888976,0,0x0,8
tick,0x7ffd093d1d94,190904510,0,0x0,8
tick,0x7ffd093d1d94,190919854,0,0x0,8
tick,0x7ffd093d1d94,190935729,0,0x0,8
tick,0x7ffd093d1d94,190951487,0,0x0,8
tick,0x7ffd093d1d94,190967401,0,0x0,8
tick,0x7ffd093d1d94,190983042,0,0x0,8
tick,0x7ffd093d1d94,190998672,0,0x0,8
tick,0x7ffd093d1d94,191013798,0,0x0,8
tick,0x7ffd093d1d94,191029051,0,0x0,8
tick,0x7ffd093d1d94,191044146,0,0x0,8
tick,0x7ffd093d1d94,191059920,0,0x0,8
tick,0x7ffd093d1d94,191074807,0,0x0,8
tick,0x7ffd093d1d94,191090005,0,0x0,8
tick,0x7ffd093d1d94,191106130,0,0x0,8
tick,0x7ffd093d1d94,191121312,0,0x0,8
tick,0x7ffd093d1d94,191137403,0,0x0,8
tick,0x7ffd093d1d94,191152211,0,0x0,8
tick,0x7ffd093d1d94,191167787,0,0x0,8
tick,0x7ffd093d1d94,191183724,0,0x0,8
tick,0x7ffd093d1d94,191200149,0,0x0,8
tick,0x7ffd093d1d94,191215401,0,0x0,8
tick,0x7ffd093d1d94,191231426,0,0x0,8
tick,0x7ffd093d1d94,191246862,0,0x0,8
tick,0x7ffd093d1d94,191262781,0,0x0,8
tick,0x7ffd093d1d94,191277984,0,0x0,8
tick,0x7ffd093d1d94,191293022,0,0x0,8
tick,0x7ffd093d1d94,191308766,0,0x0,8
tick,0x7ffd093d1d94,191324480,0,0x0,8
tick,0x7ffd093d1d94,191339881,0,0x0,8
tick,0x7ffd093d1d94,191355841,0,0x0,8
tick,0x7ffd093d1d94,191371114,0,0x0,8
tick,0x7ffd093d1d94,191386664,0,0x0,8
tick,0x7ffd093d1d94,191401212,0,0x0,8
tick,0x7ffd093d1d94,191416333,0,0x0,8
tick,0x7ffd093d1d94,191431746,0,0x0,8
tick,0x7ffd093d1d94,191447386,0,0x0,8
tick,0x7ffd093d1d94,191462770,0,0x0,8
tick,0x7ffd093d1d94,191478121,0,0x0,8
tick,0x7ffd093d1d94,191493600,0,0x0,8
tick,0x7ffd093d1d94,191508988,0,0x0,8
tick,0x7ffd093d1d94,191524573,0,0x0,8
tick,0x7ffd093d1d94,191540581,0,0x0,8
tick,0x7ffd093d1d94,191555574,0,0x0,8
tick,0x7ffd093d1d94,191571717,0,0x0,8
tick,0x7ffd093d1d94,191586997,0,0x0,8
tick,0x7ffd093d1d94,191602571,0,0x0,8
tick,0x7ffd093d1d94,191618369,0,0x0,8
tick,0x7ffd093d1d94,191634303,0,0x0,8
tick,0x7ffd093d1d94,191649755,0,0x0,8
tick,0x7ffd093d1d94,191665145,0,0x0,8
tick,0x7ffd093d1d94,191681108,0,0x0,8
tick,0x7ffd093d1d94,191696676,0,0x0,8
tick,0x7ffd093d1d94,191712358,0,0x0,8
tick,0x7ffd093d1d94,191727756,0,0x0,8
tick,0x7ffd093d1d94,191743155,0,0x0,8
tick,0x7ffd093d1d94,191758854,0,0x0,8
tick,0x7ffd093d1d94,191774229,0,0x0,8
tick,0x7ffd093d1d94,191789777,0,0x0,8
tick,0x7ffd093d1d94,191806042,0,0x0,8
tick,0x7ffd093d1d94,191821559,0,0x0,8
tick,0x7ffd093d1d94,191837292,0,0x0,8
tick,0x7ffd093d1d94,191853141,0,0x0,8
tick,0x7ffd093d1d94,191869236,0,0x0,8
tick,0x7ffd093d1d94,191884825,0,0x0,8
tick,0x7ffd093d1d94,191900327,0,0x0,8
tick,0x7ffd093d1d94,191915402,0,0x0,8
tick,0x7ffd093d1d94,191931076,0,0x0,8
tick,0x7ffd093d1d94,191946548,0,0x0,8
tick,0x7ffd093d1d94,191961701,0,0x0,8
tick,0x7ffd093d1d94,191978151,0,0x0,8
tick,0x7ffd093d1d94,191993746,0,0x0,8
tick,0x7ffd093d1d94,192008624,0,0x0,8
tick,0x7ffd093d1d94,192024234,0,0x0,8
tick,0x7ffd093d1d94,192039360,0,0x0,8
tick,0x7ffd093d1d94,192055534,0,0x0,8
tick,0x7ffd093d1d94,192070995,0,0x0,8
tick,0x7ffd093d1d94,192086706,0,0x0,8
tick,0x7ffd093d1d94,192102277,0,0x0,8
tick,0x7ffd093d1d94,192118097,0,0x0,8
tick,0x7ffd093d1d94,192133955,0,0x0,8
tick,0x7ffd093d1d94,192149598,0,0x0,8
tick,0x7ffd093d1d94,192166026,0,0x0,8
tick,0x7ffd093d1d94,192181589,0,0x0,8
tick,0x7ffd093d1d94,192197207,0,0x0,8
tick,0x7ffd093d1d94,192212428,0,0x0,8
tick,0x7ffd093d1d94,192227949,0,0x0,8
tick,0x7ffd093d1d94,192244322,0,0x0,8
tick,0x7ffd093d1d94,192259792,0,0x0,8
tick,0x7ffd093d1d94,192275978,0,0x0,8
tick,0x7ffd093d1d94,192291378,0,0x0,8
tick,0x7ffd093d1d94,192307740,0,0x0,8
tick,0x7ffd093d1d94,192322535,0,0x0,8
tick,0x7ffd093d1d94,192337733,0,0x0,8
tick,0x7ffd093d1d94,192354297,0,0x0,8
tick,0x7ffd093d1d94,192370013,0,0x0,8
tick,0x7ffd093d1d94,192385294,0,0x0,8
tick,0x7ffd093d1d94,192400824,0,0x0,8
tick,0x7ffd093d1d94,192416647,0,0x0,8
tick,0x7ffd093d1d94,192432279,0,0x0,8
tick,0x7ffd093d1d94,192448425,0,0x0,8
tick,0x7ffd093d1d94,192464311,0,0x0,8
tick,0x7ffd093d1d94,192480306,0,0x0,8
tick,0x7ffd093d1d94,192496412,0,0x0,8
tick,0x7ffd093d1d94,192511020,0,0x0,8
tick,0x7ffd093d1d94,192526529,0,0x0,8
tick,0x7ffd093d1d94,192542528,0,0x0,8
tick,0x7ffd093d1d94,192557599,0,0x0,8
tick,0x7ffd093d1d94,192572592,0,0x0,8
tick,0x7ffd093d1d94,192588561,0,0x0,8
tick,0x7ffd093d1d94,192604818,0,0x0,8
tick,0x7ffd093d1d94,192620376,0,0x0,8
tick,0x7ffd093d1d94,192636209,0,0x0,8
tick,0x7ffd093d1d94,192652052,0,0x0,8
tick,0x7ffd093d1d94,192668140,0,0x0,8
tick,0x7ffd093d1d94,192684054,0,0x0,8
tick,0x7ffd093d1d94,192699067,0,0x0,8
tick,0x7ffd093d1d94,192714427,0,0x0,8
tick,0x7ffd093d1d94,192729739,0,0x0,8
tick,0x7ffd093d1d94,192745084,0,0x0,8
tick,0x7ffd093d1d94,192760672,0,0x0,8
tick,0x7ffd093d1d94,192776493,0,0x0,8
tick,0x7ffd093d1d94,192791834,0,0x0,8
tick,0x7ffd093d1d94,192807171,0,0x0,8
tick,0x7ffd093d1d94,192822381,0,0x0,8
tick,0x7ffd093d1d94,192838032,0,0x0,8
tick,0x7ffd093d1d94,192853577,0,0x0,8
tick,0x7ffd093d1d94,192868951,0,0x0,8
tick,0x7ffd093d1d94,192884420,0,0x0,8
tick,0x7ffd093d1d94,192899843,0,0x0,8
tick,0x7ffd093d1d94,192915508,0,0x0,8
tick,0x7ffd093d1d94,192930965,0,0x0,8
tick,0x7ffd093d1d94,192946403,0,0x0,8
tick,0x7ffd093d1d94,192961894,0,0x0,8
tick,0x7ffd093d1d94,192977389,0,0x0,8
tick,0x7ffd093d1d94,192993356,0,0x0,8
tick,0x7ffd093d1d94,193008705,0,0x0,8
tick,0x7ffd093d1d94,193024117,0,0x0,8
tick,0x7ffd093d1d94,193039540,0,0x0,8
tick,0x7ffd093d1d94,193055140,0,0x0,8
tick,0x7ffd093d1d94,193071091,0,0x0,8
tick,0x7ffd093d1d94,193086868,0,0x0,8
tick,0x7ffd093d1d94,193102313,0,0x0,8
tick,0x7ffd093d1d94,193117924,0,0x0,8
tick,0x7ffd093d1d94,193133430,0,0x0,8
tick,0x7ffd093d1d94,193149316,0,0x0,8
tick,0x7ffd093d1d94,193165296,0,0x0,8
tick,0x7ffd093d1d94,193181066,0,0x0,8
tick,0x7ffd093d1d94,193196443,0,0x0,8
tick,0x7ffd093d1d94,193211795,0,0x0,8
tick,0x7ffd093d1d94,193227631,0,0x0,8
tick,0x7ffd093d1d94,193243105,0,0x0,8
tick,0x7ffd093d1d94,193258258,0,0x0,8
tick,0x7ffd093d1d94,193273362,0,0x0,8
tick,0x7ffd093d1d94,193289089,0,0x0,8
tick,0x7ffd093d1d94,193305316,0,0x0,8
tick,0x7ffd093d1d94,193321113,0,0x0,8
tick,0x7ffd093d1d94,193336359,0,0x0,8
tick,0x7ffd093d1d94,193351908,0,0x0,8
tick,0x7ffd093d1d94,193367745,0,0x0,8
tick,0x7ffd093d1d94,193383495,0,0x0,8
tick,0x7ffd093d1d94,193398902,0,0x0,8
tick,0x7ffd093d1d94,193414047,0,0x0,8
tick,0x7ffd093d1d94,193429362,0,0x0,8
tick,0x7ffd093d1d94,193445269,0,0x0,8
tick,0x7ffd093d1d94,193461016,0,0x0,8
tick,0x7ffd093d1d94,193476550,0,0x0,8
tick,0x7ffd093d1d94,193492149,0,0x0,8
tick,0x7ffd093d1d94,193507286,0,0x0,8
tick,0x7ffd093d1d94,193522239,0,0x0,8
tick,0x7ffd093d1d94,193538019,0,0x0,8
tick,0x7ffd093d1d94,193552935,0,0x0,8
tick,0x7ffd093d1d94,193568317,0,0x0,8
tick,0x7ffd093d1d94,193584155,0,0x0,8
tick,0x7ffd093d1d94,193598887,0,0x0,8
tick,0x7ffd093d1d94,193614924,0,0x0,8
tick,0x7ffd093d1d94,193630727,0,0x0,8
tick,0x7ffd093d1d94,193646612,0,0x0,8
tick,0x7ffd093d1d94,193662402,0,0x0,8
tick,0x7ffd093d1d94,193677472,0,0x0,8
tick,0x7ffd093d1d94,193693399,0,0x0,8
tick,0x7ffd093d1d94,193707980,0,0x0,8
tick,0x7ffd093d1d94,193723969,0,0x0,8
tick,0x7ffd093d1d94,193739907,0,0x0,8
tick,0x7ffd093d1d94,193755624,0,0x0,8
tick,0x7ffd093d1d94,193771810,0,0x0,8
tick,0x7ffd093d1d94,193787818,0,0x0,8
tick,0x7ffd093d1d94,193803786,0,0x0,8
tick,0x7ffd093d1d94,193819698,0,0x0,8
tick,0x7ffd093d1d94,193835251,0,0x0,8
tick,0x7ffd093d1d94,193850516,0,0x0,8
tick,0x7ffd093d1d94,193866513,0,0x0,8
tick,0x7ffd093d1d94,193881346,0,0x0,8
tick,0x7ffd093d1d94,193897430,0,0x0,8
tick,0x7ffd093d1d94,193913232,0,0x0,8
tick,0x7ffd093d1d94,193929037,0,0x0,8
tick,0x7ffd093d1d94,193945042,0,0x0,8
tick,0x7ffd093d1d94,193960555,0,0x0,8
tick,0x7ffd093d1d94,193975641,0,0x0,8
tick,0x7ffd093d1d94,193991371,0,0x0,8
tick,0x7ffd093d1d94,194006958,0,0x0,8
tick,0x7ffd093d1d94,194022520,0,0x0,8
tick,0x7ffd093d1d94,194038428,0,0x0,8
tick,0x7ffd093d1d94,194053409,0,0x0,8
tick,0x7ffd093d1d94,194068856,0,0x0,8
tick,0x7ffd093d1d94,194084729,0,0x0,8
tick,0x7ffd093d1d94,194100724,0,0x0,8
tick,0x7ffd093d1d94,194116788,0,0x0,8
tick,0x7ffd093d1d94,194132460,0,0x0,8
tick,0x7ffd093d1d94,194148399,0,0x0,8
tick,0x7ffd093d1d94,194164313,0,0x0,8
tick,0x7ffd093d1d94,194179081,0,0x0,8
tick,0x7ffd093d1d94,194194574,0,0x0,8
tick,0x7ffd093d1d94,194210210,0,0x0,8
tick,0x7ffd093d1d94,194225076,0,0x0,8
tick,0x7ffd093d1d94,194241217,0,0x0,8
tick,0x7ffd093d1d94,194256753,0,0x0,8
tick,0x7ffd093d1d94,194272025,0,0x0,8
tick,0x7ffd093d1d94,194287937,0,0x0,8
tick,0x7ffd093d1d94,194303518,0,0x0,8
tick,0x7ffd093d1d94,194318204,0,0x0,8
tick,0x7ffd093d1d94,194334287,0,0x0,8
tick,0x7ffd093d1d94,194349794,0,0x0,8
tick,0x7ffd093d1d94,194365514,0,0x0,8
tick,0x7ffd093d1d94,194380957,0,0x0,8
tick,0x7ffd093d1d94,194396463,0,0x0,8
tick,0x7ffd093d1d94,194412428,0,0x0,8
tick,0x7ffd093d1d94,194427889,0,0x0,8
tick,0x7ffd093d1d94,194443977,0,0x0,8
tick,0x7ffd093d1d94,194459712,0,0x0,8
tick,0x7ffd093d1d94,194474986,0,0x0,8
tick,0x7ffd093d1d94,194490185,0,0x0,8
tick,0x7ffd093d1d94,194505664,0,0x0,8
tick,0x7ffd093d1d94,194521651,0,0x0,8
tick,0x7ffd093d1d94,194536684,0,0x0,8
tick,0x7ffd093d1d94,194552733,0,0x0,8
tick,0x7ffd093d1d94,194568122,0,0x0,8
tick,0x7ffd093d1d94,194583594,0,0x0,8
tick,0x7ffd093d1d94,194599334,0,0x0,8
tick,0x7ffd093d1d94,194615774,0,0x0,8
tick,0x7ffd093d1d94,194630837,0,0x0,8
tick,0x7ffd093d1d94,194646048,0,0x0,8
tick,0x7ffd093d1d94,194661811,0,0x0,8
tick,0x7ffd093d1d94,194677500,0,0x0,8
tick,0x7ffd093d1d94,194692895,0,0x0,8
tick,0x7ffd093d1d94,194708391,0,0x0,8
tick,0x7ffd093d1d94,194724016,0,0x0,8
tick,0x7ffd093d1d94,194740058,0,0x0,8
tick,0x7ffd093d1d94,194755810,0,0x0,8
tick,0x7ffd093d1d94,194771483,0,0x0,8
tick,0x7ffd093d1d94,194787109,0,0x0,8
tick,0x7ffd093d1d94,194802615,0,0x0,8
tick,0x7ffd093d1d94,194817693,0,0x0,8
tick,0x7ffd093d1d94,194833679,0,0x0,8
tick,0x7ffd093d1d94,194848469,0,0x0,8
tick,0x7ffd093d1d94,194864367,0,0x0,8
tick,0x7ffd093d1d94,194880018,0,0x0,8
tick,0x7ffd093d1d94,194895906,0,0x0,8
tick,0x7ffd093d1d94,194911260,0,0x0,8
tick,0x7ffd093d1d94,194927034,0,0x0,8
tick,0x7ffd093d1d94,194942890,0,0x0,8
tick,0x7ffd093d1d94,194958133,0,0x0,8
tick,0x7ffd093d1d94,194973223,0,0x0,8
tick,0x7ffd093d1d94,194989050,0,0x0,8
tick,0x7ffd093d1d94,195004369,0,0x0,8
tick,0x7ffd093d1d94,195019969,0,0x0,8
tick,0x7ffd093d1d94,195035408,0,0x0,8
tick,0x7ffd093d1d94,195050872,0,0x0,8
tick,0x7ffd093d1d94,195066034,0,0x0,8
tick,0x7ffd093d1d94,195081578,0,0x0,8
tick,0x7ffd093d1d94,195097095,0,0x0,8
tick,0x7ffd093d1d94,195111930,0,0x0,8
tick,0x7ffd093d1d94,195127903,0,0x0,8
tick,0x7ffd093d1d94,195143873,0,0x0,8
tick,0x7ffd093d1d94,195159128,0,0x0,8
tick,0x7ffd093d1d94,195176075,0,0x0,8
tick,0x7ffd093d1d94,195190748,0,0x0,8
tick,0x7ffd093d1d94,195205924,0,0x0,8
tick,0x7ffd093d1d94,195221328,0,0x0,8
tick,0x7ffd093d1d94,195236578,0,0x0,8
tick,0x7ffd093d1d94,195252135,0,0x0,8
tick,0x7ffd093d1d94,195267718,0,0x0,8
tick,0x7ffd093d1d94,195282340,0,0x0,8
tick,0x7ffd093d1d94,195298258,0,0x0,8
tick,0x7ffd093d1d94,195312892,0,0x0,8
tick,0x7ffd093d1d94,195328969,0,0x0,8
tick,0x7ffd093d1d94,195344702,0,0x0,8
tick,0x7ffd093d1d94,195360388,0,0x0,8
tick,0x7ffd093d1d94,195376029,0,0x0,8
tick,0x7ffd093d1d94,195391247,0,0x0,8
tick,0x7ffd093d1d94,195407616,0,0x0,8
tick,0x7ffd093d1d94,195423778,0,0x0,8
tick,0x7ffd093d1d94,195439826,0,0x0,8
tick,0x7ffd093d1d94,195455101,0,0x0,8
tick,0x7ffd093d1d94,195471009,0,0x0,8
tick,0x7ffd093d1d94,195485975,0,0x0,8
tick,0x7ffd093d1d94,195502266,0,0x0,8
tick,0x7ffd093d1d94,195517222,0,0x0,8
tick,0x7ffd093d1d94,195532166,0,0x0,8
tick,0x7ffd093d1d94,195548375,0,0x0,8
tick,0x7ffd093d1d94,195563833,0,0x0,8
tick,0x7ffd093d1d94,195579710,0,0x0,8
tick,0x7ffd093d1d94,195595125,0,0x0,8
tick,0x7ffd093d1d94,195610957,0,0x0,8
tick,0x7ffd093d1d94,195626586,0,0x0,8
tick,0x7ffd093d1d94,195641854,0,0x0,8
tick,0x7ffd093d1d94,195657444,0,0x0,8
tick,0x7ffd093d1d94,195672877,0,0x0,8
tick,0x7ffd093d1d94,195687990,0,0x0,8
tick,0x7ffd093d1d94,195703808,0,0x0,8
tick,0x7ffd093d1d94,195718832,0,0x0,8
tick,0x7ffd093d1d94,195734793,0,0x0,8
tick,0x7ffd093d1d94,195750753,0,0x0,8
tick,0x7ffd093d1d94,195766744,0,0x0,8
tick,0x7ffd093d1d94,195782743,0,0x0,8
tick,0x7ffd093d1d94,195798737,0,0x0,8
tick,0x7ffd093d1d94,195814759,0,0x0,8
tick,0x7ffd093d1d94,195830107,0,0x0,8
tick,0x7ffd093d1d94,195845471,0,0x0,8
tick,0x7ffd093d1d94,195860891,0,0x0,8
tick,0x7ffd093d1d94,195876672,0,0x0,8
tick,0x7ffd093d1d94,195893077,0,0x0,8
tick,0x7ffd093d1d94,195908514,0,0x0,8
tick,0x7ffd093d1d94,195924376,0,0x0,8
tick,0x7ffd093d1d94,195938950,0,0x0,8
tick,0x7ffd093d1d94,195954636,0,0x0,8
tick,0x7ffd093d1d94,195970233,0,0x0,8
tick,0x7ffd093d1d94,195985546,0,0x0,8
tick,0x7ffd093d1d94,196001210,0,0x0,8
tick,0x7ffd093d1d94,196016313,0,0x0,8
tick,0x7ffd093d1d94,196031836,0,0x0,8
tick,0x7ffd093d1d94,196047593,0,0x0,8
tick,0x7ffd093d1d94,196063226,0,0x0,8
tick,0x7ffd093d1d94,196079741,0,0x0,8
tick,0x7ffd093d1d94,196094761,0,0x0,8
tick,0x7ffd093d1d94,196110802,0,0x0,8
tick,0x7ffd093d1d94,196125974,0,0x0,8
tick,0x7ffd093d1d94,196142319,0,0x0,8
tick,0x7ffd093d1d94,196157176,0,0x0,8
tick,0x7ffd093d1d94,196172701,0,0x0,8
tick,0x7ffd093d1d94,196188641,0,0x0,8
tick,0x7ffd093d1d94,196204631,0,0x0,8
tick,0x7ffd093d1d94,196220662,0,0x0,8
tick,0x7ffd093d1d94,196236723,0,0x0,8
tick,0x7ffd093d1d94,196252239,0,0x0,8
tick,0x7ffd093d1d94,196268341,0,0x0,8
tick,0x7ffd093d1d94,196284463,0,0x0,8
tick,0x7ffd093d1d94,196299820,0,0x0,8
tick,0x7ffd093d1d94,196314953,0,0x0,8
tick,0x7ffd093d1d94,196330655,0,0x0,8
tick,0x7ffd093d1d94,196346858,0,0x0,8
tick,0x7ffd093d1d94,196361956,0,0x0,8
tick,0x7ffd093d1d94,196377182,0,0x0,8
tick,0x7ffd093d1d94,196392866,0,0x0,8
tick,0x7ffd093d1d94,196408987,0,0x0,8
tick,0x7ffd093d1d94,196423793,0,0x0,8
tick,0x7ffd093d1d94,196438813,0,0x0,8
tick,0x7ffd093d1d94,196454536,0,0x0,8
tick,0x7ffd093d1d94,196470021,0,0x0,8
tick,0x7ffd093d1d94,196485082,0,0x0,8
tick,0x7ffd093d1d94,196501040,0,0x0,8
tick,0x7ffd093d1d94,196516616,0,0x0,8
tick,0x7ffd093d1d94,196532275,0,0x0,8
tick,0x7ffd093d1d94,196548922,0,0x0,8
tick,0x7ffd093d1d94,196564436,0,0x0,8
tick,0x7ffd093d1d94,196580318,0,0x0,8
tick,0x7ffd093d1d94,196596044,0,0x0,8
tick,0x7ffd093d1d94,196612490,0,0x0,8
tick,0x7ffd093d1d94,196628408,0,0x0,8
tick,0x7ffd093d1d94,196644061,0,0x0,8
tick,0x7ffd093d1d94,196659764,0,0x0,8
tick,0x7ffd093d1d94,196674592,0,0x0,8
tick,0x7ffd093d1d94,196690094,0,0x0,8
tick,0x7ffd093d1d94,196706088,0,0x0,8
tick,0x7ffd093d1d94,196722469,0,0x0,8
tick,0x7ffd093d1d94,196738249,0,0x0,8
tick,0x7ffd093d1d94,196753925,0,0x0,8
tick,0x7ffd093d1d94,196769925,0,0x0,8
tick,0x7ffd093d1d94,196785942,0,0x0,8
tick,0x7ffd093d1d94,196801989,0,0x0,8
tick,0x7ffd093d1d94,196817510,0,0x0,8
tick,0x7ffd093d1d94,196833150,0,0x0,8
tick,0x7ffd093d1d94,196848708,0,0x0,8
tick,0x7ffd093d1d94,196863439,0,0x0,8
tick,0x7ffd093d1d94,196879382,0,0x0,8
tick,0x7ffd093d1d94,196895362,0,0x0,8
tick,0x7ffd093d1d94,196911436,0,0x0,8
tick,0x7ffd093d1d94,196927074,0,0x0,8
tick,0x7ffd093d1d94,196943106,0,0x0,8
tick,0x7ffd093d1d94,196959077,0,0x0,8
tick,0x7ffd093d1d94,196974093,0,0x0,8
tick,0x7ffd093d1d94,196990070,0,0x0,8
tick,0x7ffd093d1d94,197005088,0,0x0,8
tick,0x7ffd093d1d94,197021392,0,0x0,8
tick,0x7ffd093d1d94,197036784,0,0x0,8
tick,0x7ffd093d1d94,197052349,0,0x0,8
tick,0x7ffd093d1d94,197068310,0,0x0,8
tick,0x7ffd093d1d94,197084039,0,0x0,8
tick,0x7ffd093d1d94,197099950,0,0x0,8
tick,0x7ffd093d1d94,197115643,0,0x0,8
tick,0x7ffd093d1d94,197131158,0,0x0,8
tick,0x7ffd093d1d94,197146548,0,0x0,8
tick,0x7ffd093d1d94,197162153,0,0x0,8
tick,0x7ffd093d1d94,197178167,0,0x0,8
tick,0x7ffd093d1d94,197194159,0,0x0,8
tick,0x7ffd093d1d94,197209176,0,0x0,8
tick,0x7ffd093d1d94,197224177,0,0x0,8
tick,0x7ffd093d1d94,197239595,0,0x0,8
tick,0x7ffd093d1d94,197255672,0,0x0,8
tick,0x7ffd093d1d94,197271702,0,0x0,8
tick,0x7ffd093d1d94,197287657,0,0x0,8
tick,0x7ffd093d1d94,197302736,0,0x0,8
tick,0x7ffd093d1d94,197317650,0,0x0,8
tick,0x7ffd093d1d94,197333199,0,0x0,8
tick,0x7ffd093d1d94,197349255,0,0x0,8
tick,0x7ffd093d1d94,197364956,0,0x0,8
tick,0x7ffd093d1d94,197380964,0,0x0,8
tick,0x7ffd093d1d94,197396797,0,0x0,8
tick,0x7ffd093d1d94,197412927,0,0x0,8
tick,0x7ffd093d1d94,197428428,0,0x0,8
tick,0x7ffd093d1d94,197444452,0,0x0,8
tick,0x7ffd093d1d94,197460446,0,0x0,8
tick,0x7ffd093d1d94,197476449,0,0x0,8
tick,0x7ffd093d1d94,197491614,0,0x0,8
tick,0x7ffd093d1d94,197507104,0,0x0,8
tick,0x7ffd093d1d94,197522975,0,0x0,8
tick,0x7ffd093d1d94,197538525,0,0x0,8
tick,0x7ffd093d1d94,197553465,0,0x0,8
tick,0x7ffd093d1d94,197569503,0,0x0,8
tick,0x7ffd093d1d94,197584446,0,0x0,8
tick,0x7ffd093d1d94,197600478,0,0x0,8
tick,0x7ffd093d1d94,197616591,0,0x0,8
tick,0x7ffd093d1d94,197631992,0,0x0,8
tick,0x7ffd093d1d94,197648090,0,0x0,8
tick,0x7ffd093d1d94,197663753,0,0x0,8
tick,0x7ffd093d1d94,197679403,0,0x0,8
tick,0x7ffd093d1d94,197694755,0,0x0,8
tick,0x7ffd093d1d94,197710910,0,0x0,8
tick,0x7ffd093d1d94,197727184,0,0x0,8
tick,0x7ffd093d1d94,197743026,0,0x0,8
tick,0x7ffd093d1d94,197758858,0,0x0,8
tick,0x7ffd093d1d94,197774634,0,0x0,8
tick,0x7ffd093d1d94,197790634,0,0x0,8
tick,0x7ffd093d1d94,197805689,0,0x0,8
tick,0x7ffd093d1d94,197821682,0,0x0,8
tick,0x7ffd093d1d94,197837225,0,0x0,8
tick,0x7ffd093d1d94,197853202,0,0x0,8
tick,0x7ffd093d1d94,197869199,0,0x0,8
tick,0x7ffd093d1d94,197885201,0,0x0,8
tick,0x7ffd093d1d94,197901184,0,0x0,8
tick,0x7ffd093d1d94,197917395,0,0x0,8
tick,0x7ffd093d1d94,197933492,0,0x0,8
tick,0x7ffd093d1d94,197948964,0,0x0,8
tick,0x7ffd093d1d94,197964314,0,0x0,8
tick,0x7ffd093d1d94,197979578,0,0x0,8
tick,0x7ffd093d1d94,197995977,0,0x0,8
tick,0x7ffd093d1d94,198012049,0,0x0,8
tick,0x7ffd093d1d94,198027865,0,0x0,8
tick,0x7ffd093d1d94,198043940,0,0x0,8
tick,0x7ffd093d1d94,198059099,0,0x0,8
tick,0x7ffd093d1d94,198074407,0,0x0,8
tick,0x7ffd093d1d94,198089752,0,0x0,8
tick,0x7ffd093d1d94,198105423,0,0x0,8
tick,0x7ffd093d1d94,198121082,0,0x0,8
tick,0x7ffd093d1d94,198136425,0,0x0,8
tick,0x7ffd093d1d94,198152123,0,0x0,8
tick,0x7ffd093d1d94,198167504,0,0x0,8
tick,0x7ffd093d1d94,198182886,0,0x0,8
tick,0x7ffd093d1d94,198198822,0,0x0,8
tick,0x7ffd093d1d94,198214191,0,0x0,8
tick,0x7ffd093d1d94,198230341,0,0x0,8
tick,0x7ffd093d1d94,198246516,0,0x0,8
tick,0x7ffd093d1d94,198262202,0,0x0,8
tick,0x7ffd093d1d94,198277594,0,0x0,8
tick,0x7ffd093d1d94,198292937,0,0x0,8
tick,0x7ffd093d1d94,198308161,0,0x0,8
tick,0x7ffd093d1d94,198323561,0,0x0,8
tick,0x7ffd093d1d94,198338962,0,0x0,8
tick,0x7ffd093d1d94,198355212,0,0x0,8
tick,0x7ffd093d1d94,198370977,0,0x0,8
tick,0x7ffd093d1d94,198386866,0,0x0,8
tick,0x7ffd093d1d94,198402780,0,0x0,8
tick,0x7ffd093d1d94,198418342,0,0x0,8
tick,0x7ffd093d1d94,198433873,0,0x0,8
tick,0x7ffd093d1d94,198450260,0,0x0,8
tick,0x7ffd093d1d94,198465654,0,0x0,8
tick,0x7ffd093d1d94,198481261,0,0x0,8
tick,0x7ffd093d1d94,198496831,0,0x0,8
tick,0x7ffd093d1d94,198512250,0,0x0,8
tick,0x7ffd093d1d94,198529077,0,0x0,8
tick,0x7ffd093d1d94,198544745,0,0x0,8
tick,0x7ffd093d1d94,198560738,0,0x0,8
tick,0x7ffd093d1d94,198576726,0,0x0,8
tick,0x7ffd093d1d94,198592712,0,0x0,8
tick,0x7ffd093d1d94,198608713,0,0x0,8
tick,0x7ffd093d1d94,198624747,0,0x0,8
tick,0x7ffd093d1d94,198640425,0,0x0,8
tick,0x7ffd093d1d94,198656033,0,0x0,8
tick,0x7ffd093d1d94,198670691,0,0x0,8
tick,0x7ffd093d1d94,198686617,0,0x0,8
tick,0x7ffd093d1d94,198702525,0,0x0,8
tick,0x7ffd093d1d94,198718555,0,0x0,8
tick,0x7ffd093d1d94,198734255,0,0x0,8
tick,0x7ffd093d1d94,198750526,0,0x0,8
tick,0x7ffd093d1d94,198766125,0,0x0,8
tick,0x7ffd093d1d94,198782054,0,0x0,8
tick,0x7ffd093d1d94,198798008,0,0x0,8
tick,0x7ffd093d1d94,198813026,0,0x0,8
tick,0x7ffd093d1d94,198828028,0,0x0,8
tick,0x7ffd093d1d94,198843452,0,0x0,8
tick,0x7ffd093d1d94,198859497,0,0x0,8
tick,0x7ffd093d1d94,198875307,0,0x0,8
tick,0x7ffd093d1d94,198890509,0,0x0,8
tick,0x7ffd093d1d94,198905885,0,0x0,8
tick,0x7ffd093d1d94,198921215,0,0x0,8
tick,0x7ffd093d1d94,198937192,0,0x0,8
tick,0x7ffd093d1d94,198952258,0,0x0,8
tick,0x7ffd093d1d94,198968437,0,0x0,8
tick,0x7ffd093d1d94,198984363,0,0x0,8
tick,0x7ffd093d1d94,198999625,0,0x0,8
tick,0x7ffd093d1d94,199015832,0,0x0,8
tick,0x7ffd093d1d94,199031701,0,0x0,8
tick,0x7ffd093d1d94,199047487,0,0x0,8
tick,0x7ffd093d1d94,199062737,0,0x0,8
tick,0x7ffd093d1d94,199078245,0,0x0,8
tick,0x7ffd093d1d94,199093342,0,0x0,8
tick,0x7ffd093d1d94,199108705,0,0x0,8
tick,0x7ffd093d1d94,199123717,0,0x0,8
tick,0x7ffd093d1d94,199138963,0,0x0,8
tick,0x7ffd093d1d94,199154585,0,0x0,8
tick,0x7ffd093d1d94,199169714,0,0x0,8
tick,0x7ffd093d1d94,199185508,0,0x0,8
tick,0x7ffd093d1d94,199201425,0,0x0,8
tick,0x7ffd093d1d94,199217101,0,0x0,8
tick,0x7ffd093d1d94,199233079,0,0x0,8
tick,0x7ffd093d1d94,199248591,0,0x0,8
tick,0x7ffd093d1d94,199263915,0,0x0,8
tick,0x7ffd093d1d94,199279608,0,0x0,8
tick,0x7ffd093d1d94,199295215,0,0x0,8
tick,0x7ffd093d1d94,199310789,0,0x0,8
tick,0x7ffd093d1d94,199326660,0,0x0,8
tick,0x7ffd093d1d94,199341887,0,0x0,8
tick,0x7ffd093d1d94,199357699,0,0x0,8
tick,0x7ffd093d1d94,199373692,0,0x0,8
tick,0x7ffd093d1d94,199389708,0,0x0,8
tick,0x7ffd093d1d94,199405676,0,0x0,8
tick,0x7ffd093d1d94,199421687,0,0x0,8
tick,0x7ffd093d1d94,199437783,0,0x0,8
tick,0x7ffd093d1d94,199452790,0,0x0,8
tick,0x7ffd093d1d94,199467788,0,0x0,8
tick,0x7ffd093d1d94,199483786,0,0x0,8
tick,0x7ffd093d1d94,199499340,0,0x0,8
tick,0x7ffd093d1d94,199514222,0,0x0,8
tick,0x7ffd093d1d94,199529714,0,0x0,8
tick,0x7ffd093d1d94,199545252,0,0x0,8
tick,0x7ffd093d1d94,199561111,0,0x0,8
tick,0x7ffd093d1d94,199577068,0,0x0,8
tick,0x7ffd093d1d94,199592912,0,0x0,8
tick,0x7ffd093d1d94,199608311,0,0x0,8
tick,0x7ffd093d1d94,199623648,0,0x0,8
tick,0x7ffd093d1d94,199638323,0,0x0,8
tick,0x7ffd093d1d94,199653946,0,0x0,8
tick,0x7ffd093d1d94,199669137,0,0x0,8
tick,0x7ffd093d1d94,199685338,0,0x0,8
tick,0x7ffd093d1d94,199700426,0,0x0,8
tick,0x7ffd093d1d94,199715564,0,0x0,8
tick,0x7ffd093d1d94,199730978,0,0x0,8
tick,0x7ffd093d1d94,199746313,0,0x0,8
tick,0x7ffd093d1d94,199761796,0,0x0,8
tick,0x7ffd093d1d94,199777936,0,0x0,8
tick,0x7ffd093d1d94,199793950,0,0x0,8
tick,0x7ffd093d1d94,199809912,0,0x0,8
tick,0x7ffd093d1d94,199825594,0,0x0,8
tick,0x7ffd093d1d94,199841424,0,0x0,8
tick,0x7ffd093d1d94,199857278,0,0x0,8
tick,0x7ffd093d1d94,199872370,0,0x0,8
tick,0x7ffd093d1d94,199888263,0,0x0,8
tick,0x7ffd093d1d94,199903436,0,0x0,8
tick,0x7ffd093d1d94,199918599,0,0x0,8
tick,0x7ffd093d1d94,199934270,0,0x0,8
tick,0x7ffd093d1d94,199949496,0,0x0,8
tick,0x7ffd093d1d94,199966028,0,0x0,8
tick,0x7ffd093d1d94,199981297,0,0x0,8
tick,0x7ffd093d1d94,199996515,0,0x0,8
tick,0x7ffd093d1d94,200012149,0,0x0,8
tick,0x7ffd093d1d94,200028134,0,0x0,8
tick,0x7ffd093d1d94,200043175,0,0x0,8
tick,0x7ffd093d1d94,200058273,0,0x0,8
tick,0x7ffd093d1d94,200074236,0,0x0,8
tick,0x7ffd093d1d94,200089967,0,0x0,8
tick,0x7ffd093d1d94,200106315,0,0x0,8
tick,0x7ffd093d1d94,200122158,0,0x0,8
tick,0x7ffd093d1d94,200137729,0,0x0,8
tick,0x7ffd093d1d94,200153711,0,0x0,8
tick,0x7ffd093d1d94,200169717,0,0x0,8
tick,0x7ffd093d1d94,200185707,0,0x0,8
tick,0x7ffd093d1d94,200201680,0,0x0,8
tick,0x7ffd093d1d94,200217455,0,0x0,8
tick,0x7ffd093d1d94,200232787,0,0x0,8
tick,0x7ffd093d1d94,200248485,0,0x0,8
tick,0x7ffd093d1d94,200264494,0,0x0,8
tick,0x7ffd093d1d94,200280933,0,0x0,8
tick,0x7ffd093d1d94,200296471,0,0x0,8
tick,0x7ffd093d1d94,200311863,0,0x0,8
tick,0x7ffd093d1d94,200326645,0,0x0,8
tick,0x7ffd093d1d94,200342814,0,0x0,8
tick,0x7ffd093d1d94,200359011,0,0x0,8
tick,0x7ffd093d1d94,200374787,0,0x0,8
tick,0x7ffd093d1d94,200390695,0,0x0,8
tick,0x7ffd093d1d94,200406562,0,0x0,8
tick,0x7ffd093d1d94,200422553,0,0x0,8
tick,0x7ffd093d1d94,200437641,0,0x0,8
tick,0x7ffd093d1d94,200453645,0,0x0,8
tick,0x7ffd093d1d94,200468644,0,0x0,8
tick,0x7ffd093d1d94,200484636,0,0x0,8
tick,0x7ffd093d1d94,200500661,0,0x0,8
tick,0x7ffd093d1d94,200517084,0,0x0,8
tick,0x7ffd093d1d94,200532301,0,0x0,8
tick,0x7ffd093d1d94,200547941,0,0x0,8
tick,0x7ffd093d1d94,200563113,0,0x0,8
tick,0x7ffd093d1d94,200578837,0,0x0,8
tick,0x7ffd093d1d94,200594222,0,0x0,8
tick,0x7ffd093d1d94,200609475,0,0x0,8
tick,0x7ffd093d1d94,200624986,0,0x0,8
tick,0x7ffd093d1d94,200640366,0,0x0,8
tick,0x7ffd093d1d94,200656432,0,0x0,8
tick,0x7ffd093d1d94,200671768,0,0x0,8
tick,0x7ffd093d1d94,200687840,0,0x0,8
tick,0x7ffd093d1d94,200703843,0,0x0,8
tick,0x7ffd093d1d94,200719457,0,0x0,8
tick,0x7ffd093d1d94,200734210,0,0x0,8
tick,0x7ffd093d1d94,200750228,0,0x0,8
tick,0x7ffd093d1d94,200765722,0,0x0,8
tick,0x7ffd093d1d94,200781590,0,0x0,8
tick,0x7ffd093d1d94,200797688,0,0x0,8
tick,0x7ffd093d1d94,200812859,0,0x0,8
tick,0x7ffd093d1d94,200828387,0,0x0,8
tick,0x7ffd093d1d94,200844326,0,0x0,8
tick,0x7ffd093d1d94,200860037,0,0x0,8
tick,0x7ffd093d1d94,200875322,0,0x0,8
tick,0x7ffd093d1d94,200890791,0,0x0,8
tick,0x7ffd093d1d94,200906064,0,0x0,8
tick,0x7ffd093d1d94,200922036,0,0x0,8
tick,0x7ffd093d1d94,200937695,0,0x0,8
tick,0x7ffd093d1d94,200953411,0,0x0,8
tick,0x7ffd093d1d94,200969035,0,0x0,8
tick,0x7ffd093d1d94,200985013,0,0x0,8
tick,0x7ffd093d1d94,201000963,0,0x0,8
tick,0x7ffd093d1d94,201016766,0,0x0,8
tick,0x7ffd093d1d94,201032280,0,0x0,8
tick,0x7ffd093d1d94,201048285,0,0x0,8
tick,0x7ffd093d1d94,201063288,0,0x0,8
tick,0x7ffd093d1d94,201078802,0,0x0,8
tick,0x7ffd093d1d94,201094787,0,0x0,8
tick,0x7ffd093d1d94,201110801,0,0x0,8
tick,0x7ffd093d1d94,201126817,0,0x0,8
tick,0x7ffd093d1d94,201142118,0,0x0,8
tick,0x7ffd093d1d94,201157749,0,0x0,8
tick,0x7ffd093d1d94,201173298,0,0x0,8
tick,0x7ffd093d1d94,201188582,0,0x0,8
tick,0x7ffd093d1d94,201204542,0,0x0,8
tick,0x7ffd093d1d94,201220267,0,0x0,8
tick,0x7ffd093d1d94,201235700,0,0x0,8
tick,0x7ffd093d1d94,201251658,0,0x0,8
tick,0x7ffd093d1d94,201267595,0,0x0,8
tick,0x7ffd093d1d94,201283636,0,0x0,8
tick,0x7ffd093d1d94,201298433,0,0x0,8
tick,0x7ffd093d1d94,201314535,0,0x0,8
tick,0x7ffd093d1d94,201329580,0,0x0,8
tick,0x7ffd093d1d94,201344973,0,0x0,8
tick,0x7ffd093d1d94,201360906,0,0x0,8
tick,0x7ffd093d1d94,201376865,0,0x0,8
tick,0x7ffd093d1d94,201392840,0,0x0,8
tick,0x7ffd093d1d94,201408747,0,0x0,8
tick,0x7ffd093d1d94,201424754,0,0x0,8
tick,0x7ffd093d1d94,201440910,0,0x0,8
tick,0x7ffd093d1d94,201456383,0,0x0,8
tick,0x7ffd093d1d94,201472629,0,0x0,8
tick,0x7ffd093d1d94,201487364,0,0x0,8
tick,0x7ffd093d1d94,201502355,0,0x0,8
tick,0x7ffd093d1d94,201518387,0,0x0,8
tick,0x7ffd093d1d94,201534060,0,0x0,8
tick,0x7ffd093d1d94,201549586,0,0x0,8
tick,0x7ffd093d1d94,201565671,0,0x0,8
tick,0x7ffd093d1d94,201581341,0,0x0,8
tick,0x7ffd093d1d94,201597400,0,0x0,8
tick,0x7ffd093d1d94,201613025,0,0x0,8
tick,0x7ffd093d1d94,201629374,0,0x0,8
tick,0x7ffd093d1d94,201645461,0,0x0,8
tick,0x7ffd093d1d94,201661365,0,0x0,8
tick,0x7ffd093d1d94,201677345,0,0x0,8
tick,0x7ffd093d1d94,201693665,0,0x0,8
tick,0x7ffd093d1d94,201709745,0,0x0,8
tick,0x7ffd093d1d94,201725306,0,0x0,8
tick,0x7ffd093d1d94,201740862,0,0x0,8
tick,0x7ffd093d1d94,201757089,0,0x0,8
tick,0x7ffd093d1d94,201772545,0,0x0,8
tick,0x7ffd093d1d94,201787550,0,0x0,8
tick,0x7ffd093d1d94,201803126,0,0x0,8
tick,0x7ffd093d1d94,201818270,0,0x0,8
tick,0x7ffd093d1d94,201833715,0,0x0,8
tick,0x7ffd093d1d94,201848875,0,0x0,8
tick,0x7ffd093d1d94,201864709,0,0x0,8
tick,0x7ffd093d1d94,201879910,0,0x0,8
tick,0x7ffd093d1d94,201895627,0,0x0,8
tick,0x7ffd093d1d94,201911246,0,0x0,8
tick,0x7ffd093d1d94,201926822,0,0x0,8
tick,0x7ffd093d1d94,201942298,0,0x0,8
tick,0x7ffd093d1d94,201958008,0,0x0,8
tick,0x7ffd093d1d94,201973818,0,0x0,8
tick,0x7ffd093d1d94,201989004,0,0x0,8
tick,0x7ffd093d1d94,202004248,0,0x0,8
tick,0x7ffd093d1d94,202020609,0,0x0,8
tick,0x7ffd093d1d94,202037103,0,0x0,8
tick,0x7ffd093d1d94,202052464,0,0x0,8
tick,0x7ffd093d1d94,202068185,0,0x0,8
tick,0x7ffd093d1d94,202083415,0,0x0,8
tick,0x7ffd093d1d94,202098456,0,0x0,8
tick,0x7ffd093d1d94,202114515,0,0x0,8
tick,0x7ffd093d1d94,202130921,0,0x0,8
tick,0x7ffd093d1d94,202146168,0,0x0,8
tick,0x7ffd093d1d94,202162228,0,0x0,8
tick,0x7ffd093d1d94,202177698,0,0x0,8
tick,0x7ffd093d1d94,202193698,0,0x0,8
tick,0x7ffd093d1d94,202209273,0,0x0,8
tick,0x7ffd093d1d94,202224541,0,0x0,8
tick,0x7ffd093d1d94,202240181,0,0x0,8
tick,0x7ffd093d1d94,202256172,0,0x0,8
tick,0x7ffd093d1d94,202271775,0,0x0,8
tick,0x7ffd093d1d94,202287360,0,0x0,8
tick,0x7ffd093d1d94,202302382,0,0x0,8
tick,0x7ffd093d1d94,202317750,0,0x0,8
tick,0x7ffd093d1d94,202333026,0,0x0,8
tick,0x7ffd093d1d94,202348491,0,0x0,8
tick,0x7ffd093d1d94,202363956,0,0x0,8
tick,0x7ffd093d1d94,202379659,0,0x0,8
tick,0x7ffd093d1d94,202394858,0,0x0,8
tick,0x7ffd093d1d94,202409866,0,0x0,8
tick,0x7ffd093d1d94,202425742,0,0x0,8
tick,0x7ffd093d1d94,202441289,0,0x0,8
tick,0x7ffd093d1d94,202457370,0,0x0,8
tick,0x7ffd093d1d94,202473695,0,0x0,8
tick,0x7ffd093d1d94,202488927,0,0x0,8
tick,0x7ffd093d1d94,202504436,0,0x0,8
tick,0x7ffd093d1d94,202519323,0,0x0,8
tick,0x7ffd093d1d94,202534812,0,0x0,8
tick,0x7ffd093d1d94,202550793,0,0x0,8
tick,0x7ffd093d1d94,202566804,0,0x0,8
tick,0x7ffd093d1d94,202582808,0,0x0,8
tick,0x7ffd093d1d94,202598141,0,0x0,8
tick,0x7ffd093d1d94,202613555,0,0x0,8
tick,0x7ffd093d1d94,202629426,0,0x0,8
tick,0x7ffd093d1d94,202644678,0,0x0,8
tick,0x7ffd093d1d94,202660784,0,0x0,8
tick,0x7ffd093d1d94,202676293,0,0x0,8
tick,0x7ffd093d1d94,202692031,0,0x0,8
tick,0x7ffd093d1d94,202707133,0,0x0,8
tick,0x7ffd093d1d94,202722294,0,0x0,8
tick,0x7ffd093d1d94,202738361,0,0x0,8
tick,0x7ffd093d1d94,202753469,0,0x0,8
tick,0x7ffd093d1d94,202769568,0,0x0,8
tick,0x7ffd093d1d94,202785580,0,0x0,8
tick,0x7ffd093d1d94,202801189,0,0x0,8
tick,0x7ffd093d1d94,202816738,0,0x0,8
tick,0x7ffd093d1d94,202832004,0,0x0,8
tick,0x7ffd093d1d94,202847546,0,0x0,8
tick,0x7ffd093d1d94,202863627,0,0x0,8
tick,0x7ffd093d1d94,202879109,0,0x0,8
tick,0x7ffd093d1d94,202894453,0,0x0,8
tick,0x7ffd093d1d94,202910250,0,0x0,8
tick,0x7ffd093d1d94,202925452,0,0x0,8
tick,0x7ffd093d1d94,202941178,0,0x0,8
tick,0x7ffd093d1d94,202956757,0,0x0,8
tick,0x7ffd093d1d94,202972490,0,0x0,8
tick,0x7ffd093d1d94,202988223,0,0x0,8
tick,0x7ffd093d1d94,203004259,0,0x0,8
tick,0x7ffd093d1d94,203019609,0,0x0,8
tick,0x7ffd093d1d94,203035193,0,0x0,8
tick,0x7ffd093d1d94,203051220,0,0x0,8
tick,0x7ffd093d1d94,203067265,0,0x0,8
tick,0x7ffd093d1d94,203083369,0,0x0,8
tick,0x7ffd093d1d94,203098787,0,0x0,8
tick,0x7ffd093d1d94,203114217,0,0x0,8
tick,0x7ffd093d1d94,203130344,0,0x0,8
tick,0x7ffd093d1d94,203146394,0,0x0,8
tick,0x7ffd093d1d94,203161457,0,0x0,8
tick,0x7ffd093d1d94,203176462,0,0x0,8
tick,0x7ffd093d1d94,203191591,0,0x0,8
tick,0x7ffd093d1d94,203207002,0,0x0,8
tick,0x7ffd093d1d94,203222953,0,0x0,8
tick,0x7ffd093d1d94,203238552,0,0x0,8
tick,0x7ffd093d1d94,203253221,0,0x0,8
tick,0x7ffd093d1d94,203269534,0,0x0,8
tick,0x7ffd093d1d94,203285202,0,0x0,8
tick,0x7ffd093d1d94,203300775,0,0x0,8
tick,0x7ffd093d1d94,203315609,0,0x0,8
tick,0x7ffd093d1d94,203330862,0,0x0,8
tick,0x7ffd093d1d94,203346446,0,0x0,8
tick,0x7ffd093d1d94,203361833,0,0x0,8
tick,0x7ffd093d1d94,203378014,0,0x0,8
tick,0x7ffd093d1d94,203393423,0,0x0,8
tick,0x7ffd093d1d94,203409234,0,0x0,8
tick,0x7ffd093d1d94,203424248,0,0x0,8
tick,0x7ffd093d1d94,203439471,0,0x0,8
tick,0x7ffd093d1d94,203454352,0,0x0,8
tick,0x7ffd093d1d94,203470352,0,0x0,8
tick,0x7ffd093d1d94,203486099,0,0x0,8
tick,0x7ffd093d1d94,203501589,0,0x0,8
tick,0x7ffd093d1d94,203517602,0,0x0,8
tick,0x7ffd093d1d94,203533598,0,0x0,8
tick,0x7ffd093d1d94,203549214,0,0x0,8
tick,0x7ffd093d1d94,203564433,0,0x0,8
tick,0x7ffd093d1d94,203580643,0,0x0,8
tick,0x7ffd093d1d94,203596158,0,0x0,8
tick,0x7ffd093d1d94,203611027,0,0x0,8
tick,0x7ffd093d1d94,203626824,0,0x0,8
tick,0x7ffd093d1d94,203642341,0,0x0,8
tick,0x7ffd093d1d94,203658400,0,0x0,8
tick,0x7ffd093d1d94,203673848,0,0x0,8
tick,0x7ffd093d1d94,203689452,0,0x0,8
tick,0x7ffd093d1d94,203704525,0,0x0,8
tick,0x7ffd093d1d94,203719854,0,0x0,8
tick,0x7ffd093d1d94,203735453,0,0x0,8
tick,0x7ffd093d1d94,203750838,0,0x0,8
tick,0x7ffd093d1d94,203765792,0,0x0,8
tick,0x7ffd093d1d94,203781796,0,0x0,8
tick,0x7ffd093d1d94,203797793,0,0x0,8
tick,0x7ffd093d1d94,203813316,0,0x0,8
tick,0x7ffd093d1d94,203828645,0,0x0,8
tick,0x7ffd093d1d94,203843650,0,0x0,8
tick,0x7ffd093d1d94,203859498,0,0x0,8
tick,0x7ffd093d1d94,203875993,0,0x0,8
tick,0x7ffd093d1d94,203891430,0,0x0,8
tick,0x7ffd093d1d94,203907166,0,0x0,8
tick,0x7ffd093d1d94,203923164,0,0x0,8
tick,0x7ffd093d1d94,203938611,0,0x0,8
tick,0x7ffd093d1d94,203954842,0,0x0,8
tick,0x7ffd093d1d94,203970577,0,0x0,8
tick,0x7ffd093d1d94,203986406,0,0x0,8
tick,0x7ffd093d1d94,204002670,0,0x0,8
tick,0x7ffd093d1d94,204018480,0,0x0,8
tick,0x7ffd093d1d94,204033918,0,0x0,8
tick,0x7ffd093d1d94,204049878,0,0x0,8
tick,0x7ffd093d1d94,204065808,0,0x0,8
tick,0x7ffd093d1d94,204081310,0,0x0,8
tick,0x7ffd093d1d94,204096789,0,0x0,8
tick,0x7ffd093d1d94,204112254,0,0x0,8
tick,0x7ffd093d1d94,204128050,0,0x0,8
tick,0x7ffd093d1d94,204143822,0,0x0,8
tick,0x7ffd093d1d94,204159504,0,0x0,8
tick,0x7ffd093d1d94,204174961,0,0x0,8
tick,0x7ffd093d1d94,204190153,0,0x0,8
tick,0x7ffd093d1d94,204205332,0,0x0,8
tick,0x7ffd093d1d94,204220909,0,0x0,8
tick,0x7ffd093d1d94,204236077,0,0x0,8
tick,0x7ffd093d1d94,204251565,0,0x0,8
tick,0x7ffd093d1d94,204266975,0,0x0,8
tick,0x7ffd093d1d94,204281968,0,0x0,8
tick,0x7ffd093d1d94,204297767,0,0x0,8
tick,0x7ffd093d1d94,204313311,0,0x0,8
tick,0x7ffd093d1d94,204329185,0,0x0,8
tick,0x7ffd093d1d94,204345033,0,0x0,8
tick,0x7ffd093d1d94,204360665,0,0x0,8
tick,0x7ffd093d1d94,204375833,0,0x0,8
tick,0x7ffd093d1d94,204391840,0,0x0,8
tick,0x7ffd093d1d94,204407904,0,0x0,8
tick,0x7ffd093d1d94,204424139,0,0x0,8
tick,0x7ffd093d1d94,204440031,0,0x0,8
tick,0x7ffd093d1d94,204455136,0,0x0,8
tick,0x7ffd093d1d94,204469947,0,0x0,8
tick,0x7ffd093d1d94,204486252,0,0x0,8
tick,0x7ffd093d1d94,204502330,0,0x0,8
tick,0x7ffd093d1d94,204518128,0,0x0,8
tick,0x7ffd093d1d94,204533611,0,0x0,8
tick,0x7ffd093d1d94,204548941,0,0x0,8
tick,0x7ffd093d1d94,204564516,0,0x0,8
tick,0x7ffd093d1d94,204579844,0,0x0,8
tick,0x7ffd093d1d94,204595588,0,0x0,8
tick,0x7ffd093d1d94,204611281,0,0x0,8
tick,0x7ffd093d1d94,204627872,0,0x0,8
tick,0x7ffd093d1d94,204643518,0,0x0,8
tick,0x7ffd093d1d94,204658480,0,0x0,8
tick,0x7ffd093d1d94,204673828,0,0x0,8
tick,0x7ffd093d1d94,204689206,0,0x0,8
tick,0x7ffd093d1d94,204705181,0,0x0,8
tick,0x7ffd093d1d94,204720594,0,0x0,8
tick,0x7ffd093d1d94,204735889,0,0x0,8
tick,0x7ffd093d1d94,204751501,0,0x0,8
tick,0x7ffd093d1d94,204766886,0,0x0,8
tick,0x7ffd093d1d94,204782782,0,0x0,8
tick,0x7ffd093d1d94,204797711,0,0x0,8
tick,0x7ffd093d1d94,204812512,0,0x0,8
tick,0x7ffd093d1d94,204827824,0,0x0,8
tick,0x7ffd093d1d94,204843938,0,0x0,8
tick,0x7ffd093d1d94,204859169,0,0x0,8
tick,0x7ffd093d1d94,204875265,0,0x0,8
tick,0x7ffd093d1d94,204889676,0,0x0,8
tick,0x7ffd093d1d94,204905748,0,0x0,8
tick,0x7ffd093d1d94,204921725,0,0x0,8
tick,0x7ffd093d1d94,204938321,0,0x0,8
tick,0x7ffd093d1d94,204954458,0,0x0,8
tick,0x7ffd093d1d94,204968810,0,0x0,8
tick,0x7ffd093d1d94,204984830,0,0x0,8
tick,0x7ffd093d1d94,204999974,0,0x0,8
tick,0x7ffd093d1d94,205015567,0,0x0,8
tick,0x7ffd093d1d94,205030839,0,0x0,8
tick,0x7ffd093d1d94,205047370,0,0x0,8
tick,0x7ffd093d1d94,205062551,0,0x0,8
tick,0x7ffd093d1d94,205078409,0,0x0,8
tick,0x7ffd093d1d94,205094158,0,0x0,8
tick,0x7ffd093d1d94,205109799,0,0x0,8
tick,0x7ffd093d1d94,205125752,0,0x0,8
tick,0x7ffd093d1d94,205141184,0,0x0,8
tick,0x7ffd093d1d94,205156379,0,0x0,8
tick,0x7ffd093d1d94,205172438,0,0x0,8
tick,0x7ffd093d1d94,205188130,0,0x0,8
tick,0x7ffd093d1d94,205204460,0,0x0,8
tick,0x7ffd093d1d94,205220096,0,0x0,8
tick,0x7ffd093d1d94,205235027,0,0x0,8
tick,0x7ffd093d1d94,205250487,0,0x0,8
tick,0x7ffd093d1d94,205266840,0,0x0,8
tick,0x7ffd093d1d94,205282553,0,0x0,8
tick,0x7ffd093d1d94,205298445,0,0x0,8
tick,0x7ffd093d1d94,205314962,0,0x0,8
tick,0x7ffd093d1d94,205330253,0,0x0,8
tick,0x7ffd093d1d94,205345743,0,0x0,8
tick,0x7ffd093d1d94,205362141,0,0x0,8
tick,0x7ffd093d1d94,205377390,0,0x0,8
tick,0x7ffd093d1d94,205393400,0,0x0,8
tick,0x7ffd093d1d94,205408461,0,0x0,8
tick,0x7ffd093d1d94,205423545,0,0x0,8
tick,0x7ffd093d1d94,205438742,0,0x0,8
tick,0x7ffd093d1d94,205454089,0,0x0,8
tick,0x7ffd093d1d94,205469338,0,0x0,8
tick,0x7ffd093d1d94,205484907,0,0x0,8
tick,0x7ffd093d1d94,205500163,0,0x0,8
tick,0x7ffd093d1d94,205515457,0,0x0,8
tick,0x7ffd093d1d94,205530531,0,0x0,8
tick,0x7ffd093d1d94,205546101,0,0x0,8
tick,0x7ffd093d1d94,205562013,0,0x0,8
tick,0x7ffd093d1d94,205577710,0,0x0,8
tick,0x7ffd093d1d94,205593741,0,0x0,8
tick,0x7ffd093d1d94,205609281,0,0x0,8
tick,0x7ffd093d1d94,205624638,0,0x0,8
tick,0x7ffd093d1d94,205640101,0,0x0,8
tick,0x7ffd093d1d94,205655663,0,0x0,8
tick,0x7ffd093d1d94,205671594,0,0x0,8
tick,0x7ffd093d1d94,205687635,0,0x0,8
tick,0x7ffd093d1d94,205703177,0,0x0,8
tick,0x7ffd093d1d94,205718718,0,0x0,8
tick,0x7ffd093d1d94,205734428,0,0x0,8
tick,0x7ffd093d1d94,205750165,0,0x0,8
tick,0x7ffd093d1d94,205766145,0,0x0,8
tick,0x7ffd093d1d94,205781249,0,0x0,8
tick,0x7ffd093d1d94,205797208,0,0x0,8
tick,0x7ffd093d1d94,205812055,0,0x0,8
tick,0x7ffd093d1d94,205827216,0,0x0,8
tick,0x7ffd093d1d94,205842471,0,0x0,8
tick,0x7ffd093d1d94,205858666,0,0x0,8
tick,0x7ffd093d1d94,205874297,0,0x0,8
tick,0x7ffd093d1d94,205890574,0,0x0,8
tick,0x7ffd093d1d94,205906599,0,0x0,8
tick,0x7ffd093d1d94,205922435,0,0x0,8
tick,0x7ffd093d1d94,205937822,0,0x0,8
tick,0x7ffd093d1d94,205953782,0,0x0,8
tick,0x7ffd093d1d94,205968966,0,0x0,8
tick,0x7ffd093d1d94,205985144,0,0x0,8
tick,0x7ffd093d1d94,206000340,0,0x0,8
tick,0x7ffd093d1d94,206015583,0,0x0,8
tick,0x7ffd093d1d94,206031072,0,0x0,8
tick,0x7ffd093d1d94,206046803,0,0x0,8
tick,0x7ffd093d1d94,206062083,0,0x0,8
tick,0x7ffd093d1d94,206077347,0,0x0,8
tick,0x7ffd093d1d94,206092916,0,0x0,8
tick,0x7ffd093d1d94,206108710,0,0x0,8
tick,0x7ffd093d1d94,206124110,0,0x0,8
tick,0x7ffd093d1d94,206139586,0,0x0,8
tick,0x7ffd093d1d94,206154533,0,0x0,8
tick,0x7ffd093d1d94,206170678,0,0x0,8
tick,0x7ffd093d1d94,206186017,0,0x0,8
tick,0x7ffd093d1d94,206201260,0,0x0,8
tick,0x7ffd093d1d94,206216681,0,0x0,8
tick,0x7ffd093d1d94,206232279,0,0x0,8
tick,0x7ffd093d1d94,206247929,0,0x0,8
tick,0x7ffd093d1d94,206263960,0,0x0,8
tick,0x7ffd093d1d94,206279924,0,0x0,8
tick,0x7ffd093d1d94,206295364,0,0x0,8
tick,0x7ffd093d1d94,206311305,0,0x0,8
tick,0x7ffd093d1d94,206326554,0,0x0,8
tick,0x7ffd093d1d94,206342192,0,0x0,8
tick,0x7ffd093d1d94,206357645,0,0x0,8
tick,0x7ffd093d1d94,206373887,0,0x0,8
tick,0x7ffd093d1d94,206389379,0,0x0,8
tick,0x7ffd093d1d94,206404663,0,0x0,8
tick,0x7ffd093d1d94,206420281,0,0x0,8
tick,0x7ffd093d1d94,206435718,0,0x0,8
tick,0x7ffd093d1d94,206451360,0,0x0,8
tick,0x7ffd093d1d94,206466572,0,0x0,8
tick,0x7ffd093d1d94,206481997,0,0x0,8
tick,0x7ffd093d1d94,206498054,0,0x0,8
tick,0x7ffd093d1d94,206513003,0,0x0,8
tick,0x7ffd093d1d94,206528883,0,0x0,8
tick,0x7ffd093d1d94,206544342,0,0x0,8
tick,0x7ffd093d1d94,206560406,0,0x0,8
tick,0x7ffd093d1d94,206576331,0,0x0,8
tick,0x7ffd093d1d94,206592304,0,0x0,8
tick,0x7ffd093d1d94,206607977,0,0x0,8
tick,0x7ffd093d1d94,206623777,0,0x0,8
tick,0x7ffd093d1d94,206638929,0,0x0,8
tick,0x7ffd093d1d94,206654801,0,0x0,8
tick,0x7ffd093d1d94,206670472,0,0x0,8
tick,0x7ffd093d1d94,206686492,0,0x0,8
tick,0x7ffd093d1d94,206702387,0,0x0,8
tick,0x7ffd093d1d94,206718782,0,0x0,8
tick,0x7ffd093d1d94,206733932,0,0x0,8
tick,0x7ffd093d1d94,206748272,0,0x0,8
tick,0x7ffd093d1d94,206764438,0,0x0,8
tick,0x7ffd093d1d94,206779874,0,0x0,8
tick,0x7ffd093d1d94,206795131,0,0x0,8
tick,0x7ffd093d1d94,206810019,0,0x0,8
tick,0x7ffd093d1d94,206825398,0,0x0,8
tick,0x7ffd093d1d94,206842054,0,0x0,8
tick,0x7ffd093d1d94,206857225,0,0x0,8
tick,0x7ffd093d1d94,206872590,0,0x0,8
tick,0x7ffd093d1d94,206887880,0,0x0,8
tick,0x7ffd093d1d94,206903500,0,0x0,8
tick,0x7ffd093d1d94,206918606,0,0x0,8
tick,0x7ffd093d1d94,206934260,0,0x0,8
tick,0x7ffd093d1d94,206949848,0,0x0,8
tick,0x7ffd093d1d94,206965472,0,0x0,8
tick,0x7ffd093d1d94,206981555,0,0x0,8
tick,0x7ffd093d1d94,206997655,0,0x0,8
tick,0x7ffd093d1d94,207013004,0,0x0,8
tick,0x7ffd093d1d94,207029258,0,0x0,8
tick,0x7ffd093d1d94,207045130,0,0x0,8
tick,0x7ffd093d1d94,207060670,0,0x0,8
tick,0x7ffd093d1d94,207077222,0,0x0,8
tick,0x7ffd093d1d94,207092865,0,0x0,8
tick,0x7ffd093d1d94,207108083,0,0x0,8
tick,0x7ffd093d1d94,207124303,0,0x0,8
tick,0x7ffd093d1d94,207138941,0,0x0,8
tick,0x7ffd093d1d94,207154696,0,0x0,8
tick,0x7ffd093d1d94,207170551,0,0x0,8
tick,0x7ffd093d1d94,207185398,0,0x0,8
tick,0x7ffd093d1d94,207200696,0,0x0,8
tick,0x7ffd093d1d94,207216109,0,0x0,8
tick,0x7ffd093d1d94,207232084,0,0x0,8
tick,0x7ffd093d1d94,207247880,0,0x0,8
tick,0x7ffd093d1d94,207263853,0,0x0,8
tick,0x7ffd093d1d94,207279309,0,0x0,8
tick,0x7ffd093d1d94,207294400,0,0x0,8
tick,0x7ffd093d1d94,207310576,0,0x0,8
tick,0x7ffd093d1d94,207326935,0,0x0,8
tick,0x7ffd093d1d94,207343465,0,0x0,8
tick,0x7ffd093d1d94,207358654,0,0x0,8
tick,0x7ffd093d1d94,207373775,0,0x0,8
tick,0x7ffd093d1d94,207388956,0,0x0,8
tick,0x7ffd093d1d94,207404605,0,0x0,8
tick,0x7ffd093d1d94,207420482,0,0x0,8
tick,0x7ffd093d1d94,207436246,0,0x0,8
tick,0x7ffd093d1d94,207451994,0,0x0,8
tick,0x7ffd093d1d94,207468430,0,0x0,8
tick,0x7ffd093d1d94,207484282,0,0x0,8
tick,0x7ffd093d1d94,207499964,0,0x0,8
tick,0x7ffd093d1d94,207515599,0,0x0,8
tick,0x7ffd093d1d94,207530602,0,0x0,8
tick,0x7ffd093d1d94,207546659,0,0x0,8
tick,0x7ffd093d1d94,207562279,0,0x0,8
tick,0x7ffd093d1d94,207577399,0,0x0,8
tick,0x7ffd093d1d94,207593105,0,0x0,8
tick,0x7ffd093d1d94,207608339,0,0x0,8
tick,0x7ffd093d1d94,207623851,0,0x0,8
tick,0x7ffd093d1d94,207639819,0,0x0,8
tick,0x7ffd093d1d94,207655596,0,0x0,8
tick,0x7ffd093d1d94,207670602,0,0x0,8
tick,0x7ffd093d1d94,207686116,0,0x0,8
tick,0x7ffd093d1d94,207702259,0,0x0,8
tick,0x7ffd093d1d94,207718154,0,0x0,8
tick,0x7ffd093d1d94,207733669,0,0x0,8
tick,0x7ffd093d1d94,207748518,0,0x0,8
tick,0x7ffd093d1d94,207764652,0,0x0,8
tick,0x7ffd093d1d94,207780495,0,0x0,8
tick,0x7ffd093d1d94,207795399,0,0x0,8
tick,0x7ffd093d1d94,207810817,0,0x0,8
tick,0x7ffd093d1d94,207826077,0,0x0,8
tick,0x7ffd093d1d94,207841110,0,0x0,8
tick,0x7ffd093d1d94,207856698,0,0x0,8
tick,0x7ffd093d1d94,207871888,0,0x0,8
tick,0x7ffd093d1d94,207888165,0,0x0,8
tick,0x7ffd093d1d94,207902748,0,0x0,8
tick,0x7ffd093d1d94,207918408,0,0x0,8
tick,0x7ffd093d1d94,207934344,0,0x0,8
tick,0x7ffd093d1d94,207949972,0,0x0,8
tick,0x7ffd093d1d94,207965717,0,0x0,8
tick,0x7ffd093d1d94,207981035,0,0x0,8
tick,0x7ffd093d1d94,207996773,0,0x0,8
tick,0x7ffd093d1d94,208012965,0,0x0,8
tick,0x7ffd093d1d94,208028840,0,0x0,8
tick,0x7ffd093d1d94,208044273,0,0x0,8
tick,0x7ffd093d1d94,208059783,0,0x0,8
tick,0x7ffd093d1d94,208075113,0,0x0,8
tick,0x7ffd093d1d94,208090642,0,0x0,8
tick,0x7ffd093d1d94,208106006,0,0x0,8
tick,0x7ffd093d1d94,208121931,0,0x0,8
tick,0x7ffd093d1d94,208137938,0,0x0,8
tick,0x7ffd093d1d94,208152877,0,0x0,8
tick,0x7ffd093d1d94,208168296,0,0x0,8
tick,0x7ffd093d1d94,208183739,0,0x0,8
tick,0x7ffd093d1d94,208199681,0,0x0,8
tick,0x7ffd093d1d94,208215022,0,0x0,8
tick,0x7ffd093d1d94,208230646,0,0x0,8
tick,0x7ffd093d1d94,208245953,0,0x0,8
tick,0x7ffd093d1d94,208262109,0,0x0,8
tick,0x7ffd093d1d94,208277224,0,0x0,8
tick,0x7ffd093d1d94,208292816,0,0x0,8
tick,0x7ffd093d1d94,208308501,0,0x0,8
tick,0x7ffd093d1d94,208323996,0,0x0,8
tick,0x7ffd093d1d94,208340127,0,0x0,8
tick,0x7ffd093d1d94,208355826,0,0x0,8
tick,0x7ffd093d1d94,208371368,0,0x0,8
tick,0x7ffd093d1d94,208386664,0,0x0,8
tick,0x7ffd093d1d94,208402023,0,0x0,8
tick,0x7ffd093d1d94,208417851,0,0x0,8
tick,0x7ffd093d1d94,208433034,0,0x0,8
tick,0x7ffd093d1d94,208447881,0,0x0,8
tick,0x7ffd093d1d94,208463705,0,0x0,8
tick,0x7ffd093d1d94,208479344,0,0x0,8
tick,0x7ffd093d1d94,208495140,0,0x0,8
tick,0x7ffd093d1d94,208510841,0,0x0,8
tick,0x7ffd093d1d94,208526191,0,0x0,8
tick,0x7ffd093d1d94,208542194,0,0x0,8
tick,0x7ffd093d1d94,208557199,0,0x0,8
tick,0x7ffd093d1d94,208572560,0,0x0,8
tick,0x7ffd093d1d94,208588312,0,0x0,8
tick,0x7ffd093d1d94,208603408,0,0x0,8
tick,0x7ffd093d1d94,208618677,0,0x0,8
tick,0x7ffd093d1d94,208633750,0,0x0,8
tick,0x7ffd093d1d94,208649584,0,0x0,8
tick,0x7ffd093d1d94,208665272,0,0x0,8
tick,0x7ffd093d1d94,208680681,0,0x0,8
tick,0x7ffd093d1d94,208695736,0,0x0,8
tick,0x7ffd093d1d94,208711028,0,0x0,8
tick,0x7ffd093d1d94,208726696,0,0x0,8
tick,0x7ffd093d1d94,208741887,0,0x0,8
tick,0x7ffd093d1d94,208757945,0,0x0,8
tick,0x7ffd093d1d94,208774113,0,0x0,8
tick,0x7ffd093d1d94,208789445,0,0x0,8
tick,0x7ffd093d1d94,208804848,0,0x0,8
tick,0x7ffd093d1d94,208820520,0,0x0,8
tick,0x7ffd093d1d94,208836173,0,0x0,8
tick,0x7ffd093d1d94,208851521,0,0x0,8
tick,0x7ffd093d1d94,208867604,0,0x0,8
tick,0x7ffd093d1d94,208882784,0,0x0,8
tick,0x7ffd093d1d94,208898688,0,0x0,8
tick,0x7ffd093d1d94,208914371,0,0x0,8
tick,0x7ffd093d1d94,208930453,0,0x0,8
tick,0x7ffd093d1d94,208945584,0,0x0,8
tick,0x7ffd093d1d94,208960161,0,0x0,8
tick,0x7ffd093d1d94,208975662,0,0x0,8
tick,0x7ffd093d1d94,208991391,0,0x0,8
tick,0x7ffd093d1d94,209006226,0,0x0,8
tick,0x7ffd093d1d94,209022211,0,0x0,8
tick,0x7ffd093d1d94,209037924,0,0x0,8
tick,0x7ffd093d1d94,209053386,0,0x0,8
tick,0x7ffd093d1d94,209068560,0,0x0,8
tick,0x7ffd093d1d94,209084029,0,0x0,8
tick,0x7ffd093d1d94,209099586,0,0x0,8
tick,0x7ffd093d1d94,209115715,0,0x0,8
tick,0x7ffd093d1d94,209131309,0,0x0,8
tick,0x7ffd093d1d94,209146847,0,0x0,8
tick,0x7ffd093d1d94,209162337,0,0x0,8
tick,0x7ffd093d1d94,209177647,0,0x0,8
tick,0x7ffd093d1d94,209193023,0,0x0,8
tick,0x7ffd093d1d94,209208252,0,0x0,8
tick,0x7ffd093d1d94,209224045,0,0x0,8
tick,0x7ffd093d1d94,209239968,0,0x0,8
tick,0x7ffd093d1d94,209255553,0,0x0,8
tick,0x7ffd093d1d94,209271628,0,0x0,8
tick,0x7ffd093d1d94,209287772,0,0x0,8
tick,0x7ffd093d1d94,209303628,0,0x0,8
tick,0x7ffd093d1d94,209319603,0,0x0,8
tick,0x7ffd093d1d94,209335644,0,0x0,8
tick,0x7ffd093d1d94,209350884,0,0x0,8
tick,0x7ffd093d1d94,209367176,0,0x0,8
tick,0x7ffd093d1d94,209382318,0,0x0,8
tick,0x7ffd093d1d94,209397980,0,0x0,8
tick,0x7ffd093d1d94,209413916,0,0x0,8
tick,0x7ffd093d1d94,209428854,0,0x0,8
tick,0x7ffd093d1d94,209444246,0,0x0,8
tick,0x7ffd093d1d94,209460220,0,0x0,8
tick,0x7ffd093d1d94,209476300,0,0x0,8
tick,0x7ffd093d1d94,209491250,0,0x0,8
tick,0x7ffd093d1d94,209506733,0,0x0,8
tick,0x7ffd093d1d94,209521499,0,0x0,8
tick,0x7ffd093d1d94,209536944,0,0x0,8
tick,0x7ffd093d1d94,209552493,0,0x0,8
tick,0x7ffd093d1d94,209568891,0,0x0,8
tick,0x7ffd093d1d94,209584069,0,0x0,8
tick,0x7ffd093d1d94,209599648,0,0x0,8
tick,0x7ffd093d1d94,209614706,0,0x0,8
tick,0x7ffd093d1d94,209630248,0,0x0,8
tick,0x7ffd093d1d94,209645231,0,0x0,8
tick,0x7ffd093d1d94,209661188,0,0x0,8
tick,0x7ffd093d1d94,209676481,0,0x0,8
tick,0x7ffd093d1d94,209691437,0,0x0,8
tick,0x7ffd093d1d94,209707387,0,0x0,8
tick,0x7ffd093d1d94,209722620,0,0x0,8
tick,0x7ffd093d1d94,209738179,0,0x0,8
tick,0x7ffd093d1d94,209754432,0,0x0,8
tick,0x7ffd093d1d94,209770740,0,0x0,8
tick,0x7ffd093d1d94,209786220,0,0x0,8
tick,0x7ffd093d1d94,209801489,0,0x0,8
tick,0x7ffd093d1d94,209816413,0,0x0,8
tick,0x7ffd093d1d94,209832595,0,0x0,8
tick,0x7ffd093d1d94,209847874,0,0x0,8
tick,0x7ffd093d1d94,209863555,0,0x0,8
tick,0x7ffd093d1d94,209879095,0,0x0,8
tick,0x7ffd093d1d94,209894744,0,0x0,8
tick,0x7ffd093d1d94,209910757,0,0x0,8
tick,0x7ffd093d1d94,209926613,0,0x0,8
tick,0x7ffd093d1d94,209942402,0,0x0,8
tick,0x7ffd093d1d94,209958280,0,0x0,8
tick,0x7ffd093d1d94,209973699,0,0x0,8
tick,0x7ffd093d1d94,209989625,0,0x0,8
tick,0x7ffd093d1d94,210005002,0,0x0,8
tick,0x7ffd093d1d94,210020753,0,0x0,8
tick,0x7ffd093d1d94,210036315,0,0x0,8
tick,0x7ffd093d1d94,210051500,0,0x0,8
tick,0x7ffd093d1d94,210066859,0,0x0,8
tick,0x7ffd093d1d94,210081796,0,0x0,8
tick,0x7ffd093d1d94,210097335,0,0x0,8
tick,0x7ffd093d1d94,210113092,0,0x0,8
tick,0x7ffd093d1d94,210128822,0,0x0,8
tick,0x7ffd093d1d94,210144396,0,0x0,8
tick,0x7ffd093d1d94,210160039,0,0x0,8
tick,0x7ffd093d1d94,210175099,0,0x0,8
tick,0x7ffd093d1d94,210190469,0,0x0,8
tick,0x7ffd093d1d94,210206217,0,0x0,8
tick,0x7ffd093d1d94,210221597,0,0x0,8
tick,0x7ffd093d1d94,210237127,0,0x0,8
tick,0x7ffd093d1d94,210252553,0,0x0,8
tick,0x7ffd093d1d94,210267647,0,0x0,8
tick,0x7ffd093d1d94,210283261,0,0x0,8
tick,0x7ffd093d1d94,210298917,0,0x0,8
tick,0x7ffd093d1d94,210315047,0,0x0,8
tick,0x7ffd093d1d94,210330772,0,0x0,8
tick,0x7ffd093d1d94,210345961,0,0x0,8
tick,0x7ffd093d1d94,210361775,0,0x0,8
tick,0x7ffd093d1d94,210377179,0,0x0,8
tick,0x7ffd093d1d94,210392852,0,0x0,8
tick,0x7ffd093d1d94,210408875,0,0x0,8
tick,0x7ffd093d1d94,210424967,0,0x0,8
tick,0x7ffd093d1d94,210440751,0,0x0,8
tick,0x7ffd093d1d94,210456079,0,0x0,8
tick,0x7ffd093d1d94,210472104,0,0x0,8
tick,0x7ffd093d1d94,210486924,0,0x0,8
tick,0x7ffd093d1d94,210502014,0,0x0,8
tick,0x7ffd093d1d94,210518065,0,0x0,8
tick,0x7ffd093d1d94,210532995,0,0x0,8
tick,0x7ffd093d1d94,210548981,0,0x0,8
tick,0x7ffd093d1d94,210564560,0,0x0,8
tick,0x7ffd093d1d94,210580495,0,0x0,8
tick,0x7ffd093d1d94,210596428,0,0x0,8
tick,0x7ffd093d1d94,210612521,0,0x0,8
tick,0x7ffd093d1d94,210628477,0,0x0,8
tick,0x7ffd093d1d94,210644478,0,0x0,8
tick,0x7ffd093d1d94,210660078,0,0x0,8
tick,0x7ffd093d1d94,210676001,0,0x0,8
tick,0x7ffd093d1d94,210692337,0,0x0,8
tick,0x7ffd093d1d94,210708046,0,0x0,8
tick,0x7ffd093d1d94,210724144,0,0x0,8
tick,0x7ffd093d1d94,210739494,0,0x0,8
tick,0x7ffd093d1d94,210754753,0,0x0,8
tick,0x7ffd093d1d94,210770660,0,0x0,8
tick,0x7ffd093d1d94,210786445,0,0x0,8
tick,0x7ffd093d1d94,210802310,0,0x0,8
tick,0x7ffd093d1d94,210817720,0,0x0,8
tick,0x7ffd093d1d94,210833174,0,0x0,8
tick,0x7ffd093d1d94,210848518,0,0x0,8
tick,0x7ffd093d1d94,210864234,0,0x0,8
tick,0x7ffd093d1d94,210879868,0,0x0,8
tick,0x7ffd093d1d94,210895267,0,0x0,8
tick,0x7ffd093d1d94,210910860,0,0x0,8
tick,0x7ffd093d1d94,210926613,0,0x0,8
tick,0x7ffd093d1d94,210942337,0,0x0,8
tick,0x7ffd093d1d94,210957965,0,0x0,8
tick,0x7ffd093d1d94,210974220,0,0x0,8
tick,0x7ffd093d1d94,210989864,0,0x0,8
tick,0x7ffd093d1d94,211004845,0,0x0,8
tick,0x7ffd093d1d94,211020838,0,0x0,8
tick,0x7ffd093d1d94,211036152,0,0x0,8
tick,0x7ffd093d1d94,211051725,0,0x0,8
tick,0x7ffd093d1d94,211066678,0,0x0,8
tick,0x7ffd093d1d94,211081980,0,0x0,8
tick,0x7ffd093d1d94,211097995,0,0x0,8
tick,0x7ffd093d1d94,211113767,0,0x0,8
tick,0x7ffd093d1d94,211129053,0,0x0,8
tick,0x7ffd093d1d94,211144690,0,0x0,8
tick,0x7ffd093d1d94,211160263,0,0x0,8
tick,0x7ffd093d1d94,211176172,0,0x0,8
tick,0x7ffd093d1d94,211192161,0,0x0,8
tick,0x7ffd093d1d94,211207956,0,0x0,8
tick,0x7ffd093d1d94,211224072,0,0x0,8
tick,0x7ffd093d1d94,211239932,0,0x0,8
tick,0x7ffd093d1d94,211255279,0,0x0,8
tick,0x7ffd093d1d94,211270696,0,0x0,8
tick,0x7ffd093d1d94,211286557,0,0x0,8
tick,0x7ffd093d1d94,211302312,0,0x0,8
tick,0x7ffd093d1d94,211317348,0,0x0,8
tick,0x7ffd093d1d94,211332643,0,0x0,8
tick,0x7ffd093d1d94,211348602,0,0x0,8
tick,0x7ffd093d1d94,211364107,0,0x0,8
tick,0x7ffd093d1d94,211380391,0,0x0,8
tick,0x7ffd093d1d94,211395502,0,0x0,8
tick,0x7ffd093d1d94,211410886,0,0x0,8
tick,0x7ffd093d1d94,211425754,0,0x0,8
tick,0x7ffd093d1d94,211441241,0,0x0,8
tick,0x7ffd093d1d94,211457027,0,0x0,8
tick,0x7ffd093d1d94,211472571,0,0x0,8
tick,0x7ffd093d1d94,211487641,0,0x0,8
tick,0x7ffd093d1d94,211503152,0,0x0,8
tick,0x7ffd093d1d94,211518726,0,0x0,8
tick,0x7ffd093d1d94,211534215,0,0x0,8
tick,0x7ffd093d1d94,211550822,0,0x0,8
tick,0x7ffd093d1d94,211567015,0,0x0,8
tick,0x7ffd093d1d94,211582807,0,0x0,8
tick,0x7ffd093d1d94,211598025,0,0x0,8
tick,0x7ffd093d1d94,211613890,0,0x0,8
tick,0x7ffd093d1d94,211628867,0,0x0,8
tick,0x7ffd093d1d94,211644865,0,0x0,8
tick,0x7ffd093d1d94,211660081,0,0x0,8
tick,0x7ffd093d1d94,211675130,0,0x0,8
tick,0x7ffd093d1d94,211690708,0,0x0,8
tick,0x7ffd093d1d94,211706016,0,0x0,8
tick,0x7ffd093d1d94,211721899,0,0x0,8
tick,0x7ffd093d1d94,211737222,0,0x0,8
tick,0x7ffd093d1d94,211752584,0,0x0,8
tick,0x7ffd093d1d94,211768602,0,0x0,8
tick,0x7ffd093d1d94,211783979,0,0x0,8
tick,0x7ffd093d1d94,211800663,0,0x0,8
tick,0x7ffd093d1d94,211816452,0,0x0,8
tick,0x7ffd093d1d94,211832035,0,0x0,8
tick,0x7ffd093d1d94,211847424,0,0x0,8
tick,0x7ffd093d1d94,211862635,0,0x0,8
tick,0x7ffd093d1d94,211878441,0,0x0,8
tick,0x7ffd093d1d94,211894296,0,0x0,8
tick,0x7ffd093d1d94,211910332,0,0x0,8
tick,0x7ffd093d1d94,211925595,0,0x0,8
tick,0x7ffd093d1d94,211941612,0,0x0,8
tick,0x7ffd093d1d94,211957254,0,0x0,8
tick,0x7ffd093d1d94,211972284,0,0x0,8
tick,0x7ffd093d1d94,211987770,0,0x0,8
tick,0x7ffd093d1d94,212003373,0,0x0,8
tick,0x7ffd093d1d94,212018818,0,0x0,8
tick,0x7ffd093d1d94,212033994,0,0x0,8
tick,0x7ffd093d1d94,212049619,0,0x0,8
tick,0x7ffd093d1d94,212065670,0,0x0,8
tick,0x7ffd093d1d94,212080550,0,0x0,8
tick,0x7ffd093d1d94,212095318,0,0x0,8
tick,0x7ffd093d1d94,212110721,0,0x0,8
tick,0x7ffd093d1d94,212126598,0,0x0,8
tick,0x7ffd093d1d94,212141982,0,0x0,8
tick,0x7ffd093d1d94,212157478,0,0x0,8
tick,0x7ffd093d1d94,212173462,0,0x0,8
tick,0x7ffd093d1d94,212189739,0,0x0,8
tick,0x7ffd093d1d94,212204902,0,0x0,8
tick,0x7ffd093d1d94,212219569,0,0x0,8
tick,0x7ffd093d1d94,212235570,0,0x0,8
tick,0x7ffd093d1d94,212252055,0,0x0,8
tick,0x7ffd093d1d94,212267804,0,0x0,8
tick,0x7ffd093d1d94,212283571,0,0x0,8
tick,0x7ffd093d1d94,212299258,0,0x0,8
tick,0x7ffd093d1d94,212314857,0,0x0,8
tick,0x7ffd093d1d94,212329735,0,0x0,8
tick,0x7ffd093d1d94,212345227,0,0x0,8
tick,0x7ffd093d1d94,212360929,0,0x0,8
tick,0x7ffd093d1d94,212376143,0,0x0,8
tick,0x7ffd093d1d94,212392168,0,0x0,8
tick,0x7ffd093d1d94,212408143,0,0x0,8
tick,0x7ffd093d1d94,212423376,0,0x0,8
tick,0x7ffd093d1d94,212438371,0,0x0,8
tick,0x7ffd093d1d94,212454769,0,0x0,8
tick,0x7ffd093d1d94,212470365,0,0x0,8
tick,0x7ffd093d1d94,212486195,0,0x0,8
tick,0x7ffd093d1d94,212502577,0,0x0,8
tick,0x7ffd093d1d94,212518038,0,0x0,8
tick,0x7ffd093d1d94,212533519,0,0x0,8
tick,0x7ffd093d1d94,212549987,0,0x0,8
tick,0x7ffd093d1d94,212565153,0,0x0,8
tick,0x7ffd093d1d94,212580498,0,0x0,8
tick,0x7ffd093d1d94,212595801,0,0x0,8
tick,0x7ffd093d1d94,212610787,0,0x0,8
tick,0x7ffd093d1d94,212626144,0,0x0,8
tick,0x7ffd093d1d94,212642206,0,0x0,8
tick,0x7ffd093d1d94,212657941,0,0x0,8
tick,0x7ffd093d1d94,212673801,0,0x0,8
tick,0x7ffd093d1d94,212689445,0,0x0,8
tick,0x7ffd093d1d94,212704858,0,0x0,8
tick,0x7ffd093d1d94,212720731,0,0x0,8
tick,0x7ffd093d1d94,212735754,0,0x0,8
tick,0x7ffd093d1d94,212751841,0,0x0,8
tick,0x7ffd093d1d94,212766951,0,0x0,8
tick,0x7ffd093d1d94,212782473,0,0x0,8
tick,0x7ffd093d1d94,212798230,0,0x0,8
tick,0x7ffd093d1d94,212813269,0,0x0,8
tick,0x7ffd093d1d94,212828433,0,0x0,8
tick,0x7ffd093d1d94,212843847,0,0x0,8
tick,0x7ffd093d1d94,212858823,0,0x0,8
tick,0x7ffd093d1d94,212874576,0,0x0,8
tick,0x7ffd093d1d94,212889693,0,0x0,8
tick,0x7ffd093d1d94,212904748,0,0x0,8
tick,0x7ffd093d1d94,212921027,0,0x0,8
tick,0x7ffd093d1d94,212936691,0,0x0,8
tick,0x7ffd093d1d94,212953150,0,0x0,8
tick,0x7ffd093d1d94,212968908,0,0x0,8
tick,0x7ffd093d1d94,212985022,0,0x0,8
tick,0x7ffd093d1d94,213000261,0,0x0,8
tick,0x7ffd093d1d94,213015564,0,0x0,8
tick,0x7ffd093d1d94,213030290,0,0x0,8
tick,0x7ffd093d1d94,213046477,0,0x0,8
tick,0x7ffd093d1d94,213061856,0,0x0,8
tick,0x7ffd093d1d94,213078051,0,0x0,8
tick,0x7ffd093d1d94,213093626,0,0x0,8
tick,0x7ffd093d1d94,213109701,0,0x0,8
tick,0x7ffd093d1d94,213124823,0,0x0,8
tick,0x7ffd093d1d94,213140116,0,0x0,8
tick,0x7ffd093d1d94,213155899,0,0x0,8
tick,0x7ffd093d1d94,213171366,0,0x0,8
tick,0x7ffd093d1d94,213187245,0,0x0,8
tick,0x7ffd093d1d94,213202624,0,0x0,8
tick,0x7ffd093d1d94,213218006,0,0x0,8
tick,0x7ffd093d1d94,213233890,0,0x0,8
tick,0x7ffd093d1d94,213249574,0,0x0,8
tick,0x7ffd093d1d94,213264798,0,0x0,8
tick,0x7ffd093d1d94,213280447,0,0x0,8
tick,0x7ffd093d1d94,213296144,0,0x0,8
tick,0x7ffd093d1d94,213311831,0,0x0,8
tick,0x7ffd093d1d94,213327693,0,0x0,8
tick,0x7ffd093d1d94,213343072,0,0x0,8
tick,0x7ffd093d1d94,213359246,0,0x0,8
tick,0x7ffd093d1d94,213374361,0,0x0,8
tick,0x7ffd093d1d94,213390202,0,0x0,8
tick,0x7ffd093d1d94,213405562,0,0x0,8
tick,0x7ffd093d1d94,213420785,0,0x0,8
tick,0x7ffd093d1d94,213436333,0,0x0,8
tick,0x7ffd093d1d94,213451347,0,0x0,8
tick,0x7ffd093d1d94,213466866,0,0x0,8
tick,0x7ffd093d1d94,213482473,0,0x0,8
tick,0x7ffd093d1d94,213498035,0,0x0,8
tick,0x7ffd093d1d94,213513705,0,0x0,8
tick,0x7ffd093d1d94,213529528,0,0x0,8
tick,0x7ffd093d1d94,213545545,0,0x0,8
tick,0x7ffd093d1d94,213561074,0,0x0,8
tick,0x7ffd093d1d94,213576769,0,0x0,8
tick,0x7ffd093d1d94,213592836,0,0x0,8
tick,0x7ffd093d1d94,213608036,0,0x0,8
tick,0x7ffd093d1d94,213624014,0,0x0,8
tick,0x7ffd093d1d94,213639634,0,0x0,8
tick,0x7ffd093d1d94,213655071,0,0x0,8
tick,0x7ffd093d1d94,213670493,0,0x0,8
tick,0x7ffd093d1d94,213686006,0,0x0,8
tick,0x7ffd093d1d94,213701760,0,0x0,8
tick,0x7ffd093d1d94,213717063,0,0x0,8
tick,0x7ffd093d1d94,213733138,0,0x0,8
tick,0x7ffd093d1d94,213748546,0,0x0,8
tick,0x7ffd093d1d94,213764772,0,0x0,8
tick,0x7ffd093d1d94,213779917,0,0x0,8
tick,0x7ffd093d1d94,213795691,0,0x0,8
tick,0x7ffd093d1d94,213811462,0,0x0,8
tick,0x7ffd093d1d94,213827064,0,0x0,8
tick,0x7ffd093d1d94,213843047,0,0x0,8
tick,0x7ffd093d1d94,213858550,0,0x0,8
tick,0x7ffd093d1d94,213873545,0,0x0,8
tick,0x7ffd093d1d94,213889727,0,0x0,8
tick,0x7ffd093d1d94,213906005,0,0x0,8
tick,0x7ffd093d1d94,213921043,0,0x0,8
tick,0x7ffd093d1d94,213936332,0,0x0,8
tick,0x7ffd093d1d94,213951753,0,0x0,8
tick,0x7ffd093d1d94,213966918,0,0x0,8
tick,0x7ffd093d1d94,213982904,0,0x0,8
tick,0x7ffd093d1d94,213998559,0,0x0,8
tick,0x7ffd093d1d94,214013926,0,0x0,8
tick,0x7ffd093d1d94,214029530,0,0x0,8
tick,0x7ffd093d1d94,214045389,0,0x0,8
tick,0x7ffd093d1d94,214061040,0,0x0,8
tick,0x7ffd093d1d94,214076362,0,0x0,8
tick,0x7ffd093d1d94,214091351,0,0x0,8
tick,0x7ffd093d1d94,214106754,0,0x0,8
tick,0x7ffd093d1d94,214122479,0,0x0,8
tick,0x7ffd093d1d94,214138724,0,0x0,8
tick,0x7ffd093d1d94,214154569,0,0x0,8
tick,0x7ffd093d1d94,214169892,0,0x0,8
tick,0x7ffd093d1d94,214185956,0,0x0,8
tick,0x7ffd093d1d94,214201499,0,0x0,8
tick,0x7ffd093d1d94,214216857,0,0x0,8
tick,0x7ffd093d1d94,214232464,0,0x0,8
tick,0x7ffd093d1d94,214247974,0,0x0,8
tick,0x7ffd093d1d94,214263465,0,0x0,8
tick,0x7ffd093d1d94,214278863,0,0x0,8
tick,0x7ffd093d1d94,214295075,0,0x0,8
tick,0x7ffd093d1d94,214310570,0,0x0,8
tick,0x7ffd093d1d94,214325856,0,0x0,8
tick,0x7ffd093d1d94,214341762,0,0x0,8
tick,0x7ffd093d1d94,214356959,0,0x0,8
tick,0x7ffd093d1d94,214372502,0,0x0,8
tick,0x7ffd093d1d94,214387674,0,0x0,8
tick,0x7ffd093d1d94,214403557,0,0x0,8
tick,0x7ffd093d1d94,214419083,0,0x0,8
tick,0x7ffd093d1d94,214435459,0,0x0,8
tick,0x7ffd093d1d94,214451020,0,0x0,8
tick,0x7ffd093d1d94,214466120,0,0x0,8
tick,0x7ffd093d1d94,214482334,0,0x0,8
tick,0x7ffd093d1d94,214497237,0,0x0,8
tick,0x7ffd093d1d94,214512959,0,0x0,8
tick,0x7ffd093d1d94,214528616,0,0x0,8
tick,0x7ffd093d1d94,214544260,0,0x0,8
tick,0x7ffd093d1d94,214559918,0,0x0,8
tick,0x7ffd093d1d94,214574892,0,0x0,8
tick,0x7ffd093d1d94,214590415,0,0x0,8
tick,0x7ffd093d1d94,214605532,0,0x0,8
tick,0x7ffd093d1d94,214620826,0,0x0,8
tick,0x7ffd093d1d94,214636625,0,0x0,8
tick,0x7ffd093d1d94,214652799,0,0x0,8
tick,0x7ffd093d1d94,214668928,0,0x0,8
tick,0x7ffd093d1d94,214683874,0,0x0,8
tick,0x7ffd093d1d94,214698616,0,0x0,8
tick,0x7ffd093d1d94,214714608,0,0x0,8
tick,0x7ffd093d1d94,214729550,0,0x0,8
tick,0x7ffd093d1d94,214744230,0,0x0,8
tick,0x7ffd093d1d94,214759130,0,0x0,8
tick,0x7ffd093d1d94,214774164,0,0x0,8
tick,0x7ffd093d1d94,214789727,0,0x0,8
tick,0x7ffd093d1d94,214805178,0,0x0,8
tick,0x7ffd093d1d94,214820568,0,0x0,8
tick,0x7ffd093d1d94,214836656,0,0x0,8
tick,0x7ffd093d1d94,214852149,0,0x0,8
tick,0x7ffd093d1d94,214867438,0,0x0,8
tick,0x7ffd093d1d94,214883009,0,0x0,8
tick,0x7ffd093d1d94,214898758,0,0x0,8
tick,0x7ffd093d1d94,214914259,0,0x0,8
tick,0x7ffd093d1d94,214929730,0,0x0,8
tick,0x7ffd093d1d94,214945849,0,0x0,8
tick,0x7ffd093d1d94,214961179,0,0x0,8
tick,0x7ffd093d1d94,214978018,0,0x0,8
tick,0x7ffd093d1d94,214992611,0,0x0,8
tick,0x7ffd093d1d94,215008535,0,0x0,8
tick,0x7ffd093d1d94,215024009,0,0x0,8
tick,0x7ffd093d1d94,215039485,0,0x0,8
tick,0x7ffd093d1d94,215054474,0,0x0,8
tick,0x7ffd093d1d94,215070332,0,0x0,8
tick,0x7ffd093d1d94,215086831,0,0x0,8
tick,0x7ffd093d1d94,215101389,0,0x0,8
tick,0x7ffd093d1d94,215117289,0,0x0,8
tick,0x7ffd093d1d94,215132825,0,0x0,8
tick,0x7ffd093d1d94,215147341,0,0x0,8
tick,0x7ffd093d1d94,215162837,0,0x0,8
tick,0x7ffd093d1d94,215178325,0,0x0,8
tick,0x7ffd093d1d94,215193853,0,0x0,8
tick,0x7ffd093d1d94,215210522,0,0x0,8
tick,0x7ffd093d1d94,215224762,0,0x0,8
tick,0x7ffd093d1d94,215240287,0,0x0,8
tick,0x7ffd093d1d94,215256658,0,0x0,8
tick,0x7ffd093d1d94,215272087,0,0x0,8
tick,0x7ffd093d1d94,215287429,0,0x0,8
tick,0x7ffd093d1d94,215302937,0,0x0,8
tick,0x7ffd093d1d94,215318554,0,0x0,8
tick,0x7ffd093d1d94,215333882,0,0x0,8
tick,0x7ffd093d1d94,215349404,0,0x0,8
tick,0x7ffd093d1d94,215365057,0,0x0,8
tick,0x7ffd093d1d94,215379597,0,0x0,8
tick,0x7ffd093d1d94,215395231,0,0x0,8
tick,0x7ffd093d1d94,215411187,0,0x0,8
tick,0x7ffd093d1d94,215426730,0,0x0,8
tick,0x7ffd093d1d94,215442565,0,0x0,8
tick,0x7ffd093d1d94,215458997,0,0x0,8
tick,0x7ffd093d1d94,215474163,0,0x0,8
tick,0x7ffd093d1d94,215490075,0,0x0,8
tick,0x7ffd093d1d94,215505109,0,0x0,8
tick,0x7ffd093d1d94,215520835,0,0x0,8
tick,0x7ffd093d1d94,215536086,0,0x0,8
tick,0x7ffd093d1d94,215551735,0,0x0,8
tick,0x7ffd093d1d94,215567011,0,0x0,8
tick,0x7ffd093d1d94,215582864,0,0x0,8
tick,0x7ffd093d1d94,215598415,0,0x0,8
tick,0x7ffd093d1d94,215615094,0,0x0,8
tick,0x7ffd093d1d94,215630107,0,0x0,8
tick,0x7ffd093d1d94,215645634,0,0x0,8
tick,0x7ffd093d1d94,215660506,0,0x0,8
tick,0x7ffd093d1d94,215677105,0,0x0,8
tick,0x7ffd093d1d94,215691809,0,0x0,8
tick,0x7ffd093d1d94,215706799,0,0x0,8
tick,0x7ffd093d1d94,215723017,0,0x0,8
tick,0x7ffd093d1d94,215737954,0,0x0,8
tick,0x7ffd093d1d94,215754479,0,0x0,8
tick,0x7ffd093d1d94,215768674,0,0x0,8
tick,0x7ffd093d1d94,215784967,0,0x0,8
tick,0x7ffd093d1d94,215799956,0,0x0,8
tick,0x7ffd093d1d94,215815460,0,0x0,8
tick,0x7ffd093d1d94,215831252,0,0x0,8
tick,0x7ffd093d1d94,215846005,0,0x0,8
tick,0x7ffd093d1d94,215862123,0,0x0,8
tick,0x7ffd093d1d94,215878131,0,0x0,8
tick,0x7ffd093d1d94,215893264,0,0x0,8
tick,0x7ffd093d1d94,215909477,0,0x0,8
tick,0x7ffd093d1d94,215924530,0,0x0,8
tick,0x7ffd093d1d94,215939956,0,0x0,8
tick,0x7ffd093d1d94,215955926,0,0x0,8
tick,0x7ffd093d1d94,215971748,0,0x0,8
tick,0x7ffd093d1d94,215986943,0,0x0,8
tick,0x7ffd093d1d94,216002319,0,0x0,8
tick,0x7ffd093d1d94,216018319,0,0x0,8
tick,0x7ffd093d1d94,216034125,0,0x0,8
tick,0x7ffd093d1d94,216050124,0,0x0,8
tick,0x7ffd093d1d94,216065744,0,0x0,8
tick,0x7ffd093d1d94,216081532,0,0x0,8
tick,0x7ffd093d1d94,216097211,0,0x0,8
tick,0x7ffd093d1d94,216113448,0,0x0,8
tick,0x7ffd093d1d94,216128575,0,0x0,8
tick,0x7ffd093d1d94,216145158,0,0x0,8
tick,0x7ffd093d1d94,216160059,0,0x0,8
tick,0x7ffd093d1d94,216175267,0,0x0,8
tick,0x7ffd093d1d94,216190685,0,0x0,8
tick,0x7ffd093d1d94,216206092,0,0x0,8
tick,0x7ffd093d1d94,216222152,0,0x0,8
tick,0x7ffd093d1d94,216238165,0,0x0,8
tick,0x7ffd093d1d94,216254310,0,0x0,8
tick,0x7ffd093d1d94,216268909,0,0x0,8
tick,0x7ffd093d1d94,216284554,0,0x0,8
tick,0x7ffd093d1d94,216300210,0,0x0,8
tick,0x7ffd093d1d94,216316285,0,0x0,8
tick,0x7ffd093d1d94,216331808,0,0x0,8
tick,0x7ffd093d1d94,216346891,0,0x0,8
tick,0x7ffd093d1d94,216362053,0,0x0,8
tick,0x7ffd093d1d94,216377176,0,0x0,8
tick,0x7ffd093d1d94,216392362,0,0x0,8
tick,0x7ffd093d1d94,216408912,0,0x0,8
tick,0x7ffd093d1d94,216424470,0,0x0,8
tick,0x7ffd093d1d94,216440431,0,0x0,8
tick,0x7ffd093d1d94,216455459,0,0x0,8
tick,0x7ffd093d1d94,216471519,0,0x0,8
tick,0x7ffd093d1d94,216486496,0,0x0,8
tick,0x7ffd093d1d94,216502587,0,0x0,8
tick,0x7ffd093d1d94,216518581,0,0x0,8
tick,0x7ffd093d1d94,216534130,0,0x0,8
tick,0x7ffd093d1d94,216549278,0,0x0,8
tick,0x7ffd093d1d94,216564878,0,0x0,8
tick,0x7ffd093d1d94,216580853,0,0x0,8
tick,0x7ffd093d1d94,216596416,0,0x0,8
tick,0x7ffd093d1d94,216612327,0,0x0,8
tick,0x7ffd093d1d94,216628345,0,0x0,8
tick,0x7ffd093d1d94,216643502,0,0x0,8
tick,0x7ffd093d1d94,216659037,0,0x0,8
tick,0x7ffd093d1d94,216674406,0,0x0,8
tick,0x7ffd093d1d94,216690505,0,0x0,8
tick,0x7ffd093d1d94,216705558,0,0x0,8
tick,0x7ffd093d1d94,216720921,0,0x0,8
tick,0x7ffd093d1d94,216736460,0,0x0,8
tick,0x7ffd093d1d94,216752463,0,0x0,8
tick,0x7ffd093d1d94,216767977,0,0x0,8
tick,0x7ffd093d1d94,216783700,0,0x0,8
tick,0x7ffd093d1d94,216798719,0,0x0,8
tick,0x7ffd093d1d94,216814205,0,0x0,8
tick,0x7ffd093d1d94,216829601,0,0x0,8
tick,0x7ffd093d1d94,216845289,0,0x0,8
tick,0x7ffd093d1d94,216860920,0,0x0,8
tick,0x7ffd093d1d94,216875675,0,0x0,8
tick,0x7ffd093d1d94,216891903,0,0x0,8
tick,0x7ffd093d1d94,216908115,0,0x0,8
tick,0x7ffd093d1d94,216923553,0,0x0,8
tick,0x7ffd093d1d94,216938929,0,0x0,8
tick,0x7ffd093d1d94,216954183,0,0x0,8
tick,0x7ffd093d1d94,216969403,0,0x0,8
tick,0x7ffd093d1d94,216984893,0,0x0,8
tick,0x7ffd093d1d94,217000532,0,0x0,8
tick,0x7ffd093d1d94,217015695,0,0x0,8
tick,0x7ffd093d1d94,217031116,0,0x0,8
tick,0x7ffd093d1d94,217047080,0,0x0,8
tick,0x7ffd093d1d94,217062870,0,0x0,8
tick,0x7ffd093d1d94,217078429,0,0x0,8
tick,0x7ffd093d1d94,217094170,0,0x0,8
tick,0x7ffd093d1d94,217110188,0,0x0,8
tick,0x7ffd093d1d94,217126001,0,0x0,8
tick,0x7ffd093d1d94,217142199,0,0x0,8
tick,0x7ffd093d1d94,217157179,0,0x0,8
tick,0x7ffd093d1d94,217172785,0,0x0,8
tick,0x7ffd093d1d94,217189108,0,0x0,8
tick,0x7ffd093d1d94,217204975,0,0x0,8
tick,0x7ffd093d1d94,217220498,0,0x0,8
tick,0x7ffd093d1d94,217236466,0,0x0,8
tick,0x7ffd093d1d94,217252004,0,0x0,8
tick,0x7ffd093d1d94,217267407,0,0x0,8
tick,0x7ffd093d1d94,217283191,0,0x0,8
tick,0x7ffd093d1d94,217298627,0,0x0,8
tick,0x7ffd093d1d94,217314143,0,0x0,8
tick,0x7ffd093d1d94,217329794,0,0x0,8
tick,0x7ffd093d1d94,217345364,0,0x0,8
tick,0x7ffd093d1d94,217360861,0,0x0,8
tick,0x7ffd093d1d94,217376206,0,0x0,8
tick,0x7ffd093d1d94,217391275,0,0x0,8
tick,0x7ffd093d1d94,217407356,0,0x0,8
tick,0x7ffd093d1d94,217422838,0,0x0,8
tick,0x7ffd093d1d94,217438099,0,0x0,8
tick,0x7ffd093d1d94,217453503,0,0x0,8
tick,0x7ffd093d1d94,217469460,0,0x0,8
tick,0x7ffd093d1d94,217485320,0,0x0,8
tick,0x7ffd093d1d94,217500824,0,0x0,8
tick,0x7ffd093d1d94,217517018,0,0x0,8
tick,0x7ffd093d1d94,217532655,0,0x0,8
tick,0x7ffd093d1d94,217548972,0,0x0,8
tick,0x7ffd093d1d94,217563678,0,0x0,8
tick,0x7ffd093d1d94,217578899,0,0x0,8
tick,0x7ffd093d1d94,217594598,0,0x0,8
tick,0x7ffd093d1d94,217610400,0,0x0,8
tick,0x7ffd093d1d94,217625742,0,0x0,8
tick,0x7ffd093d1d94,217641731,0,0x0,8
tick,0x7ffd093d1d94,217657605,0,0x0,8
tick,0x7ffd093d1d94,217672919,0,0x0,8
tick,0x7ffd093d1d94,217688182,0,0x0,8
tick,0x7ffd093d1d94,217703866,0,0x0,8
tick,0x7ffd093d1d94,217719590,0,0x0,8
tick,0x7ffd093d1d94,217735824,0,0x0,8
tick,0x7ffd093d1d94,217751942,0,0x0,8
tick,0x7ffd093d1d94,217767246,0,0x0,8
tick,0x7ffd093d1d94,217782875,0,0x0,8
tick,0x7ffd093d1d94,217798256,0,0x0,8
tick,0x7ffd093d1d94,217814409,0,0x0,8
tick,0x7ffd093d1d94,217830280,0,0x0,8
tick,0x7ffd093d1d94,217846106,0,0x0,8
tick,0x7ffd093d1d94,217861765,0,0x0,8
tick,0x7ffd093d1d94,217877518,0,0x0,8
tick,0x7ffd093d1d94,217892800,0,0x0,8
tick,0x7ffd093d1d94,217908238,0,0x0,8
tick,0x7ffd093d1d94,217923875,0,0x0,8
tick,0x7ffd093d1d94,217939344,0,0x0,8
tick,0x7ffd093d1d94,217955383,0,0x0,8
tick,0x7ffd093d1d94,217970597,0,0x0,8
tick,0x7ffd093d1d94,217985629,0,0x0,8
tick,0x7ffd093d1d94,218000732,0,0x0,8
tick,0x7ffd093d1d94,218016818,0,0x0,8
tick,0x7ffd093d1d94,218032393,0,0x0,8
tick,0x7ffd093d1d94,218047434,0,0x0,8
tick,0x7ffd093d1d94,218062622,0,0x0,8
tick,0x7ffd093d1d94,218078324,0,0x0,8
tick,0x7ffd093d1d94,218094237,0,0x0,8
tick,0x7ffd093d1d94,218109753,0,0x0,8
tick,0x7ffd093d1d94,218125539,0,0x0,8
tick,0x7ffd093d1d94,218141187,0,0x0,8
tick,0x7ffd093d1d94,218156387,0,0x0,8
tick,0x7ffd093d1d94,218171094,0,0x0,8
tick,0x7ffd093d1d94,218186626,0,0x0,8
tick,0x7ffd093d1d94,218202021,0,0x0,8
tick,0x7ffd093d1d94,218217487,0,0x0,8
tick,0x7ffd093d1d94,218233163,0,0x0,8
tick,0x7ffd093d1d94,218248444,0,0x0,8
tick,0x7ffd093d1d94,218263854,0,0x0,8
tick,0x7ffd093d1d94,218279371,0,0x0,8
tick,0x7ffd093d1d94,218295023,0,0x0,8
tick,0x7ffd093d1d94,218310860,0,0x0,8
tick,0x7ffd093d1d94,218326683,0,0x0,8
tick,0x7ffd093d1d94,218342634,0,0x0,8
tick,0x7ffd093d1d94,218357993,0,0x0,8
tick,0x7ffd093d1d94,218373490,0,0x0,8
tick,0x7ffd093d1d94,218388714,0,0x0,8
tick,0x7ffd093d1d94,218404679,0,0x0,8
tick,0x7ffd093d1d94,218420421,0,0x0,8
tick,0x7ffd093d1d94,218435681,0,0x0,8
tick,0x7ffd093d1d94,218450776,0,0x0,8
tick,0x7ffd093d1d94,218466637,0,0x0,8
tick,0x7ffd093d1d94,218482564,0,0x0,8
tick,0x7ffd093d1d94,218498126,0,0x0,8
tick,0x7ffd093d1d94,218513641,0,0x0,8
tick,0x7ffd093d1d94,218528561,0,0x0,8
tick,0x7ffd093d1d94,218543995,0,0x0,8
tick,0x7ffd093d1d94,218559437,0,0x0,8
tick,0x7ffd093d1d94,218573962,0,0x0,8
tick,0x7ffd093d1d94,218589998,0,0x0,8
tick,0x7ffd093d1d94,218605368,0,0x0,8
tick,0x7ffd093d1d94,218620983,0,0x0,8
tick,0x7ffd093d1d94,218635953,0,0x0,8
tick,0x7ffd093d1d94,218651465,0,0x0,8
tick,0x7ffd093d1d94,218666790,0,0x0,8
tick,0x7ffd093d1d94,218682453,0,0x0,8
tick,0x7ffd093d1d94,218698154,0,0x0,8
tick,0x7ffd093d1d94,218713478,0,0x0,8
tick,0x7ffd093d1d94,218728912,0,0x0,8
tick,0x7ffd093d1d94,218744405,0,0x0,8
tick,0x7ffd093d1d94,218759922,0,0x0,8
tick,0x7ffd093d1d94,218775248,0,0x0,8
tick,0x7ffd093d1d94,218790961,0,0x0,8
tick,0x7ffd093d1d94,218806828,0,0x0,8
tick,0x7ffd093d1d94,218822188,0,0x0,8
tick,0x7ffd093d1d94,218837377,0,0x0,8
tick,0x7ffd093d1d94,218852952,0,0x0,8
tick,0x7ffd093d1d94,218868543,0,0x0,8
tick,0x7ffd093d1d94,218884487,0,0x0,8
tick,0x7ffd093d1d94,218900205,0,0x0,8
tick,0x7ffd093d1d94,218915986,0,0x0,8
tick,0x7ffd093d1d94,218931004,0,0x0,8
tick,0x7ffd093d1d94,218946169,0,0x0,8
tick,0x7ffd093d1d94,218962190,0,0x0,8
tick,0x7ffd093d1d94,218978347,0,0x0,8
tick,0x7ffd093d1d94,218993570,0,0x0,8
tick,0x7ffd093d1d94,219009184,0,0x0,8
tick,0x7ffd093d1d94,219025074,0,0x0,8
tick,0x7ffd093d1d94,219041588,0,0x0,8
tick,0x7ffd093d1d94,219056958,0,0x0,8
tick,0x7ffd093d1d94,219072686,0,0x0,8
tick,0x7ffd093d1d94,219087623,0,0x0,8
tick,0x7ffd093d1d94,219102863,0,0x0,8
tick,0x7ffd093d1d94,219118187,0,0x0,8
tick,0x7ffd093d1d94,219133912,0,0x0,8
tick,0x7ffd093d1d94,219149375,0,0x0,8
tick,0x7ffd093d1d94,219164859,0,0x0,8
tick,0x7ffd093d1d94,219180134,0,0x0,8
tick,0x7ffd093d1d94,219196193,0,0x0,8
tick,0x7ffd093d1d94,219212027,0,0x0,8
tick,0x7ffd093d1d94,219227818,0,0x0,8
tick,0x7ffd093d1d94,219242969,0,0x0,8
tick,0x7ffd093d1d94,219258380,0,0x0,8
tick,0x7ffd093d1d94,219273976,0,0x0,8
tick,0x7ffd093d1d94,219289674,0,0x0,8
tick,0x7ffd093d1d94,219305002,0,0x0,8
tick,0x7ffd093d1d94,219320083,0,0x0,8
tick,0x7ffd093d1d94,219335988,0,0x0,8
tick,0x7ffd093d1d94,219351323,0,0x0,8
tick,0x7ffd093d1d94,219366922,0,0x0,8
tick,0x7ffd093d1d94,219382384,0,0x0,8
tick,0x7ffd093d1d94,219397823,0,0x0,8
tick,0x7ffd093d1d94,219412886,0,0x0,8
tick,0x7ffd093d1d94,219428129,0,0x0,8
tick,0x7ffd093d1d94,219443613,0,0x0,8
tick,0x7ffd093d1d94,219459674,0,0x0,8
tick,0x7ffd093d1d94,219475984,0,0x0,8
tick,0x7ffd093d1d94,219491265,0,0x0,8
tick,0x7ffd093d1d94,219507146,0,0x0,8
tick,0x7ffd093d1d94,219522575,0,0x0,8
tick,0x7ffd093d1d94,219538372,0,0x0,8
tick,0x7ffd093d1d94,219554298,0,0x0,8
tick,0x7ffd093d1d94,219569722,0,0x0,8
tick,0x7ffd093d1d94,219585136,0,0x0,8
tick,0x7ffd093d1d94,219600824,0,0x0,8
tick,0x7ffd093d1d94,219616505,0,0x0,8
tick,0x7ffd093d1d94,219632279,0,0x0,8
tick,0x7ffd093d1d94,219647753,0,0x0,8
tick,0x7ffd093d1d94,219663409,0,0x0,8
tick,0x7ffd093d1d94,219678804,0,0x0,8
tick,0x7ffd093d1d94,219694534,0,0x0,8
tick,0x7ffd093d1d94,219710301,0,0x0,8
tick,0x7ffd093d1d94,219726646,0,0x0,8
tick,0x7ffd093d1d94,219742018,0,0x0,8
tick,0x7ffd093d1d94,219756863,0,0x0,8
tick,0x7ffd093d1d94,219772364,0,0x0,8
tick,0x7ffd093d1d94,219788308,0,0x0,8
tick,0x7ffd093d1d94,219804308,0,0x0,8
tick,0x7ffd093d1d94,219820312,0,0x0,8
tick,0x7ffd093d1d94,219836531,0,0x0,8
tick,0x7ffd093d1d94,219851691,0,0x0,8
tick,0x7ffd093d1d94,219867198,0,0x0,8
tick,0x7ffd093d1d94,219882974,0,0x0,8
tick,0x7ffd093d1d94,219898945,0,0x0,8
tick,0x7ffd093d1d94,219914123,0,0x0,8
tick,0x7ffd093d1d94,219929488,0,0x0,8
tick,0x7ffd093d1d94,219945013,0,0x0,8
tick,0x7ffd093d1d94,219960634,0,0x0,8
tick,0x7ffd093d1d94,219975746,0,0x0,8
tick,0x7ffd093d1d94,219992750,0,0x0,8
tick,0x7ffd093d1d94,220006729,0,0x0,8
tick,0x7ffd093d1d94,220022710,0,0x0,8
tick,0x7ffd093d1d94,220039035,0,0x0,8
tick,0x7ffd093d1d94,220053872,0,0x0,8
tick,0x7ffd093d1d94,220068992,0,0x0,8
tick,0x7ffd093d1d94,220084066,0,0x0,8
tick,0x7ffd093d1d94,220099389,0,0x0,8
tick,0x7ffd093d1d94,220114734,0,0x0,8
tick,0x7ffd093d1d94,220130789,0,0x0,8
tick,0x7ffd093d1d94,220146184,0,0x0,8
tick,0x7ffd093d1d94,220161835,0,0x0,8
tick,0x7ffd093d1d94,220177476,0,0x0,8
tick,0x7ffd093d1d94,220192657,0,0x0,8
tick,0x7ffd093d1d94,220208868,0,0x0,8
tick,0x7ffd093d1d94,220224279,0,0x0,8
tick,0x7ffd093d1d94,220240231,0,0x0,8
tick,0x7ffd093d1d94,220255555,0,0x0,8
tick,0x7ffd093d1d94,220271463,0,0x0,8
tick,0x7ffd093d1d94,220286903,0,0x0,8
tick,0x7ffd093d1d94,220302333,0,0x0,8
tick,0x7ffd093d1d94,220317557,0,0x0,8
tick,0x7ffd093d1d94,220333452,0,0x0,8
tick,0x7ffd093d1d94,220348883,0,0x0,8
tick,0x7ffd093d1d94,220364111,0,0x0,8
tick,0x7ffd093d1d94,220379706,0,0x0,8
tick,0x7ffd093d1d94,220395131,0,0x0,8
tick,0x7ffd093d1d94,220410877,0,0x0,8
tick,0x7ffd093d1d94,220425525,0,0x0,8
tick,0x7ffd093d1d94,220441018,0,0x0,8
tick,0x7ffd093d1d94,220456064,0,0x0,8
tick,0x7ffd093d1d94,220472001,0,0x0,8
tick,0x7ffd093d1d94,220487788,0,0x0,8
tick,0x7ffd093d1d94,220503309,0,0x0,8
tick,0x7ffd093d1d94,220518368,0,0x0,8
tick,0x7ffd093d1d94,220534028,0,0x0,8
tick,0x7ffd093d1d94,220550326,0,0x0,8
tick,0x7ffd093d1d94,220566186,0,0x0,8
tick,0x7ffd093d1d94,220581470,0,0x0,8
tick,0x7ffd093d1d94,220596448,0,0x0,8
tick,0x7ffd093d1d94,220611809,0,0x0,8
tick,0x7ffd093d1d94,220628156,0,0x0,8
tick,0x7ffd093d1d94,220643713,0,0x0,8
tick,0x7ffd093d1d94,220659063,0,0x0,8
tick,0x7ffd093d1d94,220674809,0,0x0,8
tick,0x7ffd093d1d94,220690896,0,0x0,8
tick,0x7ffd093d1d94,220706157,0,0x0,8
tick,0x7ffd093d1d94,220722329,0,0x0,8
tick,0x7ffd093d1d94,220737883,0,0x0,8
tick,0x7ffd093d1d94,220752833,0,0x0,8
tick,0x7ffd093d1d94,220768325,0,0x0,8
tick,0x7ffd093d1d94,220783507,0,0x0,8
tick,0x7ffd093d1d94,220799153,0,0x0,8
tick,0x7ffd093d1d94,220815170,0,0x0,8
tick,0x7ffd093d1d94,220830604,0,0x0,8
tick,0x7ffd093d1d94,220846847,0,0x0,8
tick,0x7ffd093d1d94,220863162,0,0x0,8
tick,0x7ffd093d1d94,220878671,0,0x0,8
tick,0x7ffd093d1d94,220894456,0,0x0,8
tick,0x7ffd093d1d94,220910242,0,0x0,8
tick,0x7ffd093d1d94,220925905,0,0x0,8
tick,0x7ffd093d1d94,220942009,0,0x0,8
tick,0x7ffd093d1d94,220957861,0,0x0,8
tick,0x7ffd093d1d94,220974047,0,0x0,8
tick,0x7ffd093d1d94,220989663,0,0x0,8
tick,0x7ffd093d1d94,221005176,0,0x0,8
tick,0x7ffd093d1d94,221020959,0,0x0,8
tick,0x7ffd093d1d94,221036158,0,0x0,8
tick,0x7ffd093d1d94,221051643,0,0x0,8
tick,0x7ffd093d1d94,221067150,0,0x0,8
tick,0x7ffd093d1d94,221082927,0,0x0,8
tick,0x7ffd093d1d94,221097732,0,0x0,8
tick,0x7ffd093d1d94,221113939,0,0x0,8
tick,0x7ffd093d1d94,221130141,0,0x0,8
tick,0x7ffd093d1d94,221145869,0,0x0,8
tick,0x7ffd093d1d94,221161025,0,0x0,8
tick,0x7ffd093d1d94,221176298,0,0x0,8
tick,0x7ffd093d1d94,221191566,0,0x0,8
tick,0x7ffd093d1d94,221207646,0,0x0,8
tick,0x7ffd093d1d94,221223368,0,0x0,8
tick,0x7ffd093d1d94,221239099,0,0x0,8
tick,0x7ffd093d1d94,221254557,0,0x0,8
tick,0x7ffd093d1d94,221269944,0,0x0,8
tick,0x7ffd093d1d94,221286251,0,0x0,8
tick,0x7ffd093d1d94,221303348,0,0x0,8
tick,0x7ffd093d1d94,221317533,0,0x0,8
tick,0x7ffd093d1d94,221332758,0,0x0,8
tick,0x7ffd093d1d94,221348305,0,0x0,8
tick,0x7ffd093d1d94,221363515,0,0x0,8
tick,0x7ffd093d1d94,221378751,0,0x0,8
tick,0x7ffd093d1d94,221394872,0,0x0,8
tick,0x7ffd093d1d94,221410696,0,0x0,8
tick,0x7ffd093d1d94,221425997,0,0x0,8
tick,0x7ffd093d1d94,221441946,0,0x0,8
tick,0x7ffd093d1d94,221457311,0,0x0,8
tick,0x7ffd093d1d94,221472927,0,0x0,8
tick,0x7ffd093d1d94,221489849,0,0x0,8
tick,0x7ffd093d1d94,221502887,0,0x0,8
tick,0x7ffd093d1d94,221517844,0,0x0,8
tick,0x7ffd093d1d94,221533094,0,0x0,8
tick,0x7ffd093d1d94,221548750,0,0x0,8
tick,0x7ffd093d1d94,221564295,0,0x0,8
tick,0x7ffd093d1d94,221579628,0,0x0,8
tick,0x7ffd093d1d94,221595030,0,0x0,8
tick,0x7ffd093d1d94,221610848,0,0x0,8
tick,0x7ffd093d1d94,221626991,0,0x0,8
tick,0x7ffd093d1d94,221642836,0,0x0,8
tick,0x7ffd093d1d94,221658896,0,0x0,8
tick,0x7ffd093d1d94,221674661,0,0x0,8
tick,0x7ffd093d1d94,221689904,0,0x0,8
tick,0x7ffd093d1d94,221705310,0,0x0,8
tick,0x7ffd093d1d94,221720969,0,0x0,8
tick,0x7ffd093d1d94,221736384,0,0x0,8
tick,0x7ffd093d1d94,221751405,0,0x0,8
tick,0x7ffd093d1d94,221766836,0,0x0,8
tick,0x7ffd093d1d94,221782282,0,0x0,8
tick,0x7ffd093d1d94,221798111,0,0x0,8
tick,0x7ffd093d1d94,221813560,0,0x0,8
tick,0x7ffd093d1d94,221828836,0,0x0,8
tick,0x7ffd093d1d94,221844441,0,0x0,8
tick,0x7ffd093d1d94,221860499,0,0x0,8
tick,0x7ffd093d1d94,221875744,0,0x0,8
tick,0x7ffd093d1d94,221891221,0,0x0,8
tick,0x7ffd093d1d94,221906426,0,0x0,8
tick,0x7ffd093d1d94,221921958,0,0x0,8
tick,0x7ffd093d1d94,221937365,0,0x0,8
tick,0x7ffd093d1d94,221953067,0,0x0,8
tick,0x7ffd093d1d94,221968235,0,0x0,8
tick,0x7ffd093d1d94,221983701,0,0x0,8
tick,0x7ffd093d1d94,221999638,0,0x0,8
tick,0x7ffd093d1d94,222015142,0,0x0,8
tick,0x7ffd093d1d94,222030637,0,0x0,8
tick,0x7ffd093d1d94,222045648,0,0x0,8
tick,0x7ffd093d1d94,222061569,0,0x0,8
tick,0x7ffd093d1d94,222077648,0,0x0,8
tick,0x7ffd093d1d94,222093065,0,0x0,8
tick,0x7ffd093d1d94,222108194,0,0x0,8
tick,0x7ffd093d1d94,222123616,0,0x0,8
tick,0x7ffd093d1d94,222139283,0,0x0,8
tick,0x7ffd093d1d94,222155094,0,0x0,8
tick,0x7ffd093d1d94,222170653,0,0x0,8
tick,0x7ffd093d1d94,222185853,0,0x0,8
tick,0x7ffd093d1d94,222201301,0,0x0,8
tick,0x7ffd093d1d94,222216298,0,0x0,8
tick,0x7ffd093d1d94,222232495,0,0x0,8
tick,0x7ffd093d1d94,222248127,0,0x0,8
tick,0x7ffd093d1d94,222264084,0,0x0,8
tick,0x7ffd093d1d94,222279637,0,0x0,8
tick,0x7ffd093d1d94,222294399,0,0x0,8
tick,0x7ffd093d1d94,222310337,0,0x0,8
tick,0x7ffd093d1d94,222326377,0,0x0,8
tick,0x7ffd093d1d94,222342297,0,0x0,8
tick,0x7ffd093d1d94,222358130,0,0x0,8
tick,0x7ffd093d1d94,222374073,0,0x0,8
tick,0x7ffd093d1d94,222389542,0,0x0,8
tick,0x7ffd093d1d94,222404789,0,0x0,8
tick,0x7ffd093d1d94,222419937,0,0x0,8
tick,0x7ffd093d1d94,222435962,0,0x0,8
tick,0x7ffd093d1d94,222450908,0,0x0,8
tick,0x7ffd093d1d94,222466990,0,0x0,8
tick,0x7ffd093d1d94,222482540,0,0x0,8
tick,0x7ffd093d1d94,222497745,0,0x0,8
tick,0x7ffd093d1d94,222512975,0,0x0,8
tick,0x7ffd093d1d94,222529370,0,0x0,8
tick,0x7ffd093d1d94,222545194,0,0x0,8
tick,0x7ffd093d1d94,222560756,0,0x0,8
tick,0x7ffd093d1d94,222576165,0,0x0,8
tick,0x7ffd093d1d94,222591853,0,0x0,8
tick,0x7ffd093d1d94,222606849,0,0x0,8
tick,0x7ffd093d1d94,222622847,0,0x0,8
tick,0x7ffd093d1d94,222638776,0,0x0,8
tick,0x7ffd093d1d94,222654644,0,0x0,8
tick,0x7ffd093d1d94,222670289,0,0x0,8
tick,0x7ffd093d1d94,222686452,0,0x0,8
tick,0x7ffd093d1d94,222702355,0,0x0,8
tick,0x7ffd093d1d94,222717493,0,0x0,8
tick,0x7ffd093d1d94,222732699,0,0x0,8
tick,0x7ffd093d1d94,222748697,0,0x0,8
tick,0x7ffd093d1d94,222764662,0,0x0,8
tick,0x7ffd093d1d94,222780519,0,0x0,8
tick,0x7ffd093d1d94,222795900,0,0x0,8
tick,0x7ffd093d1d94,222811864,0,0x0,8
tick,0x7ffd093d1d94,222826821,0,0x0,8
tick,0x7ffd093d1d94,222841678,0,0x0,8
tick,0x7ffd093d1d94,222857958,0,0x0,8
tick,0x7ffd093d1d94,222873604,0,0x0,8
tick,0x7ffd093d1d94,222889048,0,0x0,8
tick,0x7ffd093d1d94,222904961,0,0x0,8
tick,0x7ffd093d1d94,222920939,0,0x0,8
tick,0x7ffd093d1d94,222936859,0,0x0,8
tick,0x7ffd093d1d94,222952837,0,0x0,8
tick,0x7ffd093d1d94,222968496,0,0x0,8
tick,0x7ffd093d1d94,222984374,0,0x0,8
tick,0x7ffd093d1d94,222999973,0,0x0,8
tick,0x7ffd093d1d94,223015817,0,0x0,8
tick,0x7ffd093d1d94,223030620,0,0x0,8
tick,0x7ffd093d1d94,223046817,0,0x0,8
tick,0x7ffd093d1d94,223062225,0,0x0,8
tick,0x7ffd093d1d94,223078225,0,0x0,8
tick,0x7ffd093d1d94,223094358,0,0x0,8
tick,0x7ffd093d1d94,223110304,0,0x0,8
tick,0x7ffd093d1d94,223125478,0,0x0,8
tick,0x7ffd093d1d94,223140903,0,0x0,8
tick,0x7ffd093d1d94,223156121,0,0x0,8
tick,0x7ffd093d1d94,223171646,0,0x0,8
tick,0x7ffd093d1d94,223187074,0,0x0,8
tick,0x7ffd093d1d94,223202921,0,0x0,8
tick,0x7ffd093d1d94,223218703,0,0x0,8
tick,0x7ffd093d1d94,223234769,0,0x0,8
tick,0x7ffd093d1d94,223250238,0,0x0,8
tick,0x7ffd093d1d94,223265317,0,0x0,8
tick,0x7ffd093d1d94,223281218,0,0x0,8
tick,0x7ffd093d1d94,223296430,0,0x0,8
tick,0x7ffd093d1d94,223311677,0,0x0,8
tick,0x7ffd093d1d94,223327524,0,0x0,8
tick,0x7ffd093d1d94,223343689,0,0x0,8
tick,0x7ffd093d1d94,223359133,0,0x0,8
tick,0x7ffd093d1d94,223374682,0,0x0,8
tick,0x7ffd093d1d94,223390895,0,0x0,8
tick,0x7ffd093d1d94,223406359,0,0x0,8
tick,0x7ffd093d1d94,223421263,0,0x0,8
tick,0x7ffd093d1d94,223436984,0,0x0,8
tick,0x7ffd093d1d94,223452507,0,0x0,8
tick,0x7ffd093d1d94,223467881,0,0x0,8
tick,0x7ffd093d1d94,223482937,0,0x0,8
tick,0x7ffd093d1d94,223498819,0,0x0,8
tick,0x7ffd093d1d94,223514161,0,0x0,8
tick,0x7ffd093d1d94,223530292,0,0x0,8
tick,0x7ffd093d1d94,223545465,0,0x0,8
tick,0x7ffd093d1d94,223561084,0,0x0,8
tick,0x7ffd093d1d94,223577570,0,0x0,8
tick,0x7ffd093d1d94,223592814,0,0x0,8
tick,0x7ffd093d1d94,223608520,0,0x0,8
tick,0x7ffd093d1d94,223624135,0,0x0,8
tick,0x7ffd093d1d94,223639642,0,0x0,8
tick,0x7ffd093d1d94,223655255,0,0x0,8
tick,0x7ffd093d1d94,223670949,0,0x0,8
tick,0x7ffd093d1d94,223686462,0,0x0,8
tick,0x7ffd093d1d94,223702165,0,0x0,8
tick,0x7ffd093d1d94,223717370,0,0x0,8
tick,0x7ffd093d1d94,223732309,0,0x0,8
tick,0x7ffd093d1d94,223747884,0,0x0,8
tick,0x7ffd093d1d94,223763799,0,0x0,8
tick,0x7ffd093d1d94,223779201,0,0x0,8
tick,0x7ffd093d1d94,223794043,0,0x0,8
tick,0x7ffd093d1d94,223809980,0,0x0,8
tick,0x7ffd093d1d94,223825115,0,0x0,8
tick,0x7ffd093d1d94,223840338,0,0x0,8
tick,0x7ffd093d1d94,223856123,0,0x0,8
tick,0x7ffd093d1d94,223871477,0,0x0,8
tick,0x7ffd093d1d94,223886692,0,0x0,8
tick,0x7ffd093d1d94,223902544,0,0x0,8
tick,0x7ffd093d1d94,223918259,0,0x0,8
tick,0x7ffd093d1d94,223934604,0,0x0,8
tick,0x7ffd093d1d94,223949337,0,0x0,8
tick,0x7ffd093d1d94,223964587,0,0x0,8
tick,0x7ffd093d1d94,223980984,0,0x0,8
tick,0x7ffd093d1d94,223997204,0,0x0,8
tick,0x7ffd093d1d94,224013552,0,0x0,8
tick,0x7ffd093d1d94,224029571,0,0x0,8
tick,0x7ffd093d1d94,224044660,0,0x0,8
tick,0x7ffd093d1d94,224060480,0,0x0,8
tick,0x7ffd093d1d94,224076118,0,0x0,8
tick,0x7ffd093d1d94,224092345,0,0x0,8
tick,0x7ffd093d1d94,224107222,0,0x0,8
tick,0x7ffd093d1d94,224123348,0,0x0,8
tick,0x7ffd093d1d94,224139184,0,0x0,8
tick,0x7ffd093d1d94,224155229,0,0x0,8
tick,0x7ffd093d1d94,224170343,0,0x0,8
tick,0x7ffd093d1d94,224185146,0,0x0,8
tick,0x7ffd093d1d94,224200972,0,0x0,8
tick,0x7ffd093d1d94,224216431,0,0x0,8
tick,0x7ffd093d1d94,224232740,0,0x0,8
tick,0x7ffd093d1d94,224247380,0,0x0,8
tick,0x7ffd093d1d94,224262356,0,0x0,8
tick,0x7ffd093d1d94,224277525,0,0x0,8
tick,0x7ffd093d1d94,224293426,0,0x0,8
tick,0x7ffd093d1d94,224308756,0,0x0,8
tick,0x7ffd093d1d94,224324609,0,0x0,8
tick,0x7ffd093d1d94,224340314,0,0x0,8
tick,0x7ffd093d1d94,224355025,0,0x0,8
tick,0x7ffd093d1d94,224370033,0,0x0,8
tick,0x7ffd093d1d94,224385530,0,0x0,8
tick,0x7ffd093d1d94,224401551,0,0x0,8
tick,0x7ffd093d1d94,224417549,0,0x0,8
tick,0x7ffd093d1d94,224432608,0,0x0,8
tick,0x7ffd093d1d94,224447805,0,0x0,8
tick,0x7ffd093d1d94,224463065,0,0x0,8
tick,0x7ffd093d1d94,224478174,0,0x0,8
tick,0x7ffd093d1d94,224494140,0,0x0,8
tick,0x7ffd093d1d94,224509161,0,0x0,8
tick,0x7ffd093d1d94,224524158,0,0x0,8
tick,0x7ffd093d1d94,224540073,0,0x0,8
tick,0x7ffd093d1d94,224555535,0,0x0,8
tick,0x7ffd093d1d94,224571126,0,0x0,8
tick,0x7ffd093d1d94,224586360,0,0x0,8
tick,0x7ffd093d1d94,224602130,0,0x0,8
tick,0x7ffd093d1d94,224617225,0,0x0,8
tick,0x7ffd093d1d94,224632563,0,0x0,8
tick,0x7ffd093d1d94,224648688,0,0x0,8
tick,0x7ffd093d1d94,224663875,0,0x0,8
tick,0x7ffd093d1d94,224679193,0,0x0,8
tick,0x7ffd093d1d94,224695047,0,0x0,8
tick,0x7ffd093d1d94,224710695,0,0x0,8
tick,0x7ffd093d1d94,224726702,0,0x0,8
tick,0x7ffd093d1d94,224742005,0,0x0,8
tick,0x7ffd093d1d94,224757248,0,0x0,8
tick,0x7ffd093d1d94,224772700,0,0x0,8
tick,0x7ffd093d1d94,224788297,0,0x0,8
tick,0x7ffd093d1d94,224803636,0,0x0,8
tick,0x7ffd093d1d94,224819606,0,0x0,8
tick,0x7ffd093d1d94,224834990,0,0x0,8
tick,0x7ffd093d1d94,224850398,0,0x0,8
tick,0x7ffd093d1d94,224866245,0,0x0,8
tick,0x7ffd093d1d94,224881572,0,0x0,8
tick,0x7ffd093d1d94,224896533,0,0x0,8
tick,0x7ffd093d1d94,224912210,0,0x0,8
tick,0x7ffd093d1d94,224927803,0,0x0,8
tick,0x7ffd093d1d94,224943329,0,0x0,8
tick,0x7ffd093d1d94,224958180,0,0x0,8
tick,0x7ffd093d1d94,224973876,0,0x0,8
tick,0x7ffd093d1d94,224989120,0,0x0,8
tick,0x7ffd093d1d94,225004502,0,0x0,8
tick,0x7ffd093d1d94,225020080,0,0x0,8
tick,0x7ffd093d1d94,225036242,0,0x0,8
tick,0x7ffd093d1d94,225051566,0,0x0,8
tick,0x7ffd093d1d94,225066732,0,0x0,8
tick,0x7ffd093d1d94,225081919,0,0x0,8
tick,0x7ffd093d1d94,225097376,0,0x0,8
tick,0x7ffd093d1d94,225113404,0,0x0,8
tick,0x7ffd093d1d94,225129081,0,0x0,8
tick,0x7ffd093d1d94,225144826,0,0x0,8
tick,0x7ffd093d1d94,225160264,0,0x0,8
tick,0x7ffd093d1d94,225176111,0,0x0,8
tick,0x7ffd093d1d94,225190955,0,0x0,8
tick,0x7ffd093d1d94,225206890,0,0x0,8
tick,0x7ffd093d1d94,225222578,0,0x0,8
tick,0x7ffd093d1d94,225237813,0,0x0,8
tick,0x7ffd093d1d94,225253023,0,0x0,8
tick,0x7ffd093d1d94,225268702,0,0x0,8
tick,0x7ffd093d1d94,225284244,0,0x0,8
tick,0x7ffd093d1d94,225300326,0,0x0,8
tick,0x7ffd093d1d94,225315510,0,0x0,8
tick,0x7ffd093d1d94,225331526,0,0x0,8
tick,0x7ffd093d1d94,225346253,0,0x0,8
tick,0x7ffd093d1d94,225361779,0,0x0,8
tick,0x7ffd093d1d94,225377432,0,0x0,8
tick,0x7ffd093d1d94,225392722,0,0x0,8
tick,0x7ffd093d1d94,225408878,0,0x0,8
tick,0x7ffd093d1d94,225423989,0,0x0,8
tick,0x7ffd093d1d94,225439578,0,0x0,8
tick,0x7ffd093d1d94,225455474,0,0x0,8
tick,0x7ffd093d1d94,225470860,0,0x0,8
tick,0x7ffd093d1d94,225486610,0,0x0,8
tick,0x7ffd093d1d94,225502296,0,0x0,8
tick,0x7ffd093d1d94,225518251,0,0x0,8
tick,0x7ffd093d1d94,225533731,0,0x0,8
tick,0x7ffd093d1d94,225549030,0,0x0,8
tick,0x7ffd093d1d94,225565078,0,0x0,8
tick,0x7ffd093d1d94,225580222,0,0x0,8
tick,0x7ffd093d1d94,225595872,0,0x0,8
tick,0x7ffd093d1d94,225611036,0,0x0,8
tick,0x7ffd093d1d94,225626974,0,0x0,8
tick,0x7ffd093d1d94,225641759,0,0x0,8
tick,0x7ffd093d1d94,225656682,0,0x0,8
tick,0x7ffd093d1d94,225672008,0,0x0,8
tick,0x7ffd093d1d94,225688020,0,0x0,8
tick,0x7ffd093d1d94,225703963,0,0x0,8
tick,0x7ffd093d1d94,225719022,0,0x0,8
tick,0x7ffd093d1d94,225734612,0,0x0,8
tick,0x7ffd093d1d94,225750396,0,0x0,8
tick,0x7ffd093d1d94,225766685,0,0x0,8
tick,0x7ffd093d1d94,225781877,0,0x0,8
tick,0x7ffd093d1d94,225797975,0,0x0,8
tick,0x7ffd093d1d94,225813157,0,0x0,8
tick,0x7ffd093d1d94,225827974,0,0x0,8
tick,0x7ffd093d1d94,225843461,0,0x0,8
tick,0x7ffd093d1d94,225859545,0,0x0,8
tick,0x7ffd093d1d94,225875454,0,0x0,8
tick,0x7ffd093d1d94,225891082,0,0x0,8
tick,0x7ffd093d1d94,225906726,0,0x0,8
tick,0x7ffd093d1d94,225921997,0,0x0,8
tick,0x7ffd093d1d94,225938211,0,0x0,8
tick,0x7ffd093d1d94,225954872,0,0x0,8
tick,0x7ffd093d1d94,225970902,0,0x0,8
tick,0x7ffd093d1d94,225986465,0,0x0,8
tick,0x7ffd093d1d94,226002035,0,0x0,8
tick,0x7ffd093d1d94,226017016,0,0x0,8
tick,0x7ffd093d1d94,226032253,0,0x0,8
tick,0x7ffd093d1d94,226047823,0,0x0,8
tick,0x7ffd093d1d94,226063271,0,0x0,8
tick,0x7ffd093d1d94,226078964,0,0x0,8
tick,0x7ffd093d1d94,226094639,0,0x0,8
tick,0x7ffd093d1d94,226110075,0,0x0,8
tick,0x7ffd093d1d94,226126834,0,0x0,8
tick,0x7ffd093d1d94,226143177,0,0x0,8
tick,0x7ffd093d1d94,226159211,0,0x0,8
tick,0x7ffd093d1d94,226174858,0,0x0,8
tick,0x7ffd093d1d94,226190965,0,0x0,8
tick,0x7ffd093d1d94,226205991,0,0x0,8
tick,0x7ffd093d1d94,226221936,0,0x0,8
tick,0x7ffd093d1d94,226237530,0,0x0,8
tick,0x7ffd093d1d94,226253125,0,0x0,8
tick,0x7ffd093d1d94,226268183,0,0x0,8
tick,0x7ffd093d1d94,226283511,0,0x0,8
tick,0x7ffd093d1d94,226298755,0,0x0,8
tick,0x7ffd093d1d94,226314193,0,0x0,8
tick,0x7ffd093d1d94,226329899,0,0x0,8
tick,0x7ffd093d1d94,226345684,0,0x0,8
tick,0x7ffd093d1d94,226361405,0,0x0,8
tick,0x7ffd093d1d94,226376646,0,0x0,8
tick,0x7ffd093d1d94,226392175,0,0x0,8
tick,0x7ffd093d1d94,226408062,0,0x0,8
tick,0x7ffd093d1d94,226423709,0,0x0,8
tick,0x7ffd093d1d94,226438842,0,0x0,8
tick,0x7ffd093d1d94,226454639,0,0x0,8
tick,0x7ffd093d1d94,226470153,0,0x0,8
tick,0x7ffd093d1d94,226485728,0,0x0,8
tick,0x7ffd093d1d94,226501347,0,0x0,8
tick,0x7ffd093d1d94,226517288,0,0x0,8
tick,0x7ffd093d1d94,226532737,0,0x0,8
tick,0x7ffd093d1d94,226547972,0,0x0,8
tick,0x7ffd093d1d94,226563690,0,0x0,8
tick,0x7ffd093d1d94,226579396,0,0x0,8
tick,0x7ffd093d1d94,226594608,0,0x0,8
tick,0x7ffd093d1d94,226609330,0,0x0,8
tick,0x7ffd093d1d94,226624928,0,0x0,8
tick,0x7ffd093d1d94,226640666,0,0x0,8
tick,0x7ffd093d1d94,226655688,0,0x0,8
tick,0x7ffd093d1d94,226670962,0,0x0,8
tick,0x7ffd093d1d94,226686049,0,0x0,8
tick,0x7ffd093d1d94,226701843,0,0x0,8
tick,0x7ffd093d1d94,226717076,0,0x0,8
tick,0x7ffd093d1d94,226732536,0,0x0,8
tick,0x7ffd093d1d94,226747438,0,0x0,8
tick,0x7ffd093d1d94,226762745,0,0x0,8
tick,0x7ffd093d1d94,226778040,0,0x0,8
tick,0x7ffd093d1d94,226793517,0,0x0,8
tick,0x7ffd093d1d94,226808644,0,0x0,8
tick,0x7ffd093d1d94,226824533,0,0x0,8
tick,0x7ffd093d1d94,226839849,0,0x0,8
tick,0x7ffd093d1d94,226855496,0,0x0,8
tick,0x7ffd093d1d94,226871266,0,0x0,8
tick,0x7ffd093d1d94,226886847,0,0x0,8
tick,0x7ffd093d1d94,226902696,0,0x0,8
tick,0x7ffd093d1d94,226918384,0,0x0,8
tick,0x7ffd093d1d94,226934572,0,0x0,8
tick,0x7ffd093d1d94,226949597,0,0x0,8
tick,0x7ffd093d1d94,226965675,0,0x0,8
tick,0x7ffd093d1d94,226980796,0,0x0,8
tick,0x7ffd093d1d94,226996634,0,0x0,8
tick,0x7ffd093d1d94,227011361,0,0x0,8
tick,0x7ffd093d1d94,227027433,0,0x0,8
tick,0x7ffd093d1d94,227042764,0,0x0,8
tick,0x7ffd093d1d94,227058859,0,0x0,8
tick,0x7ffd093d1d94,227074709,0,0x0,8
tick,0x7ffd093d1d94,227090589,0,0x0,8
tick,0x7ffd093d1d94,227106065,0,0x0,8
tick,0x7ffd093d1d94,227121827,0,0x0,8
tick,0x7ffd093d1d94,227137496,0,0x0,8
tick,0x7ffd093d1d94,227152682,0,0x0,8
tick,0x7ffd093d1d94,227168718,0,0x0,8
tick,0x7ffd093d1d94,227183774,0,0x0,8
tick,0x7ffd093d1d94,227198871,0,0x0,8
tick,0x7ffd093d1d94,227215069,0,0x0,8
tick,0x7ffd093d1d94,227230935,0,0x0,8
tick,0x7ffd093d1d94,227246297,0,0x0,8
tick,0x7ffd093d1d94,227261383,0,0x0,8
tick,0x7ffd093d1d94,227276753,0,0x0,8
tick,0x7ffd093d1d94,227292539,0,0x0,8
tick,0x7ffd093d1d94,227308365,0,0x0,8
tick,0x7ffd093d1d94,227324241,0,0x0,8
tick,0x7ffd093d1d94,227339237,0,0x0,8
tick,0x7ffd093d1d94,227355129,0,0x0,8
tick,0x7ffd093d1d94,227371417,0,0x0,8
tick,0x7ffd093d1d94,227386786,0,0x0,8
tick,0x7ffd093d1d94,227402621,0,0x0,8
tick,0x7ffd093d1d94,227419072,0,0x0,8
tick,0x7ffd093d1d94,227434396,0,0x0,8
tick,0x7ffd093d1d94,227450128,0,0x0,8
tick,0x7ffd093d1d94,227465307,0,0x0,8
tick,0x7ffd093d1d94,227480605,0,0x0,8
tick,0x7ffd093d1d94,227496222,0,0x0,8
tick,0x7ffd093d1d94,227512230,0,0x0,8
tick,0x7ffd093d1d94,227527727,0,0x0,8
tick,0x7ffd093d1d94,227543328,0,0x0,8
tick,0x7ffd093d1d94,227558162,0,0x0,8
tick,0x7ffd093d1d94,227573837,0,0x0,8
tick,0x7ffd093d1d94,227589114,0,0x0,8
tick,0x7ffd093d1d94,227604352,0,0x0,8
tick,0x7ffd093d1d94,227620217,0,0x0,8
tick,0x7ffd093d1d94,227635704,0,0x0,8
tick,0x7ffd093d1d94,227651639,0,0x0,8
tick,0x7ffd093d1d94,227667779,0,0x0,8
tick,0x7ffd093d1d94,227682434,0,0x0,8
tick,0x7ffd093d1d94,227698293,0,0x0,8
tick,0x7ffd093d1d94,227713406,0,0x0,8
tick,0x7ffd093d1d94,227728990,0,0x0,8
tick,0x7ffd093d1d94,227744985,0,0x0,8
tick,0x7ffd093d1d94,227759698,0,0x0,8
tick,0x7ffd093d1d94,227775297,0,0x0,8
tick,0x7ffd093d1d94,227790879,0,0x0,8
tick,0x7ffd093d1d94,227806872,0,0x0,8
tick,0x7ffd093d1d94,227822816,0,0x0,8
tick,0x7ffd093d1d94,227838743,0,0x0,8
tick,0x7ffd093d1d94,227854434,0,0x0,8
tick,0x7ffd093d1d94,227870276,0,0x0,8
tick,0x7ffd093d1d94,227885542,0,0x0,8
tick,0x7ffd093d1d94,227901483,0,0x0,8
tick,0x7ffd093d1d94,227917420,0,0x0,8
tick,0x7ffd093d1d94,227933150,0,0x0,8
tick,0x7ffd093d1d94,227948575,0,0x0,8
tick,0x7ffd093d1d94,227964798,0,0x0,8
tick,0x7ffd093d1d94,227979870,0,0x0,8
tick,0x7ffd093d1d94,227995081,0,0x0,8
tick,0x7ffd093d1d94,228010167,0,0x0,8
tick,0x7ffd093d1d94,228025249,0,0x0,8
tick,0x7ffd093d1d94,228041251,0,0x0,8
tick,0x7ffd093d1d94,228056310,0,0x0,8
tick,0x7ffd093d1d94,228071463,0,0x0,8
tick,0x7ffd093d1d94,228087180,0,0x0,8
tick,0x7ffd093d1d94,228102084,0,0x0,8
tick,0x7ffd093d1d94,228117035,0,0x0,8
tick,0x7ffd093d1d94,228132658,0,0x0,8
tick,0x7ffd093d1d94,228148485,0,0x0,8
tick,0x7ffd093d1d94,228163514,0,0x0,8
tick,0x7ffd093d1d94,228179189,0,0x0,8
tick,0x7ffd093d1d94,228195219,0,0x0,8
tick,0x7ffd093d1d94,228210708,0,0x0,8
tick,0x7ffd093d1d94,228227276,0,0x0,8
tick,0x7ffd093d1d94,228242367,0,0x0,8
tick,0x7ffd093d1d94,228258030,0,0x0,8
tick,0x7ffd093d1d94,228273017,0,0x0,8
tick,0x7ffd093d1d94,228288292,0,0x0,8
tick,0x7ffd093d1d94,228304281,0,0x0,8
tick,0x7ffd093d1d94,228319036,0,0x0,8
tick,0x7ffd093d1d94,228335439,0,0x0,8
tick,0x7ffd093d1d94,228350397,0,0x0,8
tick,0x7ffd093d1d94,228365333,0,0x0,8
tick,0x7ffd093d1d94,228381165,0,0x0,8
tick,0x7ffd093d1d94,228396688,0,0x0,8
tick,0x7ffd093d1d94,228412366,0,0x0,8
tick,0x7ffd093d1d94,228428351,0,0x0,8
tick,0x7ffd093d1d94,228444046,0,0x0,8
tick,0x7ffd093d1d94,228459296,0,0x0,8
tick,0x7ffd093d1d94,228474667,0,0x0,8
tick,0x7ffd093d1d94,228489972,0,0x0,8
tick,0x7ffd093d1d94,228505174,0,0x0,8
tick,0x7ffd093d1d94,228520678,0,0x0,8
tick,0x7ffd093d1d94,228536553,0,0x0,8
tick,0x7ffd093d1d94,228552248,0,0x0,8
tick,0x7ffd093d1d94,228568093,0,0x0,8
tick,0x7ffd093d1d94,228583934,0,0x0,8
tick,0x7ffd093d1d94,228599428,0,0x0,8
tick,0x7ffd093d1d94,228615320,0,0x0,8
tick,0x7ffd093d1d94,228630684,0,0x0,8
tick,0x7ffd093d1d94,228646229,0,0x0,8
tick,0x7ffd093d1d94,228661600,0,0x0,8
tick,0x7ffd093d1d94,228677195,0,0x0,8
tick,0x7ffd093d1d94,228692029,0,0x0,8
tick,0x7ffd093d1d94,228708068,0,0x0,8
tick,0x7ffd093d1d94,228723122,0,0x0,8
tick,0x7ffd093d1d94,228739143,0,0x0,8
tick,0x7ffd093d1d94,228754350,0,0x0,8
tick,0x7ffd093d1d94,228770065,0,0x0,8
tick,0x7ffd093d1d94,228785440,0,0x0,8
tick,0x7ffd093d1d94,228800656,0,0x0,8
tick,0x7ffd093d1d94,228816524,0,0x0,8
tick,0x7ffd093d1d94,228832615,0,0x0,8
tick,0x7ffd093d1d94,228847790,0,0x0,8
tick,0x7ffd093d1d94,228862853,0,0x0,8
tick,0x7ffd093d1d94,228878724,0,0x0,8
tick,0x7ffd093d1d94,228894873,0,0x0,8
tick,0x7ffd093d1d94,228910628,0,0x0,8
tick,0x7ffd093d1d94,228925684,0,0x0,8
tick,0x7ffd093d1d94,228941160,0,0x0,8
tick,0x7ffd093d1d94,228956663,0,0x0,8
tick,0x7ffd093d1d94,228972746,0,0x0,8
tick,0x7ffd093d1d94,228988172,0,0x0,8
tick,0x7ffd093d1d94,229003259,0,0x0,8
tick,0x7ffd093d1d94,229019220,0,0x0,8
tick,0x7ffd093d1d94,229034345,0,0x0,8
tick,0x7ffd093d1d94,229050133,0,0x0,8
tick,0x7ffd093d1d94,229065772,0,0x0,8
tick,0x7ffd093d1d94,229081887,0,0x0,8
tick,0x7ffd093d1d94,229097361,0,0x0,8
tick,0x7ffd093d1d94,229113055,0,0x0,8
tick,0x7ffd093d1d94,229128520,0,0x0,8
tick,0x7ffd093d1d94,229143236,0,0x0,8
tick,0x7ffd093d1d94,229158632,0,0x0,8
tick,0x7ffd093d1d94,229174540,0,0x0,8
tick,0x7ffd093d1d94,229190472,0,0x0,8
tick,0x7ffd093d1d94,229206133,0,0x0,8
tick,0x7ffd093d1d94,229221782,0,0x0,8
tick,0x7ffd093d1d94,229236951,0,0x0,8
tick,0x7ffd093d1d94,229252594,0,0x0,8
tick,0x7ffd093d1d94,229268628,0,0x0,8
tick,0x7ffd093d1d94,229283841,0,0x0,8
tick,0x7ffd093d1d94,229299207,0,0x0,8
tick,0x7ffd093d1d94,229315087,0,0x0,8
tick,0x7ffd093d1d94,229330086,0,0x0,8
tick,0x7ffd093d1d94,229345752,0,0x0,8
tick,0x7ffd093d1d94,229362212,0,0x0,8
tick,0x7ffd093d1d94,229378199,0,0x0,8
tick,0x7ffd093d1d94,229393337,0,0x0,8
tick,0x7ffd093d1d94,229408884,0,0x0,8
tick,0x7ffd093d1d94,229424125,0,0x0,8
tick,0x7ffd093d1d94,229439914,0,0x0,8
tick,0x7ffd093d1d94,229455276,0,0x0,8
tick,0x7ffd093d1d94,229471013,0,0x0,8
tick,0x7ffd093d1d94,229486333,0,0x0,8
tick,0x7ffd093d1d94,229502534,0,0x0,8
tick,0x7ffd093d1d94,229518039,0,0x0,8
tick,0x7ffd093d1d94,229534113,0,0x0,8
tick,0x7ffd093d1d94,229549948,0,0x0,8
tick,0x7ffd093d1d94,229565728,0,0x0,8
tick,0x7ffd093d1d94,229581068,0,0x0,8
tick,0x7ffd093d1d94,229596319,0,0x0,8
tick,0x7ffd093d1d94,229612237,0,0x0,8
tick,0x7ffd093d1d94,229627724,0,0x0,8
tick,0x7ffd093d1d94,229642812,0,0x0,8
tick,0x7ffd093d1d94,229658587,0,0x0,8
tick,0x7ffd093d1d94,229674172,0,0x0,8
tick,0x7ffd093d1d94,229689485,0,0x0,8
tick,0x7ffd093d1d94,229705375,0,0x0,8
tick,0x7ffd093d1d94,229722170,0,0x0,8
tick,0x7ffd093d1d94,229736929,0,0x0,8
tick,0x7ffd093d1d94,229752560,0,0x0,8
tick,0x7ffd093d1d94,229768479,0,0x0,8
tick,0x7ffd093d1d94,229784100,0,0x0,8
tick,0x7ffd093d1d94,229799915,0,0x0,8
tick,0x7ffd093d1d94,229815783,0,0x0,8
tick,0x7ffd093d1d94,229830646,0,0x0,8
tick,0x7ffd093d1d94,229846389,0,0x0,8
tick,0x7ffd093d1d94,229861251,0,0x0,8
tick,0x7ffd093d1d94,229876318,0,0x0,8
tick,0x7ffd093d1d94,229891505,0,0x0,8
tick,0x7ffd093d1d94,229906846,0,0x0,8
tick,0x7ffd093d1d94,229922294,0,0x0,8
tick,0x7ffd093d1d94,229937710,0,0x0,8
tick,0x7ffd093d1d94,229952895,0,0x0,8
tick,0x7ffd093d1d94,229968996,0,0x0,8
tick,0x7ffd093d1d94,229983970,0,0x0,8
tick,0x7ffd093d1d94,229999001,0,0x0,8
tick,0x7ffd093d1d94,230014353,0,0x0,8
tick,0x7ffd093d1d94,230029462,0,0x0,8
tick,0x7ffd093d1d94,230045084,0,0x0,8
tick,0x7ffd093d1d94,230060264,0,0x0,8
tick,0x7ffd093d1d94,230075820,0,0x0,8
tick,0x7ffd093d1d94,230090717,0,0x0,8
tick,0x7ffd093d1d94,230105789,0,0x0,8
tick,0x7ffd093d1d94,230121583,0,0x0,8
tick,0x7ffd093d1d94,230136722,0,0x0,8
tick,0x7ffd093d1d94,230152177,0,0x0,8
tick,0x7ffd093d1d94,230167659,0,0x0,8
tick,0x7ffd093d1d94,230182576,0,0x0,8
tick,0x7ffd093d1d94,230197741,0,0x0,8
tick,0x7ffd093d1d94,230213812,0,0x0,8
tick,0x7ffd093d1d94,230229138,0,0x0,8
tick,0x7ffd093d1d94,230244586,0,0x0,8
tick,0x7ffd093d1d94,230259274,0,0x0,8
tick,0x7ffd093d1d94,230274564,0,0x0,8
tick,0x7ffd093d1d94,230290411,0,0x0,8
tick,0x7ffd093d1d94,230306217,0,0x0,8
tick,0x7ffd093d1d94,230322138,0,0x0,8
tick,0x7ffd093d1d94,230337759,0,0x0,8
tick,0x7ffd093d1d94,230353301,0,0x0,8
tick,0x7ffd093d1d94,230368715,0,0x0,8
tick,0x7ffd093d1d94,230384459,0,0x0,8
tick,0x7ffd093d1d94,230399743,0,0x0,8
tick,0x7ffd093d1d94,230415093,0,0x0,8
tick,0x7ffd093d1d94,230430205,0,0x0,8
tick,0x7ffd093d1d94,230446299,0,0x0,8
tick,0x7ffd093d1d94,230461293,0,0x0,8
tick,0x7ffd093d1d94,230476310,0,0x0,8
tick,0x7ffd093d1d94,230492128,0,0x0,8
tick,0x7ffd093d1d94,230507660,0,0x0,8
tick,0x7ffd093d1d94,230523304,0,0x0,8
tick,0x7ffd093d1d94,230540880,0,0x0,8
tick,0x7ffd093d1d94,230554284,0,0x0,8
tick,0x7ffd093d1d94,230570073,0,0x0,8
tick,0x7ffd093d1d94,230585845,0,0x0,8
tick,0x7ffd093d1d94,230601152,0,0x0,8
tick,0x7ffd093d1d94,230616209,0,0x0,8
tick,0x7ffd093d1d94,230631708,0,0x0,8
tick,0x7ffd093d1d94,230647285,0,0x0,8
tick,0x7ffd093d1d94,230663326,0,0x0,8
tick,0x7ffd093d1d94,230678486,0,0x0,8
tick,0x7ffd093d1d94,230693803,0,0x0,8
tick,0x7ffd093d1d94,230710323,0,0x0,8
tick,0x7ffd093d1d94,230726281,0,0x0,8
tick,0x7ffd093d1d94,230741925,0,0x0,8
tick,0x7ffd093d1d94,230757202,0,0x0,8
tick,0x7ffd093d1d94,230772846,0,0x0,8
tick,0x7ffd093d1d94,230788374,0,0x0,8
tick,0x7ffd093d1d94,230803620,0,0x0,8
tick,0x7ffd093d1d94,230819485,0,0x0,8
tick,0x7ffd093d1d94,230834536,0,0x0,8
tick,0x7ffd093d1d94,230849762,0,0x0,8
tick,0x7ffd093d1d94,230866187,0,0x0,8
tick,0x7ffd093d1d94,230881466,0,0x0,8
tick,0x7ffd093d1d94,230896881,0,0x0,8
tick,0x7ffd093d1d94,230912610,0,0x0,8
tick,0x7ffd093d1d94,230928087,0,0x0,8
tick,0x7ffd093d1d94,230944209,0,0x0,8
tick,0x7ffd093d1d94,230960607,0,0x0,8
tick,0x7ffd093d1d94,230976287,0,0x0,8
tick,0x7ffd093d1d94,230991797,0,0x0,8
tick,0x7ffd093d1d94,231007678,0,0x0,8
tick,0x7ffd093d1d94,231023386,0,0x0,8
tick,0x7ffd093d1d94,231038385,0,0x0,8
tick,0x7ffd093d1d94,231054342,0,0x0,8
tick,0x7ffd093d1d94,231069685,0,0x0,8
tick,0x7ffd093d1d94,231085312,0,0x0,8
tick,0x7ffd093d1d94,231101521,0,0x0,8
tick,0x7ffd093d1d94,231117494,0,0x0,8
tick,0x7ffd093d1d94,231132899,0,0x0,8
tick,0x7ffd093d1d94,231149150,0,0x0,8
tick,0x7ffd093d1d94,231165078,0,0x0,8
tick,0x7ffd093d1d94,231181353,0,0x0,8
tick,0x7ffd093d1d94,231196405,0,0x0,8
tick,0x7ffd093d1d94,231212446,0,0x0,8
tick,0x7ffd093d1d94,231228343,0,0x0,8
tick,0x7ffd093d1d94,231243755,0,0x0,8
tick,0x7ffd093d1d94,231259148,0,0x0,8
tick,0x7ffd093d1d94,231273834,0,0x0,8
tick,0x7ffd093d1d94,231290375,0,0x0,8
tick,0x7ffd093d1d94,231305732,0,0x0,8
tick,0x7ffd093d1d94,231321139,0,0x0,8
tick,0x7ffd093d1d94,231336627,0,0x0,8
tick,0x7ffd093d1d94,231352426,0,0x0,8
tick,0x7ffd093d1d94,231368127,0,0x0,8
tick,0x7ffd093d1d94,231383867,0,0x0,8
tick,0x7ffd093d1d94,231399866,0,0x0,8
tick,0x7ffd093d1d94,231415540,0,0x0,8
tick,0x7ffd093d1d94,231431224,0,0x0,8
tick,0x7ffd093d1d94,231446514,0,0x0,8
tick,0x7ffd093d1d94,231462518,0,0x0,8
tick,0x7ffd093d1d94,231477595,0,0x0,8
tick,0x7ffd093d1d94,231492943,0,0x0,8
tick,0x7ffd093d1d94,231508151,0,0x0,8
tick,0x7ffd093d1d94,231523291,0,0x0,8
tick,0x7ffd093d1d94,231539314,0,0x0,8
tick,0x7ffd093d1d94,231555194,0,0x0,8
tick,0x7ffd093d1d94,231570695,0,0x0,8
tick,0x7ffd093d1d94,231586647,0,0x0,8
tick,0x7ffd093d1d94,231601540,0,0x0,8
tick,0x7ffd093d1d94,231616827,0,0x0,8
tick,0x7ffd093d1d94,231632704,0,0x0,8
tick,0x7ffd093d1d94,231648600,0,0x0,8
tick,0x7ffd093d1d94,231664345,0,0x0,8
tick,0x7ffd093d1d94,231679799,0,0x0,8
tick,0x7ffd093d1d94,231695994,0,0x0,8
tick,0x7ffd093d1d94,231712097,0,0x0,8
tick,0x7ffd093d1d94,231727904,0,0x0,8
tick,0x7ffd093d1d94,231742631,0,0x0,8
tick,0x7ffd093d1d94,231757495,0,0x0,8
tick,0x7ffd093d1d94,231772604,0,0x0,8
tick,0x7ffd093d1d94,231788588,0,0x0,8
tick,0x7ffd093d1d94,231803993,0,0x0,8
tick,0x7ffd093d1d94,231818745,0,0x0,8
tick,0x7ffd093d1d94,231834834,0,0x0,8
tick,0x7ffd093d1d94,231849823,0,0x0,8
tick,0x7ffd093d1d94,231864975,0,0x0,8
tick,0x7ffd093d1d94,231880516,0,0x0,8
tick,0x7ffd093d1d94,231896833,0,0x0,8
tick,0x7ffd093d1d94,231912182,0,0x0,8
tick,0x7ffd093d1d94,231927395,0,0x0,8
tick,0x7ffd093d1d94,231942370,0,0x0,8
tick,0x7ffd093d1d94,231957555,0,0x0,8
tick,0x7ffd093d1d94,231973428,0,0x0,8
tick,0x7ffd093d1d94,231989834,0,0x0,8
tick,0x7ffd093d1d94,232004942,0,0x0,8
tick,0x7ffd093d1d94,232020769,0,0x0,8
tick,0x7ffd093d1d94,232035308,0,0x0,8
tick,0x7ffd093d1d94,232050625,0,0x0,8
tick,0x7ffd093d1d94,232065786,0,0x0,8
tick,0x7ffd093d1d94,232080836,0,0x0,8
tick,0x7ffd093d1d94,232096661,0,0x0,8
tick,0x7ffd093d1d94,232112391,0,0x0,8
tick,0x7ffd093d1d94,232127970,0,0x0,8
tick,0x7ffd093d1d94,232143614,0,0x0,8
tick,0x7ffd093d1d94,232158382,0,0x0,8
tick,0x7ffd093d1d94,232173747,0,0x0,8
tick,0x7ffd093d1d94,232188834,0,0x0,8
tick,0x7ffd093d1d94,232204162,0,0x0,8
tick,0x7ffd093d1d94,232219631,0,0x0,8
tick,0x7ffd093d1d94,232235358,0,0x0,8
tick,0x7ffd093d1d94,232250330,0,0x0,8
tick,0x7ffd093d1d94,232266323,0,0x0,8
tick,0x7ffd093d1d94,232282199,0,0x0,8
tick,0x7ffd093d1d94,232298051,0,0x0,8
tick,0x7ffd093d1d94,232313902,0,0x0,8
tick,0x7ffd093d1d94,232329224,0,0x0,8
tick,0x7ffd093d1d94,232344572,0,0x0,8
tick,0x7ffd093d1d94,232360587,0,0x0,8
tick,0x7ffd093d1d94,232376907,0,0x0,8
tick,0x7ffd093d1d94,232391388,0,0x0,8
tick,0x7ffd093d1d94,232407040,0,0x0,8
tick,0x7ffd093d1d94,232422970,0,0x0,8
tick,0x7ffd093d1d94,232438099,0,0x0,8
tick,0x7ffd093d1d94,232453744,0,0x0,8
tick,0x7ffd093d1d94,232469022,0,0x0,8
tick,0x7ffd093d1d94,232484783,0,0x0,8
tick,0x7ffd093d1d94,232499718,0,0x0,8
tick,0x7ffd093d1d94,232515498,0,0x0,8
tick,0x7ffd093d1d94,232530869,0,0x0,8
tick,0x7ffd093d1d94,232546141,0,0x0,8
tick,0x7ffd093d1d94,232561471,0,0x0,8
tick,0x7ffd093d1d94,232577096,0,0x0,8
tick,0x7ffd093d1d94,232592896,0,0x0,8
tick,0x7ffd093d1d94,232608138,0,0x0,8
tick,0x7ffd093d1d94,232623636,0,0x0,8
tick,0x7ffd093d1d94,232639548,0,0x0,8
tick,0x7ffd093d1d94,232655220,0,0x0,8
tick,0x7ffd093d1d94,232670838,0,0x0,8
tick,0x7ffd093d1d94,232686081,0,0x0,8
tick,0x7ffd093d1d94,232702176,0,0x0,8
tick,0x7ffd093d1d94,232717781,0,0x0,8
tick,0x7ffd093d1d94,232732882,0,0x0,8
tick,0x7ffd093d1d94,232748497,0,0x0,8
tick,0x7ffd093d1d94,232764580,0,0x0,8
tick,0x7ffd093d1d94,232779492,0,0x0,8
tick,0x7ffd093d1d94,232795017,0,0x0,8
tick,0x7ffd093d1d94,232810819,0,0x0,8
tick,0x7ffd093d1d94,232826126,0,0x0,8
tick,0x7ffd093d1d94,232841605,0,0x0,8
tick,0x7ffd093d1d94,232857283,0,0x0,8
tick,0x7ffd093d1d94,232872544,0,0x0,8
tick,0x7ffd093d1d94,232887506,0,0x0,8
tick,0x7ffd093d1d94,232903130,0,0x0,8
tick,0x7ffd093d1d94,232918785,0,0x0,8
tick,0x7ffd093d1d94,232934328,0,0x0,8
tick,0x7ffd093d1d94,232949712,0,0x0,8
tick,0x7ffd093d1d94,232965652,0,0x0,8
tick,0x7ffd093d1d94,232980676,0,0x0,8
tick,0x7ffd093d1d94,232996640,0,0x0,8
tick,0x7ffd093d1d94,233012552,0,0x0,8
tick,0x7ffd093d1d94,233027788,0,0x0,8
tick,0x7ffd093d1d94,233043300,0,0x0,8
tick,0x7ffd093d1d94,233058354,0,0x0,8
tick,0x7ffd093d1d94,233073959,0,0x0,8
tick,0x7ffd093d1d94,233089809,0,0x0,8
tick,0x7ffd093d1d94,233105843,0,0x0,8
tick,0x7ffd093d1d94,233124194,0,0x0,8
tick,0x7ffd093d1d94,233139429,0,0x0,8
tick,0x7ffd093d1d94,233152802,0,0x0,8
tick,0x7ffd093d1d94,233168971,0,0x0,8
tick,0x7ffd093d1d94,233184685,0,0x0,8
tick,0x7ffd093d1d94,233200081,0,0x0,8
tick,0x7ffd093d1d94,233215466,0,0x0,8
tick,0x7ffd093d1d94,233231349,0,0x0,8
tick,0x7ffd093d1d94,233246886,0,0x0,8
tick,0x7ffd093d1d94,233262111,0,0x0,8
tick,0x7ffd093d1d94,233277933,0,0x0,8
tick,0x7ffd093d1d94,233293477,0,0x0,8
tick,0x7ffd093d1d94,233309037,0,0x0,8
tick,0x7ffd093d1d94,233325239,0,0x0,8
tick,0x7ffd093d1d94,233340585,0,0x0,8
tick,0x7ffd093d1d94,233356585,0,0x0,8
tick,0x7ffd093d1d94,233372210,0,0x0,8
tick,0x7ffd093d1d94,233387710,0,0x0,8
tick,0x7ffd093d1d94,233403260,0,0x0,8
tick,0x7ffd093d1d94,233418918,0,0x0,8
tick,0x7ffd093d1d94,233434328,0,0x0,8
tick,0x7ffd093d1d94,233450029,0,0x0,8
tick,0x7ffd093d1d94,233466306,0,0x0,8
tick,0x7ffd093d1d94,233482229,0,0x0,8
tick,0x7ffd093d1d94,233497910,0,0x0,8
tick,0x7ffd093d1d94,233513817,0,0x0,8
tick,0x7ffd093d1d94,233529419,0,0x0,8
tick,0x7ffd093d1d94,233544968,0,0x0,8
tick,0x7ffd093d1d94,233560383,0,0x0,8
tick,0x7ffd093d1d94,233575899,0,0x0,8
tick,0x7ffd093d1d94,233591072,0,0x0,8
tick,0x7ffd093d1d94,233606455,0,0x0,8
tick,0x7ffd093d1d94,233622746,0,0x0,8
tick,0x7ffd093d1d94,233638684,0,0x0,8
tick,0x7ffd093d1d94,233654441,0,0x0,8
tick,0x7ffd093d1d94,233669930,0,0x0,8
tick,0x7ffd093d1d94,233684635,0,0x0,8
tick,0x7ffd093d1d94,233701099,0,0x0,8
tick,0x7ffd093d1d94,233716522,0,0x0,8
tick,0x7ffd093d1d94,233732235,0,0x0,8
tick,0x7ffd093d1d94,233748303,0,0x0,8
tick,0x7ffd093d1d94,233763541,0,0x0,8
tick,0x7ffd093d1d94,233779014,0,0x0,8
tick,0x7ffd093d1d94,233794877,0,0x0,8
tick,0x7ffd093d1d94,233810157,0,0x0,8
tick,0x7ffd093d1d94,233825899,0,0x0,8
tick,0x7ffd093d1d94,233840930,0,0x0,8
tick,0x7ffd093d1d94,233856984,0,0x0,8
tick,0x7ffd093d1d94,233872139,0,0x0,8
tick,0x7ffd093d1d94,233887213,0,0x0,8
tick,0x7ffd093d1d94,233902361,0,0x0,8
tick,0x7ffd093d1d94,233917743,0,0x0,8
tick,0x7ffd093d1d94,233933213,0,0x0,8
tick,0x7ffd093d1d94,233948482,0,0x0,8
tick,0x7ffd093d1d94,233964419,0,0x0,8
tick,0x7ffd093d1d94,233980709,0,0x0,8
tick,0x7ffd093d1d94,233995871,0,0x0,8
tick,0x7ffd093d1d94,234011789,0,0x0,8
tick,0x7ffd093d1d94,234027882,0,0x0,8
tick,0x7ffd093d1d94,234043485,0,0x0,8
tick,0x7ffd093d1d94,234058672,0,0x0,8
tick,0x7ffd093d1d94,234074502,0,0x0,8
tick,0x7ffd093d1d94,234089940,0,0x0,8
tick,0x7ffd093d1d94,234104804,0,0x0,8
tick,0x7ffd093d1d94,234120814,0,0x0,8
tick,0x7ffd093d1d94,234136831,0,0x0,8
tick,0x7ffd093d1d94,234152082,0,0x0,8
tick,0x7ffd093d1d94,234167720,0,0x0,8
tick,0x7ffd093d1d94,234183102,0,0x0,8
tick,0x7ffd093d1d94,234198412,0,0x0,8
tick,0x7ffd093d1d94,234214496,0,0x0,8
tick,0x7ffd093d1d94,234230157,0,0x0,8
tick,0x7ffd093d1d94,234245247,0,0x0,8
tick,0x7ffd093d1d94,234260829,0,0x0,8
tick,0x7ffd093d1d94,234276669,0,0x0,8
tick,0x7ffd093d1d94,234292626,0,0x0,8
tick,0x7ffd093d1d94,234307717,0,0x0,8
tick,0x7ffd093d1d94,234323356,0,0x0,8
tick,0x7ffd093d1d94,234338588,0,0x0,8
tick,0x7ffd093d1d94,234353616,0,0x0,8
tick,0x7ffd093d1d94,234369157,0,0x0,8
tick,0x7ffd093d1d94,234384585,0,0x0,8
tick,0x7ffd093d1d94,234400628,0,0x0,8
tick,0x7ffd093d1d94,234416114,0,0x0,8
tick,0x7ffd093d1d94,234432290,0,0x0,8
tick,0x7ffd093d1d94,234447997,0,0x0,8
tick,0x7ffd093d1d94,234463862,0,0x0,8
tick,0x7ffd093d1d94,234479292,0,0x0,8
tick,0x7ffd093d1d94,234494927,0,0x0,8
tick,0x7ffd093d1d94,234510255,0,0x0,8
tick,0x7ffd093d1d94,234526327,0,0x0,8
tick,0x7ffd093d1d94,234542602,0,0x0,8
tick,0x7ffd093d1d94,234558398,0,0x0,8
tick,0x7ffd093d1d94,234573786,0,0x0,8
tick,0x7ffd093d1d94,234589372,0,0x0,8
tick,0x7ffd093d1d94,234605024,0,0x0,8
tick,0x7ffd093d1d94,234619934,0,0x0,8
tick,0x7ffd093d1d94,234634998,0,0x0,8
tick,0x7ffd093d1d94,234650683,0,0x0,8
tick,0x7ffd093d1d94,234666211,0,0x0,8
tick,0x7ffd093d1d94,234681640,0,0x0,8
tick,0x7ffd093d1d94,234697673,0,0x0,8
tick,0x7ffd093d1d94,234713426,0,0x0,8
tick,0x7ffd093d1d94,234729499,0,0x0,8
tick,0x7ffd093d1d94,234744962,0,0x0,8
tick,0x7ffd093d1d94,234760339,0,0x0,8
tick,0x7ffd093d1d94,234775283,0,0x0,8
tick,0x7ffd093d1d94,234790380,0,0x0,8
tick,0x7ffd093d1d94,234805732,0,0x0,8
tick,0x7ffd093d1d94,234821390,0,0x0,8
tick,0x7ffd093d1d94,234836973,0,0x0,8
tick,0x7ffd093d1d94,234852422,0,0x0,8
tick,0x7ffd093d1d94,234868003,0,0x0,8
tick,0x7ffd093d1d94,234884107,0,0x0,8
tick,0x7ffd093d1d94,234899969,0,0x0,8
tick,0x7ffd093d1d94,234915893,0,0x0,8
tick,0x7ffd093d1d94,234930773,0,0x0,8
tick,0x7ffd093d1d94,234946594,0,0x0,8
tick,0x7ffd093d1d94,234961818,0,0x0,8
tick,0x7ffd093d1d94,234977193,0,0x0,8
tick,0x7ffd093d1d94,234993357,0,0x0,8
tick,0x7ffd093d1d94,235008929,0,0x0,8
tick,0x7ffd093d1d94,235024455,0,0x0,8
tick,0x7ffd093d1d94,235039160,0,0x0,8
tick,0x7ffd093d1d94,235055124,0,0x0,8
tick,0x7ffd093d1d94,235071326,0,0x0,8
tick,0x7ffd093d1d94,235087033,0,0x0,8
tick,0x7ffd093d1d94,235102541,0,0x0,8
tick,0x7ffd093d1d94,235117948,0,0x0,8
tick,0x7ffd093d1d94,235133770,0,0x0,8
tick,0x7ffd093d1d94,235149507,0,0x0,8
tick,0x7ffd093d1d94,235164979,0,0x0,8
tick,0x7ffd093d1d94,235180177,0,0x0,8
tick,0x7ffd093d1d94,235196347,0,0x0,8
tick,0x7ffd093d1d94,235212181,0,0x0,8
tick,0x7ffd093d1d94,235228216,0,0x0,8
tick,0x7ffd093d1d94,235243504,0,0x0,8
tick,0x7ffd093d1d94,235259391,0,0x0,8
tick,0x7ffd093d1d94,235274441,0,0x0,8
tick,0x7ffd093d1d94,235289836,0,0x0,8
tick,0x7ffd093d1d94,235304879,0,0x0,8
tick,0x7ffd093d1d94,235320827,0,0x0,8
tick,0x7ffd093d1d94,235336881,0,0x0,8
tick,0x7ffd093d1d94,235351869,0,0x0,8
tick,0x7ffd093d1d94,235367589,0,0x0,8
tick,0x7ffd093d1d94,235383192,0,0x0,8
tick,0x7ffd093d1d94,235399195,0,0x0,8
tick,0x7ffd093d1d94,235415618,0,0x0,8
tick,0x7ffd093d1d94,235430317,0,0x0,8
tick,0x7ffd093d1d94,235445733,0,0x0,8
tick,0x7ffd093d1d94,235461336,0,0x0,8
tick,0x7ffd093d1d94,235476440,0,0x0,8
tick,0x7ffd093d1d94,235492124,0,0x0,8
tick,0x7ffd093d1d94,235508073,0,0x0,8
tick,0x7ffd093d1d94,235524011,0,0x0,8
tick,0x7ffd093d1d94,235538813,0,0x0,8
tick,0x7ffd093d1d94,235555368,0,0x0,8
tick,0x7ffd093d1d94,235571560,0,0x0,8
tick,0x7ffd093d1d94,235586758,0,0x0,8
tick,0x7ffd093d1d94,235601978,0,0x0,8
tick,0x7ffd093d1d94,235617761,0,0x0,8
tick,0x7ffd093d1d94,235632745,0,0x0,8
tick,0x7ffd093d1d94,235648403,0,0x0,8
tick,0x7ffd093d1d94,235663851,0,0x0,8
tick,0x7ffd093d1d94,235678764,0,0x0,8
tick,0x7ffd093d1d94,235693969,0,0x0,8
tick,0x7ffd093d1d94,235710332,0,0x0,8
tick,0x7ffd093d1d94,235725380,0,0x0,8
tick,0x7ffd093d1d94,235740755,0,0x0,8
tick,0x7ffd093d1d94,235756109,0,0x0,8
tick,0x7ffd093d1d94,235771171,0,0x0,8
tick,0x7ffd093d1d94,235787117,0,0x0,8
tick,0x7ffd093d1d94,235802143,0,0x0,8
tick,0x7ffd093d1d94,235818010,0,0x0,8
tick,0x7ffd093d1d94,235833477,0,0x0,8
tick,0x7ffd093d1d94,235850007,0,0x0,8
tick,0x7ffd093d1d94,235864400,0,0x0,8
tick,0x7ffd093d1d94,235879240,0,0x0,8
tick,0x7ffd093d1d94,235895032,0,0x0,8
tick,0x7ffd093d1d94,235910756,0,0x0,8
tick,0x7ffd093d1d94,235926425,0,0x0,8
tick,0x7ffd093d1d94,235941879,0,0x0,8
tick,0x7ffd093d1d94,235956712,0,0x0,8
tick,0x7ffd093d1d94,235971855,0,0x0,8
tick,0x7ffd093d1d94,235988172,0,0x0,8
tick,0x7ffd093d1d94,236004025,0,0x0,8
tick,0x7ffd093d1d94,236019881,0,0x0,8
tick,0x7ffd093d1d94,236035367,0,0x0,8
tick,0x7ffd093d1d94,236051264,0,0x0,8
tick,0x7ffd093d1d94,236066643,0,0x0,8
tick,0x7ffd093d1d94,236082109,0,0x0,8
tick,0x7ffd093d1d94,236097839,0,0x0,8
tick,0x7ffd093d1d94,236113254,0,0x0,8
tick,0x7ffd093d1d94,236128795,0,0x0,8
tick,0x7ffd093d1d94,236144514,0,0x0,8
tick,0x7ffd093d1d94,236160467,0,0x0,8
tick,0x7ffd093d1d94,236175815,0,0x0,8
tick,0x7ffd093d1d94,236190957,0,0x0,8
tick,0x7ffd093d1d94,236206943,0,0x0,8
tick,0x7ffd093d1d94,236222083,0,0x0,8
tick,0x7ffd093d1d94,236236906,0,0x0,8
tick,0x7ffd093d1d94,236252628,0,0x0,8
tick,0x7ffd093d1d94,236268144,0,0x0,8
tick,0x7ffd093d1d94,236282863,0,0x0,8
tick,0x7ffd093d1d94,236298011,0,0x0,8
tick,0x7ffd093d1d94,236313394,0,0x0,8
tick,0x7ffd093d1d94,236328963,0,0x0,8
tick,0x7ffd093d1d94,236344494,0,0x0,8
tick,0x7ffd093d1d94,236360023,0,0x0,8
tick,0x7ffd093d1d94,236375168,0,0x0,8
tick,0x7ffd093d1d94,236390790,0,0x0,8
tick,0x7ffd093d1d94,236406747,0,0x0,8
tick,0x7ffd093d1d94,236421945,0,0x0,8
tick,0x7ffd093d1d94,236438094,0,0x0,8
tick,0x7ffd093d1d94,236454381,0,0x0,8
tick,0x7ffd093d1d94,236470191,0,0x0,8
tick,0x7ffd093d1d94,236485446,0,0x0,8
tick,0x7ffd093d1d94,236501446,0,0x0,8
tick,0x7ffd093d1d94,236517110,0,0x0,8
tick,0x7ffd093d1d94,236532898,0,0x0,8
tick,0x7ffd093d1d94,236547903,0,0x0,8
tick,0x7ffd093d1d94,236562832,0,0x0,8
tick,0x7ffd093d1d94,236578735,0,0x0,8
tick,0x7ffd093d1d94,236593973,0,0x0,8
tick,0x7ffd093d1d94,236609940,0,0x0,8
tick,0x7ffd093d1d94,236626054,0,0x0,8
tick,0x7ffd093d1d94,236641813,0,0x0,8
tick,0x7ffd093d1d94,236657290,0,0x0,8
tick,0x7ffd093d1d94,236672653,0,0x0,8
tick,0x7ffd093d1d94,236687749,0,0x0,8
tick,0x7ffd093d1d94,236703132,0,0x0,8
tick,0x7ffd093d1d94,236719182,0,0x0,8
tick,0x7ffd093d1d94,236734287,0,0x0,8
tick,0x7ffd093d1d94,236749911,0,0x0,8
tick,0x7ffd093d1d94,236765288,0,0x0,8
tick,0x7ffd093d1d94,236780657,0,0x0,8
tick,0x7ffd093d1d94,236796526,0,0x0,8
tick,0x7ffd093d1d94,236811831,0,0x0,8
tick,0x7ffd093d1d94,236827613,0,0x0,8
tick,0x7ffd093d1d94,236843123,0,0x0,8
tick,0x7ffd093d1d94,236858230,0,0x0,8
tick,0x7ffd093d1d94,236873654,0,0x0,8
tick,0x7ffd093d1d94,236889430,0,0x0,8
tick,0x7ffd093d1d94,236905140,0,0x0,8
tick,0x7ffd093d1d94,236921384,0,0x0,8
tick,0x7ffd093d1d94,236937171,0,0x0,8
tick,0x7ffd093d1d94,236953493,0,0x0,8
tick,0x7ffd093d1d94,236968950,0,0x0,8
tick,0x7ffd093d1d94,236985459,0,0x0,8
tick,0x7ffd093d1d94,237000589,0,0x0,8
tick,0x7ffd093d1d94,237016973,0,0x0,8
tick,0x7ffd093d1d94,237032893,0,0x0,8
tick,0x7ffd093d1d94,237048504,0,0x0,8
tick,0x7ffd093d1d94,237064221,0,0x0,8
tick,0x7ffd093d1d94,237079216,0,0x0,8
tick,0x7ffd093d1d94,237094821,0,0x0,8
tick,0x7ffd093d1d94,237110681,0,0x0,8
tick,0x7ffd093d1d94,237126050,0,0x0,8
tick,0x7ffd093d1d94,237141726,0,0x0,8
tick,0x7ffd093d1d94,237157120,0,0x0,8
tick,0x7ffd093d1d94,237172425,0,0x0,8
tick,0x7ffd093d1d94,237187677,0,0x0,8
tick,0x7ffd093d1d94,237203515,0,0x0,8
tick,0x7ffd093d1d94,237218938,0,0x0,8
tick,0x7ffd093d1d94,237234467,0,0x0,8
tick,0x7ffd093d1d94,237249605,0,0x0,8
tick,0x7ffd093d1d94,237265250,0,0x0,8
tick,0x7ffd093d1d94,237280584,0,0x0,8
tick,0x7ffd093d1d94,237296004,0,0x0,8
tick,0x7ffd093d1d94,237311165,0,0x0,8
tick,0x7ffd093d1d94,237326593,0,0x0,8
tick,0x7ffd093d1d94,237342711,0,0x0,8
tick,0x7ffd093d1d94,237358250,0,0x0,8
tick,0x7ffd093d1d94,237374010,0,0x0,8
tick,0x7ffd093d1d94,237389236,0,0x0,8
tick,0x7ffd093d1d94,237404870,0,0x0,8
tick,0x7ffd093d1d94,237421246,0,0x0,8
tick,0x7ffd093d1d94,237436861,0,0x0,8
tick,0x7ffd093d1d94,237451966,0,0x0,8
tick,0x7ffd093d1d94,237467739,0,0x0,8
tick,0x7ffd093d1d94,237483043,0,0x0,8
tick,0x7ffd093d1d94,237498174,0,0x0,8
tick,0x7ffd093d1d94,237513902,0,0x0,8
tick,0x7ffd093d1d94,237529059,0,0x0,8
tick,0x7ffd093d1d94,237544832,0,0x0,8
tick,0x7ffd093d1d94,237560672,0,0x0,8
tick,0x7ffd093d1d94,237575786,0,0x0,8
tick,0x7ffd093d1d94,237590843,0,0x0,8
tick,0x7ffd093d1d94,237606034,0,0x0,8
tick,0x7ffd093d1d94,237621758,0,0x0,8
tick,0x7ffd093d1d94,237637189,0,0x0,8
tick,0x7ffd093d1d94,237652557,0,0x0,8
tick,0x7ffd093d1d94,237667580,0,0x0,8
tick,0x7ffd093d1d94,237683204,0,0x0,8
tick,0x7ffd093d1d94,237698636,0,0x0,8
tick,0x7ffd093d1d94,237714640,0,0x0,8
tick,0x7ffd093d1d94,237730332,0,0x0,8
tick,0x7ffd093d1d94,237745736,0,0x0,8
tick,0x7ffd093d1d94,237761143,0,0x0,8
tick,0x7ffd093d1d94,237776206,0,0x0,8
tick,0x7ffd093d1d94,237792288,0,0x0,8
tick,0x7ffd093d1d94,237807384,0,0x0,8
tick,0x7ffd093d1d94,237822511,0,0x0,8
tick,0x7ffd093d1d94,237837671,0,0x0,8
tick,0x7ffd093d1d94,237852751,0,0x0,8
tick,0x7ffd093d1d94,237868474,0,0x0,8
tick,0x7ffd093d1d94,237884569,0,0x0,8
tick,0x7ffd093d1d94,237900133,0,0x0,8
tick,0x7ffd093d1d94,237915930,0,0x0,8
tick,0x7ffd093d1d94,237931028,0,0x0,8
tick,0x7ffd093d1d94,237947049,0,0x0,8
tick,0x7ffd093d1d94,237962222,0,0x0,8
tick,0x7ffd093d1d94,237978040,0,0x0,8
tick,0x7ffd093d1d94,237993549,0,0x0,8
tick,0x7ffd093d1d94,238008609,0,0x0,8
tick,0x7ffd093d1d94,238023787,0,0x0,8
tick,0x7ffd093d1d94,238039819,0,0x0,8
tick,0x7ffd093d1d94,238055338,0,0x0,8
tick,0x7ffd093d1d94,238071062,0,0x0,8
tick,0x7ffd093d1d94,238086241,0,0x0,8
tick,0x7ffd093d1d94,238101942,0,0x0,8
tick,0x7ffd093d1d94,238117090,0,0x0,8
tick,0x7ffd093d1d94,238133308,0,0x0,8
tick,0x7ffd093d1d94,238148591,0,0x0,8
tick,0x7ffd093d1d94,238163626,0,0x0,8
tick,0x7ffd093d1d94,238178746,0,0x0,8
tick,0x7ffd093d1d94,238194249,0,0x0,8
tick,0x7ffd093d1d94,238209636,0,0x0,8
tick,0x7ffd093d1d94,238224623,0,0x0,8
tick,0x7ffd093d1d94,238240607,0,0x0,8
tick,0x7ffd093d1d94,238255862,0,0x0,8
tick,0x7ffd093d1d94,238271323,0,0x0,8
tick,0x7ffd093d1d94,238287438,0,0x0,8
tick,0x7ffd093d1d94,238302972,0,0x0,8
tick,0x7ffd093d1d94,238319137,0,0x0,8
tick,0x7ffd093d1d94,238335315,0,0x0,8
tick,0x7ffd093d1d94,238351170,0,0x0,8
tick,0x7ffd093d1d94,238366873,0,0x0,8
tick,0x7ffd093d1d94,238382432,0,0x0,8
tick,0x7ffd093d1d94,238397833,0,0x0,8
tick,0x7ffd093d1d94,238413841,0,0x0,8
tick,0x7ffd093d1d94,238429871,0,0x0,8
tick,0x7ffd093d1d94,238445071,0,0x0,8
tick,0x7ffd093d1d94,238460438,0,0x0,8
tick,0x7ffd093d1d94,238476160,0,0x0,8
tick,0x7ffd093d1d94,238491244,0,0x0,8
tick,0x7ffd093d1d94,238506575,0,0x0,8
tick,0x7ffd093d1d94,238522028,0,0x0,8
tick,0x7ffd093d1d94,238538324,0,0x0,8
tick,0x7ffd093d1d94,238553419,0,0x0,8
tick,0x7ffd093d1d94,238569081,0,0x0,8
tick,0x7ffd093d1d94,238585128,0,0x0,8
tick,0x7ffd093d1d94,238600907,0,0x0,8
tick,0x7ffd093d1d94,238616596,0,0x0,8
tick,0x7ffd093d1d94,238632314,0,0x0,8
tick,0x7ffd093d1d94,238647857,0,0x0,8
tick,0x7ffd093d1d94,238663007,0,0x0,8
tick,0x7ffd093d1d94,238678530,0,0x0,8
tick,0x7ffd093d1d94,238694149,0,0x0,8
tick,0x7ffd093d1d94,238709343,0,0x0,8
tick,0x7ffd093d1d94,238725318,0,0x0,8
tick,0x7ffd093d1d94,238741600,0,0x0,8
tick,0x7ffd093d1d94,238757516,0,0x0,8
tick,0x7ffd093d1d94,238773479,0,0x0,8
tick,0x7ffd093d1d94,238789621,0,0x0,8
tick,0x7ffd093d1d94,238805036,0,0x0,8
tick,0x7ffd093d1d94,238820387,0,0x0,8
tick,0x7ffd093d1d94,238836141,0,0x0,8
tick,0x7ffd093d1d94,238851762,0,0x0,8
tick,0x7ffd093d1d94,238867448,0,0x0,8
tick,0x7ffd093d1d94,238883285,0,0x0,8
tick,0x7ffd093d1d94,238898865,0,0x0,8
tick,0x7ffd093d1d94,238914711,0,0x0,8
tick,0x7ffd093d1d94,238929862,0,0x0,8
tick,0x7ffd093d1d94,238945089,0,0x0,8
tick,0x7ffd093d1d94,238960660,0,0x0,8
tick,0x7ffd093d1d94,238975783,0,0x0,8
tick,0x7ffd093d1d94,238991294,0,0x0,8
tick,0x7ffd093d1d94,239006877,0,0x0,8
tick,0x7ffd093d1d94,239022808,0,0x0,8
tick,0x7ffd093d1d94,239038971,0,0x0,8
tick,0x7ffd093d1d94,239054915,0,0x0,8
tick,0x7ffd093d1d94,239071222,0,0x0,8
tick,0x7ffd093d1d94,239086670,0,0x0,8
tick,0x7ffd093d1d94,239101884,0,0x0,8
tick,0x7ffd093d1d94,239117224,0,0x0,8
tick,0x7ffd093d1d94,239132231,0,0x0,8
tick,0x7ffd093d1d94,239148381,0,0x0,8
tick,0x7ffd093d1d94,239163329,0,0x0,8
tick,0x7ffd093d1d94,239178468,0,0x0,8
tick,0x7ffd093d1d94,239194249,0,0x0,8
tick,0x7ffd093d1d94,239209729,0,0x0,8
tick,0x7ffd093d1d94,239225883,0,0x0,8
tick,0x7ffd093d1d94,239241853,0,0x0,8
tick,0x7ffd093d1d94,239257551,0,0x0,8
tick,0x7ffd093d1d94,239273664,0,0x0,8
tick,0x7ffd093d1d94,239288913,0,0x0,8
tick,0x7ffd093d1d94,239305060,0,0x0,8
tick,0x7ffd093d1d94,239321614,0,0x0,8
tick,0x7ffd093d1d94,239337325,0,0x0,8
tick,0x7ffd093d1d94,239353062,0,0x0,8
tick,0x7ffd093d1d94,239368859,0,0x0,8
tick,0x7ffd093d1d94,239384035,0,0x0,8
tick,0x7ffd093d1d94,239399634,0,0x0,8
tick,0x7ffd093d1d94,239414400,0,0x0,8
tick,0x7ffd093d1d94,239429966,0,0x0,8
tick,0x7ffd093d1d94,239444579,0,0x0,8
tick,0x7ffd093d1d94,239460578,0,0x0,8
tick,0x7ffd093d1d94,239475902,0,0x0,8
tick,0x7ffd093d1d94,239490607,0,0x0,8
tick,0x7ffd093d1d94,239506777,0,0x0,8
tick,0x7ffd093d1d94,239521723,0,0x0,8
tick,0x7ffd093d1d94,239542580,0,0x0,8
tick,0x7ffd093d1d94,239554133,0,0x0,8
tick,0x7ffd093d1d94,239569613,0,0x0,8
tick,0x7ffd093d1d94,239585959,0,0x0,8
tick,0x7ffd093d1d94,239601678,0,0x0,8
tick,0x7ffd093d1d94,239617161,0,0x0,8
tick,0x7ffd093d1d94,239632554,0,0x0,8
tick,0x7ffd093d1d94,239648598,0,0x0,8
tick,0x7ffd093d1d94,239663861,0,0x0,8
tick,0x7ffd093d1d94,239679328,0,0x0,8
tick,0x7ffd093d1d94,239694495,0,0x0,8
tick,0x7ffd093d1d94,239710096,0,0x0,8
tick,0x7ffd093d1d94,239725237,0,0x0,8
tick,0x7ffd093d1d94,239740674,0,0x0,8
tick,0x7ffd093d1d94,239755600,0,0x0,8
tick,0x7ffd093d1d94,239771427,0,0x0,8
tick,0x7ffd093d1d94,239787948,0,0x0,8
tick,0x7ffd093d1d94,239803416,0,0x0,8
tick,0x7ffd093d1d94,239819011,0,0x0,8
tick,0x7ffd093d1d94,239834397,0,0x0,8
tick,0x7ffd093d1d94,239850286,0,0x0,8
tick,0x7ffd093d1d94,239865490,0,0x0,8
tick,0x7ffd093d1d94,239881585,0,0x0,8
tick,0x7ffd093d1d94,239896910,0,0x0,8
tick,0x7ffd093d1d94,239912217,0,0x0,8
tick,0x7ffd093d1d94,239928122,0,0x0,8
tick,0x7ffd093d1d94,239943075,0,0x0,8
tick,0x7ffd093d1d94,239958585,0,0x0,8
tick,0x7ffd093d1d94,239973749,0,0x0,8
tick,0x7ffd093d1d94,239991073,0,0x0,8
tick,0x7ffd093d1d94,240005695,0,0x0,8
tick,0x7ffd093d1d94,240021038,0,0x0,8
tick,0x7ffd093d1d94,240036771,0,0x0,8
tick,0x7ffd093d1d94,240054023,0,0x0,8
tick,0x7ffd093d1d94,240068234,0,0x0,8
tick,0x7ffd093d1d94,240083488,0,0x0,8
tick,0x7ffd093d1d94,240099315,0,0x0,8
tick,0x7ffd093d1d94,240114507,0,0x0,8
tick,0x7ffd093d1d94,240130522,0,0x0,8
tick,0x7ffd093d1d94,240145513,0,0x0,8
tick,0x7ffd093d1d94,240161551,0,0x0,8
tick,0x7ffd093d1d94,240176944,0,0x0,8
tick,0x7ffd093d1d94,240192947,0,0x0,8
tick,0x7ffd093d1d94,240208988,0,0x0,8
tick,0x7ffd093d1d94,240224440,0,0x0,8
tick,0x7ffd093d1d94,240239387,0,0x0,8
tick,0x7ffd093d1d94,240255661,0,0x0,8
tick,0x7ffd093d1d94,240271228,0,0x0,8
tick,0x7ffd093d1d94,240287009,0,0x0,8
tick,0x7ffd093d1d94,240302156,0,0x0,8
tick,0x7ffd093d1d94,240317307,0,0x0,8
tick,0x7ffd093d1d94,240333557,0,0x0,8
tick,0x7ffd093d1d94,240349469,0,0x0,8
tick,0x7ffd093d1d94,240365479,0,0x0,8
tick,0x7ffd093d1d94,240380834,0,0x0,8
tick,0x7ffd093d1d94,240396353,0,0x0,8
tick,0x7ffd093d1d94,240412050,0,0x0,8
tick,0x7ffd093d1d94,240427168,0,0x0,8
tick,0x7ffd093d1d94,240442751,0,0x0,8
tick,0x7ffd093d1d94,240458700,0,0x0,8
tick,0x7ffd093d1d94,240474071,0,0x0,8
tick,0x7ffd093d1d94,240489477,0,0x0,8
tick,0x7ffd093d1d94,240504304,0,0x0,8
tick,0x7ffd093d1d94,240520066,0,0x0,8
tick,0x7ffd093d1d94,240535047,0,0x0,8
tick,0x7ffd093d1d94,240550306,0,0x0,8
tick,0x7ffd093d1d94,240566125,0,0x0,8
tick,0x7ffd093d1d94,240581392,0,0x0,8
tick,0x7ffd093d1d94,240596754,0,0x0,8
tick,0x7ffd093d1d94,240612404,0,0x0,8
tick,0x7ffd093d1d94,240627497,0,0x0,8
tick,0x7ffd093d1d94,240642699,0,0x0,8
tick,0x7ffd093d1d94,240657879,0,0x0,8
tick,0x7ffd093d1d94,240675641,0,0x0,8
tick,0x7ffd093d1d94,240689031,0,0x0,8
tick,0x7ffd093d1d94,240705269,0,0x0,8
tick,0x7ffd093d1d94,240719768,0,0x0,8
tick,0x7ffd093d1d94,240735034,0,0x0,8
tick,0x7ffd093d1d94,240751210,0,0x0,8
tick,0x7ffd093d1d94,240766700,0,0x0,8
tick,0x7ffd093d1d94,240782363,0,0x0,8
tick,0x7ffd093d1d94,240797438,0,0x0,8
tick,0x7ffd093d1d94,240812918,0,0x0,8
tick,0x7ffd093d1d94,240828751,0,0x0,8
tick,0x7ffd093d1d94,240844911,0,0x0,8
tick,0x7ffd093d1d94,240860940,0,0x0,8
tick,0x7ffd093d1d94,240876877,0,0x0,8
tick,0x7ffd093d1d94,240892087,0,0x0,8
tick,0x7ffd093d1d94,240907598,0,0x0,8
tick,0x7ffd093d1d94,240923200,0,0x0,8
tick,0x7ffd093d1d94,240938444,0,0x0,8
tick,0x7ffd093d1d94,240954452,0,0x0,8
tick,0x7ffd093d1d94,240969900,0,0x0,8
tick,0x7ffd093d1d94,240985208,0,0x0,8
tick,0x7ffd093d1d94,241000382,0,0x0,8
tick,0x7ffd093d1d94,241016252,0,0x0,8
tick,0x7ffd093d1d94,241031833,0,0x0,8
tick,0x7ffd093d1d94,241047068,0,0x0,8
tick,0x7ffd093d1d94,241062698,0,0x0,8
tick,0x7ffd093d1d94,241078090,0,0x0,8
tick,0x7ffd093d1d94,241094441,0,0x0,8
tick,0x7ffd093d1d94,241109908,0,0x0,8
tick,0x7ffd093d1d94,241125234,0,0x0,8
tick,0x7ffd093d1d94,241141273,0,0x0,8
tick,0x7ffd093d1d94,241156456,0,0x0,8
tick,0x7ffd093d1d94,241172651,0,0x0,8
tick,0x7ffd093d1d94,241188216,0,0x0,8
tick,0x7ffd093d1d94,241203087,0,0x0,8
tick,0x7ffd093d1d94,241219116,0,0x0,8
tick,0x7ffd093d1d94,241234840,0,0x0,8
tick,0x7ffd093d1d94,241250424,0,0x0,8
tick,0x7ffd093d1d94,241266103,0,0x0,8
tick,0x7ffd093d1d94,241281677,0,0x0,8
tick,0x7ffd093d1d94,241297004,0,0x0,8
tick,0x7ffd093d1d94,241312748,0,0x0,8
tick,0x7ffd093d1d94,241328020,0,0x0,8
tick,0x7ffd093d1d94,241343676,0,0x0,8
tick,0x7ffd093d1d94,241359005,0,0x0,8
tick,0x7ffd093d1d94,241375128,0,0x0,8
tick,0x7ffd093d1d94,241390177,0,0x0,8
tick,0x7ffd093d1d94,241406296,0,0x0,8
tick,0x7ffd093d1d94,241421225,0,0x0,8
tick,0x7ffd093d1d94,241436258,0,0x0,8
tick,0x7ffd093d1d94,241451656,0,0x0,8
tick,0x7ffd093d1d94,241467311,0,0x0,8
tick,0x7ffd093d1d94,241483282,0,0x0,8
tick,0x7ffd093d1d94,241499068,0,0x0,8
tick,0x7ffd093d1d94,241514658,0,0x0,8
tick,0x7ffd093d1d94,241530430,0,0x0,8
tick,0x7ffd093d1d94,241545565,0,0x0,8
tick,0x7ffd093d1d94,241561032,0,0x0,8
tick,0x7ffd093d1d94,241576887,0,0x0,8
tick,0x7ffd093d1d94,241592368,0,0x0,8
tick,0x7ffd093d1d94,241607833,0,0x0,8
tick,0x7ffd093d1d94,241622752,0,0x0,8
tick,0x7ffd093d1d94,241637982,0,0x0,8
tick,0x7ffd093d1d94,241653229,0,0x0,8
tick,0x7ffd093d1d94,241669278,0,0x0,8
tick,0x7ffd093d1d94,241684704,0,0x0,8
tick,0x7ffd093d1d94,241700077,0,0x0,8
tick,0x7ffd093d1d94,241715828,0,0x0,8
tick,0x7ffd093d1d94,241731561,0,0x0,8
tick,0x7ffd093d1d94,241746245,0,0x0,8
tick,0x7ffd093d1d94,241762249,0,0x0,8
tick,0x7ffd093d1d94,241778073,0,0x0,8
tick,0x7ffd093d1d94,241794121,0,0x0,8
tick,0x7ffd093d1d94,241809540,0,0x0,8
tick,0x7ffd093d1d94,241825270,0,0x0,8
tick,0x7ffd093d1d94,241840339,0,0x0,8
tick,0x7ffd093d1d94,241855786,0,0x0,8
tick,0x7ffd093d1d94,241871123,0,0x0,8
tick,0x7ffd093d1d94,241888310,0,0x0,8
tick,0x7ffd093d1d94,241902770,0,0x0,8
tick,0x7ffd093d1d94,241918265,0,0x0,8
tick,0x7ffd093d1d94,241933542,0,0x0,8
tick,0x7ffd093d1d94,241949001,0,0x0,8
tick,0x7ffd093d1d94,241964310,0,0x0,8
tick,0x7ffd093d1d94,241980048,0,0x0,8
tick,0x7ffd093d1d94,241996073,0,0x0,8
tick,0x7ffd093d1d94,242011620,0,0x0,8
tick,0x7ffd093d1d94,242027167,0,0x0,8
tick,0x7ffd093d1d94,242043618,0,0x0,8
tick,0x7ffd093d1d94,242058772,0,0x0,8
tick,0x7ffd093d1d94,242074593,0,0x0,8
tick,0x7ffd093d1d94,242090503,0,0x0,8
tick,0x7ffd093d1d94,242106191,0,0x0,8
tick,0x7ffd093d1d94,242121658,0,0x0,8
tick,0x7ffd093d1d94,242136598,0,0x0,8
tick,0x7ffd093d1d94,242152690,0,0x0,8
tick,0x7ffd093d1d94,242168812,0,0x0,8
tick,0x7ffd093d1d94,242184372,0,0x0,8
tick,0x7ffd093d1d94,242199624,0,0x0,8
tick,0x7ffd093d1d94,242215407,0,0x0,8
tick,0x7ffd093d1d94,242230939,0,0x0,8
tick,0x7ffd093d1d94,242247089,0,0x0,8
tick,0x7ffd093d1d94,242262577,0,0x0,8
tick,0x7ffd093d1d94,242278115,0,0x0,8
tick,0x7ffd093d1d94,242293274,0,0x0,8
tick,0x7ffd093d1d94,242308403,0,0x0,8
tick,0x7ffd093d1d94,242324508,0,0x0,8
tick,0x7ffd093d1d94,242340511,0,0x0,8
tick,0x7ffd093d1d94,242356534,0,0x0,8
tick,0x7ffd093d1d94,242371988,0,0x0,8
tick,0x7ffd093d1d94,242387239,0,0x0,8
tick,0x7ffd093d1d94,242403220,0,0x0,8
tick,0x7ffd093d1d94,242419621,0,0x0,8
tick,0x7ffd093d1d94,242434357,0,0x0,8
tick,0x7ffd093d1d94,242449591,0,0x0,8
tick,0x7ffd093d1d94,242465179,0,0x0,8
tick,0x7ffd093d1d94,242480831,0,0x0,8
tick,0x7ffd093d1d94,242496768,0,0x0,8
tick,0x7ffd093d1d94,242512276,0,0x0,8
tick,0x7ffd093d1d94,242527577,0,0x0,8
tick,0x7ffd093d1d94,242543193,0,0x0,8
tick,0x7ffd093d1d94,242559107,0,0x0,8
tick,0x7ffd093d1d94,242575260,0,0x0,8
tick,0x7ffd093d1d94,242590342,0,0x0,8
tick,0x7ffd093d1d94,242605493,0,0x0,8
tick,0x7ffd093d1d94,242621244,0,0x0,8
tick,0x7ffd093d1d94,242636667,0,0x0,8
tick,0x7ffd093d1d94,242652519,0,0x0,8
tick,0x7ffd093d1d94,242668567,0,0x0,8
tick,0x7ffd093d1d94,242684616,0,0x0,8
tick,0x7ffd093d1d94,242700040,0,0x0,8
tick,0x7ffd093d1d94,242715571,0,0x0,8
tick,0x7ffd093d1d94,242730745,0,0x0,8
tick,0x7ffd093d1d94,242746138,0,0x0,8
tick,0x7ffd093d1d94,242762448,0,0x0,8
tick,0x7ffd093d1d94,242777494,0,0x0,8
tick,0x7ffd093d1d94,242793495,0,0x0,8
tick,0x7ffd093d1d94,242809463,0,0x0,8
tick,0x7ffd093d1d94,242825305,0,0x0,8
tick,0x7ffd093d1d94,242841178,0,0x0,8
tick,0x7ffd093d1d94,242856761,0,0x0,8
tick,0x7ffd093d1d94,242871361,0,0x0,8
tick,0x7ffd093d1d94,242887176,0,0x0,8
tick,0x7ffd093d1d94,242902698,0,0x0,8
tick,0x7ffd093d1d94,242918463,0,0x0,8
tick,0x7ffd093d1d94,242933566,0,0x0,8
tick,0x7ffd093d1d94,242949303,0,0x0,8
tick,0x7ffd093d1d94,242964412,0,0x0,8
tick,0x7ffd093d1d94,242980157,0,0x0,8
tick,0x7ffd093d1d94,242995635,0,0x0,8
tick,0x7ffd093d1d94,243010677,0,0x0,8
tick,0x7ffd093d1d94,243026374,0,0x0,8
tick,0x7ffd093d1d94,243042206,0,0x0,8
tick,0x7ffd093d1d94,243057237,0,0x0,8
tick,0x7ffd093d1d94,243072403,0,0x0,8
tick,0x7ffd093d1d94,243087981,0,0x0,8
tick,0x7ffd093d1d94,243104168,0,0x0,8
tick,0x7ffd093d1d94,243120045,0,0x0,8
tick,0x7ffd093d1d94,243134998,0,0x0,8
tick,0x7ffd093d1d94,243150557,0,0x0,8
tick,0x7ffd093d1d94,243165669,0,0x0,8
tick,0x7ffd093d1d94,243181641,0,0x0,8
tick,0x7ffd093d1d94,243197285,0,0x0,8
tick,0x7ffd093d1d94,243212247,0,0x0,8
tick,0x7ffd093d1d94,243228061,0,0x0,8
tick,0x7ffd093d1d94,243243763,0,0x0,8
tick,0x7ffd093d1d94,243259016,0,0x0,8
tick,0x7ffd093d1d94,243274298,0,0x0,8
tick,0x7ffd093d1d94,243290344,0,0x0,8
tick,0x7ffd093d1d94,243306142,0,0x0,8
tick,0x7ffd093d1d94,243321477,0,0x0,8
tick,0x7ffd093d1d94,243337125,0,0x0,8
tick,0x7ffd093d1d94,243352528,0,0x0,8
tick,0x7ffd093d1d94,243368304,0,0x0,8
tick,0x7ffd093d1d94,243384306,0,0x0,8
tick,0x7ffd093d1d94,243399269,0,0x0,8
tick,0x7ffd093d1d94,243414489,0,0x0,8
tick,0x7ffd093d1d94,243429700,0,0x0,8
tick,0x7ffd093d1d94,243444966,0,0x0,8
tick,0x7ffd093d1d94,243460458,0,0x0,8
tick,0x7ffd093d1d94,243475733,0,0x0,8
tick,0x7ffd093d1d94,243491520,0,0x0,8
tick,0x7ffd093d1d94,243506198,0,0x0,8
tick,0x7ffd093d1d94,243521395,0,0x0,8
tick,0x7ffd093d1d94,243536828,0,0x0,8
tick,0x7ffd093d1d94,243552632,0,0x0,8
tick,0x7ffd093d1d94,243568282,0,0x0,8
tick,0x7ffd093d1d94,243583443,0,0x0,8
tick,0x7ffd093d1d94,243599329,0,0x0,8
tick,0x7ffd093d1d94,243614623,0,0x0,8
tick,0x7ffd093d1d94,243629936,0,0x0,8
tick,0x7ffd093d1d94,243645240,0,0x0,8
tick,0x7ffd093d1d94,243660709,0,0x0,8
tick,0x7ffd093d1d94,243676313,0,0x0,8
tick,0x7ffd093d1d94,243691226,0,0x0,8
tick,0x7ffd093d1d94,243706155,0,0x0,8
tick,0x7ffd093d1d94,243722073,0,0x0,8
tick,0x7ffd093d1d94,243737404,0,0x0,8
tick,0x7ffd093d1d94,243752306,0,0x0,8
tick,0x7ffd093d1d94,243767448,0,0x0,8
tick,0x7ffd093d1d94,243783072,0,0x0,8
tick,0x7ffd093d1d94,243798618,0,0x0,8
tick,0x7ffd093d1d94,243813868,0,0x0,8
tick,0x7ffd093d1d94,243829294,0,0x0,8
tick,0x7ffd093d1d94,243845258,0,0x0,8
tick,0x7ffd093d1d94,243861413,0,0x0,8
tick,0x7ffd093d1d94,243876277,0,0x0,8
tick,0x7ffd093d1d94,243892151,0,0x0,8
tick,0x7ffd093d1d94,243907969,0,0x0,8
tick,0x7ffd093d1d94,243923765,0,0x0,8
tick,0x7ffd093d1d94,243939912,0,0x0,8
tick,0x7ffd093d1d94,243954729,0,0x0,8
tick,0x7ffd093d1d94,243970150,0,0x0,8
tick,0x7ffd093d1d94,243985603,0,0x0,8
tick,0x7ffd093d1d94,244001081,0,0x0,8
tick,0x7ffd093d1d94,244016727,0,0x0,8
tick,0x7ffd093d1d94,244032119,0,0x0,8
tick,0x7ffd093d1d94,244047638,0,0x0,8
tick,0x7ffd093d1d94,244063795,0,0x0,8
tick,0x7ffd093d1d94,244079763,0,0x0,8
tick,0x7ffd093d1d94,244095648,0,0x0,8
tick,0x7ffd093d1d94,244111080,0,0x0,8
tick,0x7ffd093d1d94,244127209,0,0x0,8
tick,0x7ffd093d1d94,244142482,0,0x0,8
tick,0x7ffd093d1d94,244158598,0,0x0,8
tick,0x7ffd093d1d94,244174643,0,0x0,8
tick,0x7ffd093d1d94,244189997,0,0x0,8
tick,0x7ffd093d1d94,244205756,0,0x0,8
tick,0x7ffd093d1d94,244221538,0,0x0,8
tick,0x7ffd093d1d94,244236764,0,0x0,8
tick,0x7ffd093d1d94,244252105,0,0x0,8
tick,0x7ffd093d1d94,244267354,0,0x0,8
tick,0x7ffd093d1d94,244282573,0,0x0,8
tick,0x7ffd093d1d94,244299286,0,0x0,8
tick,0x7ffd093d1d94,244314344,0,0x0,8
tick,0x7ffd093d1d94,244330159,0,0x0,8
tick,0x7ffd093d1d94,244345306,0,0x0,8
tick,0x7ffd093d1d94,244360488,0,0x0,8
tick,0x7ffd093d1d94,244376227,0,0x0,8
tick,0x7ffd093d1d94,244391959,0,0x0,8
tick,0x7ffd093d1d94,244407524,0,0x0,8
tick,0x7ffd093d1d94,244423657,0,0x0,8
tick,0x7ffd093d1d94,244439191,0,0x0,8
tick,0x7ffd093d1d94,244454692,0,0x0,8
tick,0x7ffd093d1d94,244469648,0,0x0,8
tick,0x7ffd093d1d94,244485867,0,0x0,8
tick,0x7ffd093d1d94,244501178,0,0x0,8
tick,0x7ffd093d1d94,244516984,0,0x0,8
tick,0x7ffd093d1d94,244532974,0,0x0,8
tick,0x7ffd093d1d94,244548872,0,0x0,8
tick,0x7ffd093d1d94,244564163,0,0x0,8
tick,0x7ffd093d1d94,244579282,0,0x0,8
tick,0x7ffd093d1d94,244595322,0,0x0,8
tick,0x7ffd093d1d94,244610394,0,0x0,8
tick,0x7ffd093d1d94,244625797,0,0x0,8
tick,0x7ffd093d1d94,244641013,0,0x0,8
tick,0x7ffd093d1d94,244656870,0,0x0,8
tick,0x7ffd093d1d94,244672231,0,0x0,8
tick,0x7ffd093d1d94,244688023,0,0x0,8
tick,0x7ffd093d1d94,244703723,0,0x0,8
tick,0x7ffd093d1d94,244719230,0,0x0,8
tick,0x7ffd093d1d94,244735318,0,0x0,8
tick,0x7ffd093d1d94,244751292,0,0x0,8
tick,0x7ffd093d1d94,244766993,0,0x0,8
tick,0x7ffd093d1d94,244782933,0,0x0,8
tick,0x7ffd093d1d94,244798194,0,0x0,8
tick,0x7ffd093d1d94,244813279,0,0x0,8
tick,0x7ffd093d1d94,244829041,0,0x0,8
tick,0x7ffd093d1d94,244844354,0,0x0,8
tick,0x7ffd093d1d94,244860480,0,0x0,8
tick,0x7ffd093d1d94,244875873,0,0x0,8
tick,0x7ffd093d1d94,244891514,0,0x0,8
tick,0x7ffd093d1d94,244906386,0,0x0,8
tick,0x7ffd093d1d94,244921346,0,0x0,8
tick,0x7ffd093d1d94,244936778,0,0x0,8
tick,0x7ffd093d1d94,244952716,0,0x0,8
tick,0x7ffd093d1d94,244968322,0,0x0,8
tick,0x7ffd093d1d94,244984300,0,0x0,8
tick,0x7ffd093d1d94,244999536,0,0x0,8
tick,0x7ffd093d1d94,245015032,0,0x0,8
tick,0x7ffd093d1d94,245030655,0,0x0,8
tick,0x7ffd093d1d94,245045667,0,0x0,8
tick,0x7ffd093d1d94,245061071,0,0x0,8
tick,0x7ffd093d1d94,245077562,0,0x0,8
tick,0x7ffd093d1d94,245092172,0,0x0,8
tick,0x7ffd093d1d94,245108132,0,0x0,8
tick,0x7ffd093d1d94,245123142,0,0x0,8
tick,0x7ffd093d1d94,245139524,0,0x0,8
tick,0x7ffd093d1d94,245153946,0,0x0,8
tick,0x7ffd093d1d94,245169722,0,0x0,8
tick,0x7ffd093d1d94,245184981,0,0x0,8
tick,0x7ffd093d1d94,245200721,0,0x0,8
tick,0x7ffd093d1d94,245216365,0,0x0,8
tick,0x7ffd093d1d94,245231701,0,0x0,8
tick,0x7ffd093d1d94,245247134,0,0x0,8
tick,0x7ffd093d1d94,245262998,0,0x0,8
tick,0x7ffd093d1d94,245278256,0,0x0,8
tick,0x7ffd093d1d94,245293510,0,0x0,8
tick,0x7ffd093d1d94,245308833,0,0x0,8
tick,0x7ffd093d1d94,245324998,0,0x0,8
tick,0x7ffd093d1d94,245341330,0,0x0,8
tick,0x7ffd093d1d94,245357379,0,0x0,8
tick,0x7ffd093d1d94,245372896,0,0x0,8
tick,0x7ffd093d1d94,245388721,0,0x0,8
tick,0x7ffd093d1d94,245405104,0,0x0,8
tick,0x7ffd093d1d94,245420293,0,0x0,8
tick,0x7ffd093d1d94,245436600,0,0x0,8
tick,0x7ffd093d1d94,245453157,0,0x0,8
tick,0x7ffd093d1d94,245467741,0,0x0,8
tick,0x7ffd093d1d94,245483326,0,0x0,8
tick,0x7ffd093d1d94,245499249,0,0x0,8
tick,0x7ffd093d1d94,245514753,0,0x0,8
tick,0x7ffd093d1d94,245530719,0,0x0,8
tick,0x7ffd093d1d94,245546129,0,0x0,8
tick,0x7ffd093d1d94,245561811,0,0x0,8
tick,0x7ffd093d1d94,245577825,0,0x0,8
tick,0x7ffd093d1d94,245593916,0,0x0,8
tick,0x7ffd093d1d94,245609463,0,0x0,8
tick,0x7ffd093d1d94,245625095,0,0x0,8
tick,0x7ffd093d1d94,245640268,0,0x0,8
tick,0x7ffd093d1d94,245655719,0,0x0,8
tick,0x7ffd093d1d94,245671422,0,0x0,8
tick,0x7ffd093d1d94,245687389,0,0x0,8
tick,0x7ffd093d1d94,245703941,0,0x0,8
tick,0x7ffd093d1d94,245719223,0,0x0,8
tick,0x7ffd093d1d94,245735302,0,0x0,8
tick,0x7ffd093d1d94,245750955,0,0x0,8
tick,0x7ffd093d1d94,245766742,0,0x0,8
tick,0x7ffd093d1d94,245782376,0,0x0,8
tick,0x7ffd093d1d94,245797884,0,0x0,8
tick,0x7ffd093d1d94,245813371,0,0x0,8
tick,0x7ffd093d1d94,245828962,0,0x0,8
tick,0x7ffd093d1d94,245844188,0,0x0,8
tick,0x7ffd093d1d94,245859410,0,0x0,8
tick,0x7ffd093d1d94,245875215,0,0x0,8
tick,0x7ffd093d1d94,245891102,0,0x0,8
tick,0x7ffd093d1d94,245905987,0,0x0,8
tick,0x7ffd093d1d94,245921052,0,0x0,8
tick,0x7ffd093d1d94,245936722,0,0x0,8
tick,0x7ffd093d1d94,245952519,0,0x0,8
tick,0x7ffd093d1d94,245967614,0,0x0,8
tick,0x7ffd093d1d94,245983302,0,0x0,8
tick,0x7ffd093d1d94,245998664,0,0x0,8
tick,0x7ffd093d1d94,246014579,0,0x0,8
tick,0x7ffd093d1d94,246030274,0,0x0,8
tick,0x7ffd093d1d94,246045713,0,0x0,8
tick,0x7ffd093d1d94,246061543,0,0x0,8
tick,0x7ffd093d1d94,246076337,0,0x0,8
tick,0x7ffd093d1d94,246092198,0,0x0,8
tick,0x7ffd093d1d94,246108209,0,0x0,8
tick,0x7ffd093d1d94,246123829,0,0x0,8
tick,0x7ffd093d1d94,246138713,0,0x0,8
tick,0x7ffd093d1d94,246154715,0,0x0,8
tick,0x7ffd093d1d94,246170754,0,0x0,8
tick,0x7ffd093d1d94,246186755,0,0x0,8
tick,0x7ffd093d1d94,246202142,0,0x0,8
tick,0x7ffd093d1d94,246217482,0,0x0,8
tick,0x7ffd093d1d94,246233390,0,0x0,8
tick,0x7ffd093d1d94,246248635,0,0x0,8
tick,0x7ffd093d1d94,246264615,0,0x0,8
tick,0x7ffd093d1d94,246280712,0,0x0,8
tick,0x7ffd093d1d94,246296414,0,0x0,8
tick,0x7ffd093d1d94,246311862,0,0x0,8
tick,0x7ffd093d1d94,246327731,0,0x0,8
tick,0x7ffd093d1d94,246343027,0,0x0,8
tick,0x7ffd093d1d94,246358127,0,0x0,8
tick,0x7ffd093d1d94,246372887,0,0x0,8
tick,0x7ffd093d1d94,246388778,0,0x0,8
tick,0x7ffd093d1d94,246405747,0,0x0,8
tick,0x7ffd093d1d94,246420107,0,0x0,8
tick,0x7ffd093d1d94,246435753,0,0x0,8
tick,0x7ffd093d1d94,246451127,0,0x0,8
tick,0x7ffd093d1d94,246467196,0,0x0,8
tick,0x7ffd093d1d94,246482566,0,0x0,8
tick,0x7ffd093d1d94,246497998,0,0x0,8
tick,0x7ffd093d1d94,246513542,0,0x0,8
tick,0x7ffd093d1d94,246530001,0,0x0,8
tick,0x7ffd093d1d94,246544273,0,0x0,8
tick,0x7ffd093d1d94,246560239,0,0x0,8
tick,0x7ffd093d1d94,246576131,0,0x0,8
tick,0x7ffd093d1d94,246591488,0,0x0,8
tick,0x7ffd093d1d94,246607290,0,0x0,8
tick,0x7ffd093d1d94,246622552,0,0x0,8
tick,0x7ffd093d1d94,246637616,0,0x0,8
tick,0x7ffd093d1d94,246654005,0,0x0,8
tick,0x7ffd093d1d94,246669664,0,0x0,8
tick,0x7ffd093d1d94,246685117,0,0x0,8
tick,0x7ffd093d1d94,246700521,0,0x0,8
tick,0x7ffd093d1d94,246715757,0,0x0,8
tick,0x7ffd093d1d94,246731549,0,0x0,8
tick,0x7ffd093d1d94,246746584,0,0x0,8
tick,0x7ffd093d1d94,246762187,0,0x0,8
tick,0x7ffd093d1d94,246777754,0,0x0,8
tick,0x7ffd093d1d94,246793027,0,0x0,8
tick,0x7ffd093d1d94,246808578,0,0x0,8
tick,0x7ffd093d1d94,246824574,0,0x0,8
tick,0x7ffd093d1d94,246840291,0,0x0,8
tick,0x7ffd093d1d94,246855904,0,0x0,8
tick,0x7ffd093d1d94,246871227,0,0x0,8
tick,0x7ffd093d1d94,246887187,0,0x0,8
tick,0x7ffd093d1d94,246902482,0,0x0,8
tick,0x7ffd093d1d94,246917773,0,0x0,8
tick,0x7ffd093d1d94,246933644,0,0x0,8
tick,0x7ffd093d1d94,246949289,0,0x0,8
tick,0x7ffd093d1d94,246965242,0,0x0,8
tick,0x7ffd093d1d94,246981199,0,0x0,8
tick,0x7ffd093d1d94,246997240,0,0x0,8
tick,0x7ffd093d1d94,247012488,0,0x0,8
tick,0x7ffd093d1d94,247027794,0,0x0,8
tick,0x7ffd093d1d94,247043601,0,0x0,8
tick,0x7ffd093d1d94,247059391,0,0x0,8
tick,0x7ffd093d1d94,247075023,0,0x0,8
tick,0x7ffd093d1d94,247090303,0,0x0,8
tick,0x7ffd093d1d94,247105996,0,0x0,8
tick,0x7ffd093d1d94,247120964,0,0x0,8
tick,0x7ffd093d1d94,247137051,0,0x0,8
tick,0x7ffd093d1d94,247152627,0,0x0,8
tick,0x7ffd093d1d94,247167836,0,0x0,8
tick,0x7ffd093d1d94,247183374,0,0x0,8
tick,0x7ffd093d1d94,247198495,0,0x0,8
tick,0x7ffd093d1d94,247213564,0,0x0,8
tick,0x7ffd093d1d94,247229346,0,0x0,8
tick,0x7ffd093d1d94,247244921,0,0x0,8
tick,0x7ffd093d1d94,247260375,0,0x0,8
tick,0x7ffd093d1d94,247276810,0,0x0,8
tick,0x7ffd093d1d94,247291746,0,0x0,8
tick,0x7ffd093d1d94,247307111,0,0x0,8
tick,0x7ffd093d1d94,247322273,0,0x0,8
tick,0x7ffd093d1d94,247337146,0,0x0,8
tick,0x7ffd093d1d94,247352326,0,0x0,8
tick,0x7ffd093d1d94,247368313,0,0x0,8
tick,0x7ffd093d1d94,247384125,0,0x0,8
tick,0x7ffd093d1d94,247400022,0,0x0,8
tick,0x7ffd093d1d94,247414501,0,0x0,8
tick,0x7ffd093d1d94,247430497,0,0x0,8
tick,0x7ffd093d1d94,247445566,0,0x0,8
tick,0x7ffd093d1d94,247461268,0,0x0,8
tick,0x7ffd093d1d94,247476479,0,0x0,8
tick,0x7ffd093d1d94,247492349,0,0x0,8
tick,0x7ffd093d1d94,247507725,0,0x0,8
tick,0x7ffd093d1d94,247523270,0,0x0,8
tick,0x7ffd093d1d94,247539122,0,0x0,8
tick,0x7ffd093d1d94,247554464,0,0x0,8
tick,0x7ffd093d1d94,247570750,0,0x0,8
tick,0x7ffd093d1d94,247586686,0,0x0,8
tick,0x7ffd093d1d94,247602060,0,0x0,8
tick,0x7ffd093d1d94,247617907,0,0x0,8
tick,0x7ffd093d1d94,247633604,0,0x0,8
tick,0x7ffd093d1d94,247649040,0,0x0,8
tick,0x7ffd093d1d94,247663923,0,0x0,8
tick,0x7ffd093d1d94,247679924,0,0x0,8
tick,0x7ffd093d1d94,247695235,0,0x0,8
tick,0x7ffd093d1d94,247711021,0,0x0,8
tick,0x7ffd093d1d94,247726284,0,0x0,8
tick,0x7ffd093d1d94,247742218,0,0x0,8
tick,0x7ffd093d1d94,247757623,0,0x0,8
tick,0x7ffd093d1d94,247772853,0,0x0,8
tick,0x7ffd093d1d94,247788196,0,0x0,8
tick,0x7ffd093d1d94,247804249,0,0x0,8
tick,0x7ffd093d1d94,247819603,0,0x0,8
tick,0x7ffd093d1d94,247835260,0,0x0,8
tick,0x7ffd093d1d94,247850336,0,0x0,8
tick,0x7ffd093d1d94,247865943,0,0x0,8
tick,0x7ffd093d1d94,247882537,0,0x0,8
tick,0x7ffd093d1d94,247897680,0,0x0,8
tick,0x7ffd093d1d94,247912867,0,0x0,8
tick,0x7ffd093d1d94,247928078,0,0x0,8
tick,0x7ffd093d1d94,247943540,0,0x0,8
tick,0x7ffd093d1d94,247958641,0,0x0,8
tick,0x7ffd093d1d94,247973979,0,0x0,8
tick,0x7ffd093d1d94,247989321,0,0x0,8
tick,0x7ffd093d1d94,248004793,0,0x0,8
tick,0x7ffd093d1d94,248019640,0,0x0,8
tick,0x7ffd093d1d94,248034921,0,0x0,8
tick,0x7ffd093d1d94,248050105,0,0x0,8
tick,0x7ffd093d1d94,248065761,0,0x0,8
tick,0x7ffd093d1d94,248081576,0,0x0,8
tick,0x7ffd093d1d94,248097104,0,0x0,8
tick,0x7ffd093d1d94,248112179,0,0x0,8
tick,0x7ffd093d1d94,248128052,0,0x0,8
tick,0x7ffd093d1d94,248143363,0,0x0,8
tick,0x7ffd093d1d94,248159183,0,0x0,8
tick,0x7ffd093d1d94,248175115,0,0x0,8
tick,0x7ffd093d1d94,248190466,0,0x0,8
tick,0x7ffd093d1d94,248206438,0,0x0,8
tick,0x7ffd093d1d94,248222512,0,0x0,8
tick,0x7ffd093d1d94,248237976,0,0x0,8
tick,0x7ffd093d1d94,248253958,0,0x0,8
tick,0x7ffd093d1d94,248269325,0,0x0,8
tick,0x7ffd093d1d94,248284883,0,0x0,8
tick,0x7ffd093d1d94,248300425,0,0x0,8
tick,0x7ffd093d1d94,248315944,0,0x0,8
tick,0x7ffd093d1d94,248331102,0,0x0,8
tick,0x7ffd093d1d94,248345940,0,0x0,8
tick,0x7ffd093d1d94,248361958,0,0x0,8
tick,0x7ffd093d1d94,248377992,0,0x0,8
tick,0x7ffd093d1d94,248393906,0,0x0,8
tick,0x7ffd093d1d94,248410248,0,0x0,8
tick,0x7ffd093d1d94,248425785,0,0x0,8
tick,0x7ffd093d1d94,248441127,0,0x0,8
tick,0x7ffd093d1d94,248456848,0,0x0,8
tick,0x7ffd093d1d94,248472991,0,0x0,8
tick,0x7ffd093d1d94,248488790,0,0x0,8
tick,0x7ffd093d1d94,248504849,0,0x0,8
tick,0x7ffd093d1d94,248520009,0,0x0,8
tick,0x7ffd093d1d94,248534718,0,0x0,8
tick,0x7ffd093d1d94,248549723,0,0x0,8
tick,0x7ffd093d1d94,248564991,0,0x0,8
tick,0x7ffd093d1d94,248581175,0,0x0,8
tick,0x7ffd093d1d94,248596480,0,0x0,8
tick,0x7ffd093d1d94,248612160,0,0x0,8
tick,0x7ffd093d1d94,248627621,0,0x0,8
tick,0x7ffd093d1d94,248642957,0,0x0,8
tick,0x7ffd093d1d94,248658196,0,0x0,8
tick,0x7ffd093d1d94,248673711,0,0x0,8
tick,0x7ffd093d1d94,248688965,0,0x0,8
tick,0x7ffd093d1d94,248704785,0,0x0,8
tick,0x7ffd093d1d94,248719703,0,0x0,8
tick,0x7ffd093d1d94,248735236,0,0x0,8
tick,0x7ffd093d1d94,248751073,0,0x0,8
tick,0x7ffd093d1d94,248767608,0,0x0,8
tick,0x7ffd093d1d94,248783288,0,0x0,8
tick,0x7ffd093d1d94,248798561,0,0x0,8
tick,0x7ffd093d1d94,248814196,0,0x0,8
tick,0x7ffd093d1d94,248829254,0,0x0,8
tick,0x7ffd093d1d94,248844720,0,0x0,8
tick,0x7ffd093d1d94,248860416,0,0x0,8
tick,0x7ffd093d1d94,248875831,0,0x0,8
tick,0x7ffd093d1d94,248891171,0,0x0,8
tick,0x7ffd093d1d94,248906741,0,0x0,8
tick,0x7ffd093d1d94,248921807,0,0x0,8
tick,0x7ffd093d1d94,248937696,0,0x0,8
tick,0x7ffd093d1d94,248953716,0,0x0,8
tick,0x7ffd093d1d94,248969971,0,0x0,8
tick,0x7ffd093d1d94,248985444,0,0x0,8
tick,0x7ffd093d1d94,249001393,0,0x0,8
tick,0x7ffd093d1d94,249017044,0,0x0,8
tick,0x7ffd093d1d94,249032611,0,0x0,8
tick,0x7ffd093d1d94,249047883,0,0x0,8
tick,0x7ffd093d1d94,249063308,0,0x0,8
tick,0x7ffd093d1d94,249079045,0,0x0,8
tick,0x7ffd093d1d94,249094674,0,0x0,8
tick,0x7ffd093d1d94,249110119,0,0x0,8
tick,0x7ffd093d1d94,249125604,0,0x0,8
tick,0x7ffd093d1d94,249141301,0,0x0,8
tick,0x7ffd093d1d94,249156834,0,0x0,8
tick,0x7ffd093d1d94,249172237,0,0x0,8
tick,0x7ffd093d1d94,249187824,0,0x0,8
tick,0x7ffd093d1d94,249203443,0,0x0,8
tick,0x7ffd093d1d94,249219114,0,0x0,8
tick,0x7ffd093d1d94,249235228,0,0x0,8
tick,0x7ffd093d1d94,249251060,0,0x0,8
tick,0x7ffd093d1d94,249266694,0,0x0,8
tick,0x7ffd093d1d94,249282485,0,0x0,8
tick,0x7ffd093d1d94,249298126,0,0x0,8
tick,0x7ffd093d1d94,249314345,0,0x0,8
tick,0x7ffd093d1d94,249329786,0,0x0,8
tick,0x7ffd093d1d94,249345099,0,0x0,8
tick,0x7ffd093d1d94,249361007,0,0x0,8
tick,0x7ffd093d1d94,249376547,0,0x0,8
tick,0x7ffd093d1d94,249392137,0,0x0,8
tick,0x7ffd093d1d94,249407139,0,0x0,8
tick,0x7ffd093d1d94,249422332,0,0x0,8
tick,0x7ffd093d1d94,249438074,0,0x0,8
tick,0x7ffd093d1d94,249454072,0,0x0,8
tick,0x7ffd093d1d94,249469284,0,0x0,8
tick,0x7ffd093d1d94,249485042,0,0x0,8
tick,0x7ffd093d1d94,249500673,0,0x0,8
tick,0x7ffd093d1d94,249516009,0,0x0,8
tick,0x7ffd093d1d94,249531796,0,0x0,8
tick,0x7ffd093d1d94,249547690,0,0x0,8
tick,0x7ffd093d1d94,249562658,0,0x0,8
tick,0x7ffd093d1d94,249577439,0,0x0,8
tick,0x7ffd093d1d94,249593058,0,0x0,8
tick,0x7ffd093d1d94,249608703,0,0x0,8
tick,0x7ffd093d1d94,249624289,0,0x0,8
tick,0x7ffd093d1d94,249639906,0,0x0,8
tick,0x7ffd093d1d94,249655512,0,0x0,8
tick,0x7ffd093d1d94,249670947,0,0x0,8
tick,0x7ffd093d1d94,249686700,0,0x0,8
tick,0x7ffd093d1d94,249701820,0,0x0,8
tick,0x7ffd093d1d94,249718438,0,0x0,8
tick,0x7ffd093d1d94,249733004,0,0x0,8
tick,0x7ffd093d1d94,249749022,0,0x0,8
tick,0x7ffd093d1d94,249764629,0,0x0,8
tick,0x7ffd093d1d94,249779999,0,0x0,8
tick,0x7ffd093d1d94,249795897,0,0x0,8
tick,0x7ffd093d1d94,249811409,0,0x0,8
tick,0x7ffd093d1d94,249827074,0,0x0,8
tick,0x7ffd093d1d94,249842664,0,0x0,8
tick,0x7ffd093d1d94,249858044,0,0x0,8
tick,0x7ffd093d1d94,249873534,0,0x0,8
tick,0x7ffd093d1d94,249888584,0,0x0,8
tick,0x7ffd093d1d94,249903597,0,0x0,8
tick,0x7ffd093d1d94,249919200,0,0x0,8
tick,0x7ffd093d1d94,249934418,0,0x0,8
tick,0x7ffd093d1d94,249949741,0,0x0,8
tick,0x7ffd093d1d94,249964901,0,0x0,8
tick,0x7ffd093d1d94,249980357,0,0x0,8
tick,0x7ffd093d1d94,249996346,0,0x0,8
tick,0x7ffd093d1d94,250011801,0,0x0,8
tick,0x7ffd093d1d94,250027799,0,0x0,8
tick,0x7ffd093d1d94,250043078,0,0x0,8
tick,0x7ffd093d1d94,250058825,0,0x0,8
tick,0x7ffd093d1d94,250073832,0,0x0,8
tick,0x7ffd093d1d94,250089280,0,0x0,8
tick,0x7ffd093d1d94,250104462,0,0x0,8
tick,0x7ffd093d1d94,250119839,0,0x0,8
tick,0x7ffd093d1d94,250135891,0,0x0,8
tick,0x7ffd093d1d94,250151774,0,0x0,8
tick,0x7ffd093d1d94,250167218,0,0x0,8
tick,0x7ffd093d1d94,250182448,0,0x0,8
tick,0x7ffd093d1d94,250197958,0,0x0,8
tick,0x7ffd093d1d94,250214190,0,0x0,8
tick,0x7ffd093d1d94,250229612,0,0x0,8
tick,0x7ffd093d1d94,250244975,0,0x0,8
tick,0x7ffd093d1d94,250260789,0,0x0,8
tick,0x7ffd093d1d94,250275983,0,0x0,8
tick,0x7ffd093d1d94,250291238,0,0x0,8
tick,0x7ffd093d1d94,250306973,0,0x0,8
tick,0x7ffd093d1d94,250322547,0,0x0,8
tick,0x7ffd093d1d94,250338099,0,0x0,8
tick,0x7ffd093d1d94,250354100,0,0x0,8
tick,0x7ffd093d1d94,250369587,0,0x0,8
tick,0x7ffd093d1d94,250385322,0,0x0,8
tick,0x7ffd093d1d94,250400343,0,0x0,8
tick,0x7ffd093d1d94,250415449,0,0x0,8
tick,0x7ffd093d1d94,250430610,0,0x0,8
tick,0x7ffd093d1d94,250445692,0,0x0,8
tick,0x7ffd093d1d94,250461091,0,0x0,8
tick,0x7ffd093d1d94,250476401,0,0x0,8
tick,0x7ffd093d1d94,250492292,0,0x0,8
tick,0x7ffd093d1d94,250507436,0,0x0,8
tick,0x7ffd093d1d94,250522738,0,0x0,8
tick,0x7ffd093d1d94,250538576,0,0x0,8
tick,0x7ffd093d1d94,250555137,0,0x0,8
tick,0x7ffd093d1d94,250571353,0,0x0,8
tick,0x7ffd093d1d94,250587388,0,0x0,8
tick,0x7ffd093d1d94,250602932,0,0x0,8
tick,0x7ffd093d1d94,250618718,0,0x0,8
tick,0x7ffd093d1d94,250634200,0,0x0,8
tick,0x7ffd093d1d94,250650291,0,0x0,8
tick,0x7ffd093d1d94,250666207,0,0x0,8
tick,0x7ffd093d1d94,250681694,0,0x0,8
tick,0x7ffd093d1d94,250696998,0,0x0,8
tick,0x7ffd093d1d94,250712414,0,0x0,8
tick,0x7ffd093d1d94,250728391,0,0x0,8
tick,0x7ffd093d1d94,250743722,0,0x0,8
tick,0x7ffd093d1d94,250759742,0,0x0,8
tick,0x7ffd093d1d94,250775374,0,0x0,8
tick,0x7ffd093d1d94,250790654,0,0x0,8
tick,0x7ffd093d1d94,250805743,0,0x0,8
tick,0x7ffd093d1d94,250821132,0,0x0,8
tick,0x7ffd093d1d94,250837372,0,0x0,8
tick,0x7ffd093d1d94,250853128,0,0x0,8
tick,0x7ffd093d1d94,250869118,0,0x0,8
tick,0x7ffd093d1d94,250885090,0,0x0,8
tick,0x7ffd093d1d94,250900314,0,0x0,8
tick,0x7ffd093d1d94,250915619,0,0x0,8
tick,0x7ffd093d1d94,250930786,0,0x0,8
tick,0x7ffd093d1d94,250946146,0,0x0,8
tick,0x7ffd093d1d94,250961424,0,0x0,8
tick,0x7ffd093d1d94,250976679,0,0x0,8
tick,0x7ffd093d1d94,250992164,0,0x0,8
tick,0x7ffd093d1d94,251008001,0,0x0,8
tick,0x7ffd093d1d94,251024564,0,0x0,8
tick,0x7ffd093d1d94,251039866,0,0x0,8
tick,0x7ffd093d1d94,251056053,0,0x0,8
tick,0x7ffd093d1d94,251070676,0,0x0,8
tick,0x7ffd093d1d94,251086337,0,0x0,8
tick,0x7ffd093d1d94,251102269,0,0x0,8
tick,0x7ffd093d1d94,251117283,0,0x0,8
tick,0x7ffd093d1d94,251132970,0,0x0,8
tick,0x7ffd093d1d94,251147797,0,0x0,8
tick,0x7ffd093d1d94,251163118,0,0x0,8
tick,0x7ffd093d1d94,251178477,0,0x0,8
tick,0x7ffd093d1d94,251194009,0,0x0,8
tick,0x7ffd093d1d94,251209937,0,0x0,8
tick,0x7ffd093d1d94,251224653,0,0x0,8
tick,0x7ffd093d1d94,251240772,0,0x0,8
tick,0x7ffd093d1d94,251255707,0,0x0,8
tick,0x7ffd093d1d94,251271192,0,0x0,8
tick,0x7ffd093d1d94,251286602,0,0x0,8
tick,0x7ffd093d1d94,251302839,0,0x0,8
tick,0x7ffd093d1d94,251318845,0,0x0,8
tick,0x7ffd093d1d94,251334681,0,0x0,8
tick,0x7ffd093d1d94,251350886,0,0x0,8
tick,0x7ffd093d1d94,251366758,0,0x0,8
tick,0x7ffd093d1d94,251382075,0,0x0,8
tick,0x7ffd093d1d94,251397964,0,0x0,8
tick,0x7ffd093d1d94,251413503,0,0x0,8
tick,0x7ffd093d1d94,251429351,0,0x0,8
tick,0x7ffd093d1d94,251444851,0,0x0,8
tick,0x7ffd093d1d94,251460371,0,0x0,8
tick,0x7ffd093d1d94,251475690,0,0x0,8
tick,0x7ffd093d1d94,251491094,0,0x0,8
tick,0x7ffd093d1d94,251506456,0,0x0,8
tick,0x7ffd093d1d94,251521928,0,0x0,8
tick,0x7ffd093d1d94,251538317,0,0x0,8
tick,0x7ffd093d1d94,251552938,0,0x0,8
tick,0x7ffd093d1d94,251567528,0,0x0,8
tick,0x7ffd093d1d94,251583506,0,0x0,8
tick,0x7ffd093d1d94,251599366,0,0x0,8
tick,0x7ffd093d1d94,251614958,0,0x0,8
tick,0x7ffd093d1d94,251630412,0,0x0,8
tick,0x7ffd093d1d94,251646386,0,0x0,8
tick,0x7ffd093d1d94,251661466,0,0x0,8
tick,0x7ffd093d1d94,251677473,0,0x0,8
tick,0x7ffd093d1d94,251692153,0,0x0,8
tick,0x7ffd093d1d94,251707654,0,0x0,8
tick,0x7ffd093d1d94,251723633,0,0x0,8
tick,0x7ffd093d1d94,251739873,0,0x0,8
tick,0x7ffd093d1d94,251755366,0,0x0,8
tick,0x7ffd093d1d94,251771077,0,0x0,8
tick,0x7ffd093d1d94,251787211,0,0x0,8
tick,0x7ffd093d1d94,251802601,0,0x0,8
tick,0x7ffd093d1d94,251817900,0,0x0,8
tick,0x7ffd093d1d94,251833546,0,0x0,8
tick,0x7ffd093d1d94,251849095,0,0x0,8
tick,0x7ffd093d1d94,251865009,0,0x0,8
tick,0x7ffd093d1d94,251881599,0,0x0,8
tick,0x7ffd093d1d94,251896684,0,0x0,8
tick,0x7ffd093d1d94,251911846,0,0x0,8
tick,0x7ffd093d1d94,251927653,0,0x0,8
tick,0x7ffd093d1d94,251943423,0,0x0,8
tick,0x7ffd093d1d94,251958933,0,0x0,8
tick,0x7ffd093d1d94,251974748,0,0x0,8
tick,0x7ffd093d1d94,251990304,0,0x0,8
tick,0x7ffd093d1d94,252006124,0,0x0,8
tick,0x7ffd093d1d94,252022004,0,0x0,8
tick,0x7ffd093d1d94,252037055,0,0x0,8
tick,0x7ffd093d1d94,252052363,0,0x0,8
tick,0x7ffd093d1d94,252067942,0,0x0,8
tick,0x7ffd093d1d94,252083486,0,0x0,8
tick,0x7ffd093d1d94,252098782,0,0x0,8
tick,0x7ffd093d1d94,252114808,0,0x0,8
tick,0x7ffd093d1d94,252131043,0,0x0,8
tick,0x7ffd093d1d94,252146545,0,0x0,8
tick,0x7ffd093d1d94,252162455,0,0x0,8
tick,0x7ffd093d1d94,252178188,0,0x0,8
tick,0x7ffd093d1d94,252193527,0,0x0,8
tick,0x7ffd093d1d94,252208834,0,0x0,8
tick,0x7ffd093d1d94,252224172,0,0x0,8
tick,0x7ffd093d1d94,252239502,0,0x0,8
tick,0x7ffd093d1d94,252255076,0,0x0,8
tick,0x7ffd093d1d94,252270882,0,0x0,8
tick,0x7ffd093d1d94,252286625,0,0x0,8
tick,0x7ffd093d1d94,252302474,0,0x0,8
tick,0x7ffd093d1d94,252317980,0,0x0,8
tick,0x7ffd093d1d94,252333377,0,0x0,8
tick,0x7ffd093d1d94,252349160,0,0x0,8
tick,0x7ffd093d1d94,252364636,0,0x0,8
tick,0x7ffd093d1d94,252379866,0,0x0,8
tick,0x7ffd093d1d94,252395532,0,0x0,8
tick,0x7ffd093d1d94,252411134,0,0x0,8
tick,0x7ffd093d1d94,252426937,0,0x0,8
tick,0x7ffd093d1d94,252442149,0,0x0,8
tick,0x7ffd093d1d94,252457344,0,0x0,8
tick,0x7ffd093d1d94,252473289,0,0x0,8
tick,0x7ffd093d1d94,252488454,0,0x0,8
tick,0x7ffd093d1d94,252504658,0,0x0,8
tick,0x7ffd093d1d94,252519901,0,0x0,8
tick,0x7ffd093d1d94,252535363,0,0x0,8
tick,0x7ffd093d1d94,252551052,0,0x0,8
tick,0x7ffd093d1d94,252566559,0,0x0,8
tick,0x7ffd093d1d94,252582108,0,0x0,8
tick,0x7ffd093d1d94,252596942,0,0x0,8
tick,0x7ffd093d1d94,252612597,0,0x0,8
tick,0x7ffd093d1d94,252627776,0,0x0,8
tick,0x7ffd093d1d94,252643484,0,0x0,8
tick,0x7ffd093d1d94,252659248,0,0x0,8
tick,0x7ffd093d1d94,252674942,0,0x0,8
tick,0x7ffd093d1d94,252690952,0,0x0,8
tick,0x7ffd093d1d94,252706616,0,0x0,8
tick,0x7ffd093d1d94,252721910,0,0x0,8
tick,0x7ffd093d1d94,252737353,0,0x0,8
tick,0x7ffd093d1d94,252752599,0,0x0,8
tick,0x7ffd093d1d94,252767919,0,0x0,8
tick,0x7ffd093d1d94,252783171,0,0x0,8
tick,0x7ffd093d1d94,252799045,0,0x0,8
tick,0x7ffd093d1d94,252814523,0,0x0,8
tick,0x7ffd093d1d94,252830332,0,0x0,8
tick,0x7ffd093d1d94,252845504,0,0x0,8
tick,0x7ffd093d1d94,252860965,0,0x0,8
tick,0x7ffd093d1d94,252876455,0,0x0,8
tick,0x7ffd093d1d94,252891648,0,0x0,8
tick,0x7ffd093d1d94,252907735,0,0x0,8
tick,0x7ffd093d1d94,252923011,0,0x0,8
tick,0x7ffd093d1d94,252938731,0,0x0,8
tick,0x7ffd093d1d94,252954069,0,0x0,8
tick,0x7ffd093d1d94,252969364,0,0x0,8
tick,0x7ffd093d1d94,252986110,0,0x0,8
tick,0x7ffd093d1d94,253000963,0,0x0,8
tick,0x7ffd093d1d94,253016116,0,0x0,8
tick,0x7ffd093d1d94,253032135,0,0x0,8
tick,0x7ffd093d1d94,253047323,0,0x0,8
tick,0x7ffd093d1d94,253063031,0,0x0,8
tick,0x7ffd093d1d94,253078181,0,0x0,8
tick,0x7ffd093d1d94,253093845,0,0x0,8
tick,0x7ffd093d1d94,253109928,0,0x0,8
tick,0x7ffd093d1d94,253125304,0,0x0,8
tick,0x7ffd093d1d94,253140835,0,0x0,8
tick,0x7ffd093d1d94,253156255,0,0x0,8
tick,0x7ffd093d1d94,253172323,0,0x0,8
tick,0x7ffd093d1d94,253187599,0,0x0,8
tick,0x7ffd093d1d94,253202651,0,0x0,8
tick,0x7ffd093d1d94,253217812,0,0x0,8
tick,0x7ffd093d1d94,253233081,0,0x0,8
tick,0x7ffd093d1d94,253248848,0,0x0,8
tick,0x7ffd093d1d94,253264436,0,0x0,8
tick,0x7ffd093d1d94,253280572,0,0x0,8
tick,0x7ffd093d1d94,253296462,0,0x0,8
tick,0x7ffd093d1d94,253311875,0,0x0,8
tick,0x7ffd093d1d94,253327774,0,0x0,8
tick,0x7ffd093d1d94,253343518,0,0x0,8
tick,0x7ffd093d1d94,253359641,0,0x0,8
tick,0x7ffd093d1d94,253374784,0,0x0,8
tick,0x7ffd093d1d94,253389780,0,0x0,8
tick,0x7ffd093d1d94,253405052,0,0x0,8
tick,0x7ffd093d1d94,253420866,0,0x0,8
tick,0x7ffd093d1d94,253436516,0,0x0,8
tick,0x7ffd093d1d94,253452937,0,0x0,8
tick,0x7ffd093d1d94,253468951,0,0x0,8
tick,0x7ffd093d1d94,253484473,0,0x0,8
tick,0x7ffd093d1d94,253500012,0,0x0,8
tick,0x7ffd093d1d94,253514905,0,0x0,8
tick,0x7ffd093d1d94,253530811,0,0x0,8
tick,0x7ffd093d1d94,253546750,0,0x0,8
tick,0x7ffd093d1d94,253562694,0,0x0,8
tick,0x7ffd093d1d94,253578348,0,0x0,8
tick,0x7ffd093d1d94,253593710,0,0x0,8
tick,0x7ffd093d1d94,253609353,0,0x0,8
tick,0x7ffd093d1d94,253625128,0,0x0,8
tick,0x7ffd093d1d94,253641307,0,0x0,8
tick,0x7ffd093d1d94,253656916,0,0x0,8
tick,0x7ffd093d1d94,253672853,0,0x0,8
tick,0x7ffd093d1d94,253687556,0,0x0,8
tick,0x7ffd093d1d94,253703132,0,0x0,8
tick,0x7ffd093d1d94,253718324,0,0x0,8
tick,0x7ffd093d1d94,253734121,0,0x0,8
tick,0x7ffd093d1d94,253749421,0,0x0,8
tick,0x7ffd093d1d94,253764839,0,0x0,8
tick,0x7ffd093d1d94,253780700,0,0x0,8
tick,0x7ffd093d1d94,253796517,0,0x0,8
tick,0x7ffd093d1d94,253812414,0,0x0,8
tick,0x7ffd093d1d94,253828576,0,0x0,8
tick,0x7ffd093d1d94,253844128,0,0x0,8
tick,0x7ffd093d1d94,253859980,0,0x0,8
tick,0x7ffd093d1d94,253875049,0,0x0,8
tick,0x7ffd093d1d94,253890904,0,0x0,8
tick,0x7ffd093d1d94,253906333,0,0x0,8
tick,0x7ffd093d1d94,253921932,0,0x0,8
tick,0x7ffd093d1d94,253937968,0,0x0,8
tick,0x7ffd093d1d94,253954008,0,0x0,8
tick,0x7ffd093d1d94,253970085,0,0x0,8
tick,0x7ffd093d1d94,253986129,0,0x0,8
tick,0x7ffd093d1d94,254001435,0,0x0,8
tick,0x7ffd093d1d94,254016391,0,0x0,8
tick,0x7ffd093d1d94,254032233,0,0x0,8
tick,0x7ffd093d1d94,254047398,0,0x0,8
tick,0x7ffd093d1d94,254062583,0,0x0,8
tick,0x7ffd093d1d94,254078641,0,0x0,8
tick,0x7ffd093d1d94,254093882,0,0x0,8
tick,0x7ffd093d1d94,254108672,0,0x0,8
tick,0x7ffd093d1d94,254125058,0,0x0,8
tick,0x7ffd093d1d94,254139895,0,0x0,8
tick,0x7ffd093d1d94,254155706,0,0x0,8
tick,0x7ffd093d1d94,254171842,0,0x0,8
tick,0x7ffd093d1d94,254187224,0,0x0,8
tick,0x7ffd093d1d94,254203246,0,0x0,8
tick,0x7ffd093d1d94,254218423,0,0x0,8
tick,0x7ffd093d1d94,254234372,0,0x0,8
tick,0x7ffd093d1d94,254249245,0,0x0,8
tick,0x7ffd093d1d94,254264213,0,0x0,8
tick,0x7ffd093d1d94,254280165,0,0x0,8
tick,0x7ffd093d1d94,254295142,0,0x0,8
tick,0x7ffd093d1d94,254310165,0,0x0,8
tick,0x7ffd093d1d94,254325656,0,0x0,8
tick,0x7ffd093d1d94,254341655,0,0x0,8
tick,0x7ffd093d1d94,254358176,0,0x0,8
tick,0x7ffd093d1d94,254373765,0,0x0,8
tick,0x7ffd093d1d94,254388717,0,0x0,8
tick,0x7ffd093d1d94,254404057,0,0x0,8
tick,0x7ffd093d1d94,254419207,0,0x0,8
tick,0x7ffd093d1d94,254434174,0,0x0,8
tick,0x7ffd093d1d94,254449772,0,0x0,8
tick,0x7ffd093d1d94,254465856,0,0x0,8
tick,0x7ffd093d1d94,254480933,0,0x0,8
tick,0x7ffd093d1d94,254496469,0,0x0,8
tick,0x7ffd093d1d94,254511377,0,0x0,8
tick,0x7ffd093d1d94,254526871,0,0x0,8
tick,0x7ffd093d1d94,254542433,0,0x0,8
tick,0x7ffd093d1d94,254557909,0,0x0,8
tick,0x7ffd093d1d94,254574385,0,0x0,8
tick,0x7ffd093d1d94,254589741,0,0x0,8
tick,0x7ffd093d1d94,254605048,0,0x0,8
tick,0x7ffd093d1d94,254620498,0,0x0,8
tick,0x7ffd093d1d94,254636920,0,0x0,8
tick,0x7ffd093d1d94,254651809,0,0x0,8
tick,0x7ffd093d1d94,254666956,0,0x0,8
tick,0x7ffd093d1d94,254682304,0,0x0,8
tick,0x7ffd093d1d94,254697925,0,0x0,8
tick,0x7ffd093d1d94,254714251,0,0x0,8
tick,0x7ffd093d1d94,254729427,0,0x0,8
tick,0x7ffd093d1d94,254744648,0,0x0,8
tick,0x7ffd093d1d94,254760222,0,0x0,8
tick,0x7ffd093d1d94,254775888,0,0x0,8
tick,0x7ffd093d1d94,254791701,0,0x0,8
tick,0x7ffd093d1d94,254807345,0,0x0,8
tick,0x7ffd093d1d94,254823012,0,0x0,8
tick,0x7ffd093d1d94,254838431,0,0x0,8
tick,0x7ffd093d1d94,254853749,0,0x0,8
tick,0x7ffd093d1d94,254869936,0,0x0,8
tick,0x7ffd093d1d94,254884694,0,0x0,8
tick,0x7ffd093d1d94,254900742,0,0x0,8
tick,0x7ffd093d1d94,254915827,0,0x0,8
tick,0x7ffd093d1d94,254931110,0,0x0,8
tick,0x7ffd093d1d94,254947170,0,0x0,8
tick,0x7ffd093d1d94,254962123,0,0x0,8
tick,0x7ffd093d1d94,254977271,0,0x0,8
tick,0x7ffd093d1d94,254992766,0,0x0,8
tick,0x7ffd093d1d94,255008213,0,0x0,8
tick,0x7ffd093d1d94,255023939,0,0x0,8
tick,0x7ffd093d1d94,255039831,0,0x0,8
tick,0x7ffd093d1d94,255055301,0,0x0,8
tick,0x7ffd093d1d94,255070998,0,0x0,8
tick,0x7ffd093d1d94,255086759,0,0x0,8
tick,0x7ffd093d1d94,255102271,0,0x0,8
tick,0x7ffd093d1d94,255118087,0,0x0,8
tick,0x7ffd093d1d94,255133474,0,0x0,8
tick,0x7ffd093d1d94,255148926,0,0x0,8
tick,0x7ffd093d1d94,255164443,0,0x0,8
tick,0x7ffd093d1d94,255180207,0,0x0,8
tick,0x7ffd093d1d94,255196290,0,0x0,8
tick,0x7ffd093d1d94,255212753,0,0x0,8
tick,0x7ffd093d1d94,255228174,0,0x0,8
tick,0x7ffd093d1d94,255243856,0,0x0,8
tick,0x7ffd093d1d94,255259335,0,0x0,8
tick,0x7ffd093d1d94,255274911,0,0x0,8
tick,0x7ffd093d1d94,255290233,0,0x0,8
tick,0x7ffd093d1d94,255305580,0,0x0,8
tick,0x7ffd093d1d94,255321360,0,0x0,8
tick,0x7ffd093d1d94,255336611,0,0x0,8
tick,0x7ffd093d1d94,255352760,0,0x0,8
tick,0x7ffd093d1d94,255368691,0,0x0,8
tick,0x7ffd093d1d94,255384237,0,0x0,8
tick,0x7ffd093d1d94,255400081,0,0x0,8
tick,0x7ffd093d1d94,255416308,0,0x0,8
tick,0x7ffd093d1d94,255431664,0,0x0,8
tick,0x7ffd093d1d94,255447261,0,0x0,8
tick,0x7ffd093d1d94,255463365,0,0x0,8
tick,0x7ffd093d1d94,255479581,0,0x0,8
tick,0x7ffd093d1d94,255494706,0,0x0,8
tick,0x7ffd093d1d94,255510169,0,0x0,8
tick,0x7ffd093d1d94,255525639,0,0x0,8
tick,0x7ffd093d1d94,255541629,0,0x0,8
tick,0x7ffd093d1d94,255557559,0,0x0,8
tick,0x7ffd093d1d94,255572589,0,0x0,8
tick,0x7ffd093d1d94,255588624,0,0x0,8
tick,0x7ffd093d1d94,255604102,0,0x0,8
tick,0x7ffd093d1d94,255620045,0,0x0,8
tick,0x7ffd093d1d94,255634870,0,0x0,8
tick,0x7ffd093d1d94,255650525,0,0x0,8
tick,0x7ffd093d1d94,255666509,0,0x0,8
tick,0x7ffd093d1d94,255681696,0,0x0,8
tick,0x7ffd093d1d94,255697883,0,0x0,8
tick,0x7ffd093d1d94,255713741,0,0x0,8
tick,0x7ffd093d1d94,255729640,0,0x0,8
tick,0x7ffd093d1d94,255744769,0,0x0,8
tick,0x7ffd093d1d94,255760205,0,0x0,8
tick,0x7ffd093d1d94,255775276,0,0x0,8
tick,0x7ffd093d1d94,255791054,0,0x0,8
tick,0x7ffd093d1d94,255806338,0,0x0,8
tick,0x7ffd093d1d94,255821690,0,0x0,8
tick,0x7ffd093d1d94,255837526,0,0x0,8
tick,0x7ffd093d1d94,255853335,0,0x0,8
tick,0x7ffd093d1d94,255869717,0,0x0,8
tick,0x7ffd093d1d94,255885011,0,0x0,8
tick,0x7ffd093d1d94,255900810,0,0x0,8
tick,0x7ffd093d1d94,255916171,0,0x0,8
tick,0x7ffd093d1d94,255931192,0,0x0,8
tick,0x7ffd093d1d94,255946642,0,0x0,8
tick,0x7ffd093d1d94,255962598,0,0x0,8
tick,0x7ffd093d1d94,255978511,0,0x0,8
tick,0x7ffd093d1d94,255994379,0,0x0,8
tick,0x7ffd093d1d94,256009862,0,0x0,8
tick,0x7ffd093d1d94,256025458,0,0x0,8
tick,0x7ffd093d1d94,256040891,0,0x0,8
tick,0x7ffd093d1d94,256056425,0,0x0,8
tick,0x7ffd093d1d94,256071397,0,0x0,8
tick,0x7ffd093d1d94,256087346,0,0x0,8
tick,0x7ffd093d1d94,256102749,0,0x0,8
tick,0x7ffd093d1d94,256118517,0,0x0,8
tick,0x7ffd093d1d94,256133921,0,0x0,8
tick,0x7ffd093d1d94,256149114,0,0x0,8
tick,0x7ffd093d1d94,256164943,0,0x0,8
tick,0x7ffd093d1d94,256180278,0,0x0,8
tick,0x7ffd093d1d94,256196364,0,0x0,8
tick,0x7ffd093d1d94,256211563,0,0x0,8
tick,0x7ffd093d1d94,256226555,0,0x0,8
tick,0x7ffd093d1d94,256241663,0,0x0,8
tick,0x7ffd093d1d94,256257517,0,0x0,8
tick,0x7ffd093d1d94,256273624,0,0x0,8
tick,0x7ffd093d1d94,256289490,0,0x0,8
tick,0x7ffd093d1d94,256305183,0,0x0,8
tick,0x7ffd093d1d94,256321089,0,0x0,8
tick,0x7ffd093d1d94,256337189,0,0x0,8
tick,0x7ffd093d1d94,256352611,0,0x0,8
tick,0x7ffd093d1d94,256368281,0,0x0,8
tick,0x7ffd093d1d94,256383921,0,0x0,8
tick,0x7ffd093d1d94,256399533,0,0x0,8
tick,0x7ffd093d1d94,256415320,0,0x0,8
tick,0x7ffd093d1d94,256430313,0,0x0,8
tick,0x7ffd093d1d94,256446243,0,0x0,8
tick,0x7ffd093d1d94,256461492,0,0x0,8
tick,0x7ffd093d1d94,256476872,0,0x0,8
tick,0x7ffd093d1d94,256491814,0,0x0,8
tick,0x7ffd093d1d94,256507644,0,0x0,8
tick,0x7ffd093d1d94,256523641,0,0x0,8
tick,0x7ffd093d1d94,256539139,0,0x0,8
tick,0x7ffd093d1d94,256554157,0,0x0,8
tick,0x7ffd093d1d94,256569186,0,0x0,8
tick,0x7ffd093d1d94,256584220,0,0x0,8
tick,0x7ffd093d1d94,256600204,0,0x0,8
tick,0x7ffd093d1d94,256615112,0,0x0,8
tick,0x7ffd093d1d94,256630709,0,0x0,8
tick,0x7ffd093d1d94,256646320,0,0x0,8
tick,0x7ffd093d1d94,256661741,0,0x0,8
tick,0x7ffd093d1d94,256676868,0,0x0,8
tick,0x7ffd093d1d94,256692730,0,0x0,8
tick,0x7ffd093d1d94,256707804,0,0x0,8
tick,0x7ffd093d1d94,256724004,0,0x0,8
tick,0x7ffd093d1d94,256739824,0,0x0,8
tick,0x7ffd093d1d94,256755320,0,0x0,8
tick,0x7ffd093d1d94,256770068,0,0x0,8
tick,0x7ffd093d1d94,256785777,0,0x0,8
tick,0x7ffd093d1d94,256801319,0,0x0,8
tick,0x7ffd093d1d94,256816887,0,0x0,8
tick,0x7ffd093d1d94,256832473,0,0x0,8
tick,0x7ffd093d1d94,256847925,0,0x0,8
tick,0x7ffd093d1d94,256863352,0,0x0,8
tick,0x7ffd093d1d94,256878957,0,0x0,8
tick,0x7ffd093d1d94,256894129,0,0x0,8
tick,0x7ffd093d1d94,256910486,0,0x0,8
tick,0x7ffd093d1d94,256925991,0,0x0,8
tick,0x7ffd093d1d94,256941930,0,0x0,8
tick,0x7ffd093d1d94,256957576,0,0x0,8
tick,0x7ffd093d1d94,256973014,0,0x0,8
tick,0x7ffd093d1d94,256988658,0,0x0,8
tick,0x7ffd093d1d94,257004576,0,0x0,8
tick,0x7ffd093d1d94,257019822,0,0x0,8
tick,0x7ffd093d1d94,257035747,0,0x0,8
tick,0x7ffd093d1d94,257051114,0,0x0,8
tick,0x7ffd093d1d94,257067877,0,0x0,8
tick,0x7ffd093d1d94,257082811,0,0x0,8
tick,0x7ffd093d1d94,257098158,0,0x0,8
tick,0x7ffd093d1d94,257113110,0,0x0,8
tick,0x7ffd093d1d94,257128553,0,0x0,8
tick,0x7ffd093d1d94,257144317,0,0x0,8
tick,0x7ffd093d1d94,257159155,0,0x0,8
tick,0x7ffd093d1d94,257174444,0,0x0,8
tick,0x7ffd093d1d94,257189882,0,0x0,8
tick,0x7ffd093d1d94,257204852,0,0x0,8
tick,0x7ffd093d1d94,257220444,0,0x0,8
tick,0x7ffd093d1d94,257235891,0,0x0,8
tick,0x7ffd093d1d94,257250979,0,0x0,8
tick,0x7ffd093d1d94,257267230,0,0x0,8
tick,0x7ffd093d1d94,257282245,0,0x0,8
tick,0x7ffd093d1d94,257297790,0,0x0,8
tick,0x7ffd093d1d94,257312981,0,0x0,8
tick,0x7ffd093d1d94,257328734,0,0x0,8
tick,0x7ffd093d1d94,257344369,0,0x0,8
tick,0x7ffd093d1d94,257360217,0,0x0,8
tick,0x7ffd093d1d94,257376632,0,0x0,8
tick,0x7ffd093d1d94,257392541,0,0x0,8
tick,0x7ffd093d1d94,257408780,0,0x0,8
tick,0x7ffd093d1d94,257424422,0,0x0,8
tick,0x7ffd093d1d94,257439260,0,0x0,8
tick,0x7ffd093d1d94,257455149,0,0x0,8
tick,0x7ffd093d1d94,257471050,0,0x0,8
tick,0x7ffd093d1d94,257486723,0,0x0,8
tick,0x7ffd093d1d94,257501971,0,0x0,8
tick,0x7ffd093d1d94,257517300,0,0x0,8
tick,0x7ffd093d1d94,257532957,0,0x0,8
tick,0x7ffd093d1d94,257548129,0,0x0,8
tick,0x7ffd093d1d94,257563576,0,0x0,8
tick,0x7ffd093d1d94,257579025,0,0x0,8
tick,0x7ffd093d1d94,257594785,0,0x0,8
tick,0x7ffd093d1d94,257610300,0,0x0,8
tick,0x7ffd093d1d94,257625706,0,0x0,8
tick,0x7ffd093d1d94,257641287,0,0x0,8
tick,0x7ffd093d1d94,257657065,0,0x0,8
tick,0x7ffd093d1d94,257672752,0,0x0,8
tick,0x7ffd093d1d94,257687711,0,0x0,8
tick,0x7ffd093d1d94,257703556,0,0x0,8
tick,0x7ffd093d1d94,257718772,0,0x0,8
tick,0x7ffd093d1d94,257734275,0,0x0,8
tick,0x7ffd093d1d94,257749970,0,0x0,8
tick,0x7ffd093d1d94,257765609,0,0x0,8
tick,0x7ffd093d1d94,257781148,0,0x0,8
tick,0x7ffd093d1d94,257796624,0,0x0,8
tick,0x7ffd093d1d94,257812124,0,0x0,8
tick,0x7ffd093d1d94,257827834,0,0x0,8
tick,0x7ffd093d1d94,257843476,0,0x0,8
tick,0x7ffd093d1d94,257858881,0,0x0,8
tick,0x7ffd093d1d94,257874675,0,0x0,8
tick,0x7ffd093d1d94,257889859,0,0x0,8
tick,0x7ffd093d1d94,257904980,0,0x0,8
tick,0x7ffd093d1d94,257920262,0,0x0,8
tick,0x7ffd093d1d94,257936279,0,0x0,8
tick,0x7ffd093d1d94,257952238,0,0x0,8
tick,0x7ffd093d1d94,257967805,0,0x0,8
tick,0x7ffd093d1d94,257983836,0,0x0,8
tick,0x7ffd093d1d94,257999259,0,0x0,8
tick,0x7ffd093d1d94,258014749,0,0x0,8
tick,0x7ffd093d1d94,258030131,0,0x0,8
tick,0x7ffd093d1d94,258045448,0,0x0,8
tick,0x7ffd093d1d94,258060861,0,0x0,8
tick,0x7ffd093d1d94,258076776,0,0x0,8
tick,0x7ffd093d1d94,258092246,0,0x0,8
tick,0x7ffd093d1d94,258107758,0,0x0,8
tick,0x7ffd093d1d94,258123570,0,0x0,8
tick,0x7ffd093d1d94,258138393,0,0x0,8
tick,0x7ffd093d1d94,258153614,0,0x0,8
tick,0x7ffd093d1d94,258169476,0,0x0,8
tick,0x7ffd093d1d94,258184870,0,0x0,8
tick,0x7ffd093d1d94,258200890,0,0x0,8
tick,0x7ffd093d1d94,258219178,0,0x0,8
tick,0x7ffd093d1d94,258232368,0,0x0,8
tick,0x7ffd093d1d94,258247518,0,0x0,8
tick,0x7ffd093d1d94,258262911,0,0x0,8
tick,0x7ffd093d1d94,258278252,0,0x0,8
tick,0x7ffd093d1d94,258294059,0,0x0,8
tick,0x7ffd093d1d94,258308904,0,0x0,8
tick,0x7ffd093d1d94,258323823,0,0x0,8
tick,0x7ffd093d1d94,258339234,0,0x0,8
tick,0x7ffd093d1d94,258354736,0,0x0,8
tick,0x7ffd093d1d94,258370496,0,0x0,8
tick,0x7ffd093d1d94,258386282,0,0x0,8
tick,0x7ffd093d1d94,258401759,0,0x0,8
tick,0x7ffd093d1d94,258417003,0,0x0,8
tick,0x7ffd093d1d94,258432249,0,0x0,8
tick,0x7ffd093d1d94,258447996,0,0x0,8
tick,0x7ffd093d1d94,258463518,0,0x0,8
tick,0x7ffd093d1d94,258479124,0,0x0,8
tick,0x7ffd093d1d94,258494604,0,0x0,8
tick,0x7ffd093d1d94,258509449,0,0x0,8
tick,0x7ffd093d1d94,258524830,0,0x0,8
tick,0x7ffd093d1d94,258540424,0,0x0,8
tick,0x7ffd093d1d94,258556202,0,0x0,8
tick,0x7ffd093d1d94,258571510,0,0x0,8
tick,0x7ffd093d1d94,258587238,0,0x0,8
tick,0x7ffd093d1d94,258603077,0,0x0,8
tick,0x7ffd093d1d94,258619003,0,0x0,8
tick,0x7ffd093d1d94,258633711,0,0x0,8
tick,0x7ffd093d1d94,258649454,0,0x0,8
tick,0x7ffd093d1d94,258665389,0,0x0,8
tick,0x7ffd093d1d94,258680770,0,0x0,8
tick,0x7ffd093d1d94,258696090,0,0x0,8
tick,0x7ffd093d1d94,258711215,0,0x0,8
tick,0x7ffd093d1d94,258727291,0,0x0,8
tick,0x7ffd093d1d94,258742740,0,0x0,8
tick,0x7ffd093d1d94,258758495,0,0x0,8
tick,0x7ffd093d1d94,258774015,0,0x0,8
tick,0x7ffd093d1d94,258789629,0,0x0,8
tick,0x7ffd093d1d94,258804965,0,0x0,8
tick,0x7ffd093d1d94,258820227,0,0x0,8
tick,0x7ffd093d1d94,258835951,0,0x0,8
tick,0x7ffd093d1d94,258852622,0,0x0,8
tick,0x7ffd093d1d94,258867894,0,0x0,8
tick,0x7ffd093d1d94,258883785,0,0x0,8
tick,0x7ffd093d1d94,258898910,0,0x0,8
tick,0x7ffd093d1d94,258914271,0,0x0,8
tick,0x7ffd093d1d94,258930096,0,0x0,8
tick,0x7ffd093d1d94,258945032,0,0x0,8
tick,0x7ffd093d1d94,258960643,0,0x0,8
tick,0x7ffd093d1d94,258976265,0,0x0,8
tick,0x7ffd093d1d94,258992304,0,0x0,8
tick,0x7ffd093d1d94,259007156,0,0x0,8
tick,0x7ffd093d1d94,259022336,0,0x0,8
tick,0x7ffd093d1d94,259038136,0,0x0,8
tick,0x7ffd093d1d94,259054126,0,0x0,8
tick,0x7ffd093d1d94,259069147,0,0x0,8
tick,0x7ffd093d1d94,259084902,0,0x0,8
tick,0x7ffd093d1d94,259100473,0,0x0,8
tick,0x7ffd093d1d94,259116470,0,0x0,8
tick,0x7ffd093d1d94,259131606,0,0x0,8
tick,0x7ffd093d1d94,259146681,0,0x0,8
tick,0x7ffd093d1d94,259162722,0,0x0,8
tick,0x7ffd093d1d94,259178186,0,0x0,8
tick,0x7ffd093d1d94,259194070,0,0x0,8
tick,0x7ffd093d1d94,259209567,0,0x0,8
tick,0x7ffd093d1d94,259224457,0,0x0,8
tick,0x7ffd093d1d94,259240395,0,0x0,8
tick,0x7ffd093d1d94,259256880,0,0x0,8
tick,0x7ffd093d1d94,259272329,0,0x0,8
tick,0x7ffd093d1d94,259287417,0,0x0,8
tick,0x7ffd093d1d94,259302982,0,0x0,8
tick,0x7ffd093d1d94,259318511,0,0x0,8
tick,0x7ffd093d1d94,259334237,0,0x0,8
tick,0x7ffd093d1d94,259349930,0,0x0,8
tick,0x7ffd093d1d94,259365939,0,0x0,8
tick,0x7ffd093d1d94,259381215,0,0x0,8
tick,0x7ffd093d1d94,259397619,0,0x0,8
tick,0x7ffd093d1d94,259413034,0,0x0,8
tick,0x7ffd093d1d94,259427572,0,0x0,8
tick,0x7ffd093d1d94,259442967,0,0x0,8
tick,0x7ffd093d1d94,259458894,0,0x0,8
tick,0x7ffd093d1d94,259474695,0,0x0,8
tick,0x7ffd093d1d94,259490680,0,0x0,8
tick,0x7ffd093d1d94,259506430,0,0x0,8
tick,0x7ffd093d1d94,259521281,0,0x0,8
tick,0x7ffd093d1d94,259536871,0,0x0,8
tick,0x7ffd093d1d94,259552237,0,0x0,8
tick,0x7ffd093d1d94,259567980,0,0x0,8
tick,0x7ffd093d1d94,259583833,0,0x0,8
tick,0x7ffd093d1d94,259599332,0,0x0,8
tick,0x7ffd093d1d94,259615237,0,0x0,8
tick,0x7ffd093d1d94,259630423,0,0x0,8
tick,0x7ffd093d1d94,259645955,0,0x0,8
tick,0x7ffd093d1d94,259661578,0,0x0,8
tick,0x7ffd093d1d94,259676351,0,0x0,8
tick,0x7ffd093d1d94,259691501,0,0x0,8
tick,0x7ffd093d1d94,259707055,0,0x0,8
tick,0x7ffd093d1d94,259722191,0,0x0,8
tick,0x7ffd093d1d94,259737885,0,0x0,8
tick,0x7ffd093d1d94,259753468,0,0x0,8
tick,0x7ffd093d1d94,259768514,0,0x0,8
tick,0x7ffd093d1d94,259783830,0,0x0,8
tick,0x7ffd093d1d94,259799128,0,0x0,8
tick,0x7ffd093d1d94,259815126,0,0x0,8
tick,0x7ffd093d1d94,259831297,0,0x0,8
tick,0x7ffd093d1d94,259846904,0,0x0,8
tick,0x7ffd093d1d94,259862477,0,0x0,8
tick,0x7ffd093d1d94,259878230,0,0x0,8
tick,0x7ffd093d1d94,259893483,0,0x0,8
tick,0x7ffd093d1d94,259909025,0,0x0,8
tick,0x7ffd093d1d94,259924136,0,0x0,8
tick,0x7ffd093d1d94,259939667,0,0x0,8
tick,0x7ffd093d1d94,259954465,0,0x0,8
tick,0x7ffd093d1d94,259970926,0,0x0,8
tick,0x7ffd093d1d94,259985630,0,0x0,8
tick,0x7ffd093d1d94,260001609,0,0x0,8
tick,0x7ffd093d1d94,260017372,0,0x0,8
tick,0x7ffd093d1d94,260033163,0,0x0,8
tick,0x7ffd093d1d94,260048364,0,0x0,8
tick,0x7ffd093d1d94,260064557,0,0x0,8
tick,0x7ffd093d1d94,260080337,0,0x0,8
tick,0x7ffd093d1d94,260095241,0,0x0,8
tick,0x7ffd093d1d94,260110388,0,0x0,8
tick,0x7ffd093d1d94,260125709,0,0x0,8
tick,0x7ffd093d1d94,260141666,0,0x0,8
tick,0x7ffd093d1d94,260157311,0,0x0,8
tick,0x7ffd093d1d94,260172455,0,0x0,8
tick,0x7ffd093d1d94,260187660,0,0x0,8
tick,0x7ffd093d1d94,260203365,0,0x0,8
tick,0x7ffd093d1d94,260219539,0,0x0,8
tick,0x7ffd093d1d94,260235297,0,0x0,8
tick,0x7ffd093d1d94,260251250,0,0x0,8
tick,0x7ffd093d1d94,260267023,0,0x0,8
tick,0x7ffd093d1d94,260282715,0,0x0,8
tick,0x7ffd093d1d94,260298549,0,0x0,8
tick,0x7ffd093d1d94,260313494,0,0x0,8
tick,0x7ffd093d1d94,260329397,0,0x0,8
tick,0x7ffd093d1d94,260345039,0,0x0,8
tick,0x7ffd093d1d94,260360907,0,0x0,8
tick,0x7ffd093d1d94,260376667,0,0x0,8
tick,0x7ffd093d1d94,260392602,0,0x0,8
tick,0x7ffd093d1d94,260408472,0,0x0,8
tick,0x7ffd093d1d94,260423279,0,0x0,8
tick,0x7ffd093d1d94,260439158,0,0x0,8
tick,0x7ffd093d1d94,260454991,0,0x0,8
tick,0x7ffd093d1d94,260470200,0,0x0,8
tick,0x7ffd093d1d94,260485483,0,0x0,8
tick,0x7ffd093d1d94,260500933,0,0x0,8
tick,0x7ffd093d1d94,260516112,0,0x0,8
tick,0x7ffd093d1d94,260531844,0,0x0,8
tick,0x7ffd093d1d94,260546703,0,0x0,8
tick,0x7ffd093d1d94,260561725,0,0x0,8
tick,0x7ffd093d1d94,260577598,0,0x0,8
tick,0x7ffd093d1d94,260593036,0,0x0,8
tick,0x7ffd093d1d94,260608918,0,0x0,8
tick,0x7ffd093d1d94,260624505,0,0x0,8
tick,0x7ffd093d1d94,260640596,0,0x0,8
tick,0x7ffd093d1d94,260655662,0,0x0,8
tick,0x7ffd093d1d94,260671059,0,0x0,8
tick,0x7ffd093d1d94,260686149,0,0x0,8
tick,0x7ffd093d1d94,260702013,0,0x0,8
tick,0x7ffd093d1d94,260717482,0,0x0,8
tick,0x7ffd093d1d94,260732709,0,0x0,8
tick,0x7ffd093d1d94,260748086,0,0x0,8
tick,0x7ffd093d1d94,260763076,0,0x0,8
tick,0x7ffd093d1d94,260778388,0,0x0,8
tick,0x7ffd093d1d94,260793810,0,0x0,8
tick,0x7ffd093d1d94,260809156,0,0x0,8
tick,0x7ffd093d1d94,260824137,0,0x0,8
tick,0x7ffd093d1d94,260839352,0,0x0,8
tick,0x7ffd093d1d94,260854506,0,0x0,8
tick,0x7ffd093d1d94,260870391,0,0x0,8
tick,0x7ffd093d1d94,260886049,0,0x0,8
tick,0x7ffd093d1d94,260902027,0,0x0,8
tick,0x7ffd093d1d94,260917743,0,0x0,8
tick,0x7ffd093d1d94,260933398,0,0x0,8
tick,0x7ffd093d1d94,260949018,0,0x0,8
tick,0x7ffd093d1d94,260964788,0,0x0,8
tick,0x7ffd093d1d94,260980296,0,0x0,8
tick,0x7ffd093d1d94,260996268,0,0x0,8
tick,0x7ffd093d1d94,261012161,0,0x0,8
tick,0x7ffd093d1d94,261028107,0,0x0,8
tick,0x7ffd093d1d94,261043632,0,0x0,8
tick,0x7ffd093d1d94,261059247,0,0x0,8
tick,0x7ffd093d1d94,261075058,0,0x0,8
tick,0x7ffd093d1d94,261089952,0,0x0,8
tick,0x7ffd093d1d94,261105507,0,0x0,8
tick,0x7ffd093d1d94,261121817,0,0x0,8
tick,0x7ffd093d1d94,261137449,0,0x0,8
tick,0x7ffd093d1d94,261152740,0,0x0,8
tick,0x7ffd093d1d94,261168027,0,0x0,8
tick,0x7ffd093d1d94,261183599,0,0x0,8
tick,0x7ffd093d1d94,261199617,0,0x0,8
tick,0x7ffd093d1d94,261214921,0,0x0,8
tick,0x7ffd093d1d94,261230281,0,0x0,8
tick,0x7ffd093d1d94,261245974,0,0x0,8
tick,0x7ffd093d1d94,261261417,0,0x0,8
tick,0x7ffd093d1d94,261277332,0,0x0,8
tick,0x7ffd093d1d94,261293119,0,0x0,8
tick,0x7ffd093d1d94,261309126,0,0x0,8
tick,0x7ffd093d1d94,261324356,0,0x0,8
tick,0x7ffd093d1d94,261340273,0,0x0,8
tick,0x7ffd093d1d94,261355367,0,0x0,8
tick,0x7ffd093d1d94,261371787,0,0x0,8
tick,0x7ffd093d1d94,261386404,0,0x0,8
tick,0x7ffd093d1d94,261402004,0,0x0,8
tick,0x7ffd093d1d94,261417319,0,0x0,8
tick,0x7ffd093d1d94,261433164,0,0x0,8
tick,0x7ffd093d1d94,261448992,0,0x0,8
tick,0x7ffd093d1d94,261464816,0,0x0,8
tick,0x7ffd093d1d94,261480913,0,0x0,8
tick,0x7ffd093d1d94,261496226,0,0x0,8
tick,0x7ffd093d1d94,261511567,0,0x0,8
tick,0x7ffd093d1d94,261527181,0,0x0,8
tick,0x7ffd093d1d94,261542703,0,0x0,8
tick,0x7ffd093d1d94,261557999,0,0x0,8
tick,0x7ffd093d1d94,261573674,0,0x0,8
tick,0x7ffd093d1d94,261589049,0,0x0,8
tick,0x7ffd093d1d94,261604395,0,0x0,8
tick,0x7ffd093d1d94,261620414,0,0x0,8
tick,0x7ffd093d1d94,261635939,0,0x0,8
tick,0x7ffd093d1d94,261651157,0,0x0,8
tick,0x7ffd093d1d94,261666896,0,0x0,8
tick,0x7ffd093d1d94,261682479,0,0x0,8
tick,0x7ffd093d1d94,261697626,0,0x0,8
tick,0x7ffd093d1d94,261713195,0,0x0,8
tick,0x7ffd093d1d94,261728829,0,0x0,8
tick,0x7ffd093d1d94,261743987,0,0x0,8
tick,0x7ffd093d1d94,261759134,0,0x0,8
tick,0x7ffd093d1d94,261774791,0,0x0,8
tick,0x7ffd093d1d94,261790843,0,0x0,8
tick,0x7ffd093d1d94,261806976,0,0x0,8
tick,0x7ffd093d1d94,261822482,0,0x0,8
tick,0x7ffd093d1d94,261838704,0,0x0,8
tick,0x7ffd093d1d94,261854077,0,0x0,8
tick,0x7ffd093d1d94,261868890,0,0x0,8
tick,0x7ffd093d1d94,261883990,0,0x0,8
tick,0x7ffd093d1d94,261899622,0,0x0,8
tick,0x7ffd093d1d94,261915231,0,0x0,8
tick,0x7ffd093d1d94,261931262,0,0x0,8
tick,0x7ffd093d1d94,261946800,0,0x0,8
tick,0x7ffd093d1d94,261962734,0,0x0,8
tick,0x7ffd093d1d94,261978046,0,0x0,8
tick,0x7ffd093d1d94,261993182,0,0x0,8
tick,0x7ffd093d1d94,262008643,0,0x0,8
tick,0x7ffd093d1d94,262024092,0,0x0,8
tick,0x7ffd093d1d94,262039361,0,0x0,8
tick,0x7ffd093d1d94,262054542,0,0x0,8
tick,0x7ffd093d1d94,262070442,0,0x0,8
tick,0x7ffd093d1d94,262085741,0,0x0,8
tick,0x7ffd093d1d94,262101670,0,0x0,8
tick,0x7ffd093d1d94,262117086,0,0x0,8
tick,0x7ffd093d1d94,262131976,0,0x0,8
tick,0x7ffd093d1d94,262146766,0,0x0,8
tick,0x7ffd093d1d94,262162416,0,0x0,8
tick,0x7ffd093d1d94,262178475,0,0x0,8
tick,0x7ffd093d1d94,262194001,0,0x0,8
tick,0x7ffd093d1d94,262209847,0,0x0,8
tick,0x7ffd093d1d94,262225930,0,0x0,8
tick,0x7ffd093d1d94,262241196,0,0x0,8
tick,0x7ffd093d1d94,262257280,0,0x0,8
tick,0x7ffd093d1d94,262272427,0,0x0,8
tick,0x7ffd093d1d94,262287193,0,0x0,8
tick,0x7ffd093d1d94,262302535,0,0x0,8
tick,0x7ffd093d1d94,262318582,0,0x0,8
tick,0x7ffd093d1d94,262334697,0,0x0,8
tick,0x7ffd093d1d94,262350042,0,0x0,8
tick,0x7ffd093d1d94,262365026,0,0x0,8
tick,0x7ffd093d1d94,262380236,0,0x0,8
tick,0x7ffd093d1d94,262395436,0,0x0,8
tick,0x7ffd093d1d94,262410937,0,0x0,8
tick,0x7ffd093d1d94,262426048,0,0x0,8
tick,0x7ffd093d1d94,262441384,0,0x0,8
tick,0x7ffd093d1d94,262456747,0,0x0,8
tick,0x7ffd093d1d94,262472378,0,0x0,8
tick,0x7ffd093d1d94,262488082,0,0x0,8
tick,0x7ffd093d1d94,262503834,0,0x0,8
tick,0x7ffd093d1d94,262519688,0,0x0,8
tick,0x7ffd093d1d94,262535117,0,0x0,8
tick,0x7ffd093d1d94,262551246,0,0x0,8
tick,0x7ffd093d1d94,262567744,0,0x0,8
tick,0x7ffd093d1d94,262583608,0,0x0,8
tick,0x7ffd093d1d94,262598805,0,0x0,8
tick,0x7ffd093d1d94,262614965,0,0x0,8
tick,0x7ffd093d1d94,262630139,0,0x0,8
tick,0x7ffd093d1d94,262645571,0,0x0,8
tick,0x7ffd093d1d94,262661267,0,0x0,8
tick,0x7ffd093d1d94,262677043,0,0x0,8
tick,0x7ffd093d1d94,262692527,0,0x0,8
tick,0x7ffd093d1d94,262707808,0,0x0,8
tick,0x7ffd093d1d94,262722593,0,0x0,8
tick,0x7ffd093d1d94,262738584,0,0x0,8
tick,0x7ffd093d1d94,262754550,0,0x0,8
tick,0x7ffd093d1d94,262770393,0,0x0,8
tick,0x7ffd093d1d94,262785617,0,0x0,8
tick,0x7ffd093d1d94,262801015,0,0x0,8
tick,0x7ffd093d1d94,262817089,0,0x0,8
tick,0x7ffd093d1d94,262833202,0,0x0,8
tick,0x7ffd093d1d94,262848739,0,0x0,8
tick,0x7ffd093d1d94,262864433,0,0x0,8
tick,0x7ffd093d1d94,262879455,0,0x0,8
tick,0x7ffd093d1d94,262895060,0,0x0,8
tick,0x7ffd093d1d94,262910509,0,0x0,8
tick,0x7ffd093d1d94,262925734,0,0x0,8
tick,0x7ffd093d1d94,262940967,0,0x0,8
tick,0x7ffd093d1d94,262956576,0,0x0,8
tick,0x7ffd093d1d94,262971781,0,0x0,8
tick,0x7ffd093d1d94,262986894,0,0x0,8
tick,0x7ffd093d1d94,263002879,0,0x0,8
tick,0x7ffd093d1d94,263018477,0,0x0,8
tick,0x7ffd093d1d94,263033779,0,0x0,8
tick,0x7ffd093d1d94,263049660,0,0x0,8
tick,0x7ffd093d1d94,263065034,0,0x0,8
tick,0x7ffd093d1d94,263080982,0,0x0,8
tick,0x7ffd093d1d94,263096855,0,0x0,8
tick,0x7ffd093d1d94,263112569,0,0x0,8
tick,0x7ffd093d1d94,263127052,0,0x0,8
tick,0x7ffd093d1d94,263142265,0,0x0,8
tick,0x7ffd093d1d94,263157981,0,0x0,8
tick,0x7ffd093d1d94,263173437,0,0x0,8
tick,0x7ffd093d1d94,263188830,0,0x0,8
tick,0x7ffd093d1d94,263204017,0,0x0,8
tick,0x7ffd093d1d94,263219912,0,0x0,8
tick,0x7ffd093d1d94,263235004,0,0x0,8
tick,0x7ffd093d1d94,263250958,0,0x0,8
tick,0x7ffd093d1d94,263266354,0,0x0,8
tick,0x7ffd093d1d94,263282667,0,0x0,8
tick,0x7ffd093d1d94,263298364,0,0x0,8
tick,0x7ffd093d1d94,263314538,0,0x0,8
tick,0x7ffd093d1d94,263330131,0,0x0,8
tick,0x7ffd093d1d94,263345383,0,0x0,8
tick,0x7ffd093d1d94,263361188,0,0x0,8
tick,0x7ffd093d1d94,263376997,0,0x0,8
tick,0x7ffd093d1d94,263392165,0,0x0,8
tick,0x7ffd093d1d94,263408081,0,0x0,8
tick,0x7ffd093d1d94,263422900,0,0x0,8
tick,0x7ffd093d1d94,263437948,0,0x0,8
tick,0x7ffd093d1d94,263453679,0,0x0,8
tick,0x7ffd093d1d94,263468835,0,0x0,8
tick,0x7ffd093d1d94,263484693,0,0x0,8
tick,0x7ffd093d1d94,263499365,0,0x0,8
tick,0x7ffd093d1d94,263515484,0,0x0,8
tick,0x7ffd093d1d94,263531578,0,0x0,8
tick,0x7ffd093d1d94,263547822,0,0x0,8
tick,0x7ffd093d1d94,263562959,0,0x0,8
tick,0x7ffd093d1d94,263578645,0,0x0,8
tick,0x7ffd093d1d94,263593429,0,0x0,8
tick,0x7ffd093d1d94,263608356,0,0x0,8
tick,0x7ffd093d1d94,263624395,0,0x0,8
tick,0x7ffd093d1d94,263639782,0,0x0,8
tick,0x7ffd093d1d94,263655754,0,0x0,8
tick,0x7ffd093d1d94,263670825,0,0x0,8
tick,0x7ffd093d1d94,263686453,0,0x0,8
tick,0x7ffd093d1d94,263702035,0,0x0,8
tick,0x7ffd093d1d94,263717523,0,0x0,8
tick,0x7ffd093d1d94,263733205,0,0x0,8
tick,0x7ffd093d1d94,263749129,0,0x0,8
tick,0x7ffd093d1d94,263764404,0,0x0,8
tick,0x7ffd093d1d94,263780153,0,0x0,8
tick,0x7ffd093d1d94,263795440,0,0x0,8
tick,0x7ffd093d1d94,263810215,0,0x0,8
tick,0x7ffd093d1d94,263825713,0,0x0,8
tick,0x7ffd093d1d94,263841023,0,0x0,8
tick,0x7ffd093d1d94,263856221,0,0x0,8
tick,0x7ffd093d1d94,263871621,0,0x0,8
tick,0x7ffd093d1d94,263887245,0,0x0,8
tick,0x7ffd093d1d94,263903218,0,0x0,8
tick,0x7ffd093d1d94,263918300,0,0x0,8
tick,0x7ffd093d1d94,263934614,0,0x0,8
tick,0x7ffd093d1d94,263951126,0,0x0,8
tick,0x7ffd093d1d94,263966878,0,0x0,8
tick,0x7ffd093d1d94,263982939,0,0x0,8
tick,0x7ffd093d1d94,263998328,0,0x0,8
tick,0x7ffd093d1d94,264013543,0,0x0,8
tick,0x7ffd093d1d94,264029192,0,0x0,8
tick,0x7ffd093d1d94,264044425,0,0x0,8
tick,0x7ffd093d1d94,264059629,0,0x0,8
tick,0x7ffd093d1d94,264075114,0,0x0,8
tick,0x7ffd093d1d94,264091314,0,0x0,8
tick,0x7ffd093d1d94,264107029,0,0x0,8
tick,0x7ffd093d1d94,264122739,0,0x0,8
tick,0x7ffd093d1d94,264138830,0,0x0,8
tick,0x7ffd093d1d94,264155089,0,0x0,8
tick,0x7ffd093d1d94,264170333,0,0x0,8
tick,0x7ffd093d1d94,264186224,0,0x0,8
tick,0x7ffd093d1d94,264201853,0,0x0,8
tick,0x7ffd093d1d94,264217673,0,0x0,8
tick,0x7ffd093d1d94,264232651,0,0x0,8
tick,0x7ffd093d1d94,264248374,0,0x0,8
tick,0x7ffd093d1d94,264264030,0,0x0,8
tick,0x7ffd093d1d94,264279481,0,0x0,8
tick,0x7ffd093d1d94,264294898,0,0x0,8
tick,0x7ffd093d1d94,264309901,0,0x0,8
tick,0x7ffd093d1d94,264326015,0,0x0,8
tick,0x7ffd093d1d94,264341902,0,0x0,8
tick,0x7ffd093d1d94,264357263,0,0x0,8
tick,0x7ffd093d1d94,264372734,0,0x0,8
tick,0x7ffd093d1d94,264388077,0,0x0,8
tick,0x7ffd093d1d94,264404242,0,0x0,8
tick,0x7ffd093d1d94,264420268,0,0x0,8
tick,0x7ffd093d1d94,264435584,0,0x0,8
tick,0x7ffd093d1d94,264451512,0,0x0,8
tick,0x7ffd093d1d94,264466993,0,0x0,8
tick,0x7ffd093d1d94,264482340,0,0x0,8
tick,0x7ffd093d1d94,264497603,0,0x0,8
tick,0x7ffd093d1d94,264512996,0,0x0,8
tick,0x7ffd093d1d94,264528591,0,0x0,8
tick,0x7ffd093d1d94,264544384,0,0x0,8
tick,0x7ffd093d1d94,264559692,0,0x0,8
tick,0x7ffd093d1d94,264575459,0,0x0,8
tick,0x7ffd093d1d94,264591545,0,0x0,8
tick,0x7ffd093d1d94,264606814,0,0x0,8
tick,0x7ffd093d1d94,264621613,0,0x0,8
tick,0x7ffd093d1d94,264637008,0,0x0,8
tick,0x7ffd093d1d94,264652289,0,0x0,8
tick,0x7ffd093d1d94,264667893,0,0x0,8
tick,0x7ffd093d1d94,264684037,0,0x0,8
tick,0x7ffd093d1d94,264699601,0,0x0,8
tick,0x7ffd093d1d94,264715334,0,0x0,8
tick,0x7ffd093d1d94,264730599,0,0x0,8
tick,0x7ffd093d1d94,264746914,0,0x0,8
tick,0x7ffd093d1d94,264762060,0,0x0,8
tick,0x7ffd093d1d94,264777654,0,0x0,8
tick,0x7ffd093d1d94,264793377,0,0x0,8
tick,0x7ffd093d1d94,264808990,0,0x0,8
tick,0x7ffd093d1d94,264824678,0,0x0,8
tick,0x7ffd093d1d94,264839454,0,0x0,8
tick,0x7ffd093d1d94,264855196,0,0x0,8
tick,0x7ffd093d1d94,264870268,0,0x0,8
tick,0x7ffd093d1d94,264885469,0,0x0,8
tick,0x7ffd093d1d94,264900570,0,0x0,8
tick,0x7ffd093d1d94,264915960,0,0x0,8
tick,0x7ffd093d1d94,264931945,0,0x0,8
tick,0x7ffd093d1d94,264947655,0,0x0,8
tick,0x7ffd093d1d94,264962893,0,0x0,8
tick,0x7ffd093d1d94,264978460,0,0x0,8
tick,0x7ffd093d1d94,264993673,0,0x0,8
tick,0x7ffd093d1d94,265009790,0,0x0,8
tick,0x7ffd093d1d94,265025045,0,0x0,8
tick,0x7ffd093d1d94,265039969,0,0x0,8
tick,0x7ffd093d1d94,265055043,0,0x0,8
tick,0x7ffd093d1d94,265070403,0,0x0,8
tick,0x7ffd093d1d94,265086746,0,0x0,8
tick,0x7ffd093d1d94,265102486,0,0x0,8
tick,0x7ffd093d1d94,265116764,0,0x0,8
tick,0x7ffd093d1d94,265132276,0,0x0,8
tick,0x7ffd093d1d94,265148118,0,0x0,8
tick,0x7ffd093d1d94,265164419,0,0x0,8
tick,0x7ffd093d1d94,265179243,0,0x0,8
tick,0x7ffd093d1d94,265194331,0,0x0,8
tick,0x7ffd093d1d94,265209247,0,0x0,8
tick,0x7ffd093d1d94,265224819,0,0x0,8
tick,0x7ffd093d1d94,265240409,0,0x0,8
tick,0x7ffd093d1d94,265256169,0,0x0,8
tick,0x7ffd093d1d94,265271899,0,0x0,8
tick,0x7ffd093d1d94,265287053,0,0x0,8
tick,0x7ffd093d1d94,265302231,0,0x0,8
tick,0x7ffd093d1d94,265318184,0,0x0,8
tick,0x7ffd093d1d94,265333509,0,0x0,8
tick,0x7ffd093d1d94,265349256,0,0x0,8
tick,0x7ffd093d1d94,265364921,0,0x0,8
tick,0x7ffd093d1d94,265380831,0,0x0,8
tick,0x7ffd093d1d94,265396635,0,0x0,8
tick,0x7ffd093d1d94,265412536,0,0x0,8
tick,0x7ffd093d1d94,265428176,0,0x0,8
tick,0x7ffd093d1d94,265443548,0,0x0,8
tick,0x7ffd093d1d94,265459205,0,0x0,8
tick,0x7ffd093d1d94,265474143,0,0x0,8
tick,0x7ffd093d1d94,265490341,0,0x0,8
tick,0x7ffd093d1d94,265505828,0,0x0,8
tick,0x7ffd093d1d94,265520968,0,0x0,8
tick,0x7ffd093d1d94,265536800,0,0x0,8
tick,0x7ffd093d1d94,265551847,0,0x0,8
tick,0x7ffd093d1d94,265567790,0,0x0,8
tick,0x7ffd093d1d94,265582815,0,0x0,8
tick,0x7ffd093d1d94,265598386,0,0x0,8
tick,0x7ffd093d1d94,265614362,0,0x0,8
tick,0x7ffd093d1d94,265629683,0,0x0,8
tick,0x7ffd093d1d94,265645377,0,0x0,8
tick,0x7ffd093d1d94,265661374,0,0x0,8
tick,0x7ffd093d1d94,265677437,0,0x0,8
tick,0x7ffd093d1d94,265693634,0,0x0,8
tick,0x7ffd093d1d94,265709750,0,0x0,8
tick,0x7ffd093d1d94,265725921,0,0x0,8
tick,0x7ffd093d1d94,265742053,0,0x0,8
tick,0x7ffd093d1d94,265757067,0,0x0,8
tick,0x7ffd093d1d94,265772137,0,0x0,8
tick,0x7ffd093d1d94,265788044,0,0x0,8
tick,0x7ffd093d1d94,265802877,0,0x0,8
tick,0x7ffd093d1d94,265818354,0,0x0,8
tick,0x7ffd093d1d94,265834445,0,0x0,8
tick,0x7ffd093d1d94,265850361,0,0x0,8
tick,0x7ffd093d1d94,265866126,0,0x0,8
tick,0x7ffd093d1d94,265882051,0,0x0,8
tick,0x7ffd093d1d94,265896939,0,0x0,8
tick,0x7ffd093d1d94,265912576,0,0x0,8
tick,0x7ffd093d1d94,265927472,0,0x0,8
tick,0x7ffd093d1d94,265943358,0,0x0,8
tick,0x7ffd093d1d94,265959039,0,0x0,8
tick,0x7ffd093d1d94,265974018,0,0x0,8
tick,0x7ffd093d1d94,265989713,0,0x0,8
tick,0x7ffd093d1d94,266005585,0,0x0,8
tick,0x7ffd093d1d94,266020725,0,0x0,8
tick,0x7ffd093d1d94,266035335,0,0x0,8
tick,0x7ffd093d1d94,266050887,0,0x0,8
tick,0x7ffd093d1d94,266066803,0,0x0,8
tick,0x7ffd093d1d94,266082668,0,0x0,8
tick,0x7ffd093d1d94,266098402,0,0x0,8
tick,0x7ffd093d1d94,266113635,0,0x0,8
tick,0x7ffd093d1d94,266129301,0,0x0,8
tick,0x7ffd093d1d94,266144995,0,0x0,8
tick,0x7ffd093d1d94,266161097,0,0x0,8
tick,0x7ffd093d1d94,266176833,0,0x0,8
tick,0x7ffd093d1d94,266192347,0,0x0,8
tick,0x7ffd093d1d94,266208333,0,0x0,8
tick,0x7ffd093d1d94,266224002,0,0x0,8
tick,0x7ffd093d1d94,266238908,0,0x0,8
tick,0x7ffd093d1d94,266254901,0,0x0,8
tick,0x7ffd093d1d94,266270593,0,0x0,8
tick,0x7ffd093d1d94,266286817,0,0x0,8
tick,0x7ffd093d1d94,266302413,0,0x0,8
tick,0x7ffd093d1d94,266317469,0,0x0,8
tick,0x7ffd093d1d94,266334210,0,0x0,8
tick,0x7ffd093d1d94,266348965,0,0x0,8
tick,0x7ffd093d1d94,266364353,0,0x0,8
tick,0x7ffd093d1d94,266379308,0,0x0,8
tick,0x7ffd093d1d94,266395280,0,0x0,8
tick,0x7ffd093d1d94,266410973,0,0x0,8
tick,0x7ffd093d1d94,266426647,0,0x0,8
tick,0x7ffd093d1d94,266442480,0,0x0,8
tick,0x7ffd093d1d94,266458297,0,0x0,8
tick,0x7ffd093d1d94,266473494,0,0x0,8
tick,0x7ffd093d1d94,266488593,0,0x0,8
tick,0x7ffd093d1d94,266503960,0,0x0,8
tick,0x7ffd093d1d94,266519918,0,0x0,8
tick,0x7ffd093d1d94,266535895,0,0x0,8
tick,0x7ffd093d1d94,266551593,0,0x0,8
tick,0x7ffd093d1d94,266567894,0,0x0,8
tick,0x7ffd093d1d94,266583638,0,0x0,8
tick,0x7ffd093d1d94,266599280,0,0x0,8
tick,0x7ffd093d1d94,266614519,0,0x0,8
tick,0x7ffd093d1d94,266629569,0,0x0,8
tick,0x7ffd093d1d94,266645578,0,0x0,8
tick,0x7ffd093d1d94,266661021,0,0x0,8
tick,0x7ffd093d1d94,266676685,0,0x0,8
tick,0x7ffd093d1d94,266691371,0,0x0,8
tick,0x7ffd093d1d94,266707362,0,0x0,8
tick,0x7ffd093d1d94,266722606,0,0x0,8
tick,0x7ffd093d1d94,266738569,0,0x0,8
tick,0x7ffd093d1d94,266753718,0,0x0,8
tick,0x7ffd093d1d94,266769032,0,0x0,8
tick,0x7ffd093d1d94,266784216,0,0x0,8
tick,0x7ffd093d1d94,266799918,0,0x0,8
tick,0x7ffd093d1d94,266815120,0,0x0,8
tick,0x7ffd093d1d94,266830676,0,0x0,8
tick,0x7ffd093d1d94,266846902,0,0x0,8
tick,0x7ffd093d1d94,266862682,0,0x0,8
tick,0x7ffd093d1d94,266878070,0,0x0,8
tick,0x7ffd093d1d94,266893714,0,0x0,8
tick,0x7ffd093d1d94,266908834,0,0x0,8
tick,0x7ffd093d1d94,266923859,0,0x0,8
tick,0x7ffd093d1d94,266939550,0,0x0,8
tick,0x7ffd093d1d94,266955275,0,0x0,8
tick,0x7ffd093d1d94,266971294,0,0x0,8
tick,0x7ffd093d1d94,266986804,0,0x0,8
tick,0x7ffd093d1d94,267003414,0,0x0,8
tick,0x7ffd093d1d94,267018571,0,0x0,8
tick,0x7ffd093d1d94,267034386,0,0x0,8
tick,0x7ffd093d1d94,267049618,0,0x0,8
tick,0x7ffd093d1d94,267065470,0,0x0,8
tick,0x7ffd093d1d94,267080529,0,0x0,8
tick,0x7ffd093d1d94,267096549,0,0x0,8
tick,0x7ffd093d1d94,267111924,0,0x0,8
tick,0x7ffd093d1d94,267127193,0,0x0,8
tick,0x7ffd093d1d94,267143250,0,0x0,8
tick,0x7ffd093d1d94,267158523,0,0x0,8
tick,0x7ffd093d1d94,267174645,0,0x0,8
tick,0x7ffd093d1d94,267190540,0,0x0,8
tick,0x7ffd093d1d94,267206135,0,0x0,8
tick,0x7ffd093d1d94,267221246,0,0x0,8
tick,0x7ffd093d1d94,267236761,0,0x0,8
tick,0x7ffd093d1d94,267252382,0,0x0,8
tick,0x7ffd093d1d94,267268406,0,0x0,8
tick,0x7ffd093d1d94,267283496,0,0x0,8
tick,0x7ffd093d1d94,267298797,0,0x0,8
tick,0x7ffd093d1d94,267314983,0,0x0,8
tick,0x7ffd093d1d94,267330578,0,0x0,8
tick,0x7ffd093d1d94,267346378,0,0x0,8
tick,0x7ffd093d1d94,267361654,0,0x0,8
tick,0x7ffd093d1d94,267376842,0,0x0,8
tick,0x7ffd093d1d94,267392581,0,0x0,8
tick,0x7ffd093d1d94,267407850,0,0x0,8
tick,0x7ffd093d1d94,267423844,0,0x0,8
tick,0x7ffd093d1d94,267438481,0,0x0,8
tick,0x7ffd093d1d94,267454279,0,0x0,8
tick,0x7ffd093d1d94,267469874,0,0x0,8
tick,0x7ffd093d1d94,267485649,0,0x0,8
tick,0x7ffd093d1d94,267500987,0,0x0,8
tick,0x7ffd093d1d94,267516887,0,0x0,8
tick,0x7ffd093d1d94,267532997,0,0x0,8
tick,0x7ffd093d1d94,267549034,0,0x0,8
tick,0x7ffd093d1d94,267564389,0,0x0,8
tick,0x7ffd093d1d94,267580157,0,0x0,8
tick,0x7ffd093d1d94,267595555,0,0x0,8
tick,0x7ffd093d1d94,267611109,0,0x0,8
tick,0x7ffd093d1d94,267626977,0,0x0,8
tick,0x7ffd093d1d94,267642058,0,0x0,8
tick,0x7ffd093d1d94,267658538,0,0x0,8
tick,0x7ffd093d1d94,267674412,0,0x0,8
tick,0x7ffd093d1d94,267689828,0,0x0,8
tick,0x7ffd093d1d94,267704632,0,0x0,8
tick,0x7ffd093d1d94,267720093,0,0x0,8
tick,0x7ffd093d1d94,267735901,0,0x0,8
tick,0x7ffd093d1d94,267752248,0,0x0,8
tick,0x7ffd093d1d94,267768007,0,0x0,8
tick,0x7ffd093d1d94,267783437,0,0x0,8
tick,0x7ffd093d1d94,267799031,0,0x0,8
tick,0x7ffd093d1d94,267815024,0,0x0,8
tick,0x7ffd093d1d94,267830643,0,0x0,8
tick,0x7ffd093d1d94,267846296,0,0x0,8
tick,0x7ffd093d1d94,267861452,0,0x0,8
tick,0x7ffd093d1d94,267877149,0,0x0,8
tick,0x7ffd093d1d94,267892472,0,0x0,8
tick,0x7ffd093d1d94,267908198,0,0x0,8
tick,0x7ffd093d1d94,267923803,0,0x0,8
tick,0x7ffd093d1d94,267939488,0,0x0,8
tick,0x7ffd093d1d94,267954424,0,0x0,8
tick,0x7ffd093d1d94,267970319,0,0x0,8
tick,0x7ffd093d1d94,267984995,0,0x0,8
tick,0x7ffd093d1d94,268000620,0,0x0,8
tick,0x7ffd093d1d94,268016813,0,0x0,8
tick,0x7ffd093d1d94,268031652,0,0x0,8
tick,0x7ffd093d1d94,268046966,0,0x0,8
tick,0x7ffd093d1d94,268063045,0,0x0,8
tick,0x7ffd093d1d94,268078769,0,0x0,8
tick,0x7ffd093d1d94,268094106,0,0x0,8
tick,0x7ffd093d1d94,268108917,0,0x0,8
tick,0x7ffd093d1d94,268124584,0,0x0,8
tick,0x7ffd093d1d94,268139957,0,0x0,8
tick,0x7ffd093d1d94,268155294,0,0x0,8
tick,0x7ffd093d1d94,268170614,0,0x0,8
tick,0x7ffd093d1d94,268186474,0,0x0,8
tick,0x7ffd093d1d94,268202059,0,0x0,8
tick,0x7ffd093d1d94,268218152,0,0x0,8
tick,0x7ffd093d1d94,268234001,0,0x0,8
tick,0x7ffd093d1d94,268249522,0,0x0,8
tick,0x7ffd093d1d94,268264996,0,0x0,8
tick,0x7ffd093d1d94,268281281,0,0x0,8
tick,0x7ffd093d1d94,268297130,0,0x0,8
tick,0x7ffd093d1d94,268312728,0,0x0,8
tick,0x7ffd093d1d94,268328110,0,0x0,8
tick,0x7ffd093d1d94,268344279,0,0x0,8
tick,0x7ffd093d1d94,268359621,0,0x0,8
tick,0x7ffd093d1d94,268375461,0,0x0,8
tick,0x7ffd093d1d94,268390502,0,0x0,8
tick,0x7ffd093d1d94,268406870,0,0x0,8
tick,0x7ffd093d1d94,268422885,0,0x0,8
tick,0x7ffd093d1d94,268437800,0,0x0,8
tick,0x7ffd093d1d94,268453513,0,0x0,8
tick,0x7ffd093d1d94,268469264,0,0x0,8
tick,0x7ffd093d1d94,268485312,0,0x0,8
tick,0x7ffd093d1d94,268500527,0,0x0,8
tick,0x7ffd093d1d94,268515630,0,0x0,8
tick,0x7ffd093d1d94,268531437,0,0x0,8
tick,0x7ffd093d1d94,268547272,0,0x0,8
tick,0x7ffd093d1d94,268563059,0,0x0,8
tick,0x7ffd093d1d94,268578397,0,0x0,8
tick,0x7ffd093d1d94,268594313,0,0x0,8
tick,0x7ffd093d1d94,268610478,0,0x0,8
tick,0x7ffd093d1d94,268626214,0,0x0,8
tick,0x7ffd093d1d94,268641874,0,0x0,8
tick,0x7ffd093d1d94,268657543,0,0x0,8
tick,0x7ffd093d1d94,268672459,0,0x0,8
tick,0x7ffd093d1d94,268687366,0,0x0,8
tick,0x7ffd093d1d94,268702523,0,0x0,8
tick,0x7ffd093d1d94,268717971,0,0x0,8
tick,0x7ffd093d1d94,268734273,0,0x0,8
tick,0x7ffd093d1d94,268750740,0,0x0,8
tick,0x7ffd093d1d94,268766451,0,0x0,8
tick,0x7ffd093d1d94,268782396,0,0x0,8
tick,0x7ffd093d1d94,268797868,0,0x0,8
tick,0x7ffd093d1d94,268813625,0,0x0,8
tick,0x7ffd093d1d94,268829219,0,0x0,8
tick,0x7ffd093d1d94,268845399,0,0x0,8
tick,0x7ffd093d1d94,268859965,0,0x0,8
tick,0x7ffd093d1d94,268876090,0,0x0,8
tick,0x7ffd093d1d94,268891484,0,0x0,8
tick,0x7ffd093d1d94,268907327,0,0x0,8
tick,0x7ffd093d1d94,268922032,0,0x0,8
tick,0x7ffd093d1d94,268937825,0,0x0,8
tick,0x7ffd093d1d94,268953648,0,0x0,8
tick,0x7ffd093d1d94,268969609,0,0x0,8
tick,0x7ffd093d1d94,268985001,0,0x0,8
tick,0x7ffd093d1d94,269000218,0,0x0,8
tick,0x7ffd093d1d94,269015665,0,0x0,8
tick,0x7ffd093d1d94,269031668,0,0x0,8
tick,0x7ffd093d1d94,269046675,0,0x0,8
tick,0x7ffd093d1d94,269061680,0,0x0,8
tick,0x7ffd093d1d94,269077843,0,0x0,8
tick,0x7ffd093d1d94,269092942,0,0x0,8
tick,0x7ffd093d1d94,269107791,0,0x0,8
tick,0x7ffd093d1d94,269123765,0,0x0,8
tick,0x7ffd093d1d94,269139810,0,0x0,8
tick,0x7ffd093d1d94,269155507,0,0x0,8
tick,0x7ffd093d1d94,269171253,0,0x0,8
tick,0x7ffd093d1d94,269186567,0,0x0,8
tick,0x7ffd093d1d94,269202604,0,0x0,8
tick,0x7ffd093d1d94,269218446,0,0x0,8
tick,0x7ffd093d1d94,269234381,0,0x0,8
tick,0x7ffd093d1d94,269250590,0,0x0,8
tick,0x7ffd093d1d94,269265757,0,0x0,8
tick,0x7ffd093d1d94,269280954,0,0x0,8
tick,0x7ffd093d1d94,269295659,0,0x0,8
tick,0x7ffd093d1d94,269311459,0,0x0,8
tick,0x7ffd093d1d94,269327523,0,0x0,8
tick,0x7ffd093d1d94,269343388,0,0x0,8
tick,0x7ffd093d1d94,269359776,0,0x0,8
tick,0x7ffd093d1d94,269375473,0,0x0,8
tick,0x7ffd093d1d94,269391201,0,0x0,8
tick,0x7ffd093d1d94,269406424,0,0x0,8
tick,0x7ffd093d1d94,269422193,0,0x0,8
tick,0x7ffd093d1d94,269437829,0,0x0,8
tick,0x7ffd093d1d94,269452971,0,0x0,8
tick,0x7ffd093d1d94,269468607,0,0x0,8
tick,0x7ffd093d1d94,269484601,0,0x0,8
tick,0x7ffd093d1d94,269500409,0,0x0,8
tick,0x7ffd093d1d94,269516299,0,0x0,8
tick,0x7ffd093d1d94,269532343,0,0x0,8
tick,0x7ffd093d1d94,269548165,0,0x0,8
tick,0x7ffd093d1d94,269563903,0,0x0,8
tick,0x7ffd093d1d94,269579441,0,0x0,8
tick,0x7ffd093d1d94,269595137,0,0x0,8
tick,0x7ffd093d1d94,269610510,0,0x0,8
tick,0x7ffd093d1d94,269625810,0,0x0,8
tick,0x7ffd093d1d94,269641314,0,0x0,8
tick,0x7ffd093d1d94,269657227,0,0x0,8
tick,0x7ffd093d1d94,269672617,0,0x0,8
tick,0x7ffd093d1d94,269688434,0,0x0,8
tick,0x7ffd093d1d94,269703726,0,0x0,8
tick,0x7ffd093d1d94,269718825,0,0x0,8
tick,0x7ffd093d1d94,269734869,0,0x0,8
tick,0x7ffd093d1d94,269750146,0,0x0,8
tick,0x7ffd093d1d94,269765933,0,0x0,8
tick,0x7ffd093d1d94,269781702,0,0x0,8
tick,0x7ffd093d1d94,269797234,0,0x0,8
tick,0x7ffd093d1d94,269812452,0,0x0,8
tick,0x7ffd093d1d94,269828237,0,0x0,8
tick,0x7ffd093d1d94,269844386,0,0x0,8
tick,0x7ffd093d1d94,269859795,0,0x0,8
tick,0x7ffd093d1d94,269875772,0,0x0,8
tick,0x7ffd093d1d94,269891651,0,0x0,8
tick,0x7ffd093d1d94,269906866,0,0x0,8
tick,0x7ffd093d1d94,269922190,0,0x0,8
tick,0x7ffd093d1d94,269937199,0,0x0,8
tick,0x7ffd093d1d94,269952380,0,0x0,8
tick,0x7ffd093d1d94,269967759,0,0x0,8
tick,0x7ffd093d1d94,269983335,0,0x0,8
tick,0x7ffd093d1d94,269999741,0,0x0,8
tick,0x7ffd093d1d94,270014444,0,0x0,8
tick,0x7ffd093d1d94,270029919,0,0x0,8
tick,0x7ffd093d1d94,270045868,0,0x0,8
tick,0x7ffd093d1d94,270061520,0,0x0,8
tick,0x7ffd093d1d94,270077159,0,0x0,8
tick,0x7ffd093d1d94,270092837,0,0x0,8
tick,0x7ffd093d1d94,270107848,0,0x0,8
tick,0x7ffd093d1d94,270123450,0,0x0,8
tick,0x7ffd093d1d94,270139087,0,0x0,8
tick,0x7ffd093d1d94,270155265,0,0x0,8
tick,0x7ffd093d1d94,270170574,0,0x0,8
tick,0x7ffd093d1d94,270185716,0,0x0,8
tick,0x7ffd093d1d94,270201170,0,0x0,8
tick,0x7ffd093d1d94,270216585,0,0x0,8
tick,0x7ffd093d1d94,270232346,0,0x0,8
tick,0x7ffd093d1d94,270247206,0,0x0,8
tick,0x7ffd093d1d94,270262987,0,0x0,8
tick,0x7ffd093d1d94,270279103,0,0x0,8
tick,0x7ffd093d1d94,270294518,0,0x0,8
tick,0x7ffd093d1d94,270310524,0,0x0,8
tick,0x7ffd093d1d94,270326071,0,0x0,8
tick,0x7ffd093d1d94,270342176,0,0x0,8
tick,0x7ffd093d1d94,270358311,0,0x0,8
tick,0x7ffd093d1d94,270373692,0,0x0,8
tick,0x7ffd093d1d94,270389452,0,0x0,8
tick,0x7ffd093d1d94,270404993,0,0x0,8
tick,0x7ffd093d1d94,270421029,0,0x0,8
tick,0x7ffd093d1d94,270436742,0,0x0,8
tick,0x7ffd093d1d94,270452004,0,0x0,8
tick,0x7ffd093d1d94,270468612,0,0x0,8
tick,0x7ffd093d1d94,270484016,0,0x0,8
tick,0x7ffd093d1d94,270499766,0,0x0,8
tick,0x7ffd093d1d94,270515732,0,0x0,8
tick,0x7ffd093d1d94,270530721,0,0x0,8
tick,0x7ffd093d1d94,270545793,0,0x0,8
tick,0x7ffd093d1d94,270561638,0,0x0,8
tick,0x7ffd093d1d94,270576903,0,0x0,8
tick,0x7ffd093d1d94,270592425,0,0x0,8
tick,0x7ffd093d1d94,270607913,0,0x0,8
tick,0x7ffd093d1d94,270623122,0,0x0,8
tick,0x7ffd093d1d94,270638962,0,0x0,8
tick,0x7ffd093d1d94,270653843,0,0x0,8
tick,0x7ffd093d1d94,270669217,0,0x0,8
tick,0x7ffd093d1d94,270684733,0,0x0,8
tick,0x7ffd093d1d94,270700690,0,0x0,8
tick,0x7ffd093d1d94,270715729,0,0x0,8
tick,0x7ffd093d1d94,270732474,0,0x0,8
tick,0x7ffd093d1d94,270747290,0,0x0,8
tick,0x7ffd093d1d94,270762983,0,0x0,8
tick,0x7ffd093d1d94,270778397,0,0x0,8
tick,0x7ffd093d1d94,270793494,0,0x0,8
tick,0x7ffd093d1d94,270809138,0,0x0,8
tick,0x7ffd093d1d94,270824787,0,0x0,8
tick,0x7ffd093d1d94,270840416,0,0x0,8
tick,0x7ffd093d1d94,270856124,0,0x0,8
tick,0x7ffd093d1d94,270871711,0,0x0,8
tick,0x7ffd093d1d94,270888454,0,0x0,8
tick,0x7ffd093d1d94,270903591,0,0x0,8
tick,0x7ffd093d1d94,270918754,0,0x0,8
tick,0x7ffd093d1d94,270933867,0,0x0,8
tick,0x7ffd093d1d94,270949971,0,0x0,8
tick,0x7ffd093d1d94,270965483,0,0x0,8
tick,0x7ffd093d1d94,270981070,0,0x0,8
tick,0x7ffd093d1d94,270997206,0,0x0,8
tick,0x7ffd093d1d94,271012805,0,0x0,8
tick,0x7ffd093d1d94,271028394,0,0x0,8
tick,0x7ffd093d1d94,271043745,0,0x0,8
tick,0x7ffd093d1d94,271059449,0,0x0,8
tick,0x7ffd093d1d94,271076490,0,0x0,8
tick,0x7ffd093d1d94,271091233,0,0x0,8
tick,0x7ffd093d1d94,271106800,0,0x0,8
tick,0x7ffd093d1d94,271121458,0,0x0,8
tick,0x7ffd093d1d94,271137091,0,0x0,8
tick,0x7ffd093d1d94,271152697,0,0x0,8
tick,0x7ffd093d1d94,271167430,0,0x0,8
tick,0x7ffd093d1d94,271183087,0,0x0,8
tick,0x7ffd093d1d94,271199112,0,0x0,8
tick,0x7ffd093d1d94,271214847,0,0x0,8
tick,0x7ffd093d1d94,271230473,0,0x0,8
tick,0x7ffd093d1d94,271245373,0,0x0,8
tick,0x7ffd093d1d94,271260864,0,0x0,8
tick,0x7ffd093d1d94,271275885,0,0x0,8
tick,0x7ffd093d1d94,271291336,0,0x0,8
tick,0x7ffd093d1d94,271307268,0,0x0,8
tick,0x7ffd093d1d94,271322368,0,0x0,8
tick,0x7ffd093d1d94,271338450,0,0x0,8
tick,0x7ffd093d1d94,271353752,0,0x0,8
tick,0x7ffd093d1d94,271369050,0,0x0,8
tick,0x7ffd093d1d94,271384873,0,0x0,8
tick,0x7ffd093d1d94,271401524,0,0x0,8
tick,0x7ffd093d1d94,271416625,0,0x0,8
tick,0x7ffd093d1d94,271432793,0,0x0,8
tick,0x7ffd093d1d94,271450633,0,0x0,8
tick,0x7ffd093d1d94,271465067,0,0x0,8
tick,0x7ffd093d1d94,271480198,0,0x0,8
tick,0x7ffd093d1d94,271495843,0,0x0,8
tick,0x7ffd093d1d94,271510835,0,0x0,8
tick,0x7ffd093d1d94,271527209,0,0x0,8
tick,0x7ffd093d1d94,271541850,0,0x0,8
tick,0x7ffd093d1d94,271557970,0,0x0,8
tick,0x7ffd093d1d94,271572873,0,0x0,8
tick,0x7ffd093d1d94,271587748,0,0x0,8
tick,0x7ffd093d1d94,271603782,0,0x0,8
tick,0x7ffd093d1d94,271619236,0,0x0,8
tick,0x7ffd093d1d94,271634877,0,0x0,8
tick,0x7ffd093d1d94,271650260,0,0x0,8
tick,0x7ffd093d1d94,271655617,0,0x0,8
tick,0x7ffd093d1d94,271657640,0,0x0,8
tick,0x7ffd093d1d94,271660120,0,0x0,8
tick,0x7ffd093d1d94,271663248,0,0x0,8
tick,0x7ffd093d1d94,271665580,0,0x0,8
tick,0x7ffd093d1d94,271668391,0,0x0,8
tick,0x7ffd093d1d94,271671530,0,0x0,8
tick,0x7ffd093d1d94,271674340,0,0x0,8
tick,0x7ffd093d1d94,271677302,0,0x0,8
tick,0x7ffd093d1d94,271680437,0,0x0,8
tick,0x7ffd093d1d94,271682991,0,0x0,8
tick,0x7ffd093d1d94,271686042,0,0x0,8
tick,0x7ffd093d1d94,271688700,0,0x0,8
tick,0x7ffd093d1d94,271691441,0,0x0,8
tick,0x7ffd093d1d94,271693459,0,0x0,8
tick,0x7ffd093d1d94,271696518,0,0x0,8
tick,0x7ffd093d1d94,271699093,0,0x0,8
tick,0x7ffd093d1d94,271701348,0,0x0,8
tick,0x7ffd093d1d94,271704031,0,0x0,8
tick,0x7ffd093d1d94,271706581,0,0x0,8
tick,0x7ffd093d1d94,271708790,0,0x0,8
tick,0x7ffd093d1d94,271711077,0,0x0,8
tick,0x7ffd093d1d94,271713496,0,0x0,8
tick,0x7ffd093d1d94,271715875,0,0x0,8
tick,0x7ffd093d1d94,271718800,0,0x0,8
tick,0x7ffd093d1d94,271721619,0,0x0,8
tick,0x7ffd093d1d94,271724263,0,0x0,8
tick,0x7ffd093d1d94,271726802,0,0x0,8
tick,0x7ffd093d1d94,271729697,0,0x0,8
tick,0x7ffd093d1d94,271732027,0,0x0,8
tick,0x7ffd093d1d94,271734152,0,0x0,8
tick,0x7ffd093d1d94,271736988,0,0x0,8
tick,0x7ffd093d1d94,271739926,0,0x0,8
tick,0x7ffd093d1d94,271742021,0,0x0,8
tick,0x7ffd093d1d94,271744161,0,0x0,8
tick,0x7ffd093d1d94,271746590,0,0x0,8
tick,0x7ffd093d1d94,271748579,0,0x0,8
tick,0x7ffd093d1d94,271751195,0,0x0,8
tick,0x7ffd093d1d94,271753932,0,0x0,8
tick,0x7ffd093d1d94,271756429,0,0x0,8
tick,0x7ffd093d1d94,271758685,0,0x0,8
tick,0x7ffd093d1d94,271761676,0,0x0,8
tick,0x7ffd093d1d94,271763748,0,0x0,8
tick,0x7ffd093d1d94,271766379,0,0x0,8
tick,0x7ffd093d1d94,271769140,0,0x0,8
tick,0x7ffd093d1d94,271771752,0,0x0,8
tick,0x7ffd093d1d94,271774265,0,0x0,8
tick,0x7ffd093d1d94,271777048,0,0x0,8
tick,0x7ffd093d1d94,271779223,0,0x0,8
tick,0x7ffd093d1d94,271780792,0,0x0,8
tick,0x7ffd093d1d94,271783471,0,0x0,8
tick,0x7ffd093d1d94,271786166,0,0x0,8
tick,0x7ffd093d1d94,271788945,0,0x0,8
tick,0x7ffd093d1d94,271792307,0,0x0,8
tick,0x7ffd093d1d94,271794260,0,0x0,8
tick,0x7ffd093d1d94,271796321,0,0x0,8
tick,0x7ffd093d1d94,271798532,0,0x0,8
tick,0x7ffd093d1d94,271800545,0,0x0,8
tick,0x7ffd093d1d94,271802683,0,0x0,8
tick,0x7ffd093d1d94,271804760,0,0x0,8
tick,0x7ffd093d1d94,271807878,0,0x0,8
tick,0x7ffd093d1d94,271810509,0,0x0,8
tick,0x7ffd093d1d94,271812760,0,0x0,8
tick,0x7ffd093d1d94,271814865,0,0x0,8
tick,0x7ffd093d1d94,271817998,0,0x0,8
tick,0x7ffd093d1d94,271820044,0,0x0,8
tick,0x7ffd093d1d94,271823038,0,0x0,8
tick,0x7ffd093d1d94,271825768,0,0x0,8
tick,0x7ffd093d1d94,271828173,0,0x0,8
tick,0x7ffd093d1d94,271830934,0,0x0,8
tick,0x7ffd093d1d94,271834036,0,0x0,8
tick,0x7ffd093d1d94,271836597,0,0x0,8
tick,0x7ffd093d1d94,271839634,0,0x0,8
tick,0x7ffd093d1d94,271841645,0,0x0,8
tick,0x7ffd093d1d94,271844761,0,0x0,8
tick,0x7ffd093d1d94,271848145,0,0x0,8
tick,0x7ffd093d1d94,271850268,0,0x0,8
tick,0x7ffd093d1d94,271852444,0,0x0,8
tick,0x7ffd093d1d94,271854406,0,0x0,8
tick,0x7ffd093d1d94,271856359,0,0x0,8
tick,0x7ffd093d1d94,271858890,0,0x0,8
tick,0x7ffd093d1d94,271861139,0,0x0,8
tick,0x7ffd093d1d94,271863374,0,0x0,8
tick,0x7ffd093d1d94,271865254,0,0x0,8
tick,0x7ffd093d1d94,271867857,0,0x0,8
tick,0x7ffd093d1d94,271870951,0,0x0,8
tick,0x7ffd093d1d94,271872916,0,0x0,8
tick,0x7ffd093d1d94,271875081,0,0x0,8
tick,0x7ffd093d1d94,271877179,0,0x0,8
tick,0x7ffd093d1d94,271879943,0,0x0,8
tick,0x7ffd093d1d94,271882292,0,0x0,8
tick,0x7ffd093d1d94,271884644,0,0x0,8
tick,0x7ffd093d1d94,271886414,0,0x0,8
tick,0x7ffd093d1d94,271888568,0,0x0,8
tick,0x7ffd093d1d94,271891403,0,0x0,8
tick,0x7ffd093d1d94,271894249,0,0x0,8
tick,0x7ffd093d1d94,271896876,0,0x0,8
tick,0x7ffd093d1d94,271899561,0,0x0,8
tick,0x7ffd093d1d94,271901504,0,0x0,8
tick,0x7ffd093d1d94,271903596,0,0x0,8
tick,0x7ffd093d1d94,271906359,0,0x0,8
tick,0x7ffd093d1d94,271908367,0,0x0,8
tick,0x7ffd093d1d94,271911164,0,0x0,8
tick,0x7ffd093d1d94,271913081,0,0x0,8
tick,0x7ffd093d1d94,271915212,0,0x0,8
tick,0x7ffd093d1d94,271917327,0,0x0,8
tick,0x7ffd093d1d94,271919301,0,0x0,8
tick,0x7ffd093d1d94,271921272,0,0x0,8
tick,0x7ffd093d1d94,271924813,0,0x0,8
tick,0x7ffd093d1d94,271926908,0,0x0,8
tick,0x7ffd093d1d94,271928856,0,0x0,8
tick,0x7ffd093d1d94,271931190,0,0x0,8
tick,0x7ffd093d1d94,271933203,0,0x0,8
tick,0x7ffd093d1d94,271935954,0,0x0,8
tick,0x7ffd093d1d94,271938167,0,0x0,8
tick,0x7ffd093d1d94,271940205,0,0x0,8
tick,0x7ffd093d1d94,271942973,0,0x0,8
tick,0x7ffd093d1d94,271945253,0,0x0,8
tick,0x7ffd093d1d94,271947992,0,0x0,8
tick,0x7ffd093d1d94,271949559,0,0x0,8
tick,0x7ffd093d1d94,271951372,0,0x0,8
tick,0x7ffd093d1d94,271954412,0,0x0,8
tick,0x7ffd093d1d94,271956746,0,0x0,8
tick,0x7ffd093d1d94,271959271,0,0x0,8
tick,0x7ffd093d1d94,271961565,0,0x0,8
tick,0x7ffd093d1d94,271963607,0,0x0,8
tick,0x7ffd093d1d94,271966528,0,0x0,8
tick,0x7ffd093d1d94,271969269,0,0x0,8
tick,0x7ffd093d1d94,271971228,0,0x0,8
tick,0x7ffd093d1d94,271973874,0,0x0,8
tick,0x7ffd093d1d94,271976442,0,0x0,8
tick,0x7ffd093d1d94,271979071,0,0x0,8
tick,0x7ffd093d1d94,271981140,0,0x0,8
tick,0x7ffd093d1d94,271983401,0,0x0,8
tick,0x7ffd093d1d94,271986156,0,0x0,8
tick,0x7ffd093d1d94,271989153,0,0x0,8
tick,0x7ffd093d1d94,271991041,0,0x0,8
tick,0x7ffd093d1d94,271994384,0,0x0,8
tick,0x7ffd093d1d94,271996962,0,0x0,8
tick,0x7ffd093d1d94,271998843,0,0x0,8
tick,0x7ffd093d1d94,272001027,0,0x0,8
tick,0x7ffd093d1d94,272003661,0,0x0,8
tick,0x7ffd093d1d94,272006326,0,0x0,8
tick,0x7ffd093d1d94,272009004,0,0x0,8
tick,0x7ffd093d1d94,272011269,0,0x0,8
tick,0x7ffd093d1d94,272013372,0,0x0,8
tick,0x7ffd093d1d94,272015463,0,0x0,8
tick,0x7ffd093d1d94,272018390,0,0x0,8
tick,0x7ffd093d1d94,272021450,0,0x0,8
tick,0x7ffd093d1d94,272025081,0,0x0,8
tick,0x7ffd093d1d94,272027297,0,0x0,8
tick,0x7ffd093d1d94,272029377,0,0x0,8
tick,0x7ffd093d1d94,272032254,0,0x0,8
tick,0x7ffd093d1d94,272035083,0,0x0,8
tick,0x7ffd093d1d94,272037166,0,0x0,8
tick,0x7ffd093d1d94,272039858,0,0x0,8
tick,0x7ffd093d1d94,272041955,0,0x0,8
tick,0x7ffd093d1d94,272044785,0,0x0,8
tick,0x7ffd093d1d94,272047448,0,0x0,8
tick,0x7ffd093d1d94,272049399,0,0x0,8
tick,0x7ffd093d1d94,272052171,0,0x0,8
tick,0x7ffd093d1d94,272054792,0,0x0,8
tick,0x7ffd093d1d94,272057308,0,0x0,8
tick,0x7ffd093d1d94,272060342,0,0x0,8
tick,0x7ffd093d1d94,272063331,0,0x0,8
tick,0x7ffd093d1d94,272065932,0,0x0,8
tick,0x7ffd093d1d94,272069069,0,0x0,8
tick,0x7ffd093d1d94,272071021,0,0x0,8
tick,0x7ffd093d1d94,272074210,0,0x0,8
tick,0x7ffd093d1d94,272077022,0,0x0,8
tick,0x7ffd093d1d94,272080001,0,0x0,8
tick,0x7ffd093d1d94,272083064,0,0x0,8
tick,0x7ffd093d1d94,272085207,0,0x0,8
tick,0x7ffd093d1d94,272088029,0,0x0,8
tick,0x7ffd093d1d94,272090845,0,0x0,8
tick,0x7ffd093d1d94,272093701,0,0x0,8
tick,0x7ffd093d1d94,272096249,0,0x0,8
tick,0x7ffd093d1d94,272099106,0,0x0,8
tick,0x7ffd093d1d94,272101966,0,0x0,8
tick,0x7ffd093d1d94,272105065,0,0x0,8
tick,0x7ffd093d1d94,272107779,0,0x0,8
tick,0x7ffd093d1d94,272109864,0,0x0,8
tick,0x7ffd093d1d94,272112480,0,0x0,8
tick,0x7ffd093d1d94,272115064,0,0x0,8
tick,0x7ffd093d1d94,272117626,0,0x0,8
tick,0x7ffd093d1d94,272120308,0,0x0,8
tick,0x7ffd093d1d94,272123204,0,0x0,8
tick,0x7ffd093d1d94,272125907,0,0x0,8
tick,0x7ffd093d1d94,272128012,0,0x0,8
tick,0x7ffd093d1d94,272130823,0,0x0,8
tick,0x7ffd093d1d94,272133559,0,0x0,8
tick,0x7ffd093d1d94,272136029,0,0x0,8
tick,0x7ffd093d1d94,272139354,0,0x0,8
tick,0x7ffd093d1d94,272141101,0,0x0,8
tick,0x7ffd093d1d94,272144090,0,0x0,8
tick,0x7ffd093d1d94,272146738,0,0x0,8
tick,0x7ffd093d1d94,272150101,0,0x0,8
tick,0x7ffd093d1d94,272151594,0,0x0,8
tick,0x7ffd093d1d94,272155012,0,0x0,8
tick,0x7ffd093d1d94,272157094,0,0x0,8
tick,0x7ffd093d1d94,272159814,0,0x0,8
tick,0x7ffd093d1d94,272162735,0,0x0,8
tick,0x7ffd093d1d94,272165259,0,0x0,8
tick,0x7ffd093d1d94,272167863,0,0x0,8
tick,0x7ffd093d1d94,272169571,0,0x0,8
tick,0x7ffd093d1d94,272172200,0,0x0,8
tick,0x7ffd093d1d94,272174782,0,0x0,8
tick,0x7ffd093d1d94,272177375,0,0x0,8
tick,0x7ffd093d1d94,272179967,0,0x0,8
tick,0x7ffd093d1d94,272181949,0,0x0,8
tick,0x7ffd093d1d94,272185091,0,0x0,8
tick,0x7ffd093d1d94,272186736,0,0x0,8
tick,0x7ffd093d1d94,272189479,0,0x0,8
tick,0x7ffd093d1d94,272192246,0,0x0,8
tick,0x7ffd093d1d94,272195236,0,0x0,8
tick,0x7ffd093d1d94,272197340,0,0x0,8
tick,0x7ffd093d1d94,272200460,0,0x0,8
tick,0x7ffd093d1d94,272203692,0,0x0,8
tick,0x7ffd093d1d94,272205770,0,0x0,8
tick,0x7ffd093d1d94,272209025,0,0x0,8
tick,0x7ffd093d1d94,272211021,0,0x0,8
tick,0x7ffd093d1d94,272214148,0,0x0,8
tick,0x7ffd093d1d94,272216939,0,0x0,8
tick,0x7ffd093d1d94,272219750,0,0x0,8
tick,0x7ffd093d1d94,272222164,0,0x0,8
tick,0x7ffd093d1d94,272224961,0,0x0,8
tick,0x7ffd093d1d94,272227614,0,0x0,8
tick,0x7ffd093d1d94,272230417,0,0x0,8
tick,0x7ffd093d1d94,272233182,0,0x0,8
tick,0x7ffd093d1d94,272235328,0,0x0,8
tick,0x7ffd093d1d94,272238053,0,0x0,8
tick,0x7ffd093d1d94,272240830,0,0x0,8
tick,0x7ffd093d1d94,272243449,0,0x0,8
tick,0x7ffd093d1d94,272246221,0,0x0,8
tick,0x7ffd093d1d94,272248853,0,0x0,8
tick,0x7ffd093d1d94,272251661,0,0x0,8
tick,0x7ffd093d1d94,272255097,0,0x0,8
tick,0x7ffd093d1d94,272258102,0,0x0,8
tick,0x7ffd093d1d94,272260299,0,0x0,8
tick,0x7ffd093d1d94,272262859,0,0x0,8
tick,0x7ffd093d1d94,272264811,0,0x0,8
tick,0x7ffd093d1d94,272267361,0,0x0,8
tick,0x7ffd093d1d94,272269439,0,0x0,8
tick,0x7ffd093d1d94,272272332,0,0x0,8
tick,0x7ffd093d1d94,272275079,0,0x0,8
tick,0x7ffd093d1d94,272277833,0,0x0,8
tick,0x7ffd093d1d94,272280514,0,0x0,8
tick,0x7ffd093d1d94,272283644,0,0x0,8
tick,0x7ffd093d1d94,272286257,0,0x0,8
tick,0x7ffd093d1d94,272288486,0,0x0,8
tick,0x7ffd093d1d94,272291240,0,0x0,8
tick,0x7ffd093d1d94,272293889,0,0x0,8
tick,0x7ffd093d1d94,272296339,0,0x0,8
tick,0x7ffd093d1d94,272299193,0,0x0,8
tick,0x7ffd093d1d94,272302192,0,0x0,8
tick,0x7ffd093d1d94,272304609,0,0x0,8
tick,0x7ffd093d1d94,272307065,0,0x0,8
tick,0x7ffd093d1d94,272310058,0,0x0,8
tick,0x7ffd093d1d94,272313008,0,0x0,8
tick,0x7ffd093d1d94,272315080,0,0x0,8
tick,0x7ffd093d1d94,272317690,0,0x0,8
tick,0x7ffd093d1d94,272319743,0,0x0,8
tick,0x7ffd093d1d94,272321848,0,0x0,8
tick,0x7ffd093d1d94,272324348,0,0x0,8
tick,0x7ffd093d1d94,272326863,0,0x0,8
tick,0x7ffd093d1d94,272329099,0,0x0,8
tick,0x7ffd093d1d94,272331083,0,0x0,8
tick,0x7ffd093d1d94,272333821,0,0x0,8
tick,0x7ffd093d1d94,272336297,0,0x0,8
tick,0x7ffd093d1d94,272338543,0,0x0,8
tick,0x7ffd093d1d94,272341237,0,0x0,8
tick,0x7ffd093d1d94,272342998,0,0x0,8
tick,0x7ffd093d1d94,272345296,0,0x0,8
tick,0x7ffd093d1d94,272347442,0,0x0,8
tick,0x7ffd093d1d94,272349503,0,0x0,8
tick,0x7ffd093d1d94,272351574,0,0x0,8
tick,0x7ffd093d1d94,272354763,0,0x0,8
tick,0x7ffd093d1d94,272357056,0,0x0,8
tick,0x7ffd093d1d94,272359947,0,0x0,8
tick,0x7ffd093d1d94,272362727,0,0x0,8
tick,0x7ffd093d1d94,272365277,0,0x0,8
tick,0x7ffd093d1d94,272367703,0,0x0,8
tick,0x7ffd093d1d94,272369920,0,0x0,8
tick,0x7ffd093d1d94,272372173,0,0x0,8
tick,0x7ffd093d1d94,272374334,0,0x0,8
tick,0x7ffd093d1d94,272376532,0,0x0,8
tick,0x7ffd093d1d94,272379359,0,0x0,8
tick,0x7ffd093d1d94,272381472,0,0x0,8
tick,0x7ffd093d1d94,272383669,0,0x0,8
tick,0x7ffd093d1d94,272386317,0,0x0,8
tick,0x7ffd093d1d94,272388822,0,0x0,8
tick,0x7ffd093d1d94,272391537,0,0x0,8
tick,0x7ffd093d1d94,272395127,0,0x0,8
tick,0x7ffd093d1d94,272397654,0,0x0,8
tick,0x7ffd093d1d94,272400667,0,0x0,8
tick,0x7ffd093d1d94,272403425,0,0x0,8
tick,0x7ffd093d1d94,272406295,0,0x0,8
tick,0x7ffd093d1d94,272408668,0,0x0,8
tick,0x7ffd093d1d94,272411019,0,0x0,8
tick,0x7ffd093d1d94,272414007,0,0x0,8
tick,0x7ffd093d1d94,272416380,0,0x0,8
tick,0x7ffd093d1d94,272419237,0,0x0,8
tick,0x7ffd093d1d94,272422267,0,0x0,8
tick,0x7ffd093d1d94,272424762,0,0x0,8
tick,0x7ffd093d1d94,272427513,0,0x0,8
tick,0x7ffd093d1d94,272429757,0,0x0,8
tick,0x7ffd093d1d94,272432553,0,0x0,8
tick,0x7ffd093d1d94,272435731,0,0x0,8
tick,0x7ffd093d1d94,272437937,0,0x0,8
tick,0x7ffd093d1d94,272440410,0,0x0,8
tick,0x7ffd093d1d94,272442314,0,0x0,8
tick,0x7ffd093d1d94,272444341,0,0x0,8
tick,0x7ffd093d1d94,272446901,0,0x0,8
tick,0x7ffd093d1d94,272449464,0,0x0,8
tick,0x7ffd093d1d94,272451290,0,0x0,8
tick,0x7ffd093d1d94,272454815,0,0x0,8
tick,0x7ffd093d1d94,272457426,0,0x0,8
tick,0x7ffd093d1d94,272459669,0,0x0,8
tick,0x7ffd093d1d94,272461943,0,0x0,8
tick,0x7ffd093d1d94,272464061,0,0x0,8
tick,0x7ffd093d1d94,272466735,0,0x0,8
tick,0x7ffd093d1d94,272469685,0,0x0,8
tick,0x7ffd093d1d94,272472639,0,0x0,8
tick,0x7ffd093d1d94,272475125,0,0x0,8
tick,0x7ffd093d1d94,272477261,0,0x0,8
tick,0x7ffd093d1d94,272480148,0,0x0,8
tick,0x7ffd093d1d94,272482380,0,0x0,8
tick,0x7ffd093d1d94,272484507,0,0x0,8
tick,0x7ffd093d1d94,272487496,0,0x0,8
tick,0x7ffd093d1d94,272490762,0,0x0,8
tick,0x7ffd093d1d94,272493009,0,0x0,8
tick,0x7ffd093d1d94,272495240,0,0x0,8
tick,0x7ffd093d1d94,272498001,0,0x0,8
tick,0x7ffd093d1d94,272500023,0,0x0,8
tick,0x7ffd093d1d94,272502472,0,0x0,8
tick,0x7ffd093d1d94,272504717,0,0x0,8
tick,0x7ffd093d1d94,272507604,0,0x0,8
tick,0x7ffd093d1d94,272509609,0,0x0,8
tick,0x7ffd093d1d94,272512366,0,0x0,8
tick,0x7ffd093d1d94,272514101,0,0x0,8
tick,0x7ffd093d1d94,272516219,0,0x0,8
tick,0x7ffd093d1d94,272518274,0,0x0,8
tick,0x7ffd093d1d94,272520784,0,0x0,8
tick,0x7ffd093d1d94,272524203,0,0x0,8
tick,0x7ffd093d1d94,272527340,0,0x0,8
tick,0x7ffd093d1d94,272529514,0,0x0,8
tick,0x7ffd093d1d94,272531500,0,0x0,8
tick,0x7ffd093d1d94,272534388,0,0x0,8
tick,0x7ffd093d1d94,272536660,0,0x0,8
tick,0x7ffd093d1d94,272538894,0,0x0,8
tick,0x7ffd093d1d94,272541379,0,0x0,8
tick,0x7ffd093d1d94,272544056,0,0x0,8
tick,0x7ffd093d1d94,272547737,0,0x0,8
tick,0x7ffd093d1d94,272551286,0,0x0,8
tick,0x7ffd093d1d94,272551595,0,0x0,8
tick,0x7ffd093d1d94,272554162,0,0x0,8
tick,0x7ffd093d1d94,272556902,0,0x0,8
tick,0x7ffd093d1d94,272559434,0,0x0,8
tick,0x7ffd093d1d94,272562356,0,0x0,8
tick,0x7ffd093d1d94,272564122,0,0x0,8
tick,0x7ffd093d1d94,272566673,0,0x0,8
tick,0x7ffd093d1d94,272569109,0,0x0,8
tick,0x7ffd093d1d94,272571684,0,0x0,8
tick,0x7ffd093d1d94,272573810,0,0x0,8
tick,0x7ffd093d1d94,272575496,0,0x0,8
tick,0x7ffd093d1d94,272578760,0,0x0,8
tick,0x7ffd093d1d94,272580824,0,0x0,8
tick,0x7ffd093d1d94,272582877,0,0x0,8
tick,0x7ffd093d1d94,272585353,0,0x0,8
tick,0x7ffd093d1d94,272587548,0,0x0,8
tick,0x7ffd093d1d94,272589682,0,0x0,8
tick,0x7ffd093d1d94,272592250,0,0x0,8
tick,0x7ffd093d1d94,272595696,0,0x0,8
tick,0x7ffd093d1d94,272599062,0,0x0,8
tick,0x7ffd093d1d94,272601256,0,0x0,8
tick,0x7ffd093d1d94,272603728,0,0x0,8
tick,0x7ffd093d1d94,272606467,0,0x0,8
tick,0x7ffd093d1d94,272608623,0,0x0,8
tick,0x7ffd093d1d94,272611848,0,0x0,8
tick,0x7ffd093d1d94,272613499,0,0x0,8
tick,0x7ffd093d1d94,272615362,0,0x0,8
tick,0x7ffd093d1d94,272618262,0,0x0,8
tick,0x7ffd093d1d94,272620870,0,0x0,8
tick,0x7ffd093d1d94,272622756,0,0x0,8
tick,0x7ffd093d1d94,272625785,0,0x0,8
tick,0x7ffd093d1d94,272627778,0,0x0,8
tick,0x7ffd093d1d94,272630972,0,0x0,8
tick,0x7ffd093d1d94,272633110,0,0x0,8
tick,0x7ffd093d1d94,272635701,0,0x0,8
tick,0x7ffd093d1d94,272637733,0,0x0,8
tick,0x7ffd093d1d94,272640129,0,0x0,8
tick,0x7ffd093d1d94,272642259,0,0x0,8
tick,0x7ffd093d1d94,272644355,0,0x0,8
tick,0x7ffd093d1d94,272646762,0,0x0,8
tick,0x7ffd093d1d94,272649640,0,0x0,8
tick,0x7ffd093d1d94,272652056,0,0x0,8
tick,0x7ffd093d1d94,272654189,0,0x0,8
tick,0x7ffd093d1d94,272656559,0,0x0,8
tick,0x7ffd093d1d94,272659145,0,0x0,8
tick,0x7ffd093d1d94,272661000,0,0x0,8
tick,0x7ffd093d1d94,272663273,0,0x0,8
tick,0x7ffd093d1d94,272665394,0,0x0,8
tick,0x7ffd093d1d94,272667447,0,0x0,8
tick,0x7ffd093d1d94,272669763,0,0x0,8
tick,0x7ffd093d1d94,272672531,0,0x0,8
tick,0x7ffd093d1d94,272675162,0,0x0,8
tick,0x7ffd093d1d94,272677992,0,0x0,8
tick,0x7ffd093d1d94,272680533,0,0x0,8
tick,0x7ffd093d1d94,272682790,0,0x0,8
tick,0x7ffd093d1d94,272684877,0,0x0,8
tick,0x7ffd093d1d94,272686783,0,0x0,8
tick,0x7ffd093d1d94,272688891,0,0x0,8
tick,0x7ffd093d1d94,272690961,0,0x0,8
tick,0x7ffd093d1d94,272693300,0,0x0,8
tick,0x7ffd093d1d94,272696649,0,0x0,8
tick,0x7ffd093d1d94,272698676,0,0x0,8
tick,0x7ffd093d1d94,272700828,0,0x0,8
tick,0x7ffd093d1d94,272703245,0,0x0,8
tick,0x7ffd093d1d94,272705113,0,0x0,8
tick,0x7ffd093d1d94,272707715,0,0x0,8
tick,0x7ffd093d1d94,272710189,0,0x0,8
tick,0x7ffd093d1d94,272712234,0,0x0,8
tick,0x7ffd093d1d94,272714299,0,0x0,8
tick,0x7ffd093d1d94,272716677,0,0x0,8
tick,0x7ffd093d1d94,272719761,0,0x0,8
tick,0x7ffd093d1d94,272722175,0,0x0,8
tick,0x7ffd093d1d94,272724267,0,0x0,8
tick,0x7ffd093d1d94,272726805,0,0x0,8
tick,0x7ffd093d1d94,272729441,0,0x0,8
tick,0x7ffd093d1d94,272731478,0,0x0,8
tick,0x7ffd093d1d94,272734065,0,0x0,8
tick,0x7ffd093d1d94,272736686,0,0x0,8
tick,0x7ffd093d1d94,272738708,0,0x0,8
tick,0x7ffd093d1d94,272741860,0,0x0,8
tick,0x7ffd093d1d94,272745304,0,0x0,8
tick,0x7ffd093d1d94,272748392,0,0x0,8
tick,0x7ffd093d1d94,272750902,0,0x0,8
tick,0x7ffd093d1d94,272753055,0,0x0,8
tick,0x7ffd093d1d94,272755927,0,0x0,8
tick,0x7ffd093d1d94,272758420,0,0x0,8
tick,0x7ffd093d1d94,272761579,0,0x0,8
tick,0x7ffd093d1d94,272764614,0,0x0,8
tick,0x7ffd093d1d94,272767001,0,0x0,8
tick,0x7ffd093d1d94,272768993,0,0x0,8
tick,0x7ffd093d1d94,272771854,0,0x0,8
tick,0x7ffd093d1d94,272775131,0,0x0,8
tick,0x7ffd093d1d94,272777973,0,0x0,8
tick,0x7ffd093d1d94,272780269,0,0x0,8
tick,0x7ffd093d1d94,272782988,0,0x0,8
tick,0x7ffd093d1d94,272785720,0,0x0,8
tick,0x7ffd093d1d94,272787760,0,0x0,8
tick,0x7ffd093d1d94,272789857,0,0x0,8
tick,0x7ffd093d1d94,272792790,0,0x0,8
tick,0x7ffd093d1d94,272795675,0,0x0,8
tick,0x7ffd093d1d94,272797870,0,0x0,8
tick,0x7ffd093d1d94,272800153,0,0x0,8
tick,0x7ffd093d1d94,272803511,0,0x0,8
tick,0x7ffd093d1d94,272805286,0,0x0,8
tick,0x7ffd093d1d94,272807537,0,0x0,8
tick,0x7ffd093d1d94,272810213,0,0x0,8
tick,0x7ffd093d1d94,272812244,0,0x0,8
tick,0x7ffd093d1d94,272815104,0,0x0,8
tick,0x7ffd093d1d94,272818027,0,0x0,8
tick,0x7ffd093d1d94,272820024,0,0x0,8
tick,0x7ffd093d1d94,272823301,0,0x0,8
tick,0x7ffd093d1d94,272825414,0,0x0,8
tick,0x7ffd093d1d94,272827556,0,0x0,8
tick,0x7ffd093d1d94,272829631,0,0x0,8
tick,0x7ffd093d1d94,272832565,0,0x0,8
tick,0x7ffd093d1d94,272835088,0,0x0,8
tick,0x7ffd093d1d94,272837154,0,0x0,8
tick,0x7ffd093d1d94,272839141,0,0x0,8
tick,0x7ffd093d1d94,272842114,0,0x0,8
tick,0x7ffd093d1d94,272844290,0,0x0,8
tick,0x7ffd093d1d94,272846734,0,0x0,8
tick,0x7ffd093d1d94,272848702,0,0x0,8
tick,0x7ffd093d1d94,272850697,0,0x0,8
tick,0x7ffd093d1d94,272853843,0,0x0,8
tick,0x7ffd093d1d94,272855953,0,0x0,8
tick,0x7ffd093d1d94,272859213,0,0x0,8
tick,0x7ffd093d1d94,272861579,0,0x0,8
tick,0x7ffd093d1d94,272864465,0,0x0,8
tick,0x7ffd093d1d94,272866558,0,0x0,8
tick,0x7ffd093d1d94,272868831,0,0x0,8
tick,0x7ffd093d1d94,272871507,0,0x0,8
tick,0x7ffd093d1d94,272874378,0,0x0,8
tick,0x7ffd093d1d94,272876982,0,0x0,8
tick,0x7ffd093d1d94,272878888,0,0x0,8
tick,0x7ffd093d1d94,272881859,0,0x0,8
tick,0x7ffd093d1d94,272883896,0,0x0,8
tick,0x7ffd093d1d94,272886446,0,0x0,8
tick,0x7ffd093d1d94,272888491,0,0x0,8
tick,0x7ffd093d1d94,272890605,0,0x0,8
tick,0x7ffd093d1d94,272893571,0,0x0,8
tick,0x7ffd093d1d94,272896752,0,0x0,8
tick,0x7ffd093d1d94,272898046,0,0x0,8
tick,0x7ffd093d1d94,272900278,0,0x0,8
tick,0x7ffd093d1d94,272902855,0,0x0,8
tick,0x7ffd093d1d94,272905234,0,0x0,8
tick,0x7ffd093d1d94,272907612,0,0x0,8
tick,0x7ffd093d1d94,272909737,0,0x0,8
tick,0x7ffd093d1d94,272913140,0,0x0,8
tick,0x7ffd093d1d94,272915079,0,0x0,8
tick,0x7ffd093d1d94,272917415,0,0x0,8
tick,0x7ffd093d1d94,272919728,0,0x0,8
tick,0x7ffd093d1d94,272921756,0,0x0,8
tick,0x7ffd093d1d94,272924124,0,0x0,8
tick,0x7ffd093d1d94,272926639,0,0x0,8
tick,0x7ffd093d1d94,272928582,0,0x0,8
tick,0x7ffd093d1d94,272930735,0,0x0,8
tick,0x7ffd093d1d94,272933303,0,0x0,8
tick,0x7ffd093d1d94,272935342,0,0x0,8
tick,0x7ffd093d1d94,272937809,0,0x0,8
tick,0x7ffd093d1d94,272940108,0,0x0,8
tick,0x7ffd093d1d94,272942132,0,0x0,8
tick,0x7ffd093d1d94,272945110,0,0x0,8
tick,0x7ffd093d1d94,272947235,0,0x0,8
tick,0x7ffd093d1d94,272949131,0,0x0,8
tick,0x7ffd093d1d94,272951468,0,0x0,8
tick,0x7ffd093d1d94,272954159,0,0x0,8
tick,0x7ffd093d1d94,272956281,0,0x0,8
tick,0x7ffd093d1d94,272959524,0,0x0,8
tick,0x7ffd093d1d94,272961541,0,0x0,8
tick,0x7ffd093d1d94,272963646,0,0x0,8
tick,0x7ffd093d1d94,272965983,0,0x0,8
tick,0x7ffd093d1d94,272967974,0,0x0,8
tick,0x7ffd093d1d94,272970179,0,0x0,8
tick,0x7ffd093d1d94,272972125,0,0x0,8
tick,0x7ffd093d1d94,272974643,0,0x0,8
tick,0x7ffd093d1d94,272976647,0,0x0,8
tick,0x7ffd093d1d94,272979643,0,0x0,8
tick,0x7ffd093d1d94,272981613,0,0x0,8
tick,0x7ffd093d1d94,272985126,0,0x0,8
tick,0x7ffd093d1d94,272987135,0,0x0,8
tick,0x7ffd093d1d94,272989216,0,0x0,8
tick,0x7ffd093d1d94,272991421,0,0x0,8
tick,0x7ffd093d1d94,272993692,0,0x0,8
tick,0x7ffd093d1d94,272996517,0,0x0,8
tick,0x7ffd093d1d94,272998766,0,0x0,8
tick,0x7ffd093d1d94,273000467,0,0x0,8
tick,0x7ffd093d1d94,273002908,0,0x0,8
tick,0x7ffd093d1d94,273005080,0,0x0,8
tick,0x7ffd093d1d94,273007445,0,0x0,8
tick,0x7ffd093d1d94,273009448,0,0x0,8
tick,0x7ffd093d1d94,273012136,0,0x0,8
tick,0x7ffd093d1d94,273014156,0,0x0,8
tick,0x7ffd093d1d94,273016174,0,0x0,8
tick,0x7ffd093d1d94,273018183,0,0x0,8
tick,0x7ffd093d1d94,273020474,0,0x0,8
tick,0x7ffd093d1d94,273022502,0,0x0,8
tick,0x7ffd093d1d94,273024603,0,0x0,8
tick,0x7ffd093d1d94,273026694,0,0x0,8
tick,0x7ffd093d1d94,273028691,0,0x0,8
tick,0x7ffd093d1d94,273030748,0,0x0,8
tick,0x7ffd093d1d94,273032826,0,0x0,8
tick,0x7ffd093d1d94,273035356,0,0x0,8
tick,0x7ffd093d1d94,273037377,0,0x0,8
tick,0x7ffd093d1d94,273040025,0,0x0,8
tick,0x7ffd093d1d94,273042362,0,0x0,8
tick,0x7ffd093d1d94,273044474,0,0x0,8
tick,0x7ffd093d1d94,273046478,0,0x0,8
tick,0x7ffd093d1d94,273048470,0,0x0,8
tick,0x7ffd093d1d94,273050813,0,0x0,8
tick,0x7ffd093d1d94,273053332,0,0x0,8
tick,0x7ffd093d1d94,273055799,0,0x0,8
tick,0x7ffd093d1d94,273057753,0,0x0,8
tick,0x7ffd093d1d94,273059973,0,0x0,8
tick,0x7ffd093d1d94,273062030,0,0x0,8
tick,0x7ffd093d1d94,273065494,0,0x0,8
tick,0x7ffd093d1d94,273067589,0,0x0,8
tick,0x7ffd093d1d94,273070327,0,0x0,8
tick,0x7ffd093d1d94,273072608,0,0x0,8
tick,0x7ffd093d1d94,273075630,0,0x0,8
tick,0x7ffd093d1d94,273077898,0,0x0,8
tick,0x7ffd093d1d94,273081108,0,0x0,8
tick,0x7ffd093d1d94,273082984,0,0x0,8
tick,0x7ffd093d1d94,273085637,0,0x0,8
tick,0x7ffd093d1d94,273087548,0,0x0,8
tick,0x7ffd093d1d94,273090126,0,0x0,8
tick,0x7ffd093d1d94,273092966,0,0x0,8
tick,0x7ffd093d1d94,273095655,0,0x0,8
tick,0x7ffd093d1d94,273098414,0,0x0,8
tick,0x7ffd093d1d94,273100669,0,0x0,8
tick,0x7ffd093d1d94,273103177,0,0x0,8
tick,0x7ffd093d1d94,273105474,0,0x0,8
tick,0x7ffd093d1d94,273108039,0,0x0,8
tick,0x7ffd093d1d94,273110134,0,0x0,8
tick,0x7ffd093d1d94,273112131,0,0x0,8
tick,0x7ffd093d1d94,273114151,0,0x0,8
tick,0x7ffd093d1d94,273116685,0,0x0,8
tick,0x7ffd093d1d94,273119141,0,0x0,8
tick,0x7ffd093d1d94,273121668,0,0x0,8
tick,0x7ffd093d1d94,273123657,0,0x0,8
tick,0x7ffd093d1d94,273125659,0,0x0,8
tick,0x7ffd093d1d94,273127799,0,0x0,8
tick,0x7ffd093d1d94,273129955,0,0x0,8
tick,0x7ffd093d1d94,273132677,0,0x0,8
tick,0x7ffd093d1d94,273135360,0,0x0,8
tick,0x7ffd093d1d94,273137466,0,0x0,8
tick,0x7ffd093d1d94,273139337,0,0x0,8
tick,0x7ffd093d1d94,273142088,0,0x0,8
tick,0x7ffd093d1d94,273143998,0,0x0,8
tick,0x7ffd093d1d94,273146669,0,0x0,8
tick,0x7ffd093d1d94,273148594,0,0x0,8
tick,0x7ffd093d1d94,273150533,0,0x0,8
tick,0x7ffd093d1d94,273153712,0,0x0,8
tick,0x7ffd093d1d94,273156123,0,0x0,8
tick,0x7ffd093d1d94,273158284,0,0x0,8
tick,0x7ffd093d1d94,273161169,0,0x0,8
tick,0x7ffd093d1d94,273163230,0,0x0,8
tick,0x7ffd093d1d94,273166338,0,0x0,8
tick,0x7ffd093d1d94,273168769,0,0x0,8
tick,0x7ffd093d1d94,273171494,0,0x0,8
tick,0x7ffd093d1d94,273174339,0,0x0,8
tick,0x7ffd093d1d94,273176917,0,0x0,8
tick,0x7ffd093d1d94,273178935,0,0x0,8
tick,0x7ffd093d1d94,273180935,0,0x0,8
tick,0x7ffd093d1d94,273183457,0,0x0,8
tick,0x7ffd093d1d94,273185597,0,0x0,8
tick,0x7ffd093d1d94,273187693,0,0x0,8
tick,0x7ffd093d1d94,273189874,0,0x0,8
tick,0x7ffd093d1d94,273192832,0,0x0,8
tick,0x7ffd093d1d94,273195397,0,0x0,8
tick,0x7ffd093d1d94,273197387,0,0x0,8
tick,0x7ffd093d1d94,273199491,0,0x0,8
tick,0x7ffd093d1d94,273201665,0,0x0,8
tick,0x7ffd093d1d94,273204568,0,0x0,8
tick,0x7ffd093d1d94,273207129,0,0x0,8
tick,0x7ffd093d1d94,273210240,0,0x0,8
tick,0x7ffd093d1d94,273212033,0,0x0,8
tick,0x7ffd093d1d94,273214082,0,0x0,8
tick,0x7ffd093d1d94,273216243,0,0x0,8
tick,0x7ffd093d1d94,273218305,0,0x0,8
tick,0x7ffd093d1d94,273220323,0,0x0,8
tick,0x7ffd093d1d94,273222315,0,0x0,8
tick,0x7ffd093d1d94,273225235,0,0x0,8
tick,0x7ffd093d1d94,273227456,0,0x0,8
tick,0x7ffd093d1d94,273229488,0,0x0,8
tick,0x7ffd093d1d94,273231399,0,0x0,8
tick,0x7ffd093d1d94,273234417,0,0x0,8
tick,0x7ffd093d1d94,273236773,0,0x0,8
tick,0x7ffd093d1d94,273239600,0,0x0,8
tick,0x7ffd093d1d94,273241263,0,0x0,8
tick,0x7ffd093d1d94,273244300,0,0x0,8
tick,0x7ffd093d1d94,273246871,0,0x0,8
tick,0x7ffd093d1d94,273249186,0,0x0,8
tick,0x7ffd093d1d94,273251013,0,0x0,8
tick,0x7ffd093d1d94,273254055,0,0x0,8
tick,0x7ffd093d1d94,273256430,0,0x0,8
tick,0x7ffd093d1d94,273259333,0,0x0,8
tick,0x7ffd093d1d94,273261411,0,0x0,8
tick,0x7ffd093d1d94,273263751,0,0x0,8
tick,0x7ffd093d1d94,273266382,0,0x0,8
tick,0x7ffd093d1d94,273268529,0,0x0,8
tick,0x7ffd093d1d94,273270503,0,0x0,8
tick,0x7ffd093d1d94,273273590,0,0x0,8
tick,0x7ffd093d1d94,273275647,0,0x0,8
tick,0x7ffd093d1d94,273277777,0,0x0,8
tick,0x7ffd093d1d94,273280691,0,0x0,8
tick,0x7ffd093d1d94,273283643,0,0x0,8
tick,0x7ffd093d1d94,273285256,0,0x0,8
tick,0x7ffd093d1d94,273287216,0,0x0,8
tick,0x7ffd093d1d94,273289231,0,0x0,8
tick,0x7ffd093d1d94,273291192,0,0x0,8
tick,0x7ffd093d1d94,273293292,0,0x0,8
tick,0x7ffd093d1d94,273295220,0,0x0,8
tick,0x7ffd093d1d94,273297372,0,0x0,8
tick,0x7ffd093d1d94,273299314,0,0x0,8
tick,0x7ffd093d1d94,273301582,0,0x0,8
tick,0x7ffd093d1d94,273304660,0,0x0,8
tick,0x7ffd093d1d94,273307205,0,0x0,8
tick,0x7ffd093d1d94,273309236,0,0x0,8
tick,0x7ffd093d1d94,273311259,0,0x0,8
tick,0x7ffd093d1d94,273314207,0,0x0,8
tick,0x7ffd093d1d94,273316441,0,0x0,8
tick,0x7ffd093d1d94,273318594,0,0x0,8
tick,0x7ffd093d1d94,273321561,0,0x0,8
tick,0x7ffd093d1d94,273323690,0,0x0,8
tick,0x7ffd093d1d94,273326187,0,0x0,8
tick,0x7ffd093d1d94,273328257,0,0x0,8
tick,0x7ffd093d1d94,273330224,0,0x0,8
tick,0x7ffd093d1d94,273332104,0,0x0,8
tick,0x7ffd093d1d94,273334150,0,0x0,8
tick,0x7ffd093d1d94,273335716,0,0x0,8
tick,0x7ffd093d1d94,273337686,0,0x0,8
tick,0x7ffd093d1d94,273339842,0,0x0,8
tick,0x7ffd093d1d94,273341653,0,0x0,8
tick,0x7ffd093d1d94,273343812,0,0x0,8
tick,0x7ffd093d1d94,273345335,0,0x0,8
tick,0x7ffd093d1d94,273347392,0,0x0,8
tick,0x7ffd093d1d94,273350290,0,0x0,8
tick,0x7ffd093d1d94,273352384,0,0x0,8
tick,0x7ffd093d1d94,273354676,0,0x0,8
tick,0x7ffd093d1d94,273357669,0,0x0,8
tick,0x7ffd093d1d94,273359585,0,0x0,8
tick,0x7ffd093d1d94,273361683,0,0x0,8
tick,0x7ffd093d1d94,273363436,0,0x0,8
tick,0x7ffd093d1d94,273365613,0,0x0,8
tick,0x7ffd093d1d94,273367427,0,0x0,8
tick,0x7ffd093d1d94,273370271,0,0x0,8
tick,0x7ffd093d1d94,273372508,0,0x0,8
tick,0x7ffd093d1d94,273375482,0,0x0,8
tick,0x7ffd093d1d94,273377568,0,0x0,8
tick,0x7ffd093d1d94,273379769,0,0x0,8
tick,0x7ffd093d1d94,273382429,0,0x0,8
tick,0x7ffd093d1d94,273384552,0,0x0,8
tick,0x7ffd093d1d94,273387284,0,0x0,8
tick,0x7ffd093d1d94,273389448,0,0x0,8
tick,0x7ffd093d1d94,273391416,0,0x0,8
tick,0x7ffd093d1d94,273393488,0,0x0,8
tick,0x7ffd093d1d94,273395503,0,0x0,8
tick,0x7ffd093d1d94,273398410,0,0x0,8
tick,0x7ffd093d1d94,273400475,0,0x0,8
tick,0x7ffd093d1d94,273402510,0,0x0,8
tick,0x7ffd093d1d94,273404594,0,0x0,8
tick,0x7ffd093d1d94,273407297,0,0x0,8
tick,0x7ffd093d1d94,273409898,0,0x0,8
tick,0x7ffd093d1d94,273412067,0,0x0,8
tick,0x7ffd093d1d94,273415348,0,0x0,8
tick,0x7ffd093d1d94,273417635,0,0x0,8
tick,0x7ffd093d1d94,273419635,0,0x0,8
tick,0x7ffd093d1d94,273421571,0,0x0,8
tick,0x7ffd093d1d94,273424176,0,0x0,8
tick,0x7ffd093d1d94,273426385,0,0x0,8
tick,0x7ffd093d1d94,273429006,0,0x0,8
tick,0x7ffd093d1d94,273431312,0,0x0,8
tick,0x7ffd093d1d94,273434394,0,0x0,8
tick,0x7ffd093d1d94,273436421,0,0x0,8
tick,0x7ffd093d1d94,273439541,0,0x0,8
tick,0x7ffd093d1d94,273441445,0,0x0,8
tick,0x7ffd093d1d94,273443573,0,0x0,8
tick,0x7ffd093d1d94,273446168,0,0x0,8
tick,0x7ffd093d1d94,273448318,0,0x0,8
tick,0x7ffd093d1d94,273450555,0,0x0,8
tick,0x7ffd093d1d94,273453005,0,0x0,8
tick,0x7ffd093d1d94,273454942,0,0x0,8
tick,0x7ffd093d1d94,273457699,0,0x0,8
tick,0x7ffd093d1d94,273460605,0,0x0,8
tick,0x7ffd093d1d94,273463050,0,0x0,8
tick,0x7ffd093d1d94,273465026,0,0x0,8
tick,0x7ffd093d1d94,273467543,0,0x0,8
tick,0x7ffd093d1d94,273469635,0,0x0,8
tick,0x7ffd093d1d94,273471701,0,0x0,8
tick,0x7ffd093d1d94,273473763,0,0x0,8
tick,0x7ffd093d1d94,273476615,0,0x0,8
tick,0x7ffd093d1d94,273478609,0,0x0,8
tick,0x7ffd093d1d94,273481134,0,0x0,8
tick,0x7ffd093d1d94,273483484,0,0x0,8
tick,0x7ffd093d1d94,273485763,0,0x0,8
tick,0x7ffd093d1d94,273488745,0,0x0,8
tick,0x7ffd093d1d94,273490994,0,0x0,8
tick,0x7ffd093d1d94,273493443,0,0x0,8
tick,0x7ffd093d1d94,273495443,0,0x0,8
tick,0x7ffd093d1d94,273497809,0,0x0,8
tick,0x7ffd093d1d94,273499850,0,0x0,8
tick,0x7ffd093d1d94,273502013,0,0x0,8
tick,0x7ffd093d1d94,273504542,0,0x0,8
tick,0x7ffd093d1d94,273506515,0,0x0,8
tick,0x7ffd093d1d94,273508625,0,0x0,8
tick,0x7ffd093d1d94,273511335,0,0x0,8
tick,0x7ffd093d1d94,273514153,0,0x0,8
tick,0x7ffd093d1d94,273516316,0,0x0,8
tick,0x7ffd093d1d94,273518460,0,0x0,8
tick,0x7ffd093d1d94,273520693,0,0x0,8
tick,0x7ffd093d1d94,273523552,0,0x0,8
tick,0x7ffd093d1d94,273525564,0,0x0,8
tick,0x7ffd093d1d94,273527734,0,0x0,8
tick,0x7ffd093d1d94,273529835,0,0x0,8
tick,0x7ffd093d1d94,273532661,0,0x0,8
tick,0x7ffd093d1d94,273535386,0,0x0,8
tick,0x7ffd093d1d94,273538365,0,0x0,8
tick,0x7ffd093d1d94,273540266,0,0x0,8
tick,0x7ffd093d1d94,273543276,0,0x0,8
tick,0x7ffd093d1d94,273545330,0,0x0,8
tick,0x7ffd093d1d94,273547650,0,0x0,8
tick,0x7ffd093d1d94,273549833,0,0x0,8
tick,0x7ffd093d1d94,273552123,0,0x0,8
tick,0x7ffd093d1d94,273554188,0,0x0,8
tick,0x7ffd093d1d94,273556894,0,0x0,8
tick,0x7ffd093d1d94,273559130,0,0x0,8
tick,0x7ffd093d1d94,273560947,0,0x0,8
tick,0x7ffd093d1d94,273562999,0,0x0,8
tick,0x7ffd093d1d94,273565529,0,0x0,8
tick,0x7ffd093d1d94,273567651,0,0x0,8
tick,0x7ffd093d1d94,273570254,0,0x0,8
tick,0x7ffd093d1d94,273572836,0,0x0,8
tick,0x7ffd093d1d94,273575043,0,0x0,8
tick,0x7ffd093d1d94,273577098,0,0x0,8
tick,0x7ffd093d1d94,273579869,0,0x0,8
tick,0x7ffd093d1d94,273583073,0,0x0,8
tick,0x7ffd093d1d94,273585147,0,0x0,8
tick,0x7ffd093d1d94,273587606,0,0x0,8
tick,0x7ffd093d1d94,273589714,0,0x0,8
tick,0x7ffd093d1d94,273591734,0,0x0,8
tick,0x7ffd093d1d94,273595189,0,0x0,8
tick,0x7ffd093d1d94,273597526,0,0x0,8
tick,0x7ffd093d1d94,273600669,0,0x0,8
tick,0x7ffd093d1d94,273603221,0,0x0,8
tick,0x7ffd093d1d94,273605413,0,0x0,8
tick,0x7ffd093d1d94,273607591,0,0x0,8
tick,0x7ffd093d1d94,273609530,0,0x0,8
tick,0x7ffd093d1d94,273611600,0,0x0,8
tick,0x7ffd093d1d94,273614612,0,0x0,8
tick,0x7ffd093d1d94,273616660,0,0x0,8
tick,0x7ffd093d1d94,273618764,0,0x0,8
tick,0x7ffd093d1d94,273620539,0,0x0,8
tick,0x7ffd093d1d94,273622576,0,0x0,8
tick,0x7ffd093d1d94,273625173,0,0x0,8
tick,0x7ffd093d1d94,273627298,0,0x0,8
tick,0x7ffd093d1d94,273629336,0,0x0,8
tick,0x7ffd093d1d94,273632810,0,0x0,8
tick,0x7ffd093d1d94,273635518,0,0x0,8
tick,0x7ffd093d1d94,273638159,0,0x0,8
tick,0x7ffd093d1d94,273640847,0,0x0,8
tick,0x7ffd093d1d94,273643806,0,0x0,8
tick,0x7ffd093d1d94,273646523,0,0x0,8
tick,0x7ffd093d1d94,273649333,0,0x0,8
tick,0x7ffd093d1d94,273651434,0,0x0,8
tick,0x7ffd093d1d94,273653458,0,0x0,8
tick,0x7ffd093d1d94,273655381,0,0x0,8
tick,0x7ffd093d1d94,273658297,0,0x0,8
tick,0x7ffd093d1d94,273661322,0,0x0,8
tick,0x7ffd093d1d94,273663622,0,0x0,8
tick,0x7ffd093d1d94,273666036,0,0x0,8
tick,0x7ffd093d1d94,273669051,0,0x0,8
tick,0x7ffd093d1d94,273671240,0,0x0,8
tick,0x7ffd093d1d94,273673362,0,0x0,8
tick,0x7ffd093d1d94,273676484,0,0x0,8
tick,0x7ffd093d1d94,273678314,0,0x0,8
tick,0x7ffd093d1d94,273680174,0,0x0,8
tick,0x7ffd093d1d94,273682816,0,0x0,8
tick,0x7ffd093d1d94,273684752,0,0x0,8
tick,0x7ffd093d1d94,273687059,0,0x0,8
tick,0x7ffd093d1d94,273689345,0,0x0,8
tick,0x7ffd093d1d94,273692324,0,0x0,8
tick,0x7ffd093d1d94,273694308,0,0x0,8
tick,0x7ffd093d1d94,273696901,0,0x0,8
tick,0x7ffd093d1d94,273699440,0,0x0,8
tick,0x7ffd093d1d94,273702047,0,0x0,8
tick,0x7ffd093d1d94,273704188,0,0x0,8
tick,0x7ffd093d1d94,273706556,0,0x0,8
tick,0x7ffd093d1d94,273709700,0,0x0,8
tick,0x7ffd093d1d94,273712245,0,0x0,8
tick,0x7ffd093d1d94,273714189,0,0x0,8
tick,0x7ffd093d1d94,273717043,0,0x0,8
tick,0x7ffd093d1d94,273719061,0,0x0,8
tick,0x7ffd093d1d94,273721559,0,0x0,8
tick,0x7ffd093d1d94,273724079,0,0x0,8
tick,0x7ffd093d1d94,273726389,0,0x0,8
tick,0x7ffd093d1d94,273728391,0,0x0,8
tick,0x7ffd093d1d94,273730775,0,0x0,8
tick,0x7ffd093d1d94,273733328,0,0x0,8
tick,0x7ffd093d1d94,273735295,0,0x0,8
tick,0x7ffd093d1d94,273737333,0,0x0,8
tick,0x7ffd093d1d94,273739407,0,0x0,8
tick,0x7ffd093d1d94,273741413,0,0x0,8
tick,0x7ffd093d1d94,273743669,0,0x0,8
tick,0x7ffd093d1d94,273746182,0,0x0,8
tick,0x7ffd093d1d94,273748754,0,0x0,8
tick,0x7ffd093d1d94,273750907,0,0x0,8
tick,0x7ffd093d1d94,273752890,0,0x0,8
tick,0x7ffd093d1d94,273755407,0,0x0,8
tick,0x7ffd093d1d94,273758023,0,0x0,8
tick,0x7ffd093d1d94,273760100,0,0x0,8
tick,0x7ffd093d1d94,273762075,0,0x0,8
tick,0x7ffd093d1d94,273765096,0,0x0,8
tick,0x7ffd093d1d94,273767430,0,0x0,8
tick,0x7ffd093d1d94,273769409,0,0x0,8
tick,0x7ffd093d1d94,273772403,0,0x0,8
tick,0x7ffd093d1d94,273774872,0,0x0,8
tick,0x7ffd093d1d94,273777482,0,0x0,8
tick,0x7ffd093d1d94,273779696,0,0x0,8
tick,0x7ffd093d1d94,273782672,0,0x0,8
tick,0x7ffd093d1d94,273785198,0,0x0,8
tick,0x7ffd093d1d94,273787227,0,0x0,8
tick,0x7ffd093d1d94,273802029,0,0x0,8
tick,0x7ffd093d1d94,273817274,0,0x0,8
tick,0x7ffd093d1d94,273833307,0,0x0,8
tick,0x7ffd093d1d94,273850649,0,0x0,8
tick,0x7ffd093d1d94,273864875,0,0x0,8
tick,0x7ffd093d1d94,273880487,0,0x0,8
tick,0x7ffd093d1d94,273896089,0,0x0,8
tick,0x7ffd093d1d94,273912168,0,0x0,8
tick,0x7ffd093d1d94,273927358,0,0x0,8
tick,0x7ffd093d1d94,273943117,0,0x0,8
tick,0x7ffd093d1d94,273959121,0,0x0,8
tick,0x7ffd093d1d94,273974770,0,0x0,8
tick,0x7ffd093d1d94,273990166,0,0x0,8
tick,0x7ffd093d1d94,274005806,0,0x0,8
tick,0x7ffd093d1d94,274021331,0,0x0,8
tick,0x7ffd093d1d94,274037827,0,0x0,8
tick,0x7ffd093d1d94,274053266,0,0x0,8
tick,0x7ffd093d1d94,274068250,0,0x0,8
tick,0x7ffd093d1d94,274084083,0,0x0,8
tick,0x7ffd093d1d94,274099884,0,0x0,8
tick,0x7ffd093d1d94,274115050,0,0x0,8
tick,0x7ffd093d1d94,274130152,0,0x0,8
tick,0x7ffd093d1d94,274145700,0,0x0,8
tick,0x7ffd093d1d94,274160590,0,0x0,8
tick,0x7ffd093d1d94,274176431,0,0x0,8
tick,0x7ffd093d1d94,274191296,0,0x0,8
tick,0x7ffd093d1d94,274207139,0,0x0,8
tick,0x7ffd093d1d94,274223275,0,0x0,8
tick,0x7ffd093d1d94,274239316,0,0x0,8
tick,0x7ffd093d1d94,274254912,0,0x0,8
tick,0x7ffd093d1d94,274270533,0,0x0,8
tick,0x7ffd093d1d94,274286792,0,0x0,8
tick,0x7ffd093d1d94,274302842,0,0x0,8
tick,0x7ffd093d1d94,274318657,0,0x0,8
tick,0x7ffd093d1d94,274334478,0,0x0,8
tick,0x7ffd093d1d94,274350585,0,0x0,8
tick,0x7ffd093d1d94,274366287,0,0x0,8
tick,0x7ffd093d1d94,274381817,0,0x0,8
tick,0x7ffd093d1d94,274397429,0,0x0,8
tick,0x7ffd093d1d94,274413005,0,0x0,8
tick,0x7ffd093d1d94,274428274,0,0x0,8
tick,0x7ffd093d1d94,274443328,0,0x0,8
tick,0x7ffd093d1d94,274458405,0,0x0,8
tick,0x7ffd093d1d94,274473873,0,0x0,8
tick,0x7ffd093d1d94,274489092,0,0x0,8
tick,0x7ffd093d1d94,274504972,0,0x0,8
tick,0x7ffd093d1d94,274520803,0,0x0,8
tick,0x7ffd093d1d94,274536769,0,0x0,8
tick,0x7ffd093d1d94,274552748,0,0x0,8
tick,0x7ffd093d1d94,274568291,0,0x0,8
tick,0x7ffd093d1d94,274586986,0,0x0,8
tick,0x7ffd093d1d94,274606180,0,0x0,8
tick,0x7ffd093d1d94,274615374,0,0x0,8
tick,0x7ffd093d1d94,274631030,0,0x0,8
tick,0x7ffd093d1d94,274646496,0,0x0,8
tick,0x7ffd093d1d94,274662857,0,0x0,8
tick,0x7ffd093d1d94,274677876,0,0x0,8
tick,0x7ffd093d1d94,274693371,0,0x0,8
tick,0x7ffd093d1d94,274708835,0,0x0,8
tick,0x7ffd093d1d94,274724572,0,0x0,8
tick,0x7ffd093d1d94,274740354,0,0x0,8
tick,0x7ffd093d1d94,274755980,0,0x0,8
tick,0x7ffd093d1d94,274771485,0,0x0,8
tick,0x7ffd093d1d94,274786807,0,0x0,8
tick,0x7ffd093d1d94,274801910,0,0x0,8
tick,0x7ffd093d1d94,274816500,0,0x0,8
tick,0x7ffd093d1d94,274832743,0,0x0,8
tick,0x7ffd093d1d94,274849270,0,0x0,8
tick,0x7ffd093d1d94,274864540,0,0x0,8
tick,0x7ffd093d1d94,274879837,0,0x0,8
tick,0x7ffd093d1d94,274895095,0,0x0,8
tick,0x7ffd093d1d94,274911154,0,0x0,8
tick,0x7ffd093d1d94,274927273,0,0x0,8
tick,0x7ffd093d1d94,274942752,0,0x0,8
tick,0x7ffd093d1d94,274957664,0,0x0,8
tick,0x7ffd093d1d94,274973378,0,0x0,8
tick,0x7ffd093d1d94,274988596,0,0x0,8
tick,0x7ffd093d1d94,275004271,0,0x0,8
tick,0x7ffd093d1d94,275019820,0,0x0,8
tick,0x7ffd093d1d94,275035259,0,0x0,8
tick,0x7ffd093d1d94,275051751,0,0x0,8
tick,0x7ffd093d1d94,275066498,0,0x0,8
tick,0x7ffd093d1d94,275082685,0,0x0,8
tick,0x7ffd093d1d94,275097304,0,0x0,8
tick,0x7ffd093d1d94,275112824,0,0x0,8
tick,0x7ffd093d1d94,275128036,0,0x0,8
tick,0x7ffd093d1d94,275143562,0,0x0,8
tick,0x7ffd093d1d94,275158569,0,0x0,8
tick,0x7ffd093d1d94,275174014,0,0x0,8
tick,0x7ffd093d1d94,275189457,0,0x0,8
tick,0x7ffd093d1d94,275205062,0,0x0,8
tick,0x7ffd093d1d94,275221218,0,0x0,8
tick,0x7ffd093d1d94,275236227,0,0x0,8
tick,0x7ffd093d1d94,275251614,0,0x0,8
tick,0x7ffd093d1d94,275267960,0,0x0,8
tick,0x7ffd093d1d94,275283954,0,0x0,8
tick,0x7ffd093d1d94,275299977,0,0x0,8
tick,0x7ffd093d1d94,275315498,0,0x0,8
tick,0x7ffd093d1d94,275331534,0,0x0,8
tick,0x7ffd093d1d94,275346495,0,0x0,8
tick,0x7ffd093d1d94,275361501,0,0x0,8
tick,0x7ffd093d1d94,275377355,0,0x0,8
tick,0x7ffd093d1d94,275393011,0,0x0,8
tick,0x7ffd093d1d94,275408591,0,0x0,8
tick,0x7ffd093d1d94,275424437,0,0x0,8
tick,0x7ffd093d1d94,275439879,0,0x0,8
tick,0x7ffd093d1d94,275455526,0,0x0,8
tick,0x7ffd093d1d94,275471133,0,0x0,8
tick,0x7ffd093d1d94,275487065,0,0x0,8
tick,0x7ffd093d1d94,275503421,0,0x0,8
tick,0x7ffd093d1d94,275519332,0,0x0,8
tick,0x7ffd093d1d94,275535414,0,0x0,8
tick,0x7ffd093d1d94,275550603,0,0x0,8
tick,0x7ffd093d1d94,275566154,0,0x0,8
tick,0x7ffd093d1d94,275581657,0,0x0,8
tick,0x7ffd093d1d94,275597224,0,0x0,8
tick,0x7ffd093d1d94,275612422,0,0x0,8
tick,0x7ffd093d1d94,275627488,0,0x0,8
tick,0x7ffd093d1d94,275642836,0,0x0,8
tick,0x7ffd093d1d94,275658759,0,0x0,8
tick,0x7ffd093d1d94,275674021,0,0x0,8
tick,0x7ffd093d1d94,275690315,0,0x0,8
tick,0x7ffd093d1d94,275705494,0,0x0,8
tick,0x7ffd093d1d94,275721164,0,0x0,8
tick,0x7ffd093d1d94,275736667,0,0x0,8
tick,0x7ffd093d1d94,275751397,0,0x0,8
tick,0x7ffd093d1d94,275767077,0,0x0,8
tick,0x7ffd093d1d94,275782891,0,0x0,8
tick,0x7ffd093d1d94,275798322,0,0x0,8
tick,0x7ffd093d1d94,275813669,0,0x0,8
tick,0x7ffd093d1d94,275829479,0,0x0,8
tick,0x7ffd093d1d94,275846020,0,0x0,8
tick,0x7ffd093d1d94,275862404,0,0x0,8
tick,0x7ffd093d1d94,275877594,0,0x0,8
tick,0x7ffd093d1d94,275893022,0,0x0,8
tick,0x7ffd093d1d94,275908687,0,0x0,8
tick,0x7ffd093d1d94,275923501,0,0x0,8
tick,0x7ffd093d1d94,275939336,0,0x0,8
tick,0x7ffd093d1d94,275954918,0,0x0,8
tick,0x7ffd093d1d94,275970874,0,0x0,8
tick,0x7ffd093d1d94,275986547,0,0x0,8
tick,0x7ffd093d1d94,276002227,0,0x0,8
tick,0x7ffd093d1d94,276017563,0,0x0,8
tick,0x7ffd093d1d94,276032570,0,0x0,8
tick,0x7ffd093d1d94,276047976,0,0x0,8
tick,0x7ffd093d1d94,276063801,0,0x0,8
tick,0x7ffd093d1d94,276078961,0,0x0,8
tick,0x7ffd093d1d94,276094237,0,0x0,8
tick,0x7ffd093d1d94,276110636,0,0x0,8
tick,0x7ffd093d1d94,276126507,0,0x0,8
tick,0x7ffd093d1d94,276142214,0,0x0,8
tick,0x7ffd093d1d94,276157854,0,0x0,8
tick,0x7ffd093d1d94,276173294,0,0x0,8
tick,0x7ffd093d1d94,276188727,0,0x0,8
tick,0x7ffd093d1d94,276205330,0,0x0,8
tick,0x7ffd093d1d94,276220421,0,0x0,8
tick,0x7ffd093d1d94,276235594,0,0x0,8
tick,0x7ffd093d1d94,276251253,0,0x0,8
tick,0x7ffd093d1d94,276267122,0,0x0,8
tick,0x7ffd093d1d94,276283208,0,0x0,8
tick,0x7ffd093d1d94,276297954,0,0x0,8
tick,0x7ffd093d1d94,276313337,0,0x0,8
tick,0x7ffd093d1d94,276329079,0,0x0,8
tick,0x7ffd093d1d94,276344754,0,0x0,8
tick,0x7ffd093d1d94,276360406,0,0x0,8
tick,0x7ffd093d1d94,276375329,0,0x0,8
tick,0x7ffd093d1d94,276390643,0,0x0,8
tick,0x7ffd093d1d94,276406357,0,0x0,8
tick,0x7ffd093d1d94,276421982,0,0x0,8
tick,0x7ffd093d1d94,276437589,0,0x0,8
tick,0x7ffd093d1d94,276453605,0,0x0,8
tick,0x7ffd093d1d94,276468740,0,0x0,8
tick,0x7ffd093d1d94,276485217,0,0x0,8
tick,0x7ffd093d1d94,276499787,0,0x0,8
tick,0x7ffd093d1d94,276515117,0,0x0,8
tick,0x7ffd093d1d94,276530714,0,0x0,8
tick,0x7ffd093d1d94,276545929,0,0x0,8
tick,0x7ffd093d1d94,276561292,0,0x0,8
tick,0x7ffd093d1d94,276576519,0,0x0,8
tick,0x7ffd093d1d94,276592488,0,0x0,8
tick,0x7ffd093d1d94,276607594,0,0x0,8
tick,0x7ffd093d1d94,276622935,0,0x0,8
tick,0x7ffd093d1d94,276638548,0,0x0,8
tick,0x7ffd093d1d94,276654421,0,0x0,8
tick,0x7ffd093d1d94,276670506,0,0x0,8
tick,0x7ffd093d1d94,276685159,0,0x0,8
tick,0x7ffd093d1d94,276701107,0,0x0,8
tick,0x7ffd093d1d94,276716140,0,0x0,8
tick,0x7ffd093d1d94,276731344,0,0x0,8
tick,0x7ffd093d1d94,276747295,0,0x0,8
tick,0x7ffd093d1d94,276762409,0,0x0,8
tick,0x7ffd093d1d94,276777599,0,0x0,8
tick,0x7ffd093d1d94,276793369,0,0x0,8
tick,0x7ffd093d1d94,276808510,0,0x0,8
tick,0x7ffd093d1d94,276824864,0,0x0,8
tick,0x7ffd093d1d94,276840294,0,0x0,8
tick,0x7ffd093d1d94,276855871,0,0x0,8
tick,0x7ffd093d1d94,276871895,0,0x0,8
tick,0x7ffd093d1d94,276887875,0,0x0,8
tick,0x7ffd093d1d94,276903939,0,0x0,8
tick,0x7ffd093d1d94,276919345,0,0x0,8
tick,0x7ffd093d1d94,276934455,0,0x0,8
tick,0x7ffd093d1d94,276949673,0,0x0,8
tick,0x7ffd093d1d94,276965891,0,0x0,8
tick,0x7ffd093d1d94,276981867,0,0x0,8
tick,0x7ffd093d1d94,276996976,0,0x0,8
tick,0x7ffd093d1d94,277012862,0,0x0,8
tick,0x7ffd093d1d94,277028297,0,0x0,8
tick,0x7ffd093d1d94,277043364,0,0x0,8
tick,0x7ffd093d1d94,277059683,0,0x0,8
tick,0x7ffd093d1d94,277075417,0,0x0,8
tick,0x7ffd093d1d94,277090898,0,0x0,8
tick,0x7ffd093d1d94,277106517,0,0x0,8
tick,0x7ffd093d1d94,277122515,0,0x0,8
tick,0x7ffd093d1d94,277138535,0,0x0,8
tick,0x7ffd093d1d94,277153501,0,0x0,8
tick,0x7ffd093d1d94,277168496,0,0x0,8
tick,0x7ffd093d1d94,277183684,0,0x0,8
tick,0x7ffd093d1d94,277199333,0,0x0,8
tick,0x7ffd093d1d94,277214692,0,0x0,8
tick,0x7ffd093d1d94,277230485,0,0x0,8
tick,0x7ffd093d1d94,277246107,0,0x0,8
tick,0x7ffd093d1d94,277261538,0,0x0,8
tick,0x7ffd093d1d94,277277161,0,0x0,8
tick,0x7ffd093d1d94,277293074,0,0x0,8
tick,0x7ffd093d1d94,277308318,0,0x0,8
tick,0x7ffd093d1d94,277323867,0,0x0,8
tick,0x7ffd093d1d94,277339580,0,0x0,8
tick,0x7ffd093d1d94,277354927,0,0x0,8
tick,0x7ffd093d1d94,277370597,0,0x0,8
tick,0x7ffd093d1d94,277386710,0,0x0,8
tick,0x7ffd093d1d94,277401608,0,0x0,8
tick,0x7ffd093d1d94,277416866,0,0x0,8
tick,0x7ffd093d1d94,277432647,0,0x0,8
tick,0x7ffd093d1d94,277447904,0,0x0,8
tick,0x7ffd093d1d94,277462745,0,0x0,8
tick,0x7ffd093d1d94,277478572,0,0x0,8
tick,0x7ffd093d1d94,277493534,0,0x0,8
tick,0x7ffd093d1d94,277508858,0,0x0,8
tick,0x7ffd093d1d94,277524728,0,0x0,8
tick,0x7ffd093d1d94,277539915,0,0x0,8
tick,0x7ffd093d1d94,277555789,0,0x0,8
tick,0x7ffd093d1d94,277571116,0,0x0,8
tick,0x7ffd093d1d94,277587253,0,0x0,8
tick,0x7ffd093d1d94,277602648,0,0x0,8
tick,0x7ffd093d1d94,277618450,0,0x0,8
tick,0x7ffd093d1d94,277634139,0,0x0,8
tick,0x7ffd093d1d94,277650398,0,0x0,8
tick,0x7ffd093d1d94,277665799,0,0x0,8
tick,0x7ffd093d1d94,277681104,0,0x0,8
tick,0x7ffd093d1d94,277696202,0,0x0,8
tick,0x7ffd093d1d94,277711630,0,0x0,8
tick,0x7ffd093d1d94,277726088,0,0x0,8
tick,0x7ffd093d1d94,277741703,0,0x0,8
tick,0x7ffd093d1d94,277756708,0,0x0,8
tick,0x7ffd093d1d94,277772502,0,0x0,8
tick,0x7ffd093d1d94,277787897,0,0x0,8
tick,0x7ffd093d1d94,277804043,0,0x0,8
tick,0x7ffd093d1d94,277819427,0,0x0,8
tick,0x7ffd093d1d94,277834889,0,0x0,8
tick,0x7ffd093d1d94,277850309,0,0x0,8
tick,0x7ffd093d1d94,277865896,0,0x0,8
tick,0x7ffd093d1d94,277881548,0,0x0,8
tick,0x7ffd093d1d94,277896839,0,0x0,8
tick,0x7ffd093d1d94,277911826,0,0x0,8
tick,0x7ffd093d1d94,277926922,0,0x0,8
tick,0x7ffd093d1d94,277942806,0,0x0,8
tick,0x7ffd093d1d94,277958017,0,0x0,8
tick,0x7ffd093d1d94,277973632,0,0x0,8
tick,0x7ffd093d1d94,277989886,0,0x0,8
tick,0x7ffd093d1d94,278005086,0,0x0,8
tick,0x7ffd093d1d94,278021104,0,0x0,8
tick,0x7ffd093d1d94,278036948,0,0x0,8
tick,0x7ffd093d1d94,278052938,0,0x0,8
tick,0x7ffd093d1d94,278068397,0,0x0,8
tick,0x7ffd093d1d94,278084261,0,0x0,8
tick,0x7ffd093d1d94,278099254,0,0x0,8
tick,0x7ffd093d1d94,278114349,0,0x0,8
tick,0x7ffd093d1d94,278130383,0,0x0,8
tick,0x7ffd093d1d94,278146137,0,0x0,8
tick,0x7ffd093d1d94,278161319,0,0x0,8
tick,0x7ffd093d1d94,278176970,0,0x0,8
tick,0x7ffd093d1d94,278191987,0,0x0,8
tick,0x7ffd093d1d94,278207322,0,0x0,8
tick,0x7ffd093d1d94,278222924,0,0x0,8
tick,0x7ffd093d1d94,278238712,0,0x0,8
tick,0x7ffd093d1d94,278254507,0,0x0,8
tick,0x7ffd093d1d94,278269714,0,0x0,8
tick,0x7ffd093d1d94,278285137,0,0x0,8
tick,0x7ffd093d1d94,278301342,0,0x0,8
tick,0x7ffd093d1d94,278316692,0,0x0,8
tick,0x7ffd093d1d94,278332308,0,0x0,8
tick,0x7ffd093d1d94,278347835,0,0x0,8
tick,0x7ffd093d1d94,278363461,0,0x0,8
tick,0x7ffd093d1d94,278379224,0,0x0,8
tick,0x7ffd093d1d94,278395216,0,0x0,8
tick,0x7ffd093d1d94,278410686,0,0x0,8
tick,0x7ffd093d1d94,278426043,0,0x0,8
tick,0x7ffd093d1d94,278441178,0,0x0,8
tick,0x7ffd093d1d94,278456426,0,0x0,8
tick,0x7ffd093d1d94,278471811,0,0x0,8
tick,0x7ffd093d1d94,278486973,0,0x0,8
tick,0x7ffd093d1d94,278502503,0,0x0,8
tick,0x7ffd093d1d94,278517477,0,0x0,8
tick,0x7ffd093d1d94,278533315,0,0x0,8
tick,0x7ffd093d1d94,278549243,0,0x0,8
tick,0x7ffd093d1d94,278565125,0,0x0,8
tick,0x7ffd093d1d94,278580566,0,0x0,8
tick,0x7ffd093d1d94,278596667,0,0x0,8
tick,0x7ffd093d1d94,278612289,0,0x0,8
tick,0x7ffd093d1d94,278627071,0,0x0,8
tick,0x7ffd093d1d94,278642797,0,0x0,8
tick,0x7ffd093d1d94,278658219,0,0x0,8
tick,0x7ffd093d1d94,278673624,0,0x0,8
tick,0x7ffd093d1d94,278689666,0,0x0,8
tick,0x7ffd093d1d94,278705406,0,0x0,8
tick,0x7ffd093d1d94,278720082,0,0x0,8
tick,0x7ffd093d1d94,278735370,0,0x0,8
tick,0x7ffd093d1d94,278751136,0,0x0,8
tick,0x7ffd093d1d94,278766870,0,0x0,8
tick,0x7ffd093d1d94,278782251,0,0x0,8
tick,0x7ffd093d1d94,278797351,0,0x0,8
tick,0x7ffd093d1d94,278812915,0,0x0,8
tick,0x7ffd093d1d94,278828866,0,0x0,8
tick,0x7ffd093d1d94,278844978,0,0x0,8
tick,0x7ffd093d1d94,278859882,0,0x0,8
tick,0x7ffd093d1d94,278875911,0,0x0,8
tick,0x7ffd093d1d94,278891196,0,0x0,8
tick,0x7ffd093d1d94,278906481,0,0x0,8
tick,0x7ffd093d1d94,278921797,0,0x0,8
tick,0x7ffd093d1d94,278936983,0,0x0,8
tick,0x7ffd093d1d94,278952068,0,0x0,8
tick,0x7ffd093d1d94,278967732,0,0x0,8
tick,0x7ffd093d1d94,278983826,0,0x0,8
tick,0x7ffd093d1d94,278999474,0,0x0,8
tick,0x7ffd093d1d94,279015468,0,0x0,8
tick,0x7ffd093d1d94,279031196,0,0x0,8
tick,0x7ffd093d1d94,279046817,0,0x0,8
tick,0x7ffd093d1d94,279062068,0,0x0,8
tick,0x7ffd093d1d94,279077269,0,0x0,8
tick,0x7ffd093d1d94,279093122,0,0x0,8
tick,0x7ffd093d1d94,279108743,0,0x0,8
tick,0x7ffd093d1d94,279124341,0,0x0,8
tick,0x7ffd093d1d94,279140281,0,0x0,8
tick,0x7ffd093d1d94,279156135,0,0x0,8
tick,0x7ffd093d1d94,279171798,0,0x0,8
tick,0x7ffd093d1d94,279187350,0,0x0,8
tick,0x7ffd093d1d94,279203515,0,0x0,8
tick,0x7ffd093d1d94,279218754,0,0x0,8
tick,0x7ffd093d1d94,279234651,0,0x0,8
tick,0x7ffd093d1d94,279249981,0,0x0,8
tick,0x7ffd093d1d94,279265553,0,0x0,8
tick,0x7ffd093d1d94,279281414,0,0x0,8
tick,0x7ffd093d1d94,279296022,0,0x0,8
tick,0x7ffd093d1d94,279312462,0,0x0,8
tick,0x7ffd093d1d94,279328093,0,0x0,8
tick,0x7ffd093d1d94,279343403,0,0x0,8
tick,0x7ffd093d1d94,279358746,0,0x0,8
tick,0x7ffd093d1d94,279373286,0,0x0,8
tick,0x7ffd093d1d94,279388668,0,0x0,8
tick,0x7ffd093d1d94,279404991,0,0x0,8
tick,0x7ffd093d1d94,279420258,0,0x0,8
tick,0x7ffd093d1d94,279435827,0,0x0,8
tick,0x7ffd093d1d94,279451514,0,0x0,8
tick,0x7ffd093d1d94,279466812,0,0x0,8
tick,0x7ffd093d1d94,279482914,0,0x0,8
tick,0x7ffd093d1d94,279498040,0,0x0,8
tick,0x7ffd093d1d94,279513371,0,0x0,8
tick,0x7ffd093d1d94,279528522,0,0x0,8
tick,0x7ffd093d1d94,279544267,0,0x0,8
tick,0x7ffd093d1d94,279560200,0,0x0,8
tick,0x7ffd093d1d94,279576227,0,0x0,8
tick,0x7ffd093d1d94,279591410,0,0x0,8
tick,0x7ffd093d1d94,279606809,0,0x0,8
tick,0x7ffd093d1d94,279622533,0,0x0,8
tick,0x7ffd093d1d94,279637436,0,0x0,8
tick,0x7ffd093d1d94,279652723,0,0x0,8
tick,0x7ffd093d1d94,279668565,0,0x0,8
tick,0x7ffd093d1d94,279684593,0,0x0,8
tick,0x7ffd093d1d94,279700126,0,0x0,8
tick,0x7ffd093d1d94,279716044,0,0x0,8
tick,0x7ffd093d1d94,279731672,0,0x0,8
tick,0x7ffd093d1d94,279746852,0,0x0,8
tick,0x7ffd093d1d94,279762759,0,0x0,8
tick,0x7ffd093d1d94,279777790,0,0x0,8
tick,0x7ffd093d1d94,279793464,0,0x0,8
tick,0x7ffd093d1d94,279808671,0,0x0,8
tick,0x7ffd093d1d94,279824073,0,0x0,8
tick,0x7ffd093d1d94,279839971,0,0x0,8
tick,0x7ffd093d1d94,279854811,0,0x0,8
tick,0x7ffd093d1d94,279870718,0,0x0,8
tick,0x7ffd093d1d94,279886830,0,0x0,8
tick,0x7ffd093d1d94,279902401,0,0x0,8
tick,0x7ffd093d1d94,279917827,0,0x0,8
tick,0x7ffd093d1d94,279933813,0,0x0,8
tick,0x7ffd093d1d94,279949203,0,0x0,8
tick,0x7ffd093d1d94,279964222,0,0x0,8
tick,0x7ffd093d1d94,279980661,0,0x0,8
tick,0x7ffd093d1d94,279995794,0,0x0,8
tick,0x7ffd093d1d94,280011514,0,0x0,8
tick,0x7ffd093d1d94,280026327,0,0x0,8
tick,0x7ffd093d1d94,280042173,0,0x0,8
tick,0x7ffd093d1d94,280057878,0,0x0,8
tick,0x7ffd093d1d94,280073593,0,0x0,8
tick,0x7ffd093d1d94,280089238,0,0x0,8
tick,0x7ffd093d1d94,280104082,0,0x0,8
tick,0x7ffd093d1d94,280120322,0,0x0,8
tick,0x7ffd093d1d94,280135906,0,0x0,8
tick,0x7ffd093d1d94,280150938,0,0x0,8
tick,0x7ffd093d1d94,280166460,0,0x0,8
tick,0x7ffd093d1d94,280181437,0,0x0,8
tick,0x7ffd093d1d94,280197419,0,0x0,8
tick,0x7ffd093d1d94,280212202,0,0x0,8
tick,0x7ffd093d1d94,280228121,0,0x0,8
tick,0x7ffd093d1d94,280243303,0,0x0,8
tick,0x7ffd093d1d94,280257992,0,0x0,8
tick,0x7ffd093d1d94,280273529,0,0x0,8
tick,0x7ffd093d1d94,280289043,0,0x0,8
tick,0x7ffd093d1d94,280304602,0,0x0,8
tick,0x7ffd093d1d94,280320219,0,0x0,8
tick,0x7ffd093d1d94,280335973,0,0x0,8
tick,0x7ffd093d1d94,280350940,0,0x0,8
tick,0x7ffd093d1d94,280366682,0,0x0,8
tick,0x7ffd093d1d94,280382150,0,0x0,8
tick,0x7ffd093d1d94,280398281,0,0x0,8
tick,0x7ffd093d1d94,280414499,0,0x0,8
tick,0x7ffd093d1d94,280430422,0,0x0,8
tick,0x7ffd093d1d94,280446504,0,0x0,8
tick,0x7ffd093d1d94,280462328,0,0x0,8
tick,0x7ffd093d1d94,280477879,0,0x0,8
tick,0x7ffd093d1d94,280493029,0,0x0,8
tick,0x7ffd093d1d94,280507919,0,0x0,8
tick,0x7ffd093d1d94,280523123,0,0x0,8
tick,0x7ffd093d1d94,280539221,0,0x0,8
tick,0x7ffd093d1d94,280554610,0,0x0,8
tick,0x7ffd093d1d94,280570542,0,0x0,8
tick,0x7ffd093d1d94,280585949,0,0x0,8
tick,0x7ffd093d1d94,280600895,0,0x0,8
tick,0x7ffd093d1d94,280616797,0,0x0,8
tick,0x7ffd093d1d94,280631778,0,0x0,8
tick,0x7ffd093d1d94,280647168,0,0x0,8
tick,0x7ffd093d1d94,280662285,0,0x0,8
tick,0x7ffd093d1d94,280677852,0,0x0,8
tick,0x7ffd093d1d94,280693335,0,0x0,8
tick,0x7ffd093d1d94,280708724,0,0x0,8
tick,0x7ffd093d1d94,280724716,0,0x0,8
tick,0x7ffd093d1d94,280739982,0,0x0,8
tick,0x7ffd093d1d94,280755481,0,0x0,8
tick,0x7ffd093d1d94,280771312,0,0x0,8
tick,0x7ffd093d1d94,280787648,0,0x0,8
tick,0x7ffd093d1d94,280803626,0,0x0,8
tick,0x7ffd093d1d94,280818738,0,0x0,8
tick,0x7ffd093d1d94,280833757,0,0x0,8
tick,0x7ffd093d1d94,280849725,0,0x0,8
tick,0x7ffd093d1d94,280865552,0,0x0,8
tick,0x7ffd093d1d94,280880922,0,0x0,8
tick,0x7ffd093d1d94,280895726,0,0x0,8
tick,0x7ffd093d1d94,280911678,0,0x0,8
tick,0x7ffd093d1d94,280926920,0,0x0,8
tick,0x7ffd093d1d94,280942430,0,0x0,8
tick,0x7ffd093d1d94,280958197,0,0x0,8
tick,0x7ffd093d1d94,280974243,0,0x0,8
tick,0x7ffd093d1d94,280989744,0,0x0,8
tick,0x7ffd093d1d94,281005636,0,0x0,8
tick,0x7ffd093d1d94,281021988,0,0x0,8
tick,0x7ffd093d1d94,281037170,0,0x0,8
tick,0x7ffd093d1d94,281052553,0,0x0,8
tick,0x7ffd093d1d94,281068265,0,0x0,8
tick,0x7ffd093d1d94,281083378,0,0x0,8
tick,0x7ffd093d1d94,281099398,0,0x0,8
tick,0x7ffd093d1d94,281115796,0,0x0,8
tick,0x7ffd093d1d94,281131025,0,0x0,8
tick,0x7ffd093d1d94,281146858,0,0x0,8
tick,0x7ffd093d1d94,281163116,0,0x0,8
tick,0x7ffd093d1d94,281179110,0,0x0,8
tick,0x7ffd093d1d94,281194221,0,0x0,8
tick,0x7ffd093d1d94,281209972,0,0x0,8
tick,0x7ffd093d1d94,281225809,0,0x0,8
tick,0x7ffd093d1d94,281241751,0,0x0,8
tick,0x7ffd093d1d94,281257832,0,0x0,8
tick,0x7ffd093d1d94,281273652,0,0x0,8
tick,0x7ffd093d1d94,281289500,0,0x0,8
tick,0x7ffd093d1d94,281304177,0,0x0,8
tick,0x7ffd093d1d94,281319897,0,0x0,8
tick,0x7ffd093d1d94,281335875,0,0x0,8
tick,0x7ffd093d1d94,281350655,0,0x0,8
tick,0x7ffd093d1d94,281366189,0,0x0,8
tick,0x7ffd093d1d94,281381338,0,0x0,8
tick,0x7ffd093d1d94,281397340,0,0x0,8
tick,0x7ffd093d1d94,281413864,0,0x0,8
tick,0x7ffd093d1d94,281429239,0,0x0,8
tick,0x7ffd093d1d94,281444937,0,0x0,8
tick,0x7ffd093d1d94,281462008,0,0x0,8
tick,0x7ffd093d1d94,281476302,0,0x0,8
tick,0x7ffd093d1d94,281491505,0,0x0,8
tick,0x7ffd093d1d94,281507042,0,0x0,8
tick,0x7ffd093d1d94,281522364,0,0x0,8
tick,0x7ffd093d1d94,281537738,0,0x0,8
tick,0x7ffd093d1d94,281553394,0,0x0,8
tick,0x7ffd093d1d94,281568859,0,0x0,8
tick,0x7ffd093d1d94,281585065,0,0x0,8
tick,0x7ffd093d1d94,281600644,0,0x0,8
tick,0x7ffd093d1d94,281616536,0,0x0,8
tick,0x7ffd093d1d94,281632513,0,0x0,8
tick,0x7ffd093d1d94,281647600,0,0x0,8
tick,0x7ffd093d1d94,281663082,0,0x0,8
tick,0x7ffd093d1d94,281678578,0,0x0,8
tick,0x7ffd093d1d94,281693270,0,0x0,8
tick,0x7ffd093d1d94,281709637,0,0x0,8
tick,0x7ffd093d1d94,281725964,0,0x0,8
tick,0x7ffd093d1d94,281740859,0,0x0,8
tick,0x7ffd093d1d94,281755717,0,0x0,8
tick,0x7ffd093d1d94,281771709,0,0x0,8
tick,0x7ffd093d1d94,281787795,0,0x0,8
tick,0x7ffd093d1d94,281803952,0,0x0,8
tick,0x7ffd093d1d94,281820132,0,0x0,8
tick,0x7ffd093d1d94,281834835,0,0x0,8
tick,0x7ffd093d1d94,281850086,0,0x0,8
tick,0x7ffd093d1d94,281865585,0,0x0,8
tick,0x7ffd093d1d94,281880381,0,0x0,8
tick,0x7ffd093d1d94,281895587,0,0x0,8
tick,0x7ffd093d1d94,281910537,0,0x0,8
tick,0x7ffd093d1d94,281925653,0,0x0,8
tick,0x7ffd093d1d94,281941006,0,0x0,8
tick,0x7ffd093d1d94,281956727,0,0x0,8
tick,0x7ffd093d1d94,281972704,0,0x0,8
tick,0x7ffd093d1d94,281987995,0,0x0,8
tick,0x7ffd093d1d94,282002635,0,0x0,8
tick,0x7ffd093d1d94,282018439,0,0x0,8
tick,0x7ffd093d1d94,282034098,0,0x0,8
tick,0x7ffd093d1d94,282049434,0,0x0,8
tick,0x7ffd093d1d94,282064641,0,0x0,8
tick,0x7ffd093d1d94,282079922,0,0x0,8
tick,0x7ffd093d1d94,282095994,0,0x0,8
tick,0x7ffd093d1d94,282111485,0,0x0,8
tick,0x7ffd093d1d94,282127271,0,0x0,8
tick,0x7ffd093d1d94,282143373,0,0x0,8
tick,0x7ffd093d1d94,282158619,0,0x0,8
tick,0x7ffd093d1d94,282174532,0,0x0,8
tick,0x7ffd093d1d94,282189344,0,0x0,8
tick,0x7ffd093d1d94,282205622,0,0x0,8
tick,0x7ffd093d1d94,282221350,0,0x0,8
tick,0x7ffd093d1d94,282237429,0,0x0,8
tick,0x7ffd093d1d94,282253381,0,0x0,8
tick,0x7ffd093d1d94,282268741,0,0x0,8
tick,0x7ffd093d1d94,282284380,0,0x0,8
tick,0x7ffd093d1d94,282299944,0,0x0,8
tick,0x7ffd093d1d94,282316051,0,0x0,8
tick,0x7ffd093d1d94,282332386,0,0x0,8
tick,0x7ffd093d1d94,282348258,0,0x0,8
tick,0x7ffd093d1d94,282363751,0,0x0,8
tick,0x7ffd093d1d94,282379303,0,0x0,8
tick,0x7ffd093d1d94,282394978,0,0x0,8
tick,0x7ffd093d1d94,282410947,0,0x0,8
tick,0x7ffd093d1d94,282426724,0,0x0,8
tick,0x7ffd093d1d94,282442715,0,0x0,8
tick,0x7ffd093d1d94,282458107,0,0x0,8
tick,0x7ffd093d1d94,282473295,0,0x0,8
tick,0x7ffd093d1d94,282488397,0,0x0,8
tick,0x7ffd093d1d94,282502997,0,0x0,8
tick,0x7ffd093d1d94,282518222,0,0x0,8
tick,0x7ffd093d1d94,282533459,0,0x0,8
tick,0x7ffd093d1d94,282549664,0,0x0,8
tick,0x7ffd093d1d94,282565516,0,0x0,8
tick,0x7ffd093d1d94,282581576,0,0x0,8
tick,0x7ffd093d1d94,282597006,0,0x0,8
tick,0x7ffd093d1d94,282612887,0,0x0,8
tick,0x7ffd093d1d94,282628204,0,0x0,8
tick,0x7ffd093d1d94,282643727,0,0x0,8
tick,0x7ffd093d1d94,282659027,0,0x0,8
tick,0x7ffd093d1d94,282674565,0,0x0,8
tick,0x7ffd093d1d94,282690078,0,0x0,8
tick,0x7ffd093d1d94,282705476,0,0x0,8
tick,0x7ffd093d1d94,282721145,0,0x0,8
tick,0x7ffd093d1d94,282736539,0,0x0,8
tick,0x7ffd093d1d94,282752469,0,0x0,8
tick,0x7ffd093d1d94,282768668,0,0x0,8
tick,0x7ffd093d1d94,282784770,0,0x0,8
tick,0x7ffd093d1d94,282800530,0,0x0,8
tick,0x7ffd093d1d94,282815685,0,0x0,8
tick,0x7ffd093d1d94,282831596,0,0x0,8
tick,0x7ffd093d1d94,282846763,0,0x0,8
tick,0x7ffd093d1d94,282862328,0,0x0,8
tick,0x7ffd093d1d94,282877847,0,0x0,8
tick,0x7ffd093d1d94,282894220,0,0x0,8
tick,0x7ffd093d1d94,282909602,0,0x0,8
tick,0x7ffd093d1d94,282924959,0,0x0,8
tick,0x7ffd093d1d94,282940143,0,0x0,8
tick,0x7ffd093d1d94,282955370,0,0x0,8
tick,0x7ffd093d1d94,282971509,0,0x0,8
tick,0x7ffd093d1d94,282987836,0,0x0,8
tick,0x7ffd093d1d94,283002773,0,0x0,8
tick,0x7ffd093d1d94,283018699,0,0x0,8
tick,0x7ffd093d1d94,283034182,0,0x0,8
tick,0x7ffd093d1d94,283050032,0,0x0,8
tick,0x7ffd093d1d94,283064527,0,0x0,8
tick,0x7ffd093d1d94,283079759,0,0x0,8
tick,0x7ffd093d1d94,283096257,0,0x0,8
tick,0x7ffd093d1d94,283111391,0,0x0,8
tick,0x7ffd093d1d94,283127060,0,0x0,8
tick,0x7ffd093d1d94,283142565,0,0x0,8
tick,0x7ffd093d1d94,283157863,0,0x0,8
tick,0x7ffd093d1d94,283173981,0,0x0,8
tick,0x7ffd093d1d94,283189657,0,0x0,8
tick,0x7ffd093d1d94,283205353,0,0x0,8
tick,0x7ffd093d1d94,283220861,0,0x0,8
tick,0x7ffd093d1d94,283235958,0,0x0,8
tick,0x7ffd093d1d94,283251569,0,0x0,8
tick,0x7ffd093d1d94,283267144,0,0x0,8
tick,0x7ffd093d1d94,283283009,0,0x0,8
tick,0x7ffd093d1d94,283298674,0,0x0,8
tick,0x7ffd093d1d94,283314140,0,0x0,8
tick,0x7ffd093d1d94,283329216,0,0x0,8
tick,0x7ffd093d1d94,283344972,0,0x0,8
tick,0x7ffd093d1d94,283360428,0,0x0,8
tick,0x7ffd093d1d94,283376118,0,0x0,8
tick,0x7ffd093d1d94,283392360,0,0x0,8
tick,0x7ffd093d1d94,283407814,0,0x0,8
tick,0x7ffd093d1d94,283423483,0,0x0,8
tick,0x7ffd093d1d94,283438721,0,0x0,8
tick,0x7ffd093d1d94,283455231,0,0x0,8
tick,0x7ffd093d1d94,283469746,0,0x0,8
tick,0x7ffd093d1d94,283485773,0,0x0,8
tick,0x7ffd093d1d94,283501916,0,0x0,8
tick,0x7ffd093d1d94,283516876,0,0x0,8
tick,0x7ffd093d1d94,283532945,0,0x0,8
tick,0x7ffd093d1d94,283547827,0,0x0,8
tick,0x7ffd093d1d94,283563116,0,0x0,8
tick,0x7ffd093d1d94,283579088,0,0x0,8
tick,0x7ffd093d1d94,283594535,0,0x0,8
tick,0x7ffd093d1d94,283609576,0,0x0,8
tick,0x7ffd093d1d94,283624606,0,0x0,8
tick,0x7ffd093d1d94,283639786,0,0x0,8
tick,0x7ffd093d1d94,283655686,0,0x0,8
tick,0x7ffd093d1d94,283671128,0,0x0,8
tick,0x7ffd093d1d94,283686439,0,0x0,8
tick,0x7ffd093d1d94,283702462,0,0x0,8
tick,0x7ffd093d1d94,283717987,0,0x0,8
tick,0x7ffd093d1d94,283733878,0,0x0,8
tick,0x7ffd093d1d94,283749478,0,0x0,8
tick,0x7ffd093d1d94,283765328,0,0x0,8
tick,0x7ffd093d1d94,283781244,0,0x0,8
tick,0x7ffd093d1d94,283796475,0,0x0,8
tick,0x7ffd093d1d94,283811538,0,0x0,8
tick,0x7ffd093d1d94,283827646,0,0x0,8
tick,0x7ffd093d1d94,283843563,0,0x0,8
tick,0x7ffd093d1d94,283858669,0,0x0,8
tick,0x7ffd093d1d94,283873781,0,0x0,8
tick,0x7ffd093d1d94,283889894,0,0x0,8
tick,0x7ffd093d1d94,283905911,0,0x0,8
tick,0x7ffd093d1d94,283922335,0,0x0,8
tick,0x7ffd093d1d94,283937694,0,0x0,8
tick,0x7ffd093d1d94,283953563,0,0x0,8
tick,0x7ffd093d1d94,283969108,0,0x0,8
tick,0x7ffd093d1d94,283984532,0,0x0,8
tick,0x7ffd093d1d94,284000150,0,0x0,8
tick,0x7ffd093d1d94,284015133,0,0x0,8
tick,0x7ffd093d1d94,284030882,0,0x0,8
tick,0x7ffd093d1d94,284046705,0,0x0,8
tick,0x7ffd093d1d94,284062197,0,0x0,8
tick,0x7ffd093d1d94,284077542,0,0x0,8
tick,0x7ffd093d1d94,284092245,0,0x0,8
tick,0x7ffd093d1d94,284108004,0,0x0,8
tick,0x7ffd093d1d94,284123882,0,0x0,8
tick,0x7ffd093d1d94,284139647,0,0x0,8
tick,0x7ffd093d1d94,284155030,0,0x0,8
tick,0x7ffd093d1d94,284170698,0,0x0,8
tick,0x7ffd093d1d94,284186431,0,0x0,8
tick,0x7ffd093d1d94,284202088,0,0x0,8
tick,0x7ffd093d1d94,284217253,0,0x0,8
tick,0x7ffd093d1d94,284232551,0,0x0,8
tick,0x7ffd093d1d94,284248012,0,0x0,8
tick,0x7ffd093d1d94,284263617,0,0x0,8
tick,0x7ffd093d1d94,284279149,0,0x0,8
tick,0x7ffd093d1d94,284294898,0,0x0,8
tick,0x7ffd093d1d94,284310774,0,0x0,8
tick,0x7ffd093d1d94,284326490,0,0x0,8
tick,0x7ffd093d1d94,284342397,0,0x0,8
tick,0x7ffd093d1d94,284358290,0,0x0,8
tick,0x7ffd093d1d94,284373388,0,0x0,8
tick,0x7ffd093d1d94,284388746,0,0x0,8
tick,0x7ffd093d1d94,284404471,0,0x0,8
tick,0x7ffd093d1d94,284419979,0,0x0,8
tick,0x7ffd093d1d94,284435397,0,0x0,8
tick,0x7ffd093d1d94,284451303,0,0x0,8
tick,0x7ffd093d1d94,284466300,0,0x0,8
tick,0x7ffd093d1d94,284482503,0,0x0,8
tick,0x7ffd093d1d94,284497702,0,0x0,8
tick,0x7ffd093d1d94,284512726,0,0x0,8
tick,0x7ffd093d1d94,284527709,0,0x0,8
tick,0x7ffd093d1d94,284543455,0,0x0,8
tick,0x7ffd093d1d94,284559939,0,0x0,8
tick,0x7ffd093d1d94,284575021,0,0x0,8
tick,0x7ffd093d1d94,284590565,0,0x0,8
tick,0x7ffd093d1d94,284605972,0,0x0,8
tick,0x7ffd093d1d94,284621888,0,0x0,8
tick,0x7ffd093d1d94,284638348,0,0x0,8
tick,0x7ffd093d1d94,284653143,0,0x0,8
tick,0x7ffd093d1d94,284668688,0,0x0,8
tick,0x7ffd093d1d94,284684345,0,0x0,8
tick,0x7ffd093d1d94,284699428,0,0x0,8
tick,0x7ffd093d1d94,284715245,0,0x0,8
tick,0x7ffd093d1d94,284730664,0,0x0,8
tick,0x7ffd093d1d94,284746473,0,0x0,8
tick,0x7ffd093d1d94,284762357,0,0x0,8
tick,0x7ffd093d1d94,284777910,0,0x0,8
tick,0x7ffd093d1d94,284794213,0,0x0,8
tick,0x7ffd093d1d94,284809437,0,0x0,8
tick,0x7ffd093d1d94,284825175,0,0x0,8
tick,0x7ffd093d1d94,284840055,0,0x0,8
tick,0x7ffd093d1d94,284855549,0,0x0,8
tick,0x7ffd093d1d94,284871369,0,0x0,8
tick,0x7ffd093d1d94,284886570,0,0x0,8
tick,0x7ffd093d1d94,284902476,0,0x0,8
tick,0x7ffd093d1d94,284918857,0,0x0,8
tick,0x7ffd093d1d94,284933771,0,0x0,8
tick,0x7ffd093d1d94,284949473,0,0x0,8
tick,0x7ffd093d1d94,284964672,0,0x0,8
tick,0x7ffd093d1d94,284980214,0,0x0,8
tick,0x7ffd093d1d94,284995783,0,0x0,8
tick,0x7ffd093d1d94,285011270,0,0x0,8
tick,0x7ffd093d1d94,285026440,0,0x0,8
tick,0x7ffd093d1d94,285041768,0,0x0,8
tick,0x7ffd093d1d94,285057914,0,0x0,8
tick,0x7ffd093d1d94,285074629,0,0x0,8
tick,0x7ffd093d1d94,285089526,0,0x0,8
tick,0x7ffd093d1d94,285104965,0,0x0,8
tick,0x7ffd093d1d94,285119922,0,0x0,8
tick,0x7ffd093d1d94,285135352,0,0x0,8
tick,0x7ffd093d1d94,285151196,0,0x0,8
tick,0x7ffd093d1d94,285166149,0,0x0,8
tick,0x7ffd093d1d94,285181284,0,0x0,8
tick,0x7ffd093d1d94,285196930,0,0x0,8
tick,0x7ffd093d1d94,285212116,0,0x0,8
tick,0x7ffd093d1d94,285228174,0,0x0,8
tick,0x7ffd093d1d94,285244235,0,0x0,8
tick,0x7ffd093d1d94,285259789,0,0x0,8
tick,0x7ffd093d1d94,285275073,0,0x0,8
tick,0x7ffd093d1d94,285291053,0,0x0,8
tick,0x7ffd093d1d94,285306583,0,0x0,8
tick,0x7ffd093d1d94,285322000,0,0x0,8
tick,0x7ffd093d1d94,285338182,0,0x0,8
tick,0x7ffd093d1d94,285353097,0,0x0,8
tick,0x7ffd093d1d94,285369285,0,0x0,8
tick,0x7ffd093d1d94,285384680,0,0x0,8
tick,0x7ffd093d1d94,285399822,0,0x0,8
tick,0x7ffd093d1d94,285415187,0,0x0,8
tick,0x7ffd093d1d94,285430534,0,0x0,8
tick,0x7ffd093d1d94,285446044,0,0x0,8
tick,0x7ffd093d1d94,285461603,0,0x0,8
tick,0x7ffd093d1d94,285477067,0,0x0,8
tick,0x7ffd093d1d94,285492899,0,0x0,8
tick,0x7ffd093d1d94,285508359,0,0x0,8
tick,0x7ffd093d1d94,285524393,0,0x0,8
tick,0x7ffd093d1d94,285539474,0,0x0,8
tick,0x7ffd093d1d94,285555488,0,0x0,8
tick,0x7ffd093d1d94,285570332,0,0x0,8
tick,0x7ffd093d1d94,285585991,0,0x0,8
tick,0x7ffd093d1d94,285608301,0,0x0,8
tick,0x7ffd093d1d94,285627732,0,0x0,8
tick,0x7ffd093d1d94,285632898,0,0x0,8
tick,0x7ffd093d1d94,285649318,0,0x0,8
tick,0x7ffd093d1d94,285664034,0,0x0,8
tick,0x7ffd093d1d94,285682954,0,0x0,8
tick,0x7ffd093d1d94,285695539,0,0x0,8
tick,0x7ffd093d1d94,285711324,0,0x0,8
tick,0x7ffd093d1d94,285726567,0,0x0,8
tick,0x7ffd093d1d94,285742109,0,0x0,8
tick,0x7ffd093d1d94,285757639,0,0x0,8
tick,0x7ffd093d1d94,285772381,0,0x0,8
tick,0x7ffd093d1d94,285788741,0,0x0,8
tick,0x7ffd093d1d94,285803966,0,0x0,8
tick,0x7ffd093d1d94,285819634,0,0x0,8
tick,0x7ffd093d1d94,285834795,0,0x0,8
tick,0x7ffd093d1d94,285849764,0,0x0,8
tick,0x7ffd093d1d94,285865517,0,0x0,8
tick,0x7ffd093d1d94,285881030,0,0x0,8
tick,0x7ffd093d1d94,285896404,0,0x0,8
tick,0x7ffd093d1d94,285911864,0,0x0,8
tick,0x7ffd093d1d94,285927834,0,0x0,8
tick,0x7ffd093d1d94,285943316,0,0x0,8
tick,0x7ffd093d1d94,285959093,0,0x0,8
tick,0x7ffd093d1d94,285974034,0,0x0,8
tick,0x7ffd093d1d94,285989669,0,0x0,8
tick,0x7ffd093d1d94,286005581,0,0x0,8
tick,0x7ffd093d1d94,286020580,0,0x0,8
tick,0x7ffd093d1d94,286035561,0,0x0,8
tick,0x7ffd093d1d94,286051168,0,0x0,8
tick,0x7ffd093d1d94,286066721,0,0x0,8
tick,0x7ffd093d1d94,286082170,0,0x0,8
tick,0x7ffd093d1d94,286098106,0,0x0,8
tick,0x7ffd093d1d94,286114122,0,0x0,8
tick,0x7ffd093d1d94,286129348,0,0x0,8
tick,0x7ffd093d1d94,286145193,0,0x0,8
tick,0x7ffd093d1d94,286159966,0,0x0,8
tick,0x7ffd093d1d94,286175273,0,0x0,8
tick,0x7ffd093d1d94,286190753,0,0x0,8
tick,0x7ffd093d1d94,286206675,0,0x0,8
tick,0x7ffd093d1d94,286221724,0,0x0,8
tick,0x7ffd093d1d94,286236851,0,0x0,8
tick,0x7ffd093d1d94,286251938,0,0x0,8
tick,0x7ffd093d1d94,286267817,0,0x0,8
tick,0x7ffd093d1d94,286282807,0,0x0,8
tick,0x7ffd093d1d94,286298382,0,0x0,8
tick,0x7ffd093d1d94,286313854,0,0x0,8
tick,0x7ffd093d1d94,286328786,0,0x0,8
tick,0x7ffd093d1d94,286344776,0,0x0,8
tick,0x7ffd093d1d94,286359437,0,0x0,8
tick,0x7ffd093d1d94,286376132,0,0x0,8
tick,0x7ffd093d1d94,286390794,0,0x0,8
tick,0x7ffd093d1d94,286406323,0,0x0,8
tick,0x7ffd093d1d94,286421202,0,0x0,8
tick,0x7ffd093d1d94,286437485,0,0x0,8
tick,0x7ffd093d1d94,286452989,0,0x0,8
tick,0x7ffd093d1d94,286468921,0,0x0,8
tick,0x7ffd093d1d94,286484930,0,0x0,8
tick,0x7ffd093d1d94,286501142,0,0x0,8
tick,0x7ffd093d1d94,286517377,0,0x0,8
tick,0x7ffd093d1d94,286533006,0,0x0,8
tick,0x7ffd093d1d94,286548970,0,0x0,8
tick,0x7ffd093d1d94,286564187,0,0x0,8
tick,0x7ffd093d1d94,286580865,0,0x0,8
tick,0x7ffd093d1d94,286595569,0,0x0,8
tick,0x7ffd093d1d94,286611142,0,0x0,8
tick,0x7ffd093d1d94,286626092,0,0x0,8
tick,0x7ffd093d1d94,286641472,0,0x0,8
tick,0x7ffd093d1d94,286657362,0,0x0,8
tick,0x7ffd093d1d94,286673114,0,0x0,8
tick,0x7ffd093d1d94,286688356,0,0x0,8
tick,0x7ffd093d1d94,286703544,0,0x0,8
tick,0x7ffd093d1d94,286719618,0,0x0,8
tick,0x7ffd093d1d94,286734795,0,0x0,8
tick,0x7ffd093d1d94,286750608,0,0x0,8
tick,0x7ffd093d1d94,286766736,0,0x0,8
tick,0x7ffd093d1d94,286782583,0,0x0,8
tick,0x7ffd093d1d94,286798172,0,0x0,8
tick,0x7ffd093d1d94,286813600,0,0x0,8
tick,0x7ffd093d1d94,286829260,0,0x0,8
tick,0x7ffd093d1d94,286845221,0,0x0,8
tick,0x7ffd093d1d94,286861228,0,0x0,8
tick,0x7ffd093d1d94,286876867,0,0x0,8
tick,0x7ffd093d1d94,286892411,0,0x0,8
tick,0x7ffd093d1d94,286908599,0,0x0,8
tick,0x7ffd093d1d94,286924828,0,0x0,8
tick,0x7ffd093d1d94,286940000,0,0x0,8
tick,0x7ffd093d1d94,286955444,0,0x0,8
tick,0x7ffd093d1d94,286971342,0,0x0,8
tick,0x7ffd093d1d94,286986268,0,0x0,8
tick,0x7ffd093d1d94,287001806,0,0x0,8
tick,0x7ffd093d1d94,287017626,0,0x0,8
tick,0x7ffd093d1d94,287033112,0,0x0,8
tick,0x7ffd093d1d94,287048597,0,0x0,8
tick,0x7ffd093d1d94,287064287,0,0x0,8
tick,0x7ffd093d1d94,287079709,0,0x0,8
tick,0x7ffd093d1d94,287095334,0,0x0,8
tick,0x7ffd093d1d94,287111106,0,0x0,8
tick,0x7ffd093d1d94,287126290,0,0x0,8
tick,0x7ffd093d1d94,287141489,0,0x0,8
tick,0x7ffd093d1d94,287157234,0,0x0,8
tick,0x7ffd093d1d94,287172532,0,0x0,8
tick,0x7ffd093d1d94,287188701,0,0x0,8
tick,0x7ffd093d1d94,287203231,0,0x0,8
tick,0x7ffd093d1d94,287218712,0,0x0,8
tick,0x7ffd093d1d94,287234103,0,0x0,8
tick,0x7ffd093d1d94,287250096,0,0x0,8
tick,0x7ffd093d1d94,287266290,0,0x0,8
tick,0x7ffd093d1d94,287281759,0,0x0,8
tick,0x7ffd093d1d94,287297760,0,0x0,8
tick,0x7ffd093d1d94,287313770,0,0x0,8
tick,0x7ffd093d1d94,287329054,0,0x0,8
tick,0x7ffd093d1d94,287344966,0,0x0,8
tick,0x7ffd093d1d94,287360489,0,0x0,8
tick,0x7ffd093d1d94,287376653,0,0x0,8
tick,0x7ffd093d1d94,287391951,0,0x0,8
tick,0x7ffd093d1d94,287407429,0,0x0,8
tick,0x7ffd093d1d94,287422361,0,0x0,8
tick,0x7ffd093d1d94,287437767,0,0x0,8
tick,0x7ffd093d1d94,287453853,0,0x0,8
tick,0x7ffd093d1d94,287469863,0,0x0,8
tick,0x7ffd093d1d94,287485065,0,0x0,8
tick,0x7ffd093d1d94,287500196,0,0x0,8
tick,0x7ffd093d1d94,287516026,0,0x0,8
tick,0x7ffd093d1d94,287532139,0,0x0,8
tick,0x7ffd093d1d94,287548297,0,0x0,8
tick,0x7ffd093d1d94,287562821,0,0x0,8
tick,0x7ffd093d1d94,287578217,0,0x0,8
tick,0x7ffd093d1d94,287594223,0,0x0,8
tick,0x7ffd093d1d94,287609729,0,0x0,8
tick,0x7ffd093d1d94,287625715,0,0x0,8
tick,0x7ffd093d1d94,287641707,0,0x0,8
tick,0x7ffd093d1d94,287657735,0,0x0,8
tick,0x7ffd093d1d94,287672743,0,0x0,8
tick,0x7ffd093d1d94,287688730,0,0x0,8
tick,0x7ffd093d1d94,287703978,0,0x0,8
tick,0x7ffd093d1d94,287720096,0,0x0,8
tick,0x7ffd093d1d94,287735497,0,0x0,8
tick,0x7ffd093d1d94,287750716,0,0x0,8
tick,0x7ffd093d1d94,287766240,0,0x0,8
tick,0x7ffd093d1d94,287781129,0,0x0,8
tick,0x7ffd093d1d94,287796564,0,0x0,8
tick,0x7ffd093d1d94,287811792,0,0x0,8
tick,0x7ffd093d1d94,287827806,0,0x0,8
tick,0x7ffd093d1d94,287843532,0,0x0,8
tick,0x7ffd093d1d94,287859217,0,0x0,8
tick,0x7ffd093d1d94,287874738,0,0x0,8
tick,0x7ffd093d1d94,287890758,0,0x0,8
tick,0x7ffd093d1d94,287905755,0,0x0,8
tick,0x7ffd093d1d94,287922016,0,0x0,8
tick,0x7ffd093d1d94,287937292,0,0x0,8
tick,0x7ffd093d1d94,287953368,0,0x0,8
tick,0x7ffd093d1d94,287969365,0,0x0,8
tick,0x7ffd093d1d94,287984925,0,0x0,8
tick,0x7ffd093d1d94,288000413,0,0x0,8
tick,0x7ffd093d1d94,288016223,0,0x0,8
tick,0x7ffd093d1d94,288032229,0,0x0,8
tick,0x7ffd093d1d94,288048203,0,0x0,8
tick,0x7ffd093d1d94,288063258,0,0x0,8
tick,0x7ffd093d1d94,288078721,0,0x0,8
tick,0x7ffd093d1d94,288094733,0,0x0,8
tick,0x7ffd093d1d94,288111625,0,0x0,8
tick,0x7ffd093d1d94,288126876,0,0x0,8
tick,0x7ffd093d1d94,288142257,0,0x0,8
tick,0x7ffd093d1d94,288158245,0,0x0,8
tick,0x7ffd093d1d94,288174245,0,0x0,8
tick,0x7ffd093d1d94,288190717,0,0x0,8
tick,0x7ffd093d1d94,288205884,0,0x0,8
tick,0x7ffd093d1d94,288221744,0,0x0,8
tick,0x7ffd093d1d94,288237802,0,0x0,8
tick,0x7ffd093d1d94,288254043,0,0x0,8
tick,0x7ffd093d1d94,288269901,0,0x0,8
tick,0x7ffd093d1d94,288285809,0,0x0,8
tick,0x7ffd093d1d94,288301222,0,0x0,8
tick,0x7ffd093d1d94,288316542,0,0x0,8
tick,0x7ffd093d1d94,288331840,0,0x0,8
tick,0x7ffd093d1d94,288347809,0,0x0,8
tick,0x7ffd093d1d94,288363224,0,0x0,8
tick,0x7ffd093d1d94,288378635,0,0x0,8
tick,0x7ffd093d1d94,288394062,0,0x0,8
tick,0x7ffd093d1d94,288409957,0,0x0,8
tick,0x7ffd093d1d94,288425048,0,0x0,8
tick,0x7ffd093d1d94,288440355,0,0x0,8
tick,0x7ffd093d1d94,288456016,0,0x0,8
tick,0x7ffd093d1d94,288471083,0,0x0,8
tick,0x7ffd093d1d94,288486437,0,0x0,8
tick,0x7ffd093d1d94,288501906,0,0x0,8
tick,0x7ffd093d1d94,288516955,0,0x0,8
tick,0x7ffd093d1d94,288532929,0,0x0,8
tick,0x7ffd093d1d94,288548575,0,0x0,8
tick,0x7ffd093d1d94,288563755,0,0x0,8
tick,0x7ffd093d1d94,288579576,0,0x0,8
tick,0x7ffd093d1d94,288595085,0,0x0,8
tick,0x7ffd093d1d94,288610060,0,0x0,8
tick,0x7ffd093d1d94,288625031,0,0x0,8
tick,0x7ffd093d1d94,288640386,0,0x0,8
tick,0x7ffd093d1d94,288656041,0,0x0,8
tick,0x7ffd093d1d94,288671030,0,0x0,8
tick,0x7ffd093d1d94,288686205,0,0x0,8
tick,0x7ffd093d1d94,288701373,0,0x0,8
tick,0x7ffd093d1d94,288717251,0,0x0,8
tick,0x7ffd093d1d94,288732131,0,0x0,8
tick,0x7ffd093d1d94,288748045,0,0x0,8
tick,0x7ffd093d1d94,288763317,0,0x0,8
tick,0x7ffd093d1d94,288778518,0,0x0,8
tick,0x7ffd093d1d94,288793780,0,0x0,8
tick,0x7ffd093d1d94,288809565,0,0x0,8
tick,0x7ffd093d1d94,288825050,0,0x0,8
tick,0x7ffd093d1d94,288840585,0,0x0,8
tick,0x7ffd093d1d94,288856255,0,0x0,8
tick,0x7ffd093d1d94,288871881,0,0x0,8
tick,0x7ffd093d1d94,288887829,0,0x0,8
tick,0x7ffd093d1d94,288903777,0,0x0,8
tick,0x7ffd093d1d94,288919786,0,0x0,8
tick,0x7ffd093d1d94,288935222,0,0x0,8
tick,0x7ffd093d1d94,288950548,0,0x0,8
tick,0x7ffd093d1d94,288966594,0,0x0,8
tick,0x7ffd093d1d94,288982578,0,0x0,8
tick,0x7ffd093d1d94,288997729,0,0x0,8
tick,0x7ffd093d1d94,289013308,0,0x0,8
tick,0x7ffd093d1d94,289028822,0,0x0,8
tick,0x7ffd093d1d94,289044124,0,0x0,8
tick,0x7ffd093d1d94,289059775,0,0x0,8
tick,0x7ffd093d1d94,289074684,0,0x0,8
tick,0x7ffd093d1d94,289090185,0,0x0,8
tick,0x7ffd093d1d94,289105409,0,0x0,8
tick,0x7ffd093d1d94,289120829,0,0x0,8
tick,0x7ffd093d1d94,289137605,0,0x0,8
tick,0x7ffd093d1d94,289152115,0,0x0,8
tick,0x7ffd093d1d94,289167070,0,0x0,8
tick,0x7ffd093d1d94,289183330,0,0x0,8
tick,0x7ffd093d1d94,289199166,0,0x0,8
tick,0x7ffd093d1d94,289214573,0,0x0,8
tick,0x7ffd093d1d94,289229832,0,0x0,8
tick,0x7ffd093d1d94,289245557,0,0x0,8
tick,0x7ffd093d1d94,289260420,0,0x0,8
tick,0x7ffd093d1d94,289276615,0,0x0,8
tick,0x7ffd093d1d94,289291430,0,0x0,8
tick,0x7ffd093d1d94,289306589,0,0x0,8
tick,0x7ffd093d1d94,289322159,0,0x0,8
tick,0x7ffd093d1d94,289338228,0,0x0,8
tick,0x7ffd093d1d94,289354314,0,0x0,8
tick,0x7ffd093d1d94,289369793,0,0x0,8
tick,0x7ffd093d1d94,289385755,0,0x0,8
tick,0x7ffd093d1d94,289401212,0,0x0,8
tick,0x7ffd093d1d94,289416611,0,0x0,8
tick,0x7ffd093d1d94,289432160,0,0x0,8
tick,0x7ffd093d1d94,289448443,0,0x0,8
tick,0x7ffd093d1d94,289464214,0,0x0,8
tick,0x7ffd093d1d94,289479766,0,0x0,8
tick,0x7ffd093d1d94,289495506,0,0x0,8
tick,0x7ffd093d1d94,289510344,0,0x0,8
tick,0x7ffd093d1d94,289526002,0,0x0,8
tick,0x7ffd093d1d94,289541453,0,0x0,8
tick,0x7ffd093d1d94,289556475,0,0x0,8
tick,0x7ffd093d1d94,289571845,0,0x0,8
tick,0x7ffd093d1d94,289587372,0,0x0,8
tick,0x7ffd093d1d94,289603337,0,0x0,8
tick,0x7ffd093d1d94,289621934,0,0x0,8
tick,0x7ffd093d1d94,289634116,0,0x0,8
tick,0x7ffd093d1d94,289649830,0,0x0,8
tick,0x7ffd093d1d94,289666012,0,0x0,8
tick,0x7ffd093d1d94,289681873,0,0x0,8
tick,0x7ffd093d1d94,289698354,0,0x0,8
tick,0x7ffd093d1d94,289713899,0,0x0,8
tick,0x7ffd093d1d94,289729108,0,0x0,8
tick,0x7ffd093d1d94,289743736,0,0x0,8
tick,0x7ffd093d1d94,289759207,0,0x0,8
tick,0x7ffd093d1d94,289775146,0,0x0,8
tick,0x7ffd093d1d94,289790531,0,0x0,8
tick,0x7ffd093d1d94,289805442,0,0x0,8
tick,0x7ffd093d1d94,289821426,0,0x0,8
tick,0x7ffd093d1d94,289836519,0,0x0,8
tick,0x7ffd093d1d94,289851382,0,0x0,8
tick,0x7ffd093d1d94,289867243,0,0x0,8
tick,0x7ffd093d1d94,289883401,0,0x0,8
tick,0x7ffd093d1d94,289899742,0,0x0,8
tick,0x7ffd093d1d94,289914991,0,0x0,8
tick,0x7ffd093d1d94,289931157,0,0x0,8
tick,0x7ffd093d1d94,289946594,0,0x0,8
tick,0x7ffd093d1d94,289961783,0,0x0,8
tick,0x7ffd093d1d94,289977482,0,0x0,8
tick,0x7ffd093d1d94,289992450,0,0x0,8
tick,0x7ffd093d1d94,290008366,0,0x0,8
tick,0x7ffd093d1d94,290023032,0,0x0,8
tick,0x7ffd093d1d94,290038605,0,0x0,8
tick,0x7ffd093d1d94,290054015,0,0x0,8
tick,0x7ffd093d1d94,290069715,0,0x0,8
tick,0x7ffd093d1d94,290084361,0,0x0,8
tick,0x7ffd093d1d94,290099349,0,0x0,8
tick,0x7ffd093d1d94,290114171,0,0x0,8
tick,0x7ffd093d1d94,290130242,0,0x0,8
tick,0x7ffd093d1d94,290145624,0,0x0,8
tick,0x7ffd093d1d94,290160470,0,0x0,8
tick,0x7ffd093d1d94,290175613,0,0x0,8
tick,0x7ffd093d1d94,290191464,0,0x0,8
tick,0x7ffd093d1d94,290206512,0,0x0,8
tick,0x7ffd093d1d94,290222472,0,0x0,8
tick,0x7ffd093d1d94,290237943,0,0x0,8
tick,0x7ffd093d1d94,290252295,0,0x0,8
tick,0x7ffd093d1d94,290268524,0,0x0,8
tick,0x7ffd093d1d94,290282861,0,0x0,8
tick,0x7ffd093d1d94,290298203,0,0x0,8
tick,0x7ffd093d1d94,290313795,0,0x0,8
tick,0x7ffd093d1d94,290328850,0,0x0,8
tick,0x7ffd093d1d94,290344648,0,0x0,8
tick,0x7ffd093d1d94,290360614,0,0x0,8
tick,0x7ffd093d1d94,290376351,0,0x0,8
tick,0x7ffd093d1d94,290391752,0,0x0,8
tick,0x7ffd093d1d94,290406994,0,0x0,8
tick,0x7ffd093d1d94,290422806,0,0x0,8
tick,0x7ffd093d1d94,290439124,0,0x0,8
tick,0x7ffd093d1d94,290455159,0,0x0,8
tick,0x7ffd093d1d94,290470859,0,0x0,8
tick,0x7ffd093d1d94,290486423,0,0x0,8
tick,0x7ffd093d1d94,290501332,0,0x0,8
tick,0x7ffd093d1d94,290517224,0,0x0,8
tick,0x7ffd093d1d94,290532686,0,0x0,8
tick,0x7ffd093d1d94,290548406,0,0x0,8
tick,0x7ffd093d1d94,290563930,0,0x0,8
tick,0x7ffd093d1d94,290580247,0,0x0,8
tick,0x7ffd093d1d94,290595685,0,0x0,8
tick,0x7ffd093d1d94,290611053,0,0x0,8
tick,0x7ffd093d1d94,290627307,0,0x0,8
tick,0x7ffd093d1d94,290641966,0,0x0,8
tick,0x7ffd093d1d94,290657207,0,0x0,8
tick,0x7ffd093d1d94,290672475,0,0x0,8
tick,0x7ffd093d1d94,290687524,0,0x0,8
tick,0x7ffd093d1d94,290703343,0,0x0,8
tick,0x7ffd093d1d94,290719316,0,0x0,8
tick,0x7ffd093d1d94,290735390,0,0x0,8
tick,0x7ffd093d1d94,290751440,0,0x0,8
tick,0x7ffd093d1d94,290766758,0,0x0,8
tick,0x7ffd093d1d94,290782277,0,0x0,8
tick,0x7ffd093d1d94,290797654,0,0x0,8
tick,0x7ffd093d1d94,290813314,0,0x0,8
tick,0x7ffd093d1d94,290829276,0,0x0,8
tick,0x7ffd093d1d94,290845294,0,0x0,8
tick,0x7ffd093d1d94,290860870,0,0x0,8
tick,0x7ffd093d1d94,290876619,0,0x0,8
tick,0x7ffd093d1d94,290892248,0,0x0,8
tick,0x7ffd093d1d94,290908438,0,0x0,8
tick,0x7ffd093d1d94,290923759,0,0x0,8
tick,0x7ffd093d1d94,290939636,0,0x0,8
tick,0x7ffd093d1d94,290955078,0,0x0,8
tick,0x7ffd093d1d94,290971218,0,0x0,8
tick,0x7ffd093d1d94,290986728,0,0x0,8
tick,0x7ffd093d1d94,291002725,0,0x0,8
tick,0x7ffd093d1d94,291018765,0,0x0,8
tick,0x7ffd093d1d94,291034860,0,0x0,8
tick,0x7ffd093d1d94,291050531,0,0x0,8
tick,0x7ffd093d1d94,291066301,0,0x0,8
tick,0x7ffd093d1d94,291081618,0,0x0,8
tick,0x7ffd093d1d94,291096598,0,0x0,8
tick,0x7ffd093d1d94,291112420,0,0x0,8
tick,0x7ffd093d1d94,291127688,0,0x0,8
tick,0x7ffd093d1d94,291143380,0,0x0,8
tick,0x7ffd093d1d94,291158197,0,0x0,8
tick,0x7ffd093d1d94,291173804,0,0x0,8
tick,0x7ffd093d1d94,291188884,0,0x0,8
tick,0x7ffd093d1d94,291204298,0,0x0,8
tick,0x7ffd093d1d94,291219796,0,0x0,8
tick,0x7ffd093d1d94,291234919,0,0x0,8
tick,0x7ffd093d1d94,291249861,0,0x0,8
tick,0x7ffd093d1d94,291265358,0,0x0,8
tick,0x7ffd093d1d94,291281539,0,0x0,8
tick,0x7ffd093d1d94,291296812,0,0x0,8
tick,0x7ffd093d1d94,291312692,0,0x0,8
tick,0x7ffd093d1d94,291327696,0,0x0,8
tick,0x7ffd093d1d94,291342651,0,0x0,8
tick,0x7ffd093d1d94,291358170,0,0x0,8
tick,0x7ffd093d1d94,291373335,0,0x0,8
tick,0x7ffd093d1d94,291388493,0,0x0,8
tick,0x7ffd093d1d94,291403692,0,0x0,8
tick,0x7ffd093d1d94,291419127,0,0x0,8
tick,0x7ffd093d1d94,291435075,0,0x0,8
tick,0x7ffd093d1d94,291450342,0,0x0,8
tick,0x7ffd093d1d94,291465692,0,0x0,8
tick,0x7ffd093d1d94,291481171,0,0x0,8
tick,0x7ffd093d1d94,291496136,0,0x0,8
tick,0x7ffd093d1d94,291512146,0,0x0,8
tick,0x7ffd093d1d94,291527161,0,0x0,8
tick,0x7ffd093d1d94,291542145,0,0x0,8
tick,0x7ffd093d1d94,291557136,0,0x0,8
tick,0x7ffd093d1d94,291572640,0,0x0,8
tick,0x7ffd093d1d94,291587786,0,0x0,8
tick,0x7ffd093d1d94,291603765,0,0x0,8
tick,0x7ffd093d1d94,291619716,0,0x0,8
tick,0x7ffd093d1d94,291635714,0,0x0,8
tick,0x7ffd093d1d94,291651694,0,0x0,8
tick,0x7ffd093d1d94,291666724,0,0x0,8
tick,0x7ffd093d1d94,291683364,0,0x0,8
tick,0x7ffd093d1d94,291698367,0,0x0,8
tick,0x7ffd093d1d94,291714272,0,0x0,8
tick,0x7ffd093d1d94,291729606,0,0x0,8
tick,0x7ffd093d1d94,291744336,0,0x0,8
tick,0x7ffd093d1d94,291760320,0,0x0,8
tick,0x7ffd093d1d94,291776570,0,0x0,8
tick,0x7ffd093d1d94,291791970,0,0x0,8
tick,0x7ffd093d1d94,291807920,0,0x0,8
tick,0x7ffd093d1d94,291822797,0,0x0,8
tick,0x7ffd093d1d94,291839373,0,0x0,8
tick,0x7ffd093d1d94,291854434,0,0x0,8
tick,0x7ffd093d1d94,291869556,0,0x0,8
tick,0x7ffd093d1d94,291885801,0,0x0,8
tick,0x7ffd093d1d94,291902007,0,0x0,8
tick,0x7ffd093d1d94,291917571,0,0x0,8
tick,0x7ffd093d1d94,291933842,0,0x0,8
tick,0x7ffd093d1d94,291949676,0,0x0,8
tick,0x7ffd093d1d94,291965183,0,0x0,8
tick,0x7ffd093d1d94,291981093,0,0x0,8
tick,0x7ffd093d1d94,291996474,0,0x0,8
tick,0x7ffd093d1d94,292011527,0,0x0,8
tick,0x7ffd093d1d94,292027250,0,0x0,8
tick,0x7ffd093d1d94,292042716,0,0x0,8
tick,0x7ffd093d1d94,292058712,0,0x0,8
tick,0x7ffd093d1d94,292074091,0,0x0,8
tick,0x7ffd093d1d94,292089411,0,0x0,8
tick,0x7ffd093d1d94,292105309,0,0x0,8
tick,0x7ffd093d1d94,292120587,0,0x0,8
tick,0x7ffd093d1d94,292135630,0,0x0,8
tick,0x7ffd093d1d94,292151348,0,0x0,8
tick,0x7ffd093d1d94,292166218,0,0x0,8
tick,0x7ffd093d1d94,292181853,0,0x0,8
tick,0x7ffd093d1d94,292197602,0,0x0,8
tick,0x7ffd093d1d94,292213082,0,0x0,8
tick,0x7ffd093d1d94,292228639,0,0x0,8
tick,0x7ffd093d1d94,292243941,0,0x0,8
tick,0x7ffd093d1d94,292259253,0,0x0,8
tick,0x7ffd093d1d94,292274432,0,0x0,8
tick,0x7ffd093d1d94,292290061,0,0x0,8
tick,0x7ffd093d1d94,292306254,0,0x0,8
tick,0x7ffd093d1d94,292321491,0,0x0,8
tick,0x7ffd093d1d94,292336569,0,0x0,8
tick,0x7ffd093d1d94,292352175,0,0x0,8
tick,0x7ffd093d1d94,292368178,0,0x0,8
tick,0x7ffd093d1d94,292383944,0,0x0,8
tick,0x7ffd093d1d94,292399304,0,0x0,8
tick,0x7ffd093d1d94,292414043,0,0x0,8
tick,0x7ffd093d1d94,292429656,0,0x0,8
tick,0x7ffd093d1d94,292445061,0,0x0,8
tick,0x7ffd093d1d94,292460615,0,0x0,8
tick,0x7ffd093d1d94,292475873,0,0x0,8
tick,0x7ffd093d1d94,292491552,0,0x0,8
tick,0x7ffd093d1d94,292507376,0,0x0,8
tick,0x7ffd093d1d94,292523444,0,0x0,8
tick,0x7ffd093d1d94,292539121,0,0x0,8
tick,0x7ffd093d1d94,292554949,0,0x0,8
tick,0x7ffd093d1d94,292570592,0,0x0,8
tick,0x7ffd093d1d94,292586006,0,0x0,8
tick,0x7ffd093d1d94,292602117,0,0x0,8
tick,0x7ffd093d1d94,292617309,0,0x0,8
tick,0x7ffd093d1d94,292632409,0,0x0,8
tick,0x7ffd093d1d94,292648418,0,0x0,8
tick,0x7ffd093d1d94,292664202,0,0x0,8
tick,0x7ffd093d1d94,292679580,0,0x0,8
tick,0x7ffd093d1d94,292695700,0,0x0,8
tick,0x7ffd093d1d94,292711457,0,0x0,8
tick,0x7ffd093d1d94,292726367,0,0x0,8
tick,0x7ffd093d1d94,292742141,0,0x0,8
tick,0x7ffd093d1d94,292757496,0,0x0,8
tick,0x7ffd093d1d94,292773185,0,0x0,8
tick,0x7ffd093d1d94,292788195,0,0x0,8
tick,0x7ffd093d1d94,292803882,0,0x0,8
tick,0x7ffd093d1d94,292819290,0,0x0,8
tick,0x7ffd093d1d94,292834837,0,0x0,8
tick,0x7ffd093d1d94,292850796,0,0x0,8
tick,0x7ffd093d1d94,292866202,0,0x0,8
tick,0x7ffd093d1d94,292881083,0,0x0,8
tick,0x7ffd093d1d94,292896281,0,0x0,8
tick,0x7ffd093d1d94,292912227,0,0x0,8
tick,0x7ffd093d1d94,292928249,0,0x0,8
tick,0x7ffd093d1d94,292944254,0,0x0,8
tick,0x7ffd093d1d94,292959246,0,0x0,8
tick,0x7ffd093d1d94,292975224,0,0x0,8
tick,0x7ffd093d1d94,292990819,0,0x0,8
tick,0x7ffd093d1d94,293006803,0,0x0,8
tick,0x7ffd093d1d94,293022239,0,0x0,8
tick,0x7ffd093d1d94,293036920,0,0x0,8
tick,0x7ffd093d1d94,293051766,0,0x0,8
tick,0x7ffd093d1d94,293067819,0,0x0,8
tick,0x7ffd093d1d94,293083992,0,0x0,8
tick,0x7ffd093d1d94,293098902,0,0x0,8
tick,0x7ffd093d1d94,293113581,0,0x0,8
tick,0x7ffd093d1d94,293129680,0,0x0,8
tick,0x7ffd093d1d94,293145342,0,0x0,8
tick,0x7ffd093d1d94,293160968,0,0x0,8
tick,0x7ffd093d1d94,293176833,0,0x0,8
tick,0x7ffd093d1d94,293192326,0,0x0,8
tick,0x7ffd093d1d94,293207805,0,0x0,8
tick,0x7ffd093d1d94,293223452,0,0x0,8
tick,0x7ffd093d1d94,293238929,0,0x0,8
tick,0x7ffd093d1d94,293254479,0,0x0,8
tick,0x7ffd093d1d94,293270072,0,0x0,8
tick,0x7ffd093d1d94,293285231,0,0x0,8
tick,0x7ffd093d1d94,293300275,0,0x0,8
tick,0x7ffd093d1d94,293316342,0,0x0,8
tick,0x7ffd093d1d94,293331219,0,0x0,8
tick,0x7ffd093d1d94,293347755,0,0x0,8
tick,0x7ffd093d1d94,293363046,0,0x0,8
tick,0x7ffd093d1d94,293378673,0,0x0,8
tick,0x7ffd093d1d94,293394575,0,0x0,8
tick,0x7ffd093d1d94,293410236,0,0x0,8
tick,0x7ffd093d1d94,293426077,0,0x0,8
tick,0x7ffd093d1d94,293441874,0,0x0,8
tick,0x7ffd093d1d94,293457544,0,0x0,8
tick,0x7ffd093d1d94,293472582,0,0x0,8
tick,0x7ffd093d1d94,293488624,0,0x0,8
tick,0x7ffd093d1d94,293503207,0,0x0,8
tick,0x7ffd093d1d94,293519320,0,0x0,8
tick,0x7ffd093d1d94,293535020,0,0x0,8
tick,0x7ffd093d1d94,293551062,0,0x0,8
tick,0x7ffd093d1d94,293566973,0,0x0,8
tick,0x7ffd093d1d94,293582565,0,0x0,8
tick,0x7ffd093d1d94,293598333,0,0x0,8
tick,0x7ffd093d1d94,293613932,0,0x0,8
tick,0x7ffd093d1d94,293629056,0,0x0,8
tick,0x7ffd093d1d94,293644501,0,0x0,8
tick,0x7ffd093d1d94,293659772,0,0x0,8
tick,0x7ffd093d1d94,293675308,0,0x0,8
tick,0x7ffd093d1d94,293691219,0,0x0,8
tick,0x7ffd093d1d94,293707089,0,0x0,8
tick,0x7ffd093d1d94,293722853,0,0x0,8
tick,0x7ffd093d1d94,293738393,0,0x0,8
tick,0x7ffd093d1d94,293754354,0,0x0,8
tick,0x7ffd093d1d94,293769954,0,0x0,8
tick,0x7ffd093d1d94,293785806,0,0x0,8
tick,0x7ffd093d1d94,293801669,0,0x0,8
tick,0x7ffd093d1d94,293816517,0,0x0,8
tick,0x7ffd093d1d94,293831638,0,0x0,8
tick,0x7ffd093d1d94,293847079,0,0x0,8
tick,0x7ffd093d1d94,293862431,0,0x0,8
tick,0x7ffd093d1d94,293878140,0,0x0,8
tick,0x7ffd093d1d94,293893017,0,0x0,8
tick,0x7ffd093d1d94,293908455,0,0x0,8
tick,0x7ffd093d1d94,293924063,0,0x0,8
tick,0x7ffd093d1d94,293939215,0,0x0,8
tick,0x7ffd093d1d94,293954895,0,0x0,8
tick,0x7ffd093d1d94,293970097,0,0x0,8
tick,0x7ffd093d1d94,293985312,0,0x0,8
tick,0x7ffd093d1d94,294000388,0,0x0,8
tick,0x7ffd093d1d94,294015748,0,0x0,8
tick,0x7ffd093d1d94,294031263,0,0x0,8
tick,0x7ffd093d1d94,294046426,0,0x0,8
tick,0x7ffd093d1d94,294062060,0,0x0,8
tick,0x7ffd093d1d94,294077691,0,0x0,8
tick,0x7ffd093d1d94,294093163,0,0x0,8
tick,0x7ffd093d1d94,294108790,0,0x0,8
tick,0x7ffd093d1d94,294124074,0,0x0,8
tick,0x7ffd093d1d94,294140415,0,0x0,8
tick,0x7ffd093d1d94,294156102,0,0x0,8
tick,0x7ffd093d1d94,294171885,0,0x0,8
tick,0x7ffd093d1d94,294187085,0,0x0,8
tick,0x7ffd093d1d94,294202708,0,0x0,8
tick,0x7ffd093d1d94,294217920,0,0x0,8
tick,0x7ffd093d1d94,294233041,0,0x0,8
tick,0x7ffd093d1d94,294248922,0,0x0,8
tick,0x7ffd093d1d94,294263927,0,0x0,8
tick,0x7ffd093d1d94,294280019,0,0x0,8
tick,0x7ffd093d1d94,294295516,0,0x0,8
tick,0x7ffd093d1d94,294311430,0,0x0,8
tick,0x7ffd093d1d94,294327724,0,0x0,8
tick,0x7ffd093d1d94,294343588,0,0x0,8
tick,0x7ffd093d1d94,294358544,0,0x0,8
tick,0x7ffd093d1d94,294373438,0,0x0,8
tick,0x7ffd093d1d94,294388068,0,0x0,8
tick,0x7ffd093d1d94,294404356,0,0x0,8
tick,0x7ffd093d1d94,294420133,0,0x0,8
tick,0x7ffd093d1d94,294435014,0,0x0,8
tick,0x7ffd093d1d94,294449912,0,0x0,8
tick,0x7ffd093d1d94,294466503,0,0x0,8
tick,0x7ffd093d1d94,294481229,0,0x0,8
tick,0x7ffd093d1d94,294497500,0,0x0,8
tick,0x7ffd093d1d94,294513450,0,0x0,8
tick,0x7ffd093d1d94,294529057,0,0x0,8
tick,0x7ffd093d1d94,294544985,0,0x0,8
tick,0x7ffd093d1d94,294560639,0,0x0,8
tick,0x7ffd093d1d94,294576437,0,0x0,8
tick,0x7ffd093d1d94,294592706,0,0x0,8
tick,0x7ffd093d1d94,294607924,0,0x0,8
tick,0x7ffd093d1d94,294623811,0,0x0,8
tick,0x7ffd093d1d94,294638508,0,0x0,8
tick,0x7ffd093d1d94,294654110,0,0x0,8
tick,0x7ffd093d1d94,294669415,0,0x0,8
tick,0x7ffd093d1d94,294684990,0,0x0,8
tick,0x7ffd093d1d94,294700249,0,0x0,8
tick,0x7ffd093d1d94,294715962,0,0x0,8
tick,0x7ffd093d1d94,294731204,0,0x0,8
tick,0x7ffd093d1d94,294746355,0,0x0,8
tick,0x7ffd093d1d94,294761895,0,0x0,8
tick,0x7ffd093d1d94,294777489,0,0x0,8
tick,0x7ffd093d1d94,294792905,0,0x0,8
tick,0x7ffd093d1d94,294808305,0,0x0,8
tick,0x7ffd093d1d94,294823886,0,0x0,8
tick,0x7ffd093d1d94,294839713,0,0x0,8
tick,0x7ffd093d1d94,294855378,0,0x0,8
tick,0x7ffd093d1d94,294870696,0,0x0,8
tick,0x7ffd093d1d94,294886208,0,0x0,8
tick,0x7ffd093d1d94,294902400,0,0x0,8
tick,0x7ffd093d1d94,294918228,0,0x0,8
tick,0x7ffd093d1d94,294933970,0,0x0,8
tick,0x7ffd093d1d94,294949188,0,0x0,8
tick,0x7ffd093d1d94,294971217,0,0x0,8
tick,0x7ffd093d1d94,294980775,0,0x0,8
tick,0x7ffd093d1d94,294995649,0,0x0,8
tick,0x7ffd093d1d94,295011313,0,0x0,8
tick,0x7ffd093d1d94,295026435,0,0x0,8
tick,0x7ffd093d1d94,295042957,0,0x0,8
tick,0x7ffd093d1d94,295058194,0,0x0,8
tick,0x7ffd093d1d94,295073838,0,0x0,8
tick,0x7ffd093d1d94,295089955,0,0x0,8
tick,0x7ffd093d1d94,295105182,0,0x0,8
tick,0x7ffd093d1d94,295120738,0,0x0,8
tick,0x7ffd093d1d94,295135587,0,0x0,8
tick,0x7ffd093d1d94,295151611,0,0x0,8
tick,0x7ffd093d1d94,295165921,0,0x0,8
tick,0x7ffd093d1d94,295181956,0,0x0,8
tick,0x7ffd093d1d94,295197738,0,0x0,8
tick,0x7ffd093d1d94,295213581,0,0x0,8
tick,0x7ffd093d1d94,295231160,0,0x0,8
tick,0x7ffd093d1d94,295244630,0,0x0,8
tick,0x7ffd093d1d94,295259625,0,0x0,8
tick,0x7ffd093d1d94,295275105,0,0x0,8
tick,0x7ffd093d1d94,295290936,0,0x0,8
tick,0x7ffd093d1d94,295306418,0,0x0,8
tick,0x7ffd093d1d94,295321709,0,0x0,8
tick,0x7ffd093d1d94,295337377,0,0x0,8
tick,0x7ffd093d1d94,295352558,0,0x0,8
tick,0x7ffd093d1d94,295368492,0,0x0,8
tick,0x7ffd093d1d94,295384573,0,0x0,8
tick,0x7ffd093d1d94,295400512,0,0x0,8
tick,0x7ffd093d1d94,295416045,0,0x0,8
tick,0x7ffd093d1d94,295431076,0,0x0,8
tick,0x7ffd093d1d94,295447037,0,0x0,8
tick,0x7ffd093d1d94,295462694,0,0x0,8
tick,0x7ffd093d1d94,295478344,0,0x0,8
tick,0x7ffd093d1d94,295493769,0,0x0,8
tick,0x7ffd093d1d94,295509591,0,0x0,8
tick,0x7ffd093d1d94,295525392,0,0x0,8
tick,0x7ffd093d1d94,295540950,0,0x0,8
tick,0x7ffd093d1d94,295556588,0,0x0,8
tick,0x7ffd093d1d94,295571738,0,0x0,8
tick,0x7ffd093d1d94,295587089,0,0x0,8
tick,0x7ffd093d1d94,295603219,0,0x0,8
tick,0x7ffd093d1d94,295618564,0,0x0,8
tick,0x7ffd093d1d94,295633550,0,0x0,8
tick,0x7ffd093d1d94,295648555,0,0x0,8
tick,0x7ffd093d1d94,295663816,0,0x0,8
tick,0x7ffd093d1d94,295678932,0,0x0,8
tick,0x7ffd093d1d94,295694189,0,0x0,8
tick,0x7ffd093d1d94,295710016,0,0x0,8
tick,0x7ffd093d1d94,295726303,0,0x0,8
tick,0x7ffd093d1d94,295741526,0,0x0,8
tick,0x7ffd093d1d94,295757072,0,0x0,8
tick,0x7ffd093d1d94,295772750,0,0x0,8
tick,0x7ffd093d1d94,295788462,0,0x0,8
tick,0x7ffd093d1d94,295803938,0,0x0,8
tick,0x7ffd093d1d94,295820394,0,0x0,8
tick,0x7ffd093d1d94,295836684,0,0x0,8
tick,0x7ffd093d1d94,295852270,0,0x0,8
tick,0x7ffd093d1d94,295867821,0,0x0,8
tick,0x7ffd093d1d94,295883534,0,0x0,8
tick,0x7ffd093d1d94,295899170,0,0x0,8
tick,0x7ffd093d1d94,295914421,0,0x0,8
tick,0x7ffd093d1d94,295930297,0,0x0,8
tick,0x7ffd093d1d94,295945992,0,0x0,8
tick,0x7ffd093d1d94,295961040,0,0x0,8
tick,0x7ffd093d1d94,295976608,0,0x0,8
tick,0x7ffd093d1d94,295992036,0,0x0,8
tick,0x7ffd093d1d94,296007778,0,0x0,8
tick,0x7ffd093d1d94,296023007,0,0x0,8
tick,0x7ffd093d1d94,296038532,0,0x0,8
tick,0x7ffd093d1d94,296054228,0,0x0,8
tick,0x7ffd093d1d94,296069757,0,0x0,8
tick,0x7ffd093d1d94,296084940,0,0x0,8
tick,0x7ffd093d1d94,296100332,0,0x0,8
tick,0x7ffd093d1d94,296116355,0,0x0,8
tick,0x7ffd093d1d94,296131652,0,0x0,8
tick,0x7ffd093d1d94,296147346,0,0x0,8
tick,0x7ffd093d1d94,296163057,0,0x0,8
tick,0x7ffd093d1d94,296179008,0,0x0,8
tick,0x7ffd093d1d94,296194127,0,0x0,8
tick,0x7ffd093d1d94,296209508,0,0x0,8
tick,0x7ffd093d1d94,296224927,0,0x0,8
tick,0x7ffd093d1d94,296240397,0,0x0,8
tick,0x7ffd093d1d94,296256811,0,0x0,8
tick,0x7ffd093d1d94,296272063,0,0x0,8
tick,0x7ffd093d1d94,296287422,0,0x0,8
tick,0x7ffd093d1d94,296302848,0,0x0,8
tick,0x7ffd093d1d94,296317860,0,0x0,8
tick,0x7ffd093d1d94,296333089,0,0x0,8
tick,0x7ffd093d1d94,296348309,0,0x0,8
tick,0x7ffd093d1d94,296364243,0,0x0,8
tick,0x7ffd093d1d94,296379820,0,0x0,8
tick,0x7ffd093d1d94,296395582,0,0x0,8
tick,0x7ffd093d1d94,296410987,0,0x0,8
tick,0x7ffd093d1d94,296427035,0,0x0,8
tick,0x7ffd093d1d94,296442608,0,0x0,8
tick,0x7ffd093d1d94,296458522,0,0x0,8
tick,0x7ffd093d1d94,296475005,0,0x0,8
tick,0x7ffd093d1d94,296490143,0,0x0,8
tick,0x7ffd093d1d94,296506082,0,0x0,8
tick,0x7ffd093d1d94,296522107,0,0x0,8
tick,0x7ffd093d1d94,296538048,0,0x0,8
tick,0x7ffd093d1d94,296554035,0,0x0,8
tick,0x7ffd093d1d94,296570071,0,0x0,8
tick,0x7ffd093d1d94,296587075,0,0x0,8
tick,0x7ffd093d1d94,296601710,0,0x0,8
tick,0x7ffd093d1d94,296616704,0,0x0,8
tick,0x7ffd093d1d94,296631702,0,0x0,8
tick,0x7ffd093d1d94,296647604,0,0x0,8
tick,0x7ffd093d1d94,296663626,0,0x0,8
tick,0x7ffd093d1d94,296679538,0,0x0,8
tick,0x7ffd093d1d94,296695061,0,0x0,8
tick,0x7ffd093d1d94,296711099,0,0x0,8
tick,0x7ffd093d1d94,296727193,0,0x0,8
tick,0x7ffd093d1d94,296743437,0,0x0,8
tick,0x7ffd093d1d94,296758320,0,0x0,8
tick,0x7ffd093d1d94,296774373,0,0x0,8
tick,0x7ffd093d1d94,296789445,0,0x0,8
tick,0x7ffd093d1d94,296804967,0,0x0,8
tick,0x7ffd093d1d94,296820762,0,0x0,8
tick,0x7ffd093d1d94,296836516,0,0x0,8
tick,0x7ffd093d1d94,296852197,0,0x0,8
tick,0x7ffd093d1d94,296867557,0,0x0,8
tick,0x7ffd093d1d94,296882883,0,0x0,8
tick,0x7ffd093d1d94,296898722,0,0x0,8
tick,0x7ffd093d1d94,296914124,0,0x0,8
tick,0x7ffd093d1d94,296929644,0,0x0,8
tick,0x7ffd093d1d94,296944909,0,0x0,8
tick,0x7ffd093d1d94,296960712,0,0x0,8
tick,0x7ffd093d1d94,296975856,0,0x0,8
tick,0x7ffd093d1d94,296990992,0,0x0,8
tick,0x7ffd093d1d94,297006212,0,0x0,8
tick,0x7ffd093d1d94,297021734,0,0x0,8
tick,0x7ffd093d1d94,297037142,0,0x0,8
tick,0x7ffd093d1d94,297053286,0,0x0,8
tick,0x7ffd093d1d94,297068789,0,0x0,8
tick,0x7ffd093d1d94,297084472,0,0x0,8
tick,0x7ffd093d1d94,297099966,0,0x0,8
tick,0x7ffd093d1d94,297114685,0,0x0,8
tick,0x7ffd093d1d94,297130475,0,0x0,8
tick,0x7ffd093d1d94,297146132,0,0x0,8
tick,0x7ffd093d1d94,297161990,0,0x0,8
tick,0x7ffd093d1d94,297177261,0,0x0,8
tick,0x7ffd093d1d94,297192581,0,0x0,8
tick,0x7ffd093d1d94,297208969,0,0x0,8
tick,0x7ffd093d1d94,297224474,0,0x0,8
tick,0x7ffd093d1d94,297240534,0,0x0,8
tick,0x7ffd093d1d94,297255839,0,0x0,8
tick,0x7ffd093d1d94,297271387,0,0x0,8
tick,0x7ffd093d1d94,297287114,0,0x0,8
tick,0x7ffd093d1d94,297302261,0,0x0,8
tick,0x7ffd093d1d94,297317305,0,0x0,8
tick,0x7ffd093d1d94,297333005,0,0x0,8
tick,0x7ffd093d1d94,297348619,0,0x0,8
tick,0x7ffd093d1d94,297364222,0,0x0,8
tick,0x7ffd093d1d94,297379506,0,0x0,8
tick,0x7ffd093d1d94,297394323,0,0x0,8
tick,0x7ffd093d1d94,297410504,0,0x0,8
tick,0x7ffd093d1d94,297425573,0,0x0,8
tick,0x7ffd093d1d94,297441181,0,0x0,8
tick,0x7ffd093d1d94,297456725,0,0x0,8
tick,0x7ffd093d1d94,297472450,0,0x0,8
tick,0x7ffd093d1d94,297488058,0,0x0,8
tick,0x7ffd093d1d94,297503882,0,0x0,8
tick,0x7ffd093d1d94,297519325,0,0x0,8
tick,0x7ffd093d1d94,297534234,0,0x0,8
tick,0x7ffd093d1d94,297550092,0,0x0,8
tick,0x7ffd093d1d94,297566227,0,0x0,8
tick,0x7ffd093d1d94,297581664,0,0x0,8
tick,0x7ffd093d1d94,297597360,0,0x0,8
tick,0x7ffd093d1d94,297612478,0,0x0,8
tick,0x7ffd093d1d94,297628397,0,0x0,8
tick,0x7ffd093d1d94,297643251,0,0x0,8
tick,0x7ffd093d1d94,297658235,0,0x0,8
tick,0x7ffd093d1d94,297674260,0,0x0,8
tick,0x7ffd093d1d94,297689776,0,0x0,8
tick,0x7ffd093d1d94,297705861,0,0x0,8
tick,0x7ffd093d1d94,297721840,0,0x0,8
tick,0x7ffd093d1d94,297737600,0,0x0,8
tick,0x7ffd093d1d94,297753197,0,0x0,8
tick,0x7ffd093d1d94,297769194,0,0x0,8
tick,0x7ffd093d1d94,297784833,0,0x0,8
tick,0x7ffd093d1d94,297799181,0,0x0,8
tick,0x7ffd093d1d94,297815070,0,0x0,8
tick,0x7ffd093d1d94,297830726,0,0x0,8
tick,0x7ffd093d1d94,297846750,0,0x0,8
tick,0x7ffd093d1d94,297861933,0,0x0,8
tick,0x7ffd093d1d94,297877523,0,0x0,8
tick,0x7ffd093d1d94,297893513,0,0x0,8
tick,0x7ffd093d1d94,297909031,0,0x0,8
tick,0x7ffd093d1d94,297924654,0,0x0,8
tick,0x7ffd093d1d94,297940176,0,0x0,8
tick,0x7ffd093d1d94,297955901,0,0x0,8
tick,0x7ffd093d1d94,297970867,0,0x0,8
tick,0x7ffd093d1d94,297986300,0,0x0,8
tick,0x7ffd093d1d94,298001092,0,0x0,8
tick,0x7ffd093d1d94,298017484,0,0x0,8
tick,0x7ffd093d1d94,298032585,0,0x0,8
tick,0x7ffd093d1d94,298047720,0,0x0,8
tick,0x7ffd093d1d94,298063497,0,0x0,8
tick,0x7ffd093d1d94,298079045,0,0x0,8
tick,0x7ffd093d1d94,298094058,0,0x0,8
tick,0x7ffd093d1d94,298109478,0,0x0,8
tick,0x7ffd093d1d94,298125219,0,0x0,8
tick,0x7ffd093d1d94,298140440,0,0x0,8
tick,0x7ffd093d1d94,298156832,0,0x0,8
tick,0x7ffd093d1d94,298172594,0,0x0,8
tick,0x7ffd093d1d94,298188398,0,0x0,8
tick,0x7ffd093d1d94,298203547,0,0x0,8
tick,0x7ffd093d1d94,298219299,0,0x0,8
tick,0x7ffd093d1d94,298235235,0,0x0,8
tick,0x7ffd093d1d94,298251113,0,0x0,8
tick,0x7ffd093d1d94,298266651,0,0x0,8
tick,0x7ffd093d1d94,298282862,0,0x0,8
tick,0x7ffd093d1d94,298297972,0,0x0,8
tick,0x7ffd093d1d94,298312752,0,0x0,8
tick,0x7ffd093d1d94,298328107,0,0x0,8
tick,0x7ffd093d1d94,298344333,0,0x0,8
tick,0x7ffd093d1d94,298360015,0,0x0,8
tick,0x7ffd093d1d94,298376316,0,0x0,8
tick,0x7ffd093d1d94,298391625,0,0x0,8
tick,0x7ffd093d1d94,298407048,0,0x0,8
tick,0x7ffd093d1d94,298422584,0,0x0,8
tick,0x7ffd093d1d94,298438331,0,0x0,8
tick,0x7ffd093d1d94,298454043,0,0x0,8
tick,0x7ffd093d1d94,298469163,0,0x0,8
tick,0x7ffd093d1d94,298485320,0,0x0,8
tick,0x7ffd093d1d94,298500480,0,0x0,8
tick,0x7ffd093d1d94,298515776,0,0x0,8
tick,0x7ffd093d1d94,298530887,0,0x0,8
tick,0x7ffd093d1d94,298546523,0,0x0,8
tick,0x7ffd093d1d94,298562248,0,0x0,8
tick,0x7ffd093d1d94,298577647,0,0x0,8
tick,0x7ffd093d1d94,298593727,0,0x0,8
tick,0x7ffd093d1d94,298609803,0,0x0,8
tick,0x7ffd093d1d94,298625054,0,0x0,8
tick,0x7ffd093d1d94,298640503,0,0x0,8
tick,0x7ffd093d1d94,298655574,0,0x0,8
tick,0x7ffd093d1d94,298671539,0,0x0,8
tick,0x7ffd093d1d94,298686635,0,0x0,8
tick,0x7ffd093d1d94,298702534,0,0x0,8
tick,0x7ffd093d1d94,298718193,0,0x0,8
tick,0x7ffd093d1d94,298733394,0,0x0,8
tick,0x7ffd093d1d94,298748997,0,0x0,8
tick,0x7ffd093d1d94,298765333,0,0x0,8
tick,0x7ffd093d1d94,298781528,0,0x0,8
tick,0x7ffd093d1d94,298796536,0,0x0,8
tick,0x7ffd093d1d94,298812066,0,0x0,8
tick,0x7ffd093d1d94,298827606,0,0x0,8
tick,0x7ffd093d1d94,298843316,0,0x0,8
tick,0x7ffd093d1d94,298859021,0,0x0,8
tick,0x7ffd093d1d94,298874421,0,0x0,8
tick,0x7ffd093d1d94,298890152,0,0x0,8
tick,0x7ffd093d1d94,298904697,0,0x0,8
tick,0x7ffd093d1d94,298919997,0,0x0,8
tick,0x7ffd093d1d94,298935434,0,0x0,8
tick,0x7ffd093d1d94,298950754,0,0x0,8
tick,0x7ffd093d1d94,298966956,0,0x0,8
tick,0x7ffd093d1d94,298982182,0,0x0,8
tick,0x7ffd093d1d94,298997921,0,0x0,8
tick,0x7ffd093d1d94,299014419,0,0x0,8
tick,0x7ffd093d1d94,299029981,0,0x0,8
tick,0x7ffd093d1d94,299045782,0,0x0,8
tick,0x7ffd093d1d94,299061482,0,0x0,8
tick,0x7ffd093d1d94,299077323,0,0x0,8
tick,0x7ffd093d1d94,299093017,0,0x0,8
tick,0x7ffd093d1d94,299109039,0,0x0,8
tick,0x7ffd093d1d94,299125185,0,0x0,8
tick,0x7ffd093d1d94,299141001,0,0x0,8
tick,0x7ffd093d1d94,299156068,0,0x0,8
tick,0x7ffd093d1d94,299171515,0,0x0,8
tick,0x7ffd093d1d94,299187447,0,0x0,8
tick,0x7ffd093d1d94,299202849,0,0x0,8
tick,0x7ffd093d1d94,299218615,0,0x0,8
tick,0x7ffd093d1d94,299233329,0,0x0,8
tick,0x7ffd093d1d94,299250329,0,0x0,8
tick,0x7ffd093d1d94,299265475,0,0x0,8
tick,0x7ffd093d1d94,299280930,0,0x0,8
tick,0x7ffd093d1d94,299296455,0,0x0,8
tick,0x7ffd093d1d94,299311727,0,0x0,8
tick,0x7ffd093d1d94,299328104,0,0x0,8
tick,0x7ffd093d1d94,299342895,0,0x0,8
tick,0x7ffd093d1d94,299357946,0,0x0,8
tick,0x7ffd093d1d94,299373223,0,0x0,8
tick,0x7ffd093d1d94,299389308,0,0x0,8
tick,0x7ffd093d1d94,299404448,0,0x0,8
tick,0x7ffd093d1d94,299419932,0,0x0,8
tick,0x7ffd093d1d94,299436249,0,0x0,8
tick,0x7ffd093d1d94,299451624,0,0x0,8
tick,0x7ffd093d1d94,299467416,0,0x0,8
tick,0x7ffd093d1d94,299482296,0,0x0,8
tick,0x7ffd093d1d94,299497610,0,0x0,8
tick,0x7ffd093d1d94,299512980,0,0x0,8
tick,0x7ffd093d1d94,299528626,0,0x0,8
tick,0x7ffd093d1d94,299544627,0,0x0,8
tick,0x7ffd093d1d94,299560253,0,0x0,8
tick,0x7ffd093d1d94,299576012,0,0x0,8
tick,0x7ffd093d1d94,299591748,0,0x0,8
tick,0x7ffd093d1d94,299606798,0,0x0,8
tick,0x7ffd093d1d94,299622095,0,0x0,8
tick,0x7ffd093d1d94,299638006,0,0x0,8
tick,0x7ffd093d1d94,299653738,0,0x0,8
tick,0x7ffd093d1d94,299668972,0,0x0,8
tick,0x7ffd093d1d94,299684575,0,0x0,8
tick,0x7ffd093d1d94,299699874,0,0x0,8
tick,0x7ffd093d1d94,299715775,0,0x0,8
tick,0x7ffd093d1d94,299730942,0,0x0,8
tick,0x7ffd093d1d94,299746699,0,0x0,8
tick,0x7ffd093d1d94,299761913,0,0x0,8
tick,0x7ffd093d1d94,299777646,0,0x0,8
tick,0x7ffd093d1d94,299793565,0,0x0,8
tick,0x7ffd093d1d94,299809010,0,0x0,8
tick,0x7ffd093d1d94,299824675,0,0x0,8
tick,0x7ffd093d1d94,299840708,0,0x0,8
tick,0x7ffd093d1d94,299856101,0,0x0,8
tick,0x7ffd093d1d94,299871555,0,0x0,8
tick,0x7ffd093d1d94,299887284,0,0x0,8
tick,0x7ffd093d1d94,299903141,0,0x0,8
tick,0x7ffd093d1d94,299918371,0,0x0,8
tick,0x7ffd093d1d94,299933434,0,0x0,8
tick,0x7ffd093d1d94,299949213,0,0x0,8
tick,0x7ffd093d1d94,299964948,0,0x0,8
tick,0x7ffd093d1d94,299980303,0,0x0,8
tick,0x7ffd093d1d94,299996015,0,0x0,8
tick,0x7ffd093d1d94,300011060,0,0x0,8
tick,0x7ffd093d1d94,300028033,0,0x0,8
tick,0x7ffd093d1d94,300042770,0,0x0,8
tick,0x7ffd093d1d94,300059124,0,0x0,8
tick,0x7ffd093d1d94,300075560,0,0x0,8
tick,0x7ffd093d1d94,300089768,0,0x0,8
tick,0x7ffd093d1d94,300105224,0,0x0,8
tick,0x7ffd093d1d94,300120359,0,0x0,8
tick,0x7ffd093d1d94,300135725,0,0x0,8
tick,0x7ffd093d1d94,300151511,0,0x0,8
tick,0x7ffd093d1d94,300167775,0,0x0,8
tick,0x7ffd093d1d94,300182926,0,0x0,8
tick,0x7ffd093d1d94,300197967,0,0x0,8
tick,0x7ffd093d1d94,300213073,0,0x0,8
tick,0x7ffd093d1d94,300228999,0,0x0,8
tick,0x7ffd093d1d94,300244356,0,0x0,8
tick,0x7ffd093d1d94,300260225,0,0x0,8
tick,0x7ffd093d1d94,300275583,0,0x0,8
tick,0x7ffd093d1d94,300290783,0,0x0,8
tick,0x7ffd093d1d94,300306378,0,0x0,8
tick,0x7ffd093d1d94,300322306,0,0x0,8
tick,0x7ffd093d1d94,300337897,0,0x0,8
tick,0x7ffd093d1d94,300353102,0,0x0,8
tick,0x7ffd093d1d94,300368996,0,0x0,8
tick,0x7ffd093d1d94,300384679,0,0x0,8
tick,0x7ffd093d1d94,300399502,0,0x0,8
tick,0x7ffd093d1d94,300415203,0,0x0,8
tick,0x7ffd093d1d94,300430468,0,0x0,8
tick,0x7ffd093d1d94,300446830,0,0x0,8
tick,0x7ffd093d1d94,300462743,0,0x0,8
tick,0x7ffd093d1d94,300478375,0,0x0,8
tick,0x7ffd093d1d94,300493749,0,0x0,8
tick,0x7ffd093d1d94,300509202,0,0x0,8
tick,0x7ffd093d1d94,300525052,0,0x0,8
tick,0x7ffd093d1d94,300540716,0,0x0,8
tick,0x7ffd093d1d94,300555880,0,0x0,8
tick,0x7ffd093d1d94,300571183,0,0x0,8
tick,0x7ffd093d1d94,300586799,0,0x0,8
tick,0x7ffd093d1d94,300602332,0,0x0,8
tick,0x7ffd093d1d94,300617285,0,0x0,8
tick,0x7ffd093d1d94,300632023,0,0x0,8
tick,0x7ffd093d1d94,300647465,0,0x0,8
tick,0x7ffd093d1d94,300663059,0,0x0,8
tick,0x7ffd093d1d94,300678366,0,0x0,8
tick,0x7ffd093d1d94,300694183,0,0x0,8
tick,0x7ffd093d1d94,300709045,0,0x0,8
tick,0x7ffd093d1d94,300724991,0,0x0,8
tick,0x7ffd093d1d94,300740633,0,0x0,8
tick,0x7ffd093d1d94,300755597,0,0x0,8
tick,0x7ffd093d1d94,300771091,0,0x0,8
tick,0x7ffd093d1d94,300786294,0,0x0,8
tick,0x7ffd093d1d94,300802058,0,0x0,8
tick,0x7ffd093d1d94,300817843,0,0x0,8
tick,0x7ffd093d1d94,300833387,0,0x0,8
tick,0x7ffd093d1d94,300848954,0,0x0,8
tick,0x7ffd093d1d94,300864404,0,0x0,8
tick,0x7ffd093d1d94,300879909,0,0x0,8
tick,0x7ffd093d1d94,300895798,0,0x0,8
tick,0x7ffd093d1d94,300910640,0,0x0,8
tick,0x7ffd093d1d94,300926320,0,0x0,8
tick,0x7ffd093d1d94,300941493,0,0x0,8
tick,0x7ffd093d1d94,300957029,0,0x0,8
tick,0x7ffd093d1d94,300972821,0,0x0,8
tick,0x7ffd093d1d94,300988891,0,0x0,8
tick,0x7ffd093d1d94,301004196,0,0x0,8
tick,0x7ffd093d1d94,301020021,0,0x0,8
tick,0x7ffd093d1d94,301035141,0,0x0,8
tick,0x7ffd093d1d94,301050297,0,0x0,8
tick,0x7ffd093d1d94,301066286,0,0x0,8
tick,0x7ffd093d1d94,301081250,0,0x0,8
tick,0x7ffd093d1d94,301096426,0,0x0,8
tick,0x7ffd093d1d94,301111925,0,0x0,8
tick,0x7ffd093d1d94,301127715,0,0x0,8
tick,0x7ffd093d1d94,301143251,0,0x0,8
tick,0x7ffd093d1d94,301159048,0,0x0,8
tick,0x7ffd093d1d94,301174521,0,0x0,8
tick,0x7ffd093d1d94,301189924,0,0x0,8
tick,0x7ffd093d1d94,301205455,0,0x0,8
tick,0x7ffd093d1d94,301221050,0,0x0,8
tick,0x7ffd093d1d94,301236628,0,0x0,8
tick,0x7ffd093d1d94,301251470,0,0x0,8
tick,0x7ffd093d1d94,301267320,0,0x0,8
tick,0x7ffd093d1d94,301283349,0,0x0,8
tick,0x7ffd093d1d94,301298869,0,0x0,8
tick,0x7ffd093d1d94,301314761,0,0x0,8
tick,0x7ffd093d1d94,301330290,0,0x0,8
tick,0x7ffd093d1d94,301345813,0,0x0,8
tick,0x7ffd093d1d94,301361905,0,0x0,8
tick,0x7ffd093d1d94,301377892,0,0x0,8
tick,0x7ffd093d1d94,301393471,0,0x0,8
tick,0x7ffd093d1d94,301408081,0,0x0,8
tick,0x7ffd093d1d94,301423447,0,0x0,8
tick,0x7ffd093d1d94,301439804,0,0x0,8
tick,0x7ffd093d1d94,301454279,0,0x0,8
tick,0x7ffd093d1d94,301470228,0,0x0,8
tick,0x7ffd093d1d94,301485692,0,0x0,8
tick,0x7ffd093d1d94,301501010,0,0x0,8
tick,0x7ffd093d1d94,301516996,0,0x0,8
tick,0x7ffd093d1d94,301533131,0,0x0,8
tick,0x7ffd093d1d94,301548089,0,0x0,8
tick,0x7ffd093d1d94,301563033,0,0x0,8
tick,0x7ffd093d1d94,301578973,0,0x0,8
tick,0x7ffd093d1d94,301594134,0,0x0,8
tick,0x7ffd093d1d94,301609930,0,0x0,8
tick,0x7ffd093d1d94,301625750,0,0x0,8
tick,0x7ffd093d1d94,301641133,0,0x0,8
tick,0x7ffd093d1d94,301656191,0,0x0,8
tick,0x7ffd093d1d94,301672282,0,0x0,8
tick,0x7ffd093d1d94,301687274,0,0x0,8
tick,0x7ffd093d1d94,301702178,0,0x0,8
tick,0x7ffd093d1d94,301718163,0,0x0,8
tick,0x7ffd093d1d94,301733237,0,0x0,8
tick,0x7ffd093d1d94,301749234,0,0x0,8
tick,0x7ffd093d1d94,301765254,0,0x0,8
tick,0x7ffd093d1d94,301780504,0,0x0,8
tick,0x7ffd093d1d94,301796775,0,0x0,8
tick,0x7ffd093d1d94,301812317,0,0x0,8
tick,0x7ffd093d1d94,301827511,0,0x0,8
tick,0x7ffd093d1d94,301842990,0,0x0,8
tick,0x7ffd093d1d94,301858936,0,0x0,8
tick,0x7ffd093d1d94,301874662,0,0x0,8
tick,0x7ffd093d1d94,301890794,0,0x0,8
tick,0x7ffd093d1d94,301906048,0,0x0,8
tick,0x7ffd093d1d94,301921426,0,0x0,8
tick,0x7ffd093d1d94,301937065,0,0x0,8
tick,0x7ffd093d1d94,301951582,0,0x0,8
tick,0x7ffd093d1d94,301966830,0,0x0,8
tick,0x7ffd093d1d94,301982301,0,0x0,8
tick,0x7ffd093d1d94,301997342,0,0x0,8
tick,0x7ffd093d1d94,302013631,0,0x0,8
tick,0x7ffd093d1d94,302029671,0,0x0,8
tick,0x7ffd093d1d94,302046108,0,0x0,8
tick,0x7ffd093d1d94,302060962,0,0x0,8
tick,0x7ffd093d1d94,302076203,0,0x0,8
tick,0x7ffd093d1d94,302091513,0,0x0,8
tick,0x7ffd093d1d94,302106367,0,0x0,8
tick,0x7ffd093d1d94,302122228,0,0x0,8
tick,0x7ffd093d1d94,302137100,0,0x0,8
tick,0x7ffd093d1d94,302152622,0,0x0,8
tick,0x7ffd093d1d94,302167738,0,0x0,8
tick,0x7ffd093d1d94,302183260,0,0x0,8
tick,0x7ffd093d1d94,302198488,0,0x0,8
tick,0x7ffd093d1d94,302213630,0,0x0,8
tick,0x7ffd093d1d94,302229604,0,0x0,8
tick,0x7ffd093d1d94,302245351,0,0x0,8
tick,0x7ffd093d1d94,302260778,0,0x0,8
tick,0x7ffd093d1d94,302276108,0,0x0,8
tick,0x7ffd093d1d94,302291426,0,0x0,8
tick,0x7ffd093d1d94,302307095,0,0x0,8
tick,0x7ffd093d1d94,302322814,0,0x0,8
tick,0x7ffd093d1d94,302338350,0,0x0,8
tick,0x7ffd093d1d94,302354491,0,0x0,8
tick,0x7ffd093d1d94,302370310,0,0x0,8
tick,0x7ffd093d1d94,302385569,0,0x0,8
tick,0x7ffd093d1d94,302400816,0,0x0,8
tick,0x7ffd093d1d94,302416451,0,0x0,8
tick,0x7ffd093d1d94,302431693,0,0x0,8
tick,0x7ffd093d1d94,302447419,0,0x0,8
tick,0x7ffd093d1d94,302462580,0,0x0,8
tick,0x7ffd093d1d94,302478204,0,0x0,8
tick,0x7ffd093d1d94,302494111,0,0x0,8
tick,0x7ffd093d1d94,302509803,0,0x0,8
tick,0x7ffd093d1d94,302525918,0,0x0,8
tick,0x7ffd093d1d94,302541244,0,0x0,8
tick,0x7ffd093d1d94,302556483,0,0x0,8
tick,0x7ffd093d1d94,302572469,0,0x0,8
tick,0x7ffd093d1d94,302587818,0,0x0,8
tick,0x7ffd093d1d94,302603191,0,0x0,8
tick,0x7ffd093d1d94,302618760,0,0x0,8
tick,0x7ffd093d1d94,302634066,0,0x0,8
tick,0x7ffd093d1d94,302650519,0,0x0,8
tick,0x7ffd093d1d94,302666579,0,0x0,8
tick,0x7ffd093d1d94,302681729,0,0x0,8
tick,0x7ffd093d1d94,302697762,0,0x0,8
tick,0x7ffd093d1d94,302713795,0,0x0,8
tick,0x7ffd093d1d94,302729410,0,0x0,8
tick,0x7ffd093d1d94,302744151,0,0x0,8
tick,0x7ffd093d1d94,302760180,0,0x0,8
tick,0x7ffd093d1d94,302775661,0,0x0,8
tick,0x7ffd093d1d94,302791352,0,0x0,8
tick,0x7ffd093d1d94,302806914,0,0x0,8
tick,0x7ffd093d1d94,302821903,0,0x0,8
tick,0x7ffd093d1d94,302837988,0,0x0,8
tick,0x7ffd093d1d94,302852826,0,0x0,8
tick,0x7ffd093d1d94,302868041,0,0x0,8
tick,0x7ffd093d1d94,302883317,0,0x0,8
tick,0x7ffd093d1d94,302898545,0,0x0,8
tick,0x7ffd093d1d94,302914151,0,0x0,8
tick,0x7ffd093d1d94,302929902,0,0x0,8
tick,0x7ffd093d1d94,302945742,0,0x0,8
tick,0x7ffd093d1d94,302961706,0,0x0,8
tick,0x7ffd093d1d94,302977277,0,0x0,8
tick,0x7ffd093d1d94,302992860,0,0x0,8
tick,0x7ffd093d1d94,303007675,0,0x0,8
tick,0x7ffd093d1d94,303023239,0,0x0,8
tick,0x7ffd093d1d94,303038878,0,0x0,8
tick,0x7ffd093d1d94,303054304,0,0x0,8
tick,0x7ffd093d1d94,303070294,0,0x0,8
tick,0x7ffd093d1d94,303085493,0,0x0,8
tick,0x7ffd093d1d94,303101107,0,0x0,8
tick,0x7ffd093d1d94,303116767,0,0x0,8
tick,0x7ffd093d1d94,303132628,0,0x0,8
tick,0x7ffd093d1d94,303148762,0,0x0,8
tick,0x7ffd093d1d94,303163974,0,0x0,8
tick,0x7ffd093d1d94,303179151,0,0x0,8
tick,0x7ffd093d1d94,303194759,0,0x0,8
tick,0x7ffd093d1d94,303210132,0,0x0,8
tick,0x7ffd093d1d94,303225717,0,0x0,8
tick,0x7ffd093d1d94,303241818,0,0x0,8
tick,0x7ffd093d1d94,303257450,0,0x0,8
tick,0x7ffd093d1d94,303273069,0,0x0,8
tick,0x7ffd093d1d94,303287892,0,0x0,8
tick,0x7ffd093d1d94,303303440,0,0x0,8
tick,0x7ffd093d1d94,303319078,0,0x0,8
tick,0x7ffd093d1d94,303334639,0,0x0,8
tick,0x7ffd093d1d94,303350292,0,0x0,8
tick,0x7ffd093d1d94,303365136,0,0x0,8
tick,0x7ffd093d1d94,303381257,0,0x0,8
tick,0x7ffd093d1d94,303397757,0,0x0,8
tick,0x7ffd093d1d94,303413019,0,0x0,8
tick,0x7ffd093d1d94,303429036,0,0x0,8
tick,0x7ffd093d1d94,303444582,0,0x0,8
tick,0x7ffd093d1d94,303460623,0,0x0,8
tick,0x7ffd093d1d94,303476140,0,0x0,8
tick,0x7ffd093d1d94,303491741,0,0x0,8
tick,0x7ffd093d1d94,303507423,0,0x0,8
tick,0x7ffd093d1d94,303522582,0,0x0,8
tick,0x7ffd093d1d94,303538249,0,0x0,8
tick,0x7ffd093d1d94,303553671,0,0x0,8
tick,0x7ffd093d1d94,303569388,0,0x0,8
tick,0x7ffd093d1d94,303584842,0,0x0,8
tick,0x7ffd093d1d94,303600767,0,0x0,8
tick,0x7ffd093d1d94,303616007,0,0x0,8
tick,0x7ffd093d1d94,303632222,0,0x0,8
tick,0x7ffd093d1d94,303647920,0,0x0,8
tick,0x7ffd093d1d94,303664542,0,0x0,8
tick,0x7ffd093d1d94,303679696,0,0x0,8
tick,0x7ffd093d1d94,303695059,0,0x0,8
tick,0x7ffd093d1d94,303710517,0,0x0,8
tick,0x7ffd093d1d94,303726469,0,0x0,8
tick,0x7ffd093d1d94,303742174,0,0x0,8
tick,0x7ffd093d1d94,303757703,0,0x0,8
tick,0x7ffd093d1d94,303773800,0,0x0,8
tick,0x7ffd093d1d94,303789360,0,0x0,8
tick,0x7ffd093d1d94,303805032,0,0x0,8
tick,0x7ffd093d1d94,303820339,0,0x0,8
tick,0x7ffd093d1d94,303836861,0,0x0,8
tick,0x7ffd093d1d94,303851663,0,0x0,8
tick,0x7ffd093d1d94,303867224,0,0x0,8
tick,0x7ffd093d1d94,303882403,0,0x0,8
tick,0x7ffd093d1d94,303897556,0,0x0,8
tick,0x7ffd093d1d94,303913251,0,0x0,8
tick,0x7ffd093d1d94,303928296,0,0x0,8
tick,0x7ffd093d1d94,303943881,0,0x0,8
tick,0x7ffd093d1d94,303959475,0,0x0,8
tick,0x7ffd093d1d94,303974450,0,0x0,8
tick,0x7ffd093d1d94,303990130,0,0x0,8
tick,0x7ffd093d1d94,304005425,0,0x0,8
tick,0x7ffd093d1d94,304020807,0,0x0,8
tick,0x7ffd093d1d94,304036021,0,0x0,8
tick,0x7ffd093d1d94,304052014,0,0x0,8
tick,0x7ffd093d1d94,304067080,0,0x0,8
tick,0x7ffd093d1d94,304083297,0,0x0,8
tick,0x7ffd093d1d94,304098579,0,0x0,8
tick,0x7ffd093d1d94,304113847,0,0x0,8
tick,0x7ffd093d1d94,304128897,0,0x0,8
tick,0x7ffd093d1d94,304144450,0,0x0,8
tick,0x7ffd093d1d94,304159818,0,0x0,8
tick,0x7ffd093d1d94,304175915,0,0x0,8
tick,0x7ffd093d1d94,304191505,0,0x0,8
tick,0x7ffd093d1d94,304207469,0,0x0,8
tick,0x7ffd093d1d94,304223231,0,0x0,8
tick,0x7ffd093d1d94,304238866,0,0x0,8
tick,0x7ffd093d1d94,304253922,0,0x0,8
tick,0x7ffd093d1d94,304269454,0,0x0,8
tick,0x7ffd093d1d94,304285126,0,0x0,8
tick,0x7ffd093d1d94,304300530,0,0x0,8
tick,0x7ffd093d1d94,304316513,0,0x0,8
tick,0x7ffd093d1d94,304331970,0,0x0,8
tick,0x7ffd093d1d94,304348275,0,0x0,8
tick,0x7ffd093d1d94,304363599,0,0x0,8
tick,0x7ffd093d1d94,304379514,0,0x0,8
tick,0x7ffd093d1d94,304394953,0,0x0,8
tick,0x7ffd093d1d94,304410493,0,0x0,8
tick,0x7ffd093d1d94,304425691,0,0x0,8
tick,0x7ffd093d1d94,304441439,0,0x0,8
tick,0x7ffd093d1d94,304456812,0,0x0,8
tick,0x7ffd093d1d94,304472417,0,0x0,8
tick,0x7ffd093d1d94,304487993,0,0x0,8
tick,0x7ffd093d1d94,304503946,0,0x0,8
tick,0x7ffd093d1d94,304519098,0,0x0,8
tick,0x7ffd093d1d94,304533812,0,0x0,8
tick,0x7ffd093d1d94,304549710,0,0x0,8
tick,0x7ffd093d1d94,304564867,0,0x0,8
tick,0x7ffd093d1d94,304580220,0,0x0,8
tick,0x7ffd093d1d94,304596163,0,0x0,8
tick,0x7ffd093d1d94,304611825,0,0x0,8
tick,0x7ffd093d1d94,304627228,0,0x0,8
tick,0x7ffd093d1d94,304642607,0,0x0,8
tick,0x7ffd093d1d94,304657943,0,0x0,8
tick,0x7ffd093d1d94,304673674,0,0x0,8
tick,0x7ffd093d1d94,304689040,0,0x0,8
tick,0x7ffd093d1d94,304703846,0,0x0,8
tick,0x7ffd093d1d94,304719373,0,0x0,8
tick,0x7ffd093d1d94,304734729,0,0x0,8
tick,0x7ffd093d1d94,304750492,0,0x0,8
tick,0x7ffd093d1d94,304766225,0,0x0,8
tick,0x7ffd093d1d94,304781572,0,0x0,8
tick,0x7ffd093d1d94,304796907,0,0x0,8
tick,0x7ffd093d1d94,304813092,0,0x0,8
tick,0x7ffd093d1d94,304828897,0,0x0,8
tick,0x7ffd093d1d94,304844565,0,0x0,8
tick,0x7ffd093d1d94,304860273,0,0x0,8
tick,0x7ffd093d1d94,304876729,0,0x0,8
tick,0x7ffd093d1d94,304892497,0,0x0,8
tick,0x7ffd093d1d94,304907799,0,0x0,8
tick,0x7ffd093d1d94,304923859,0,0x0,8
tick,0x7ffd093d1d94,304939037,0,0x0,8
tick,0x7ffd093d1d94,304954350,0,0x0,8
tick,0x7ffd093d1d94,304970293,0,0x0,8
tick,0x7ffd093d1d94,304985918,0,0x0,8
tick,0x7ffd093d1d94,305001810,0,0x0,8
tick,0x7ffd093d1d94,305017059,0,0x0,8
tick,0x7ffd093d1d94,305032391,0,0x0,8
tick,0x7ffd093d1d94,305047822,0,0x0,8
tick,0x7ffd093d1d94,305063647,0,0x0,8
tick,0x7ffd093d1d94,305077849,0,0x0,8
tick,0x7ffd093d1d94,305092968,0,0x0,8
tick,0x7ffd093d1d94,305108789,0,0x0,8
tick,0x7ffd093d1d94,305124355,0,0x0,8
tick,0x7ffd093d1d94,305140076,0,0x0,8
tick,0x7ffd093d1d94,305155003,0,0x0,8
tick,0x7ffd093d1d94,305169907,0,0x0,8
tick,0x7ffd093d1d94,305185630,0,0x0,8
tick,0x7ffd093d1d94,305201692,0,0x0,8
tick,0x7ffd093d1d94,305216326,0,0x0,8
tick,0x7ffd093d1d94,305232254,0,0x0,8
tick,0x7ffd093d1d94,305247221,0,0x0,8
tick,0x7ffd093d1d94,305262774,0,0x0,8
tick,0x7ffd093d1d94,305277989,0,0x0,8
tick,0x7ffd093d1d94,305294036,0,0x0,8
tick,0x7ffd093d1d94,305309461,0,0x0,8
tick,0x7ffd093d1d94,305325345,0,0x0,8
tick,0x7ffd093d1d94,305340928,0,0x0,8
tick,0x7ffd093d1d94,305356073,0,0x0,8
tick,0x7ffd093d1d94,305371653,0,0x0,8
tick,0x7ffd093d1d94,305388173,0,0x0,8
tick,0x7ffd093d1d94,305403337,0,0x0,8
tick,0x7ffd093d1d94,305419167,0,0x0,8
tick,0x7ffd093d1d94,305434393,0,0x0,8
tick,0x7ffd093d1d94,305449482,0,0x0,8
tick,0x7ffd093d1d94,305465227,0,0x0,8
tick,0x7ffd093d1d94,305481029,0,0x0,8
tick,0x7ffd093d1d94,305496843,0,0x0,8
tick,0x7ffd093d1d94,305512820,0,0x0,8
tick,0x7ffd093d1d94,305528623,0,0x0,8
tick,0x7ffd093d1d94,305543765,0,0x0,8
tick,0x7ffd093d1d94,305559572,0,0x0,8
tick,0x7ffd093d1d94,305575404,0,0x0,8
tick,0x7ffd093d1d94,305590606,0,0x0,8
tick,0x7ffd093d1d94,305606218,0,0x0,8
tick,0x7ffd093d1d94,305622072,0,0x0,8
tick,0x7ffd093d1d94,305638214,0,0x0,8
tick,0x7ffd093d1d94,305653998,0,0x0,8
tick,0x7ffd093d1d94,305669987,0,0x0,8
tick,0x7ffd093d1d94,305685603,0,0x0,8
tick,0x7ffd093d1d94,305701497,0,0x0,8
tick,0x7ffd093d1d94,305717401,0,0x0,8
tick,0x7ffd093d1d94,305733138,0,0x0,8
tick,0x7ffd093d1d94,305749092,0,0x0,8
tick,0x7ffd093d1d94,305763798,0,0x0,8
tick,0x7ffd093d1d94,305779789,0,0x0,8
tick,0x7ffd093d1d94,305795191,0,0x0,8
tick,0x7ffd093d1d94,305810823,0,0x0,8
tick,0x7ffd093d1d94,305826408,0,0x0,8
tick,0x7ffd093d1d94,305842033,0,0x0,8
tick,0x7ffd093d1d94,305857743,0,0x0,8
tick,0x7ffd093d1d94,305873357,0,0x0,8
tick,0x7ffd093d1d94,305889860,0,0x0,8
tick,0x7ffd093d1d94,305904705,0,0x0,8
tick,0x7ffd093d1d94,305920427,0,0x0,8
tick,0x7ffd093d1d94,305935490,0,0x0,8
tick,0x7ffd093d1d94,305950693,0,0x0,8
tick,0x7ffd093d1d94,305966434,0,0x0,8
tick,0x7ffd093d1d94,305981570,0,0x0,8
tick,0x7ffd093d1d94,305997601,0,0x0,8
tick,0x7ffd093d1d94,306013031,0,0x0,8
tick,0x7ffd093d1d94,306028860,0,0x0,8
tick,0x7ffd093d1d94,306044476,0,0x0,8
tick,0x7ffd093d1d94,306060525,0,0x0,8
tick,0x7ffd093d1d94,306076027,0,0x0,8
tick,0x7ffd093d1d94,306091264,0,0x0,8
tick,0x7ffd093d1d94,306106392,0,0x0,8
tick,0x7ffd093d1d94,306122403,0,0x0,8
tick,0x7ffd093d1d94,306137819,0,0x0,8
tick,0x7ffd093d1d94,306153408,0,0x0,8
tick,0x7ffd093d1d94,306168915,0,0x0,8
tick,0x7ffd093d1d94,306184379,0,0x0,8
tick,0x7ffd093d1d94,306199753,0,0x0,8
tick,0x7ffd093d1d94,306215436,0,0x0,8
tick,0x7ffd093d1d94,306231214,0,0x0,8
tick,0x7ffd093d1d94,306248517,0,0x0,8
tick,0x7ffd093d1d94,306262450,0,0x0,8
tick,0x7ffd093d1d94,306277604,0,0x0,8
tick,0x7ffd093d1d94,306292787,0,0x0,8
tick,0x7ffd093d1d94,306308020,0,0x0,8
tick,0x7ffd093d1d94,306323651,0,0x0,8
tick,0x7ffd093d1d94,306338781,0,0x0,8
tick,0x7ffd093d1d94,306354407,0,0x0,8
tick,0x7ffd093d1d94,306369712,0,0x0,8
tick,0x7ffd093d1d94,306385403,0,0x0,8
tick,0x7ffd093d1d94,306401069,0,0x0,8
tick,0x7ffd093d1d94,306415900,0,0x0,8
tick,0x7ffd093d1d94,306431395,0,0x0,8
tick,0x7ffd093d1d94,306446726,0,0x0,8
tick,0x7ffd093d1d94,306462781,0,0x0,8
tick,0x7ffd093d1d94,306478364,0,0x0,8
tick,0x7ffd093d1d94,306493581,0,0x0,8
tick,0x7ffd093d1d94,306509609,0,0x0,8
tick,0x7ffd093d1d94,306525171,0,0x0,8
tick,0x7ffd093d1d94,306540760,0,0x0,8
tick,0x7ffd093d1d94,306556511,0,0x0,8
tick,0x7ffd093d1d94,306573265,0,0x0,8
tick,0x7ffd093d1d94,306588929,0,0x0,8
tick,0x7ffd093d1d94,306604921,0,0x0,8
tick,0x7ffd093d1d94,306619976,0,0x0,8
tick,0x7ffd093d1d94,306635456,0,0x0,8
tick,0x7ffd093d1d94,306651025,0,0x0,8
tick,0x7ffd093d1d94,306666825,0,0x0,8
tick,0x7ffd093d1d94,306682250,0,0x0,8
tick,0x7ffd093d1d94,306697882,0,0x0,8
tick,0x7ffd093d1d94,306713520,0,0x0,8
tick,0x7ffd093d1d94,306728691,0,0x0,8
tick,0x7ffd093d1d94,306743925,0,0x0,8
tick,0x7ffd093d1d94,306760053,0,0x0,8
tick,0x7ffd093d1d94,306775210,0,0x0,8
tick,0x7ffd093d1d94,306790681,0,0x0,8
tick,0x7ffd093d1d94,306806416,0,0x0,8
tick,0x7ffd093d1d94,306821776,0,0x0,8
tick,0x7ffd093d1d94,306836898,0,0x0,8
tick,0x7ffd093d1d94,306852856,0,0x0,8
tick,0x7ffd093d1d94,306868515,0,0x0,8
tick,0x7ffd093d1d94,306884009,0,0x0,8
tick,0x7ffd093d1d94,306899513,0,0x0,8
tick,0x7ffd093d1d94,306915703,0,0x0,8
tick,0x7ffd093d1d94,306931091,0,0x0,8
tick,0x7ffd093d1d94,306946460,0,0x0,8
tick,0x7ffd093d1d94,306962407,0,0x0,8
tick,0x7ffd093d1d94,306977619,0,0x0,8
tick,0x7ffd093d1d94,306993399,0,0x0,8
tick,0x7ffd093d1d94,307008448,0,0x0,8
tick,0x7ffd093d1d94,307023801,0,0x0,8
tick,0x7ffd093d1d94,307038977,0,0x0,8
tick,0x7ffd093d1d94,307054446,0,0x0,8
tick,0x7ffd093d1d94,307070104,0,0x0,8
tick,0x7ffd093d1d94,307086068,0,0x0,8
tick,0x7ffd093d1d94,307101353,0,0x0,8
tick,0x7ffd093d1d94,307116908,0,0x0,8
tick,0x7ffd093d1d94,307131952,0,0x0,8
tick,0x7ffd093d1d94,307147947,0,0x0,8
tick,0x7ffd093d1d94,307163035,0,0x0,8
tick,0x7ffd093d1d94,307178640,0,0x0,8
tick,0x7ffd093d1d94,307194524,0,0x0,8
tick,0x7ffd093d1d94,307210583,0,0x0,8
tick,0x7ffd093d1d94,307226183,0,0x0,8
tick,0x7ffd093d1d94,307241657,0,0x0,8
tick,0x7ffd093d1d94,307256840,0,0x0,8
tick,0x7ffd093d1d94,307272497,0,0x0,8
tick,0x7ffd093d1d94,307288372,0,0x0,8
tick,0x7ffd093d1d94,307303485,0,0x0,8
tick,0x7ffd093d1d94,307318459,0,0x0,8
tick,0x7ffd093d1d94,307334775,0,0x0,8
tick,0x7ffd093d1d94,307350646,0,0x0,8
tick,0x7ffd093d1d94,307366758,0,0x0,8
tick,0x7ffd093d1d94,307382567,0,0x0,8
tick,0x7ffd093d1d94,307397871,0,0x0,8
tick,0x7ffd093d1d94,307413681,0,0x0,8
tick,0x7ffd093d1d94,307429951,0,0x0,8
tick,0x7ffd093d1d94,307445606,0,0x0,8
tick,0x7ffd093d1d94,307461624,0,0x0,8
tick,0x7ffd093d1d94,307477195,0,0x0,8
tick,0x7ffd093d1d94,307492880,0,0x0,8
tick,0x7ffd093d1d94,307508195,0,0x0,8
tick,0x7ffd093d1d94,307523492,0,0x0,8
tick,0x7ffd093d1d94,307539202,0,0x0,8
tick,0x7ffd093d1d94,307554435,0,0x0,8
tick,0x7ffd093d1d94,307569463,0,0x0,8
tick,0x7ffd093d1d94,307584953,0,0x0,8
tick,0x7ffd093d1d94,307600801,0,0x0,8
tick,0x7ffd093d1d94,307616649,0,0x0,8
tick,0x7ffd093d1d94,307632204,0,0x0,8
tick,0x7ffd093d1d94,307648167,0,0x0,8
tick,0x7ffd093d1d94,307663817,0,0x0,8
tick,0x7ffd093d1d94,307679144,0,0x0,8
tick,0x7ffd093d1d94,307694206,0,0x0,8
tick,0x7ffd093d1d94,307709590,0,0x0,8
tick,0x7ffd093d1d94,307725154,0,0x0,8
tick,0x7ffd093d1d94,307741091,0,0x0,8
tick,0x7ffd093d1d94,307755971,0,0x0,8
tick,0x7ffd093d1d94,307771219,0,0x0,8
tick,0x7ffd093d1d94,307786936,0,0x0,8
tick,0x7ffd093d1d94,307802841,0,0x0,8
tick,0x7ffd093d1d94,307818687,0,0x0,8
tick,0x7ffd093d1d94,307833811,0,0x0,8
tick,0x7ffd093d1d94,307849718,0,0x0,8
tick,0x7ffd093d1d94,307864913,0,0x0,8
tick,0x7ffd093d1d94,307880923,0,0x0,8
tick,0x7ffd093d1d94,307897197,0,0x0,8
tick,0x7ffd093d1d94,307912332,0,0x0,8
tick,0x7ffd093d1d94,307928689,0,0x0,8
tick,0x7ffd093d1d94,307944441,0,0x0,8
tick,0x7ffd093d1d94,307959869,0,0x0,8
tick,0x7ffd093d1d94,307974980,0,0x0,8
tick,0x7ffd093d1d94,307991155,0,0x0,8
tick,0x7ffd093d1d94,308006740,0,0x0,8
tick,0x7ffd093d1d94,308023184,0,0x0,8
tick,0x7ffd093d1d94,308039823,0,0x0,8
tick,0x7ffd093d1d94,308055634,0,0x0,8
tick,0x7ffd093d1d94,308071034,0,0x0,8
tick,0x7ffd093d1d94,308086466,0,0x0,8
tick,0x7ffd093d1d94,308101986,0,0x0,8
tick,0x7ffd093d1d94,308117575,0,0x0,8
tick,0x7ffd093d1d94,308132889,0,0x0,8
tick,0x7ffd093d1d94,308148292,0,0x0,8
tick,0x7ffd093d1d94,308163170,0,0x0,8
tick,0x7ffd093d1d94,308178539,0,0x0,8
tick,0x7ffd093d1d94,308193984,0,0x0,8
tick,0x7ffd093d1d94,308209074,0,0x0,8
tick,0x7ffd093d1d94,308225184,0,0x0,8
tick,0x7ffd093d1d94,308240954,0,0x0,8
tick,0x7ffd093d1d94,308256557,0,0x0,8
tick,0x7ffd093d1d94,308272842,0,0x0,8
tick,0x7ffd093d1d94,308288522,0,0x0,8
tick,0x7ffd093d1d94,308304018,0,0x0,8
tick,0x7ffd093d1d94,308319542,0,0x0,8
tick,0x7ffd093d1d94,308335141,0,0x0,8
tick,0x7ffd093d1d94,308351038,0,0x0,8
tick,0x7ffd093d1d94,308366592,0,0x0,8
tick,0x7ffd093d1d94,308381716,0,0x0,8
tick,0x7ffd093d1d94,308397061,0,0x0,8
tick,0x7ffd093d1d94,308412716,0,0x0,8
tick,0x7ffd093d1d94,308429224,0,0x0,8
tick,0x7ffd093d1d94,308443666,0,0x0,8
tick,0x7ffd093d1d94,308458433,0,0x0,8
tick,0x7ffd093d1d94,308473704,0,0x0,8
tick,0x7ffd093d1d94,308490344,0,0x0,8
tick,0x7ffd093d1d94,308505959,0,0x0,8
tick,0x7ffd093d1d94,308521483,0,0x0,8
tick,0x7ffd093d1d94,308537512,0,0x0,8
tick,0x7ffd093d1d94,308553148,0,0x0,8
tick,0x7ffd093d1d94,308569101,0,0x0,8
tick,0x7ffd093d1d94,308584867,0,0x0,8
tick,0x7ffd093d1d94,308600992,0,0x0,8
tick,0x7ffd093d1d94,308616171,0,0x0,8
tick,0x7ffd093d1d94,308632037,0,0x0,8
tick,0x7ffd093d1d94,308647222,0,0x0,8
tick,0x7ffd093d1d94,308662437,0,0x0,8
tick,0x7ffd093d1d94,308677999,0,0x0,8
tick,0x7ffd093d1d94,308693352,0,0x0,8
tick,0x7ffd093d1d94,308709177,0,0x0,8
tick,0x7ffd093d1d94,308724601,0,0x0,8
tick,0x7ffd093d1d94,308739675,0,0x0,8
tick,0x7ffd093d1d94,308755296,0,0x0,8
tick,0x7ffd093d1d94,308770622,0,0x0,8
tick,0x7ffd093d1d94,308786100,0,0x0,8
tick,0x7ffd093d1d94,308801429,0,0x0,8
tick,0x7ffd093d1d94,308817025,0,0x0,8
tick,0x7ffd093d1d94,308831941,0,0x0,8
tick,0x7ffd093d1d94,308847850,0,0x0,8
tick,0x7ffd093d1d94,308862965,0,0x0,8
tick,0x7ffd093d1d94,308878528,0,0x0,8
tick,0x7ffd093d1d94,308894159,0,0x0,8
tick,0x7ffd093d1d94,308909654,0,0x0,8
tick,0x7ffd093d1d94,308925582,0,0x0,8
tick,0x7ffd093d1d94,308940866,0,0x0,8
tick,0x7ffd093d1d94,308956423,0,0x0,8
tick,0x7ffd093d1d94,308972936,0,0x0,8
tick,0x7ffd093d1d94,308987694,0,0x0,8
tick,0x7ffd093d1d94,309003486,0,0x0,8
tick,0x7ffd093d1d94,309019220,0,0x0,8
tick,0x7ffd093d1d94,309034515,0,0x0,8
tick,0x7ffd093d1d94,309049869,0,0x0,8
tick,0x7ffd093d1d94,309065609,0,0x0,8
tick,0x7ffd093d1d94,309080720,0,0x0,8
tick,0x7ffd093d1d94,309096489,0,0x0,8
tick,0x7ffd093d1d94,309112217,0,0x0,8
tick,0x7ffd093d1d94,309127432,0,0x0,8
tick,0x7ffd093d1d94,309142806,0,0x0,8
tick,0x7ffd093d1d94,309158195,0,0x0,8
tick,0x7ffd093d1d94,309174508,0,0x0,8
tick,0x7ffd093d1d94,309190231,0,0x0,8
tick,0x7ffd093d1d94,309205472,0,0x0,8
tick,0x7ffd093d1d94,309221137,0,0x0,8
tick,0x7ffd093d1d94,309236720,0,0x0,8
tick,0x7ffd093d1d94,309252000,0,0x0,8
tick,0x7ffd093d1d94,309267391,0,0x0,8
tick,0x7ffd093d1d94,309282642,0,0x0,8
tick,0x7ffd093d1d94,309298362,0,0x0,8
tick,0x7ffd093d1d94,309314071,0,0x0,8
tick,0x7ffd093d1d94,309328921,0,0x0,8
tick,0x7ffd093d1d94,309344888,0,0x0,8
tick,0x7ffd093d1d94,309361224,0,0x0,8
tick,0x7ffd093d1d94,309376341,0,0x0,8
tick,0x7ffd093d1d94,309391778,0,0x0,8
tick,0x7ffd093d1d94,309407616,0,0x0,8
tick,0x7ffd093d1d94,309423008,0,0x0,8
tick,0x7ffd093d1d94,309438499,0,0x0,8
tick,0x7ffd093d1d94,309454144,0,0x0,8
tick,0x7ffd093d1d94,309469568,0,0x0,8
tick,0x7ffd093d1d94,309485294,0,0x0,8
tick,0x7ffd093d1d94,309501198,0,0x0,8
tick,0x7ffd093d1d94,309516414,0,0x0,8
tick,0x7ffd093d1d94,309531497,0,0x0,8
tick,0x7ffd093d1d94,309547089,0,0x0,8
tick,0x7ffd093d1d94,309562807,0,0x0,8
tick,0x7ffd093d1d94,309577509,0,0x0,8
tick,0x7ffd093d1d94,309593247,0,0x0,8
tick,0x7ffd093d1d94,309608611,0,0x0,8
tick,0x7ffd093d1d94,309624039,0,0x0,8
tick,0x7ffd093d1d94,309639340,0,0x0,8
tick,0x7ffd093d1d94,309655344,0,0x0,8
tick,0x7ffd093d1d94,309670831,0,0x0,8
tick,0x7ffd093d1d94,309686354,0,0x0,8
tick,0x7ffd093d1d94,309702067,0,0x0,8
tick,0x7ffd093d1d94,309717237,0,0x0,8
tick,0x7ffd093d1d94,309733319,0,0x0,8
tick,0x7ffd093d1d94,309748781,0,0x0,8
tick,0x7ffd093d1d94,309764997,0,0x0,8
tick,0x7ffd093d1d94,309780829,0,0x0,8
tick,0x7ffd093d1d94,309796758,0,0x0,8
tick,0x7ffd093d1d94,309812667,0,0x0,8
tick,0x7ffd093d1d94,309828465,0,0x0,8
tick,0x7ffd093d1d94,309844009,0,0x0,8
tick,0x7ffd093d1d94,309859409,0,0x0,8
tick,0x7ffd093d1d94,309875024,0,0x0,8
tick,0x7ffd093d1d94,309890884,0,0x0,8
tick,0x7ffd093d1d94,309905780,0,0x0,8
tick,0x7ffd093d1d94,309921007,0,0x0,8
tick,0x7ffd093d1d94,309936756,0,0x0,8
tick,0x7ffd093d1d94,309951517,0,0x0,8
tick,0x7ffd093d1d94,309967148,0,0x0,8
tick,0x7ffd093d1d94,309982413,0,0x0,8
tick,0x7ffd093d1d94,309997563,0,0x0,8
tick,0x7ffd093d1d94,310012730,0,0x0,8
tick,0x7ffd093d1d94,310028387,0,0x0,8
tick,0x7ffd093d1d94,310043807,0,0x0,8
tick,0x7ffd093d1d94,310058613,0,0x0,8
tick,0x7ffd093d1d94,310074346,0,0x0,8
tick,0x7ffd093d1d94,310089581,0,0x0,8
tick,0x7ffd093d1d94,310105124,0,0x0,8
tick,0x7ffd093d1d94,310120244,0,0x0,8
tick,0x7ffd093d1d94,310135737,0,0x0,8
tick,0x7ffd093d1d94,310151335,0,0x0,8
tick,0x7ffd093d1d94,310166739,0,0x0,8
tick,0x7ffd093d1d94,310182489,0,0x0,8
tick,0x7ffd093d1d94,310198313,0,0x0,8
tick,0x7ffd093d1d94,310213570,0,0x0,8
tick,0x7ffd093d1d94,310228699,0,0x0,8
tick,0x7ffd093d1d94,310244509,0,0x0,8
tick,0x7ffd093d1d94,310259750,0,0x0,8
tick,0x7ffd093d1d94,310275473,0,0x0,8
tick,0x7ffd093d1d94,310290458,0,0x0,8
tick,0x7ffd093d1d94,310306632,0,0x0,8
tick,0x7ffd093d1d94,310322261,0,0x0,8
tick,0x7ffd093d1d94,310338327,0,0x0,8
tick,0x7ffd093d1d94,310354133,0,0x0,8
tick,0x7ffd093d1d94,310370159,0,0x0,8
tick,0x7ffd093d1d94,310386038,0,0x0,8
tick,0x7ffd093d1d94,310401506,0,0x0,8
tick,0x7ffd093d1d94,310416924,0,0x0,8
tick,0x7ffd093d1d94,310432299,0,0x0,8
tick,0x7ffd093d1d94,310448394,0,0x0,8
tick,0x7ffd093d1d94,310464415,0,0x0,8
tick,0x7ffd093d1d94,310480811,0,0x0,8
tick,0x7ffd093d1d94,310496120,0,0x0,8
tick,0x7ffd093d1d94,310511448,0,0x0,8
tick,0x7ffd093d1d94,310527196,0,0x0,8
tick,0x7ffd093d1d94,310542476,0,0x0,8
tick,0x7ffd093d1d94,310558182,0,0x0,8
tick,0x7ffd093d1d94,310574103,0,0x0,8
tick,0x7ffd093d1d94,310590086,0,0x0,8
tick,0x7ffd093d1d94,310605922,0,0x0,8
tick,0x7ffd093d1d94,310625081,0,0x0,8
tick,0x7ffd093d1d94,310637635,0,0x0,8
tick,0x7ffd093d1d94,310653650,0,0x0,8
tick,0x7ffd093d1d94,310669576,0,0x0,8
tick,0x7ffd093d1d94,310684686,0,0x0,8
tick,0x7ffd093d1d94,310700375,0,0x0,8
tick,0x7ffd093d1d94,310715813,0,0x0,8
tick,0x7ffd093d1d94,310731559,0,0x0,8
tick,0x7ffd093d1d94,310747059,0,0x0,8
tick,0x7ffd093d1d94,310762985,0,0x0,8
tick,0x7ffd093d1d94,310777960,0,0x0,8
tick,0x7ffd093d1d94,310793010,0,0x0,8
tick,0x7ffd093d1d94,310808585,0,0x0,8
tick,0x7ffd093d1d94,310824396,0,0x0,8
tick,0x7ffd093d1d94,310838857,0,0x0,8
tick,0x7ffd093d1d94,310854176,0,0x0,8
tick,0x7ffd093d1d94,310869629,0,0x0,8
tick,0x7ffd093d1d94,310885524,0,0x0,8
tick,0x7ffd093d1d94,310900898,0,0x0,8
tick,0x7ffd093d1d94,310916109,0,0x0,8
tick,0x7ffd093d1d94,310932079,0,0x0,8
tick,0x7ffd093d1d94,310946951,0,0x0,8
tick,0x7ffd093d1d94,310962337,0,0x0,8
tick,0x7ffd093d1d94,310977727,0,0x0,8
tick,0x7ffd093d1d94,310992690,0,0x0,8
tick,0x7ffd093d1d94,311008297,0,0x0,8
tick,0x7ffd093d1d94,311024036,0,0x0,8
tick,0x7ffd093d1d94,311039290,0,0x0,8
tick,0x7ffd093d1d94,311055102,0,0x0,8
tick,0x7ffd093d1d94,311070346,0,0x0,8
tick,0x7ffd093d1d94,311086487,0,0x0,8
tick,0x7ffd093d1d94,311101690,0,0x0,8
tick,0x7ffd093d1d94,311116284,0,0x0,8
tick,0x7ffd093d1d94,311132329,0,0x0,8
tick,0x7ffd093d1d94,311147917,0,0x0,8
tick,0x7ffd093d1d94,311163413,0,0x0,8
tick,0x7ffd093d1d94,311178914,0,0x0,8
tick,0x7ffd093d1d94,311194350,0,0x0,8
tick,0x7ffd093d1d94,311209752,0,0x0,8
tick,0x7ffd093d1d94,311225925,0,0x0,8
tick,0x7ffd093d1d94,311240979,0,0x0,8
tick,0x7ffd093d1d94,311256906,0,0x0,8
tick,0x7ffd093d1d94,311272955,0,0x0,8
tick,0x7ffd093d1d94,311289036,0,0x0,8
tick,0x7ffd093d1d94,311304722,0,0x0,8
tick,0x7ffd093d1d94,311319940,0,0x0,8
tick,0x7ffd093d1d94,311335678,0,0x0,8
tick,0x7ffd093d1d94,311351410,0,0x0,8
tick,0x7ffd093d1d94,311367172,0,0x0,8
tick,0x7ffd093d1d94,311382981,0,0x0,8
tick,0x7ffd093d1d94,311398270,0,0x0,8
tick,0x7ffd093d1d94,311413266,0,0x0,8
tick,0x7ffd093d1d94,311428477,0,0x0,8
tick,0x7ffd093d1d94,311443630,0,0x0,8
tick,0x7ffd093d1d94,311459157,0,0x0,8
tick,0x7ffd093d1d94,311474808,0,0x0,8
tick,0x7ffd093d1d94,311490354,0,0x0,8
tick,0x7ffd093d1d94,311505588,0,0x0,8
tick,0x7ffd093d1d94,311521491,0,0x0,8
tick,0x7ffd093d1d94,311537041,0,0x0,8
tick,0x7ffd093d1d94,311552414,0,0x0,8
tick,0x7ffd093d1d94,311568134,0,0x0,8
tick,0x7ffd093d1d94,311583567,0,0x0,8
tick,0x7ffd093d1d94,311599354,0,0x0,8
tick,0x7ffd093d1d94,311614555,0,0x0,8
tick,0x7ffd093d1d94,311630387,0,0x0,8
tick,0x7ffd093d1d94,311646395,0,0x0,8
tick,0x7ffd093d1d94,311662258,0,0x0,8
tick,0x7ffd093d1d94,311678194,0,0x0,8
tick,0x7ffd093d1d94,311694124,0,0x0,8
tick,0x7ffd093d1d94,311710444,0,0x0,8
tick,0x7ffd093d1d94,311725503,0,0x0,8
tick,0x7ffd093d1d94,311741499,0,0x0,8
tick,0x7ffd093d1d94,311757598,0,0x0,8
tick,0x7ffd093d1d94,311772951,0,0x0,8
tick,0x7ffd093d1d94,311788991,0,0x0,8
tick,0x7ffd093d1d94,311803824,0,0x0,8
tick,0x7ffd093d1d94,311820024,0,0x0,8
tick,0x7ffd093d1d94,311835850,0,0x0,8
tick,0x7ffd093d1d94,311851071,0,0x0,8
tick,0x7ffd093d1d94,311867060,0,0x0,8
tick,0x7ffd093d1d94,311883181,0,0x0,8
tick,0x7ffd093d1d94,311898399,0,0x0,8
tick,0x7ffd093d1d94,311913292,0,0x0,8
tick,0x7ffd093d1d94,311934992,0,0x0,8
tick,0x7ffd093d1d94,311960037,0,0x0,8
tick,0x7ffd093d1d94,311975003,0,0x0,8
tick,0x7ffd093d1d94,311990980,0,0x0,8
tick,0x7ffd093d1d94,312006271,0,0x0,8
tick,0x7ffd093d1d94,312022640,0,0x0,8
tick,0x7ffd093d1d94,312038475,0,0x0,8
tick,0x7ffd093d1d94,312053852,0,0x0,8
tick,0x7ffd093d1d94,312068943,0,0x0,8
tick,0x7ffd093d1d94,312085108,0,0x0,8
tick,0x7ffd093d1d94,312100578,0,0x0,8
tick,0x7ffd093d1d94,312115942,0,0x0,8
tick,0x7ffd093d1d94,312131271,0,0x0,8
tick,0x7ffd093d1d94,312146738,0,0x0,8
tick,0x7ffd093d1d94,312162374,0,0x0,8
tick,0x7ffd093d1d94,312177532,0,0x0,8
tick,0x7ffd093d1d94,312193103,0,0x0,8
tick,0x7ffd093d1d94,312209090,0,0x0,8
tick,0x7ffd093d1d94,312224630,0,0x0,8
tick,0x7ffd093d1d94,312240219,0,0x0,8
tick,0x7ffd093d1d94,312256588,0,0x0,8
tick,0x7ffd093d1d94,312271953,0,0x0,8
tick,0x7ffd093d1d94,312288096,0,0x0,8
tick,0x7ffd093d1d94,312303554,0,0x0,8
tick,0x7ffd093d1d94,312319688,0,0x0,8
tick,0x7ffd093d1d94,312335376,0,0x0,8
tick,0x7ffd093d1d94,312351300,0,0x0,8
tick,0x7ffd093d1d94,312366201,0,0x0,8
tick,0x7ffd093d1d94,312381636,0,0x0,8
tick,0x7ffd093d1d94,312396836,0,0x0,8
tick,0x7ffd093d1d94,312412568,0,0x0,8
tick,0x7ffd093d1d94,312428000,0,0x0,8
tick,0x7ffd093d1d94,312443145,0,0x0,8
tick,0x7ffd093d1d94,312459506,0,0x0,8
tick,0x7ffd093d1d94,312475100,0,0x0,8
tick,0x7ffd093d1d94,312490290,0,0x0,8
tick,0x7ffd093d1d94,312505403,0,0x0,8
tick,0x7ffd093d1d94,312520746,0,0x0,8
tick,0x7ffd093d1d94,312536939,0,0x0,8
tick,0x7ffd093d1d94,312552905,0,0x0,8
tick,0x7ffd093d1d94,312568009,0,0x0,8
tick,0x7ffd093d1d94,312583104,0,0x0,8
tick,0x7ffd093d1d94,312598884,0,0x0,8
tick,0x7ffd093d1d94,312614052,0,0x0,8
tick,0x7ffd093d1d94,312629978,0,0x0,8
tick,0x7ffd093d1d94,312645767,0,0x0,8
tick,0x7ffd093d1d94,312660613,0,0x0,8
tick,0x7ffd093d1d94,312676001,0,0x0,8
tick,0x7ffd093d1d94,312691113,0,0x0,8
tick,0x7ffd093d1d94,312706995,0,0x0,8
tick,0x7ffd093d1d94,312722544,0,0x0,8
tick,0x7ffd093d1d94,312738344,0,0x0,8
tick,0x7ffd093d1d94,312753316,0,0x0,8
tick,0x7ffd093d1d94,312768019,0,0x0,8
tick,0x7ffd093d1d94,312783375,0,0x0,8
tick,0x7ffd093d1d94,312798786,0,0x0,8
tick,0x7ffd093d1d94,312839846,0,0x0,8
tick,0x7ffd093d1d94,312842021,0,0x0,8
tick,0x7ffd093d1d94,312847887,0,0x0,8
tick,0x7ffd093d1d94,312861195,0,0x0,8
tick,0x7ffd093d1d94,312876796,0,0x0,8
tick,0x7ffd093d1d94,312893792,0,0x0,8
tick,0x7ffd093d1d94,312907611,0,0x0,8
tick,0x7ffd093d1d94,312923131,0,0x0,8
tick,0x7ffd093d1d94,312939128,0,0x0,8
tick,0x7ffd093d1d94,312955124,0,0x0,8
tick,0x7ffd093d1d94,312971254,0,0x0,8
tick,0x7ffd093d1d94,312987476,0,0x0,8
tick,0x7ffd093d1d94,313003319,0,0x0,8
tick,0x7ffd093d1d94,313018785,0,0x0,8
tick,0x7ffd093d1d94,313034549,0,0x0,8
tick,0x7ffd093d1d94,313050528,0,0x0,8
tick,0x7ffd093d1d94,313066679,0,0x0,8
tick,0x7ffd093d1d94,313081509,0,0x0,8
tick,0x7ffd093d1d94,313097517,0,0x0,8
tick,0x7ffd093d1d94,313113209,0,0x0,8
tick,0x7ffd093d1d94,313129567,0,0x0,8
tick,0x7ffd093d1d94,313144959,0,0x0,8
tick,0x7ffd093d1d94,313160723,0,0x0,8
tick,0x7ffd093d1d94,313175662,0,0x0,8
tick,0x7ffd093d1d94,313190891,0,0x0,8
tick,0x7ffd093d1d94,313206850,0,0x0,8
tick,0x7ffd093d1d94,313222342,0,0x0,8
tick,0x7ffd093d1d94,313237596,0,0x0,8
tick,0x7ffd093d1d94,313252828,0,0x0,8
tick,0x7ffd093d1d94,313269125,0,0x0,8
tick,0x7ffd093d1d94,313283631,0,0x0,8
tick,0x7ffd093d1d94,313298631,0,0x0,8
tick,0x7ffd093d1d94,313314221,0,0x0,8
tick,0x7ffd093d1d94,313330249,0,0x0,8
tick,0x7ffd093d1d94,313346352,0,0x0,8
tick,0x7ffd093d1d94,313362347,0,0x0,8
tick,0x7ffd093d1d94,313378452,0,0x0,8
tick,0x7ffd093d1d94,313393183,0,0x0,8
tick,0x7ffd093d1d94,313408182,0,0x0,8
tick,0x7ffd093d1d94,313424181,0,0x0,8
tick,0x7ffd093d1d94,313439865,0,0x0,8
tick,0x7ffd093d1d94,313455171,0,0x0,8
tick,0x7ffd093d1d94,313470150,0,0x0,8
tick,0x7ffd093d1d94,313486081,0,0x0,8
tick,0x7ffd093d1d94,313501879,0,0x0,8
tick,0x7ffd093d1d94,313517120,0,0x0,8
tick,0x7ffd093d1d94,313532327,0,0x0,8
tick,0x7ffd093d1d94,313547929,0,0x0,8
tick,0x7ffd093d1d94,313563521,0,0x0,8
tick,0x7ffd093d1d94,313579885,0,0x0,8
tick,0x7ffd093d1d94,313594998,0,0x0,8
tick,0x7ffd093d1d94,313610302,0,0x0,8
tick,0x7ffd093d1d94,313625591,0,0x0,8
tick,0x7ffd093d1d94,313640961,0,0x0,8
tick,0x7ffd093d1d94,313657114,0,0x0,8
tick,0x7ffd093d1d94,313672376,0,0x0,8
tick,0x7ffd093d1d94,313688363,0,0x0,8
tick,0x7ffd093d1d94,313703609,0,0x0,8
tick,0x7ffd093d1d94,313719003,0,0x0,8
tick,0x7ffd093d1d94,313734837,0,0x0,8
tick,0x7ffd093d1d94,313750196,0,0x0,8
tick,0x7ffd093d1d94,313765957,0,0x0,8
tick,0x7ffd093d1d94,313781518,0,0x0,8
tick,0x7ffd093d1d94,313796971,0,0x0,8
tick,0x7ffd093d1d94,313812218,0,0x0,8
tick,0x7ffd093d1d94,313827691,0,0x0,8
tick,0x7ffd093d1d94,313843311,0,0x0,8
tick,0x7ffd093d1d94,313858783,0,0x0,8
tick,0x7ffd093d1d94,313874411,0,0x0,8
tick,0x7ffd093d1d94,313890362,0,0x0,8
tick,0x7ffd093d1d94,313905815,0,0x0,8
tick,0x7ffd093d1d94,313921031,0,0x0,8
tick,0x7ffd093d1d94,313936059,0,0x0,8
tick,0x7ffd093d1d94,313952035,0,0x0,8
tick,0x7ffd093d1d94,313967914,0,0x0,8
tick,0x7ffd093d1d94,313983243,0,0x0,8
tick,0x7ffd093d1d94,313998355,0,0x0,8
tick,0x7ffd093d1d94,314013576,0,0x0,8
tick,0x7ffd093d1d94,314028798,0,0x0,8
tick,0x7ffd093d1d94,314044116,0,0x0,8
tick,0x7ffd093d1d94,314059087,0,0x0,8
tick,0x7ffd093d1d94,314075129,0,0x0,8
tick,0x7ffd093d1d94,314090039,0,0x0,8
tick,0x7ffd093d1d94,314105373,0,0x0,8
tick,0x7ffd093d1d94,314120394,0,0x0,8
tick,0x7ffd093d1d94,314136382,0,0x0,8
tick,0x7ffd093d1d94,314151490,0,0x0,8
tick,0x7ffd093d1d94,314166634,0,0x0,8
tick,0x7ffd093d1d94,314182216,0,0x0,8
tick,0x7ffd093d1d94,314197427,0,0x0,8
tick,0x7ffd093d1d94,314213513,0,0x0,8
tick,0x7ffd093d1d94,314228619,0,0x0,8
tick,0x7ffd093d1d94,314244720,0,0x0,8
tick,0x7ffd093d1d94,314260517,0,0x0,8
tick,0x7ffd093d1d94,314276471,0,0x0,8
tick,0x7ffd093d1d94,314292316,0,0x0,8
tick,0x7ffd093d1d94,314308276,0,0x0,8
tick,0x7ffd093d1d94,314323627,0,0x0,8
tick,0x7ffd093d1d94,314339886,0,0x0,8
tick,0x7ffd093d1d94,314355768,0,0x0,8
tick,0x7ffd093d1d94,314371677,0,0x0,8
tick,0x7ffd093d1d94,314387613,0,0x0,8
tick,0x7ffd093d1d94,314403590,0,0x0,8
tick,0x7ffd093d1d94,314419027,0,0x0,8
tick,0x7ffd093d1d94,314435135,0,0x0,8
tick,0x7ffd093d1d94,314450283,0,0x0,8
tick,0x7ffd093d1d94,314465259,0,0x0,8
tick,0x7ffd093d1d94,314480355,0,0x0,8
tick,0x7ffd093d1d94,314495213,0,0x0,8
tick,0x7ffd093d1d94,314511352,0,0x0,8
tick,0x7ffd093d1d94,314526749,0,0x0,8
tick,0x7ffd093d1d94,314542815,0,0x0,8
tick,0x7ffd093d1d94,314558567,0,0x0,8
tick,0x7ffd093d1d94,314574432,0,0x0,8
tick,0x7ffd093d1d94,314590209,0,0x0,8
tick,0x7ffd093d1d94,314605401,0,0x0,8
tick,0x7ffd093d1d94,314620517,0,0x0,8
tick,0x7ffd093d1d94,314636309,0,0x0,8
tick,0x7ffd093d1d94,314651725,0,0x0,8
tick,0x7ffd093d1d94,314667272,0,0x0,8
tick,0x7ffd093d1d94,314683161,0,0x0,8
tick,0x7ffd093d1d94,314698744,0,0x0,8
tick,0x7ffd093d1d94,314714434,0,0x0,8
tick,0x7ffd093d1d94,314730374,0,0x0,8
tick,0x7ffd093d1d94,314745912,0,0x0,8
tick,0x7ffd093d1d94,314761312,0,0x0,8
tick,0x7ffd093d1d94,314776729,0,0x0,8
tick,0x7ffd093d1d94,314792482,0,0x0,8
tick,0x7ffd093d1d94,314808059,0,0x0,8
tick,0x7ffd093d1d94,314823376,0,0x0,8
tick,0x7ffd093d1d94,314838385,0,0x0,8
tick,0x7ffd093d1d94,314853882,0,0x0,8
tick,0x7ffd093d1d94,314869150,0,0x0,8
tick,0x7ffd093d1d94,314884785,0,0x0,8
tick,0x7ffd093d1d94,314900299,0,0x0,8
tick,0x7ffd093d1d94,314915875,0,0x0,8
tick,0x7ffd093d1d94,314931374,0,0x0,8
tick,0x7ffd093d1d94,314946067,0,0x0,8
tick,0x7ffd093d1d94,314961624,0,0x0,8
tick,0x7ffd093d1d94,314976695,0,0x0,8
tick,0x7ffd093d1d94,314991900,0,0x0,8
tick,0x7ffd093d1d94,315007059,0,0x0,8
tick,0x7ffd093d1d94,315022651,0,0x0,8
tick,0x7ffd093d1d94,315037977,0,0x0,8
tick,0x7ffd093d1d94,315054465,0,0x0,8
tick,0x7ffd093d1d94,315069216,0,0x0,8
tick,0x7ffd093d1d94,315084129,0,0x0,8
tick,0x7ffd093d1d94,315100071,0,0x0,8
tick,0x7ffd093d1d94,315116311,0,0x0,8
tick,0x7ffd093d1d94,315131426,0,0x0,8
tick,0x7ffd093d1d94,315147068,0,0x0,8
tick,0x7ffd093d1d94,315162806,0,0x0,8
tick,0x7ffd093d1d94,315178668,0,0x0,8
tick,0x7ffd093d1d94,315194633,0,0x0,8
tick,0x7ffd093d1d94,315210189,0,0x0,8
tick,0x7ffd093d1d94,315225319,0,0x0,8
tick,0x7ffd093d1d94,315240999,0,0x0,8
tick,0x7ffd093d1d94,315256214,0,0x0,8
tick,0x7ffd093d1d94,315271617,0,0x0,8
tick,0x7ffd093d1d94,315287232,0,0x0,8
tick,0x7ffd093d1d94,315303047,0,0x0,8
tick,0x7ffd093d1d94,315318419,0,0x0,8
tick,0x7ffd093d1d94,315333245,0,0x0,8
tick,0x7ffd093d1d94,315349137,0,0x0,8
tick,0x7ffd093d1d94,315365096,0,0x0,8
tick,0x7ffd093d1d94,315380694,0,0x0,8
tick,0x7ffd093d1d94,315395950,0,0x0,8
tick,0x7ffd093d1d94,315410870,0,0x0,8
tick,0x7ffd093d1d94,315425976,0,0x0,8
tick,0x7ffd093d1d94,315440961,0,0x0,8
tick,0x7ffd093d1d94,315457073,0,0x0,8
tick,0x7ffd093d1d94,315473006,0,0x0,8
tick,0x7ffd093d1d94,315487955,0,0x0,8
tick,0x7ffd093d1d94,315503768,0,0x0,8
tick,0x7ffd093d1d94,315518416,0,0x0,8
tick,0x7ffd093d1d94,315534583,0,0x0,8
tick,0x7ffd093d1d94,315550534,0,0x0,8
tick,0x7ffd093d1d94,315566616,0,0x0,8
tick,0x7ffd093d1d94,315582224,0,0x0,8
tick,0x7ffd093d1d94,315598251,0,0x0,8
tick,0x7ffd093d1d94,315613401,0,0x0,8
tick,0x7ffd093d1d94,315628730,0,0x0,8
tick,0x7ffd093d1d94,315644314,0,0x0,8
tick,0x7ffd093d1d94,315659979,0,0x0,8
tick,0x7ffd093d1d94,315675168,0,0x0,8
tick,0x7ffd093d1d94,315691236,0,0x0,8
tick,0x7ffd093d1d94,315735533,0,0x0,8
tick,0x7ffd093d1d94,315738840,0,0x0,8
tick,0x7ffd093d1d94,315753898,0,0x0,8
tick,0x7ffd093d1d94,315772058,0,0x0,8
tick,0x7ffd093d1d94,315784889,0,0x0,8
tick,0x7ffd093d1d94,315800992,0,0x0,8
tick,0x7ffd093d1d94,315815637,0,0x0,8
tick,0x7ffd093d1d94,315831072,0,0x0,8
tick,0x7ffd093d1d94,315847041,0,0x0,8
tick,0x7ffd093d1d94,315863077,0,0x0,8
tick,0x7ffd093d1d94,315877552,0,0x0,8
tick,0x7ffd093d1d94,315893542,0,0x0,8
tick,0x7ffd093d1d94,315908595,0,0x0,8
tick,0x7ffd093d1d94,315924541,0,0x0,8
tick,0x7ffd093d1d94,315939500,0,0x0,8
tick,0x7ffd093d1d94,315954671,0,0x0,8
tick,0x7ffd093d1d94,315970074,0,0x0,8
tick,0x7ffd093d1d94,315985624,0,0x0,8
tick,0x7ffd093d1d94,316001666,0,0x0,8
tick,0x7ffd093d1d94,316018327,0,0x0,8
tick,0x7ffd093d1d94,316032665,0,0x0,8
tick,0x7ffd093d1d94,316048693,0,0x0,8
tick,0x7ffd093d1d94,316063613,0,0x0,8
tick,0x7ffd093d1d94,316079664,0,0x0,8
tick,0x7ffd093d1d94,316095848,0,0x0,8
tick,0x7ffd093d1d94,316111357,0,0x0,8
tick,0x7ffd093d1d94,316126628,0,0x0,8
tick,0x7ffd093d1d94,316142900,0,0x0,8
tick,0x7ffd093d1d94,316158184,0,0x0,8
tick,0x7ffd093d1d94,316173346,0,0x0,8
tick,0x7ffd093d1d94,316188768,0,0x0,8
tick,0x7ffd093d1d94,316204771,0,0x0,8
tick,0x7ffd093d1d94,316220171,0,0x0,8
tick,0x7ffd093d1d94,316234870,0,0x0,8
tick,0x7ffd093d1d94,316250301,0,0x0,8
tick,0x7ffd093d1d94,316265594,0,0x0,8
tick,0x7ffd093d1d94,316282134,0,0x0,8
tick,0x7ffd093d1d94,316298180,0,0x0,8
tick,0x7ffd093d1d94,316313704,0,0x0,8
tick,0x7ffd093d1d94,316329810,0,0x0,8
tick,0x7ffd093d1d94,316345586,0,0x0,8
tick,0x7ffd093d1d94,316361057,0,0x0,8
tick,0x7ffd093d1d94,316377013,0,0x0,8
tick,0x7ffd093d1d94,316392424,0,0x0,8
tick,0x7ffd093d1d94,316408978,0,0x0,8
tick,0x7ffd093d1d94,316423989,0,0x0,8
tick,0x7ffd093d1d94,316440062,0,0x0,8
tick,0x7ffd093d1d94,316456009,0,0x0,8
tick,0x7ffd093d1d94,316471615,0,0x0,8
tick,0x7ffd093d1d94,316487554,0,0x0,8
tick,0x7ffd093d1d94,316502868,0,0x0,8
tick,0x7ffd093d1d94,316518363,0,0x0,8
tick,0x7ffd093d1d94,316533118,0,0x0,8
tick,0x7ffd093d1d94,316549172,0,0x0,8
tick,0x7ffd093d1d94,316565395,0,0x0,8
tick,0x7ffd093d1d94,316581180,0,0x0,8
tick,0x7ffd093d1d94,316596302,0,0x0,8
tick,0x7ffd093d1d94,316611360,0,0x0,8
tick,0x7ffd093d1d94,316626944,0,0x0,8
tick,0x7ffd093d1d94,316642475,0,0x0,8
tick,0x7ffd093d1d94,316657468,0,0x0,8
tick,0x7ffd093d1d94,316673560,0,0x0,8
tick,0x7ffd093d1d94,316689421,0,0x0,8
tick,0x7ffd093d1d94,316704708,0,0x0,8
tick,0x7ffd093d1d94,316720223,0,0x0,8
tick,0x7ffd093d1d94,316736001,0,0x0,8
tick,0x7ffd093d1d94,316751415,0,0x0,8
tick,0x7ffd093d1d94,316767278,0,0x0,8
tick,0x7ffd093d1d94,316782735,0,0x0,8
tick,0x7ffd093d1d94,316798335,0,0x0,8
tick,0x7ffd093d1d94,316814262,0,0x0,8
tick,0x7ffd093d1d94,316829524,0,0x0,8
tick,0x7ffd093d1d94,316844871,0,0x0,8
tick,0x7ffd093d1d94,316860433,0,0x0,8
tick,0x7ffd093d1d94,316876459,0,0x0,8
tick,0x7ffd093d1d94,316892467,0,0x0,8
tick,0x7ffd093d1d94,316907546,0,0x0,8
tick,0x7ffd093d1d94,316922912,0,0x0,8
tick,0x7ffd093d1d94,316938269,0,0x0,8
tick,0x7ffd093d1d94,316953402,0,0x0,8
tick,0x7ffd093d1d94,316969003,0,0x0,8
tick,0x7ffd093d1d94,316984334,0,0x0,8
tick,0x7ffd093d1d94,316999357,0,0x0,8
tick,0x7ffd093d1d94,317014896,0,0x0,8
tick,0x7ffd093d1d94,317030096,0,0x0,8
tick,0x7ffd093d1d94,317046111,0,0x0,8
tick,0x7ffd093d1d94,317061885,0,0x0,8
tick,0x7ffd093d1d94,317077047,0,0x0,8
tick,0x7ffd093d1d94,317093687,0,0x0,8
tick,0x7ffd093d1d94,317108125,0,0x0,8
tick,0x7ffd093d1d94,317123670,0,0x0,8
tick,0x7ffd093d1d94,317139311,0,0x0,8
tick,0x7ffd093d1d94,317155973,0,0x0,8
tick,0x7ffd093d1d94,317171474,0,0x0,8
tick,0x7ffd093d1d94,317187346,0,0x0,8
tick,0x7ffd093d1d94,317203503,0,0x0,8
tick,0x7ffd093d1d94,317219055,0,0x0,8
tick,0x7ffd093d1d94,317234434,0,0x0,8
tick,0x7ffd093d1d94,317249458,0,0x0,8
tick,0x7ffd093d1d94,317265195,0,0x0,8
tick,0x7ffd093d1d94,317280826,0,0x0,8
tick,0x7ffd093d1d94,317296815,0,0x0,8
tick,0x7ffd093d1d94,317312888,0,0x0,8
tick,0x7ffd093d1d94,317329058,0,0x0,8
tick,0x7ffd093d1d94,317345116,0,0x0,8
tick,0x7ffd093d1d94,317360774,0,0x0,8
tick,0x7ffd093d1d94,317376463,0,0x0,8
tick,0x7ffd093d1d94,317391316,0,0x0,8
tick,0x7ffd093d1d94,317407025,0,0x0,8
tick,0x7ffd093d1d94,317422882,0,0x0,8
tick,0x7ffd093d1d94,317437921,0,0x0,8
tick,0x7ffd093d1d94,317454125,0,0x0,8
tick,0x7ffd093d1d94,317469447,0,0x0,8
tick,0x7ffd093d1d94,317484576,0,0x0,8
tick,0x7ffd093d1d94,317499720,0,0x0,8
tick,0x7ffd093d1d94,317515342,0,0x0,8
tick,0x7ffd093d1d94,317531697,0,0x0,8
tick,0x7ffd093d1d94,317546855,0,0x0,8
tick,0x7ffd093d1d94,317562284,0,0x0,8
tick,0x7ffd093d1d94,317577933,0,0x0,8
tick,0x7ffd093d1d94,317594004,0,0x0,8
tick,0x7ffd093d1d94,317610306,0,0x0,8
tick,0x7ffd093d1d94,317625452,0,0x0,8
tick,0x7ffd093d1d94,317641034,0,0x0,8
tick,0x7ffd093d1d94,317656172,0,0x0,8
tick,0x7ffd093d1d94,317671992,0,0x0,8
tick,0x7ffd093d1d94,317687112,0,0x0,8
tick,0x7ffd093d1d94,317701793,0,0x0,8
tick,0x7ffd093d1d94,317717309,0,0x0,8
tick,0x7ffd093d1d94,317732988,0,0x0,8
tick,0x7ffd093d1d94,317748100,0,0x0,8
tick,0x7ffd093d1d94,317764043,0,0x0,8
tick,0x7ffd093d1d94,317779695,0,0x0,8
tick,0x7ffd093d1d94,317794886,0,0x0,8
tick,0x7ffd093d1d94,317810790,0,0x0,8
tick,0x7ffd093d1d94,317825880,0,0x0,8
tick,0x7ffd093d1d94,317841559,0,0x0,8
tick,0x7ffd093d1d94,317857172,0,0x0,8
tick,0x7ffd093d1d94,317872315,0,0x0,8
tick,0x7ffd093d1d94,317887504,0,0x0,8
tick,0x7ffd093d1d94,317902411,0,0x0,8
tick,0x7ffd093d1d94,317918422,0,0x0,8
tick,0x7ffd093d1d94,317934491,0,0x0,8
tick,0x7ffd093d1d94,317950434,0,0x0,8
tick,0x7ffd093d1d94,317966007,0,0x0,8
tick,0x7ffd093d1d94,317980964,0,0x0,8
tick,0x7ffd093d1d94,317996106,0,0x0,8
tick,0x7ffd093d1d94,318011369,0,0x0,8
tick,0x7ffd093d1d94,318026799,0,0x0,8
tick,0x7ffd093d1d94,318042376,0,0x0,8
tick,0x7ffd093d1d94,318058167,0,0x0,8
tick,0x7ffd093d1d94,318074302,0,0x0,8
tick,0x7ffd093d1d94,318089306,0,0x0,8
tick,0x7ffd093d1d94,318104973,0,0x0,8
tick,0x7ffd093d1d94,318120712,0,0x0,8
tick,0x7ffd093d1d94,318136091,0,0x0,8
tick,0x7ffd093d1d94,318151065,0,0x0,8
tick,0x7ffd093d1d94,318166824,0,0x0,8
tick,0x7ffd093d1d94,318182326,0,0x0,8
tick,0x7ffd093d1d94,318197146,0,0x0,8
tick,0x7ffd093d1d94,318212135,0,0x0,8
tick,0x7ffd093d1d94,318228377,0,0x0,8
tick,0x7ffd093d1d94,318243945,0,0x0,8
tick,0x7ffd093d1d94,318259854,0,0x0,8
tick,0x7ffd093d1d94,318275398,0,0x0,8
tick,0x7ffd093d1d94,318291383,0,0x0,8
tick,0x7ffd093d1d94,318307052,0,0x0,8
tick,0x7ffd093d1d94,318322435,0,0x0,8
tick,0x7ffd093d1d94,318338190,0,0x0,8
tick,0x7ffd093d1d94,318353410,0,0x0,8
tick,0x7ffd093d1d94,318368620,0,0x0,8
tick,0x7ffd093d1d94,318384326,0,0x0,8
tick,0x7ffd093d1d94,318399622,0,0x0,8
tick,0x7ffd093d1d94,318415598,0,0x0,8
tick,0x7ffd093d1d94,318431538,0,0x0,8
tick,0x7ffd093d1d94,318446461,0,0x0,8
tick,0x7ffd093d1d94,318462135,0,0x0,8
tick,0x7ffd093d1d94,318476941,0,0x0,8
tick,0x7ffd093d1d94,318492755,0,0x0,8
tick,0x7ffd093d1d94,318508283,0,0x0,8
tick,0x7ffd093d1d94,318523821,0,0x0,8
tick,0x7ffd093d1d94,318539929,0,0x0,8
tick,0x7ffd093d1d94,318555914,0,0x0,8
tick,0x7ffd093d1d94,318571600,0,0x0,8
tick,0x7ffd093d1d94,318587092,0,0x0,8
tick,0x7ffd093d1d94,318602579,0,0x0,8
tick,0x7ffd093d1d94,318618163,0,0x0,8
tick,0x7ffd093d1d94,318633210,0,0x0,8
tick,0x7ffd093d1d94,318648981,0,0x0,8
tick,0x7ffd093d1d94,318663995,0,0x0,8
tick,0x7ffd093d1d94,318679446,0,0x0,8
tick,0x7ffd093d1d94,318694714,0,0x0,8
tick,0x7ffd093d1d94,318710450,0,0x0,8
tick,0x7ffd093d1d94,318725645,0,0x0,8
tick,0x7ffd093d1d94,318740847,0,0x0,8
tick,0x7ffd093d1d94,318756361,0,0x0,8
tick,0x7ffd093d1d94,318771678,0,0x0,8
tick,0x7ffd093d1d94,318786865,0,0x0,8
tick,0x7ffd093d1d94,318802111,0,0x0,8
tick,0x7ffd093d1d94,318817589,0,0x0,8
tick,0x7ffd093d1d94,318833319,0,0x0,8
tick,0x7ffd093d1d94,318849041,0,0x0,8
tick,0x7ffd093d1d94,318864885,0,0x0,8
tick,0x7ffd093d1d94,318880229,0,0x0,8
tick,0x7ffd093d1d94,318895585,0,0x0,8
tick,0x7ffd093d1d94,318911276,0,0x0,8
tick,0x7ffd093d1d94,318926611,0,0x0,8
tick,0x7ffd093d1d94,318941960,0,0x0,8
tick,0x7ffd093d1d94,318957909,0,0x0,8
tick,0x7ffd093d1d94,318973716,0,0x0,8
tick,0x7ffd093d1d94,318989509,0,0x0,8
tick,0x7ffd093d1d94,319004798,0,0x0,8
tick,0x7ffd093d1d94,319020611,0,0x0,8
tick,0x7ffd093d1d94,319036066,0,0x0,8
tick,0x7ffd093d1d94,319051663,0,0x0,8
tick,0x7ffd093d1d94,319068081,0,0x0,8
tick,0x7ffd093d1d94,319082565,0,0x0,8
tick,0x7ffd093d1d94,319097271,0,0x0,8
tick,0x7ffd093d1d94,319113501,0,0x0,8
tick,0x7ffd093d1d94,319128683,0,0x0,8
tick,0x7ffd093d1d94,319144322,0,0x0,8
tick,0x7ffd093d1d94,319160016,0,0x0,8
tick,0x7ffd093d1d94,319177620,0,0x0,8
tick,0x7ffd093d1d94,319191082,0,0x0,8
tick,0x7ffd093d1d94,319206387,0,0x0,8
tick,0x7ffd093d1d94,319221991,0,0x0,8
tick,0x7ffd093d1d94,319237458,0,0x0,8
tick,0x7ffd093d1d94,319252481,0,0x0,8
tick,0x7ffd093d1d94,319267947,0,0x0,8
tick,0x7ffd093d1d94,319283391,0,0x0,8
tick,0x7ffd093d1d94,319299214,0,0x0,8
tick,0x7ffd093d1d94,319315002,0,0x0,8
tick,0x7ffd093d1d94,319330205,0,0x0,8
tick,0x7ffd093d1d94,319345707,0,0x0,8
tick,0x7ffd093d1d94,319361721,0,0x0,8
tick,0x7ffd093d1d94,319377689,0,0x0,8
tick,0x7ffd093d1d94,319394122,0,0x0,8
tick,0x7ffd093d1d94,319409342,0,0x0,8
tick,0x7ffd093d1d94,319425388,0,0x0,8
tick,0x7ffd093d1d94,319441125,0,0x0,8
tick,0x7ffd093d1d94,319457297,0,0x0,8
tick,0x7ffd093d1d94,319472412,0,0x0,8
tick,0x7ffd093d1d94,319487817,0,0x0,8
tick,0x7ffd093d1d94,319503157,0,0x0,8
tick,0x7ffd093d1d94,319518833,0,0x0,8
tick,0x7ffd093d1d94,319534810,0,0x0,8
tick,0x7ffd093d1d94,319550585,0,0x0,8
tick,0x7ffd093d1d94,319566262,0,0x0,8
tick,0x7ffd093d1d94,319581752,0,0x0,8
tick,0x7ffd093d1d94,319597419,0,0x0,8
tick,0x7ffd093d1d94,319613041,0,0x0,8
tick,0x7ffd093d1d94,319628765,0,0x0,8
tick,0x7ffd093d1d94,319644768,0,0x0,8
tick,0x7ffd093d1d94,319660707,0,0x0,8
tick,0x7ffd093d1d94,319676886,0,0x0,8
tick,0x7ffd093d1d94,319693852,0,0x0,8
tick,0x7ffd093d1d94,319708943,0,0x0,8
tick,0x7ffd093d1d94,319724452,0,0x0,8
tick,0x7ffd093d1d94,319740560,0,0x0,8
tick,0x7ffd093d1d94,319755953,0,0x0,8
tick,0x7ffd093d1d94,319771847,0,0x0,8
tick,0x7ffd093d1d94,319787549,0,0x0,8
tick,0x7ffd093d1d94,319802348,0,0x0,8
tick,0x7ffd093d1d94,319818096,0,0x0,8
tick,0x7ffd093d1d94,319834190,0,0x0,8
tick,0x7ffd093d1d94,319849727,0,0x0,8
tick,0x7ffd093d1d94,319865369,0,0x0,8
tick,0x7ffd093d1d94,319880240,0,0x0,8
tick,0x7ffd093d1d94,319895547,0,0x0,8
tick,0x7ffd093d1d94,319911107,0,0x0,8
tick,0x7ffd093d1d94,319927156,0,0x0,8
tick,0x7ffd093d1d94,319944222,0,0x0,8
tick,0x7ffd093d1d94,319959551,0,0x0,8
tick,0x7ffd093d1d94,319974272,0,0x0,8
tick,0x7ffd093d1d94,319990298,0,0x0,8
tick,0x7ffd093d1d94,320005771,0,0x0,8
tick,0x7ffd093d1d94,320021789,0,0x0,8
tick,0x7ffd093d1d94,320037649,0,0x0,8
tick,0x7ffd093d1d94,320052664,0,0x0,8
tick,0x7ffd093d1d94,320068332,0,0x0,8
tick,0x7ffd093d1d94,320083850,0,0x0,8
tick,0x7ffd093d1d94,320098884,0,0x0,8
tick,0x7ffd093d1d94,320114255,0,0x0,8
tick,0x7ffd093d1d94,320130140,0,0x0,8
tick,0x7ffd093d1d94,320146180,0,0x0,8
tick,0x7ffd093d1d94,320162167,0,0x0,8
tick,0x7ffd093d1d94,320177382,0,0x0,8
tick,0x7ffd093d1d94,320192357,0,0x0,8
tick,0x7ffd093d1d94,320207065,0,0x0,8
tick,0x7ffd093d1d94,320222820,0,0x0,8
tick,0x7ffd093d1d94,320238824,0,0x0,8
tick,0x7ffd093d1d94,320254921,0,0x0,8
tick,0x7ffd093d1d94,320269572,0,0x0,8
tick,0x7ffd093d1d94,320285515,0,0x0,8
tick,0x7ffd093d1d94,320301371,0,0x0,8
tick,0x7ffd093d1d94,320316814,0,0x0,8
tick,0x7ffd093d1d94,320331800,0,0x0,8
tick,0x7ffd093d1d94,320347145,0,0x0,8
tick,0x7ffd093d1d94,320362577,0,0x0,8
tick,0x7ffd093d1d94,320378111,0,0x0,8
tick,0x7ffd093d1d94,320393085,0,0x0,8
tick,0x7ffd093d1d94,320409073,0,0x0,8
tick,0x7ffd093d1d94,320425350,0,0x0,8
tick,0x7ffd093d1d94,320441132,0,0x0,8
tick,0x7ffd093d1d94,320456630,0,0x0,8
tick,0x7ffd093d1d94,320472397,0,0x0,8
tick,0x7ffd093d1d94,320487552,0,0x0,8
tick,0x7ffd093d1d94,320503195,0,0x0,8
tick,0x7ffd093d1d94,320518775,0,0x0,8
tick,0x7ffd093d1d94,320534925,0,0x0,8
tick,0x7ffd093d1d94,320550805,0,0x0,8
tick,0x7ffd093d1d94,320566317,0,0x0,8
tick,0x7ffd093d1d94,320581785,0,0x0,8
tick,0x7ffd093d1d94,320597309,0,0x0,8
tick,0x7ffd093d1d94,320613347,0,0x0,8
tick,0x7ffd093d1d94,320628854,0,0x0,8
tick,0x7ffd093d1d94,320644202,0,0x0,8
tick,0x7ffd093d1d94,320659911,0,0x0,8
tick,0x7ffd093d1d94,320674841,0,0x0,8
tick,0x7ffd093d1d94,320690362,0,0x0,8
tick,0x7ffd093d1d94,320706457,0,0x0,8
tick,0x7ffd093d1d94,320722011,0,0x0,8
tick,0x7ffd093d1d94,320737133,0,0x0,8
tick,0x7ffd093d1d94,320751808,0,0x0,8
tick,0x7ffd093d1d94,320767075,0,0x0,8
tick,0x7ffd093d1d94,320782363,0,0x0,8
tick,0x7ffd093d1d94,320797658,0,0x0,8
tick,0x7ffd093d1d94,320813322,0,0x0,8
tick,0x7ffd093d1d94,320829200,0,0x0,8
tick,0x7ffd093d1d94,320845189,0,0x0,8
tick,0x7ffd093d1d94,320861173,0,0x0,8
tick,0x7ffd093d1d94,320876158,0,0x0,8
tick,0x7ffd093d1d94,320892169,0,0x0,8
tick,0x7ffd093d1d94,320907164,0,0x0,8
tick,0x7ffd093d1d94,320923147,0,0x0,8
tick,0x7ffd093d1d94,320939006,0,0x0,8
tick,0x7ffd093d1d94,320954210,0,0x0,8
tick,0x7ffd093d1d94,320969739,0,0x0,8
tick,0x7ffd093d1d94,320984659,0,0x0,8
tick,0x7ffd093d1d94,320999690,0,0x0,8
tick,0x7ffd093d1d94,321022636,0,0x0,8
tick,0x7ffd093d1d94,321031161,0,0x0,8
tick,0x7ffd093d1d94,321047612,0,0x0,8
tick,0x7ffd093d1d94,321063245,0,0x0,8
tick,0x7ffd093d1d94,321079186,0,0x0,8
tick,0x7ffd093d1d94,321094198,0,0x0,8
tick,0x7ffd093d1d94,321110337,0,0x0,8
tick,0x7ffd093d1d94,321125774,0,0x0,8
tick,0x7ffd093d1d94,321140758,0,0x0,8
tick,0x7ffd093d1d94,321155947,0,0x0,8
tick,0x7ffd093d1d94,321171529,0,0x0,8
tick,0x7ffd093d1d94,321186619,0,0x0,8
tick,0x7ffd093d1d94,321202280,0,0x0,8
tick,0x7ffd093d1d94,321218175,0,0x0,8
tick,0x7ffd093d1d94,321233782,0,0x0,8
tick,0x7ffd093d1d94,321249057,0,0x0,8
tick,0x7ffd093d1d94,321264139,0,0x0,8
tick,0x7ffd093d1d94,321279560,0,0x0,8
tick,0x7ffd093d1d94,321294803,0,0x0,8
tick,0x7ffd093d1d94,321310308,0,0x0,8
tick,0x7ffd093d1d94,321325896,0,0x0,8
tick,0x7ffd093d1d94,321341016,0,0x0,8
tick,0x7ffd093d1d94,321356812,0,0x0,8
tick,0x7ffd093d1d94,321372425,0,0x0,8
tick,0x7ffd093d1d94,321387352,0,0x0,8
tick,0x7ffd093d1d94,321403422,0,0x0,8
tick,0x7ffd093d1d94,321418669,0,0x0,8
tick,0x7ffd093d1d94,321433954,0,0x0,8
tick,0x7ffd093d1d94,321450471,0,0x0,8
tick,0x7ffd093d1d94,321464899,0,0x0,8
tick,0x7ffd093d1d94,321479939,0,0x0,8
tick,0x7ffd093d1d94,321495289,0,0x0,8
tick,0x7ffd093d1d94,321511248,0,0x0,8
tick,0x7ffd093d1d94,321527789,0,0x0,8
tick,0x7ffd093d1d94,321542438,0,0x0,8
tick,0x7ffd093d1d94,321558438,0,0x0,8
tick,0x7ffd093d1d94,321574279,0,0x0,8
tick,0x7ffd093d1d94,321589947,0,0x0,8
tick,0x7ffd093d1d94,321605840,0,0x0,8
tick,0x7ffd093d1d94,321621694,0,0x0,8
tick,0x7ffd093d1d94,321637282,0,0x0,8
tick,0x7ffd093d1d94,321652028,0,0x0,8
tick,0x7ffd093d1d94,321667370,0,0x0,8
tick,0x7ffd093d1d94,321682810,0,0x0,8
tick,0x7ffd093d1d94,321698009,0,0x0,8
tick,0x7ffd093d1d94,321713157,0,0x0,8
tick,0x7ffd093d1d94,321728804,0,0x0,8
tick,0x7ffd093d1d94,321744354,0,0x0,8
tick,0x7ffd093d1d94,321759962,0,0x0,8
tick,0x7ffd093d1d94,321775292,0,0x0,8
tick,0x7ffd093d1d94,321791067,0,0x0,8
tick,0x7ffd093d1d94,321806685,0,0x0,8
tick,0x7ffd093d1d94,321821943,0,0x0,8
tick,0x7ffd093d1d94,321837079,0,0x0,8
tick,0x7ffd093d1d94,321852649,0,0x0,8
tick,0x7ffd093d1d94,321867808,0,0x0,8
tick,0x7ffd093d1d94,321883013,0,0x0,8
tick,0x7ffd093d1d94,321899303,0,0x0,8
tick,0x7ffd093d1d94,321913967,0,0x0,8
tick,0x7ffd093d1d94,321929893,0,0x0,8
tick,0x7ffd093d1d94,321945584,0,0x0,8
tick,0x7ffd093d1d94,321960742,0,0x0,8
tick,0x7ffd093d1d94,321976487,0,0x0,8
tick,0x7ffd093d1d94,321992136,0,0x0,8
tick,0x7ffd093d1d94,322007444,0,0x0,8
tick,0x7ffd093d1d94,322023709,0,0x0,8
tick,0x7ffd093d1d94,322039999,0,0x0,8
tick,0x7ffd093d1d94,322054985,0,0x0,8
tick,0x7ffd093d1d94,322070459,0,0x0,8
tick,0x7ffd093d1d94,322085231,0,0x0,8
tick,0x7ffd093d1d94,322100182,0,0x0,8
tick,0x7ffd093d1d94,322115569,0,0x0,8
tick,0x7ffd093d1d94,322131100,0,0x0,8
tick,0x7ffd093d1d94,322146390,0,0x0,8
tick,0x7ffd093d1d94,322162380,0,0x0,8
tick,0x7ffd093d1d94,322178445,0,0x0,8
tick,0x7ffd093d1d94,322194159,0,0x0,8
tick,0x7ffd093d1d94,322210271,0,0x0,8
tick,0x7ffd093d1d94,322226183,0,0x0,8
tick,0x7ffd093d1d94,322242481,0,0x0,8
tick,0x7ffd093d1d94,322258096,0,0x0,8
tick,0x7ffd093d1d94,322274199,0,0x0,8
tick,0x7ffd093d1d94,322288895,0,0x0,8
tick,0x7ffd093d1d94,322304973,0,0x0,8
tick,0x7ffd093d1d94,322320110,0,0x0,8
tick,0x7ffd093d1d94,322335075,0,0x0,8
tick,0x7ffd093d1d94,322350124,0,0x0,8
tick,0x7ffd093d1d94,322365288,0,0x0,8
tick,0x7ffd093d1d94,322380490,0,0x0,8
tick,0x7ffd093d1d94,322395940,0,0x0,8
tick,0x7ffd093d1d94,322412145,0,0x0,8
tick,0x7ffd093d1d94,322428000,0,0x0,8
tick,0x7ffd093d1d94,322443491,0,0x0,8
tick,0x7ffd093d1d94,322459812,0,0x0,8
tick,0x7ffd093d1d94,322475794,0,0x0,8
tick,0x7ffd093d1d94,322491946,0,0x0,8
tick,0x7ffd093d1d94,322507079,0,0x0,8
tick,0x7ffd093d1d94,322522498,0,0x0,8
tick,0x7ffd093d1d94,322537537,0,0x0,8
tick,0x7ffd093d1d94,322553607,0,0x0,8
tick,0x7ffd093d1d94,322568927,0,0x0,8
tick,0x7ffd093d1d94,322584819,0,0x0,8
tick,0x7ffd093d1d94,322600553,0,0x0,8
tick,0x7ffd093d1d94,322616611,0,0x0,8
tick,0x7ffd093d1d94,322631792,0,0x0,8
tick,0x7ffd093d1d94,322646921,0,0x0,8
tick,0x7ffd093d1d94,322663174,0,0x0,8
tick,0x7ffd093d1d94,322678166,0,0x0,8
tick,0x7ffd093d1d94,322693646,0,0x0,8
tick,0x7ffd093d1d94,322708594,0,0x0,8
tick,0x7ffd093d1d94,322725047,0,0x0,8
tick,0x7ffd093d1d94,322740869,0,0x0,8
tick,0x7ffd093d1d94,322756009,0,0x0,8
tick,0x7ffd093d1d94,322771434,0,0x0,8
tick,0x7ffd093d1d94,322786909,0,0x0,8
tick,0x7ffd093d1d94,322802542,0,0x0,8
tick,0x7ffd093d1d94,322817699,0,0x0,8
tick,0x7ffd093d1d94,322833203,0,0x0,8
tick,0x7ffd093d1d94,322849410,0,0x0,8
tick,0x7ffd093d1d94,322865478,0,0x0,8
tick,0x7ffd093d1d94,322881338,0,0x0,8
tick,0x7ffd093d1d94,322897184,0,0x0,8
tick,0x7ffd093d1d94,322912937,0,0x0,8
tick,0x7ffd093d1d94,322928052,0,0x0,8
tick,0x7ffd093d1d94,322943922,0,0x0,8
tick,0x7ffd093d1d94,322959902,0,0x0,8
tick,0x7ffd093d1d94,322975782,0,0x0,8
tick,0x7ffd093d1d94,322991712,0,0x0,8
tick,0x7ffd093d1d94,323007295,0,0x0,8
tick,0x7ffd093d1d94,323022951,0,0x0,8
tick,0x7ffd093d1d94,323038380,0,0x0,8
tick,0x7ffd093d1d94,323053390,0,0x0,8
tick,0x7ffd093d1d94,323068200,0,0x0,8
tick,0x7ffd093d1d94,323084181,0,0x0,8
tick,0x7ffd093d1d94,323099425,0,0x0,8
tick,0x7ffd093d1d94,323115143,0,0x0,8
tick,0x7ffd093d1d94,323130593,0,0x0,8
tick,0x7ffd093d1d94,323146878,0,0x0,8
tick,0x7ffd093d1d94,323161906,0,0x0,8
tick,0x7ffd093d1d94,323176818,0,0x0,8
tick,0x7ffd093d1d94,323192233,0,0x0,8
tick,0x7ffd093d1d94,323208215,0,0x0,8
tick,0x7ffd093d1d94,323223271,0,0x0,8
tick,0x7ffd093d1d94,323238929,0,0x0,8
tick,0x7ffd093d1d94,323254420,0,0x0,8
tick,0x7ffd093d1d94,323269642,0,0x0,8
tick,0x7ffd093d1d94,323285681,0,0x0,8
tick,0x7ffd093d1d94,323300268,0,0x0,8
tick,0x7ffd093d1d94,323316184,0,0x0,8
tick,0x7ffd093d1d94,323332283,0,0x0,8
tick,0x7ffd093d1d94,323347737,0,0x0,8
tick,0x7ffd093d1d94,323363847,0,0x0,8
tick,0x7ffd093d1d94,323379602,0,0x0,8
tick,0x7ffd093d1d94,323395704,0,0x0,8
tick,0x7ffd093d1d94,323411023,0,0x0,8
tick,0x7ffd093d1d94,323426535,0,0x0,8
tick,0x7ffd093d1d94,323442207,0,0x0,8
tick,0x7ffd093d1d94,323457960,0,0x0,8
tick,0x7ffd093d1d94,323473604,0,0x0,8
tick,0x7ffd093d1d94,323489522,0,0x0,8
tick,0x7ffd093d1d94,323504424,0,0x0,8
tick,0x7ffd093d1d94,323520235,0,0x0,8
tick,0x7ffd093d1d94,323535641,0,0x0,8
tick,0x7ffd093d1d94,323551037,0,0x0,8
tick,0x7ffd093d1d94,323566672,0,0x0,8
tick,0x7ffd093d1d94,323582907,0,0x0,8
tick,0x7ffd093d1d94,323597955,0,0x0,8
tick,0x7ffd093d1d94,323614259,0,0x0,8
tick,0x7ffd093d1d94,323630243,0,0x0,8
tick,0x7ffd093d1d94,323646107,0,0x0,8
tick,0x7ffd093d1d94,323661865,0,0x0,8
tick,0x7ffd093d1d94,323677930,0,0x0,8
tick,0x7ffd093d1d94,323693417,0,0x0,8
tick,0x7ffd093d1d94,323708590,0,0x0,8
tick,0x7ffd093d1d94,323723865,0,0x0,8
tick,0x7ffd093d1d94,323739250,0,0x0,8
tick,0x7ffd093d1d94,323754705,0,0x0,8
tick,0x7ffd093d1d94,323770631,0,0x0,8
tick,0x7ffd093d1d94,323785605,0,0x0,8
tick,0x7ffd093d1d94,323801503,0,0x0,8
tick,0x7ffd093d1d94,323816780,0,0x0,8
tick,0x7ffd093d1d94,323832067,0,0x0,8
tick,0x7ffd093d1d94,323848050,0,0x0,8
tick,0x7ffd093d1d94,323863737,0,0x0,8
tick,0x7ffd093d1d94,323879316,0,0x0,8
tick,0x7ffd093d1d94,323895058,0,0x0,8
tick,0x7ffd093d1d94,323910235,0,0x0,8
tick,0x7ffd093d1d94,323925640,0,0x0,8
tick,0x7ffd093d1d94,323940972,0,0x0,8
tick,0x7ffd093d1d94,323956319,0,0x0,8
tick,0x7ffd093d1d94,323972217,0,0x0,8
tick,0x7ffd093d1d94,323987502,0,0x0,8
tick,0x7ffd093d1d94,324003516,0,0x0,8
tick,0x7ffd093d1d94,324018539,0,0x0,8
tick,0x7ffd093d1d94,324034030,0,0x0,8
tick,0x7ffd093d1d94,324050183,0,0x0,8
tick,0x7ffd093d1d94,324066489,0,0x0,8
tick,0x7ffd093d1d94,324081943,0,0x0,8
tick,0x7ffd093d1d94,324097670,0,0x0,8
tick,0x7ffd093d1d94,324113408,0,0x0,8
tick,0x7ffd093d1d94,324129304,0,0x0,8
tick,0x7ffd093d1d94,324144748,0,0x0,8
tick,0x7ffd093d1d94,324160034,0,0x0,8
tick,0x7ffd093d1d94,324175784,0,0x0,8
tick,0x7ffd093d1d94,324191255,0,0x0,8
tick,0x7ffd093d1d94,324206704,0,0x0,8
tick,0x7ffd093d1d94,324222071,0,0x0,8
tick,0x7ffd093d1d94,324237508,0,0x0,8
tick,0x7ffd093d1d94,324252965,0,0x0,8
tick,0x7ffd093d1d94,324268791,0,0x0,8
tick,0x7ffd093d1d94,324284103,0,0x0,8
tick,0x7ffd093d1d94,324299746,0,0x0,8
tick,0x7ffd093d1d94,324314778,0,0x0,8
tick,0x7ffd093d1d94,324330018,0,0x0,8
tick,0x7ffd093d1d94,324345155,0,0x0,8
tick,0x7ffd093d1d94,324361894,0,0x0,8
tick,0x7ffd093d1d94,324376016,0,0x0,8
tick,0x7ffd093d1d94,324391642,0,0x0,8
tick,0x7ffd093d1d94,324407425,0,0x0,8
tick,0x7ffd093d1d94,324423085,0,0x0,8
tick,0x7ffd093d1d94,324438312,0,0x0,8
tick,0x7ffd093d1d94,324453710,0,0x0,8
tick,0x7ffd093d1d94,324469577,0,0x0,8
tick,0x7ffd093d1d94,324485254,0,0x0,8
tick,0x7ffd093d1d94,324501246,0,0x0,8
tick,0x7ffd093d1d94,324516976,0,0x0,8
tick,0x7ffd093d1d94,324532291,0,0x0,8
tick,0x7ffd093d1d94,324547540,0,0x0,8
tick,0x7ffd093d1d94,324562792,0,0x0,8
tick,0x7ffd093d1d94,324578833,0,0x0,8
tick,0x7ffd093d1d94,324595147,0,0x0,8
tick,0x7ffd093d1d94,324611184,0,0x0,8
tick,0x7ffd093d1d94,324626389,0,0x0,8
tick,0x7ffd093d1d94,324641433,0,0x0,8
tick,0x7ffd093d1d94,324656777,0,0x0,8
tick,0x7ffd093d1d94,324672580,0,0x0,8
tick,0x7ffd093d1d94,324688023,0,0x0,8
tick,0x7ffd093d1d94,324703440,0,0x0,8
tick,0x7ffd093d1d94,324719395,0,0x0,8
tick,0x7ffd093d1d94,324734443,0,0x0,8
tick,0x7ffd093d1d94,324749633,0,0x0,8
tick,0x7ffd093d1d94,324765198,0,0x0,8
tick,0x7ffd093d1d94,324780534,0,0x0,8
tick,0x7ffd093d1d94,324796382,0,0x0,8
tick,0x7ffd093d1d94,324812271,0,0x0,8
tick,0x7ffd093d1d94,324826982,0,0x0,8
tick,0x7ffd093d1d94,324843471,0,0x0,8
tick,0x7ffd093d1d94,324858426,0,0x0,8
tick,0x7ffd093d1d94,324873836,0,0x0,8
tick,0x7ffd093d1d94,324889846,0,0x0,8
tick,0x7ffd093d1d94,324905430,0,0x0,8
tick,0x7ffd093d1d94,324921270,0,0x0,8
tick,0x7ffd093d1d94,324936942,0,0x0,8
tick,0x7ffd093d1d94,324952195,0,0x0,8
tick,0x7ffd093d1d94,324967622,0,0x0,8
tick,0x7ffd093d1d94,324983718,0,0x0,8
tick,0x7ffd093d1d94,324998562,0,0x0,8
tick,0x7ffd093d1d94,325013850,0,0x0,8
tick,0x7ffd093d1d94,325029716,0,0x0,8
tick,0x7ffd093d1d94,325044911,0,0x0,8
tick,0x7ffd093d1d94,325060128,0,0x0,8
tick,0x7ffd093d1d94,325076328,0,0x0,8
tick,0x7ffd093d1d94,325092220,0,0x0,8
tick,0x7ffd093d1d94,325108240,0,0x0,8
tick,0x7ffd093d1d94,325123732,0,0x0,8
tick,0x7ffd093d1d94,325139460,0,0x0,8
tick,0x7ffd093d1d94,325154774,0,0x0,8
tick,0x7ffd093d1d94,325170533,0,0x0,8
tick,0x7ffd093d1d94,325186281,0,0x0,8
tick,0x7ffd093d1d94,325201900,0,0x0,8
tick,0x7ffd093d1d94,325217120,0,0x0,8
tick,0x7ffd093d1d94,325232731,0,0x0,8
tick,0x7ffd093d1d94,325248081,0,0x0,8
tick,0x7ffd093d1d94,325263952,0,0x0,8
tick,0x7ffd093d1d94,325279553,0,0x0,8
tick,0x7ffd093d1d94,325294929,0,0x0,8
tick,0x7ffd093d1d94,325310534,0,0x0,8
tick,0x7ffd093d1d94,325325799,0,0x0,8
tick,0x7ffd093d1d94,325342244,0,0x0,8
tick,0x7ffd093d1d94,325356914,0,0x0,8
tick,0x7ffd093d1d94,325372184,0,0x0,8
tick,0x7ffd093d1d94,325388129,0,0x0,8
tick,0x7ffd093d1d94,325403665,0,0x0,8
tick,0x7ffd093d1d94,325418672,0,0x0,8
tick,0x7ffd093d1d94,325434284,0,0x0,8
tick,0x7ffd093d1d94,325450149,0,0x0,8
tick,0x7ffd093d1d94,325466630,0,0x0,8
tick,0x7ffd093d1d94,325482322,0,0x0,8
tick,0x7ffd093d1d94,325498283,0,0x0,8
tick,0x7ffd093d1d94,325514060,0,0x0,8
tick,0x7ffd093d1d94,325530116,0,0x0,8
tick,0x7ffd093d1d94,325545951,0,0x0,8
tick,0x7ffd093d1d94,325561572,0,0x0,8
tick,0x7ffd093d1d94,325577510,0,0x0,8
tick,0x7ffd093d1d94,325593453,0,0x0,8
tick,0x7ffd093d1d94,325609687,0,0x0,8
tick,0x7ffd093d1d94,325624872,0,0x0,8
tick,0x7ffd093d1d94,325640057,0,0x0,8
tick,0x7ffd093d1d94,325655956,0,0x0,8
tick,0x7ffd093d1d94,325671974,0,0x0,8
tick,0x7ffd093d1d94,325687750,0,0x0,8
tick,0x7ffd093d1d94,325703265,0,0x0,8
tick,0x7ffd093d1d94,325719426,0,0x0,8
tick,0x7ffd093d1d94,325735214,0,0x0,8
tick,0x7ffd093d1d94,325751333,0,0x0,8
tick,0x7ffd093d1d94,325766647,0,0x0,8
tick,0x7ffd093d1d94,325782348,0,0x0,8
tick,0x7ffd093d1d94,325797281,0,0x0,8
tick,0x7ffd093d1d94,325813103,0,0x0,8
tick,0x7ffd093d1d94,325829239,0,0x0,8
tick,0x7ffd093d1d94,325844852,0,0x0,8
tick,0x7ffd093d1d94,325860194,0,0x0,8
tick,0x7ffd093d1d94,325875822,0,0x0,8
tick,0x7ffd093d1d94,325891867,0,0x0,8
tick,0x7ffd093d1d94,325907391,0,0x0,8
tick,0x7ffd093d1d94,325922912,0,0x0,8
tick,0x7ffd093d1d94,325937697,0,0x0,8
tick,0x7ffd093d1d94,325953444,0,0x0,8
tick,0x7ffd093d1d94,325969203,0,0x0,8
tick,0x7ffd093d1d94,325985193,0,0x0,8
tick,0x7ffd093d1d94,326001026,0,0x0,8
tick,0x7ffd093d1d94,326016570,0,0x0,8
tick,0x7ffd093d1d94,326031739,0,0x0,8
tick,0x7ffd093d1d94,326047572,0,0x0,8
tick,0x7ffd093d1d94,326063087,0,0x0,8
tick,0x7ffd093d1d94,326079170,0,0x0,8
tick,0x7ffd093d1d94,326094377,0,0x0,8
tick,0x7ffd093d1d94,326109944,0,0x0,8
tick,0x7ffd093d1d94,326124960,0,0x0,8
tick,0x7ffd093d1d94,326140477,0,0x0,8
tick,0x7ffd093d1d94,326156459,0,0x0,8
tick,0x7ffd093d1d94,326172332,0,0x0,8
tick,0x7ffd093d1d94,326187673,0,0x0,8
tick,0x7ffd093d1d94,326203574,0,0x0,8
tick,0x7ffd093d1d94,326219733,0,0x0,8
tick,0x7ffd093d1d94,326235392,0,0x0,8
tick,0x7ffd093d1d94,326250971,0,0x0,8
tick,0x7ffd093d1d94,326266172,0,0x0,8
tick,0x7ffd093d1d94,326282205,0,0x0,8
tick,0x7ffd093d1d94,326298322,0,0x0,8
tick,0x7ffd093d1d94,326313589,0,0x0,8
tick,0x7ffd093d1d94,326328372,0,0x0,8
tick,0x7ffd093d1d94,326343611,0,0x0,8
tick,0x7ffd093d1d94,326360169,0,0x0,8
tick,0x7ffd093d1d94,326375322,0,0x0,8
tick,0x7ffd093d1d94,326390986,0,0x0,8
tick,0x7ffd093d1d94,326406729,0,0x0,8
tick,0x7ffd093d1d94,326421578,0,0x0,8
tick,0x7ffd093d1d94,326437142,0,0x0,8
tick,0x7ffd093d1d94,326452859,0,0x0,8
tick,0x7ffd093d1d94,326467901,0,0x0,8
tick,0x7ffd093d1d94,326483751,0,0x0,8
tick,0x7ffd093d1d94,326499352,0,0x0,8
tick,0x7ffd093d1d94,326515517,0,0x0,8
tick,0x7ffd093d1d94,326531528,0,0x0,8
tick,0x7ffd093d1d94,326546472,0,0x0,8
tick,0x7ffd093d1d94,326562485,0,0x0,8
tick,0x7ffd093d1d94,326577841,0,0x0,8
tick,0x7ffd093d1d94,326593238,0,0x0,8
tick,0x7ffd093d1d94,326608612,0,0x0,8
tick,0x7ffd093d1d94,326624245,0,0x0,8
tick,0x7ffd093d1d94,326639744,0,0x0,8
tick,0x7ffd093d1d94,326655390,0,0x0,8
tick,0x7ffd093d1d94,326670380,0,0x0,8
tick,0x7ffd093d1d94,326685963,0,0x0,8
tick,0x7ffd093d1d94,326701957,0,0x0,8
tick,0x7ffd093d1d94,326717948,0,0x0,8
tick,0x7ffd093d1d94,326734462,0,0x0,8
tick,0x7ffd093d1d94,326750708,0,0x0,8
tick,0x7ffd093d1d94,326766509,0,0x0,8
tick,0x7ffd093d1d94,326781348,0,0x0,8
tick,0x7ffd093d1d94,326797270,0,0x0,8
tick,0x7ffd093d1d94,326812465,0,0x0,8
tick,0x7ffd093d1d94,326827571,0,0x0,8
tick,0x7ffd093d1d94,326842820,0,0x0,8
tick,0x7ffd093d1d94,326858748,0,0x0,8
tick,0x7ffd093d1d94,326873730,0,0x0,8
tick,0x7ffd093d1d94,326889486,0,0x0,8
tick,0x7ffd093d1d94,326905688,0,0x0,8
tick,0x7ffd093d1d94,326921601,0,0x0,8
tick,0x7ffd093d1d94,326937007,0,0x0,8
tick,0x7ffd093d1d94,326953014,0,0x0,8
tick,0x7ffd093d1d94,326968749,0,0x0,8
tick,0x7ffd093d1d94,326983260,0,0x0,8
tick,0x7ffd093d1d94,326999568,0,0x0,8
tick,0x7ffd093d1d94,327015197,0,0x0,8
tick,0x7ffd093d1d94,327030769,0,0x0,8
tick,0x7ffd093d1d94,327046257,0,0x0,8
tick,0x7ffd093d1d94,327061253,0,0x0,8
tick,0x7ffd093d1d94,327076892,0,0x0,8
tick,0x7ffd093d1d94,327092169,0,0x0,8
tick,0x7ffd093d1d94,327107643,0,0x0,8
tick,0x7ffd093d1d94,327122820,0,0x0,8
tick,0x7ffd093d1d94,327138676,0,0x0,8
tick,0x7ffd093d1d94,327154105,0,0x0,8
tick,0x7ffd093d1d94,327170117,0,0x0,8
tick,0x7ffd093d1d94,327186388,0,0x0,8
tick,0x7ffd093d1d94,327202580,0,0x0,8
tick,0x7ffd093d1d94,327218660,0,0x0,8
tick,0x7ffd093d1d94,327233980,0,0x0,8
tick,0x7ffd093d1d94,327248882,0,0x0,8
tick,0x7ffd093d1d94,327264674,0,0x0,8
tick,0x7ffd093d1d94,327280514,0,0x0,8
tick,0x7ffd093d1d94,327295241,0,0x0,8
tick,0x7ffd093d1d94,327311494,0,0x0,8
tick,0x7ffd093d1d94,327327368,0,0x0,8
tick,0x7ffd093d1d94,327342869,0,0x0,8
tick,0x7ffd093d1d94,327358830,0,0x0,8
tick,0x7ffd093d1d94,327374791,0,0x0,8
tick,0x7ffd093d1d94,327390112,0,0x0,8
tick,0x7ffd093d1d94,327406103,0,0x0,8
tick,0x7ffd093d1d94,327421700,0,0x0,8
tick,0x7ffd093d1d94,327437233,0,0x0,8
tick,0x7ffd093d1d94,327452210,0,0x0,8
tick,0x7ffd093d1d94,327467797,0,0x0,8
tick,0x7ffd093d1d94,327483855,0,0x0,8
tick,0x7ffd093d1d94,327499790,0,0x0,8
tick,0x7ffd093d1d94,327514943,0,0x0,8
tick,0x7ffd093d1d94,327530899,0,0x0,8
tick,0x7ffd093d1d94,327546314,0,0x0,8
tick,0x7ffd093d1d94,327562631,0,0x0,8
tick,0x7ffd093d1d94,327578126,0,0x0,8
tick,0x7ffd093d1d94,327592963,0,0x0,8
tick,0x7ffd093d1d94,327608825,0,0x0,8
tick,0x7ffd093d1d94,327624242,0,0x0,8
tick,0x7ffd093d1d94,327639550,0,0x0,8
tick,0x7ffd093d1d94,327655502,0,0x0,8
tick,0x7ffd093d1d94,327670871,0,0x0,8
tick,0x7ffd093d1d94,327686405,0,0x0,8
tick,0x7ffd093d1d94,327701518,0,0x0,8
tick,0x7ffd093d1d94,327717302,0,0x0,8
tick,0x7ffd093d1d94,327732506,0,0x0,8
tick,0x7ffd093d1d94,327748154,0,0x0,8
tick,0x7ffd093d1d94,327763728,0,0x0,8
tick,0x7ffd093d1d94,327779606,0,0x0,8
tick,0x7ffd093d1d94,327794566,0,0x0,8
tick,0x7ffd093d1d94,327809814,0,0x0,8
tick,0x7ffd093d1d94,327825731,0,0x0,8
tick,0x7ffd093d1d94,327841652,0,0x0,8
tick,0x7ffd093d1d94,327857705,0,0x0,8
tick,0x7ffd093d1d94,327873318,0,0x0,8
tick,0x7ffd093d1d94,327889160,0,0x0,8
tick,0x7ffd093d1d94,327904508,0,0x0,8
tick,0x7ffd093d1d94,327920492,0,0x0,8
tick,0x7ffd093d1d94,327937013,0,0x0,8
tick,0x7ffd093d1d94,327952383,0,0x0,8
tick,0x7ffd093d1d94,327968200,0,0x0,8
tick,0x7ffd093d1d94,327984218,0,0x0,8
tick,0x7ffd093d1d94,328000679,0,0x0,8
tick,0x7ffd093d1d94,328016231,0,0x0,8
tick,0x7ffd093d1d94,328032540,0,0x0,8
tick,0x7ffd093d1d94,328048016,0,0x0,8
tick,0x7ffd093d1d94,328063932,0,0x0,8
tick,0x7ffd093d1d94,328079934,0,0x0,8
tick,0x7ffd093d1d94,328095448,0,0x0,8
tick,0x7ffd093d1d94,328111620,0,0x0,8
tick,0x7ffd093d1d94,328126882,0,0x0,8
tick,0x7ffd093d1d94,328141634,0,0x0,8
tick,0x7ffd093d1d94,328157329,0,0x0,8
tick,0x7ffd093d1d94,328172317,0,0x0,8
tick,0x7ffd093d1d94,328188345,0,0x0,8
tick,0x7ffd093d1d94,328204211,0,0x0,8
tick,0x7ffd093d1d94,328219897,0,0x0,8
tick,0x7ffd093d1d94,328235700,0,0x0,8
tick,0x7ffd093d1d94,328251277,0,0x0,8
tick,0x7ffd093d1d94,328266940,0,0x0,8
tick,0x7ffd093d1d94,328281944,0,0x0,8
tick,0x7ffd093d1d94,328297959,0,0x0,8
tick,0x7ffd093d1d94,328314092,0,0x0,8
tick,0x7ffd093d1d94,328329504,0,0x0,8
tick,0x7ffd093d1d94,328345026,0,0x0,8
tick,0x7ffd093d1d94,328360916,0,0x0,8
tick,0x7ffd093d1d94,328376199,0,0x0,8
tick,0x7ffd093d1d94,328392127,0,0x0,8
tick,0x7ffd093d1d94,328406727,0,0x0,8
tick,0x7ffd093d1d94,328422130,0,0x0,8
tick,0x7ffd093d1d94,328437534,0,0x0,8
tick,0x7ffd093d1d94,328453066,0,0x0,8
tick,0x7ffd093d1d94,328469090,0,0x0,8
tick,0x7ffd093d1d94,328484628,0,0x0,8
tick,0x7ffd093d1d94,328500179,0,0x0,8
tick,0x7ffd093d1d94,328516167,0,0x0,8
tick,0x7ffd093d1d94,328531991,0,0x0,8
tick,0x7ffd093d1d94,328547516,0,0x0,8
tick,0x7ffd093d1d94,328563063,0,0x0,8
tick,0x7ffd093d1d94,328579062,0,0x0,8
tick,0x7ffd093d1d94,328594289,0,0x0,8
tick,0x7ffd093d1d94,328610266,0,0x0,8
tick,0x7ffd093d1d94,328625200,0,0x0,8
tick,0x7ffd093d1d94,328640608,0,0x0,8
tick,0x7ffd093d1d94,328656484,0,0x0,8
tick,0x7ffd093d1d94,328671543,0,0x0,8
tick,0x7ffd093d1d94,328687063,0,0x0,8
tick,0x7ffd093d1d94,328703051,0,0x0,8
tick,0x7ffd093d1d94,328718397,0,0x0,8
tick,0x7ffd093d1d94,328733881,0,0x0,8
tick,0x7ffd093d1d94,328749252,0,0x0,8
tick,0x7ffd093d1d94,328765118,0,0x0,8
tick,0x7ffd093d1d94,328780770,0,0x0,8
tick,0x7ffd093d1d94,328796776,0,0x0,8
tick,0x7ffd093d1d94,328812417,0,0x0,8
tick,0x7ffd093d1d94,328827615,0,0x0,8
tick,0x7ffd093d1d94,328843050,0,0x0,8
tick,0x7ffd093d1d94,328858812,0,0x0,8
tick,0x7ffd093d1d94,328874060,0,0x0,8
tick,0x7ffd093d1d94,328890032,0,0x0,8
tick,0x7ffd093d1d94,328906100,0,0x0,8
tick,0x7ffd093d1d94,328922571,0,0x0,8
tick,0x7ffd093d1d94,328938328,0,0x0,8
tick,0x7ffd093d1d94,328953885,0,0x0,8
tick,0x7ffd093d1d94,328969609,0,0x0,8
tick,0x7ffd093d1d94,328985073,0,0x0,8
tick,0x7ffd093d1d94,329000131,0,0x0,8
tick,0x7ffd093d1d94,329016636,0,0x0,8
tick,0x7ffd093d1d94,329031979,0,0x0,8
tick,0x7ffd093d1d94,329047605,0,0x0,8
tick,0x7ffd093d1d94,329064096,0,0x0,8
tick,0x7ffd093d1d94,329079570,0,0x0,8
tick,0x7ffd093d1d94,329095030,0,0x0,8
tick,0x7ffd093d1d94,329110769,0,0x0,8
tick,0x7ffd093d1d94,329126955,0,0x0,8
tick,0x7ffd093d1d94,329142295,0,0x0,8
tick,0x7ffd093d1d94,329157654,0,0x0,8
tick,0x7ffd093d1d94,329173033,0,0x0,8
tick,0x7ffd093d1d94,329188856,0,0x0,8
tick,0x7ffd093d1d94,329204723,0,0x0,8
tick,0x7ffd093d1d94,329220737,0,0x0,8
tick,0x7ffd093d1d94,329236557,0,0x0,8
tick,0x7ffd093d1d94,329252069,0,0x0,8
tick,0x7ffd093d1d94,329268067,0,0x0,8
tick,0x7ffd093d1d94,329284058,0,0x0,8
tick,0x7ffd093d1d94,329299650,0,0x0,8
tick,0x7ffd093d1d94,329314306,0,0x0,8
tick,0x7ffd093d1d94,329330148,0,0x0,8
tick,0x7ffd093d1d94,329345212,0,0x0,8
tick,0x7ffd093d1d94,329361231,0,0x0,8
tick,0x7ffd093d1d94,329377490,0,0x0,8
tick,0x7ffd093d1d94,329393268,0,0x0,8
tick,0x7ffd093d1d94,329409142,0,0x0,8
tick,0x7ffd093d1d94,329424521,0,0x0,8
tick,0x7ffd093d1d94,329440212,0,0x0,8
tick,0x7ffd093d1d94,329455142,0,0x0,8
tick,0x7ffd093d1d94,329471132,0,0x0,8
tick,0x7ffd093d1d94,329487388,0,0x0,8
tick,0x7ffd093d1d94,329503390,0,0x0,8
tick,0x7ffd093d1d94,329519218,0,0x0,8
tick,0x7ffd093d1d94,329535190,0,0x0,8
tick,0x7ffd093d1d94,329551002,0,0x0,8
tick,0x7ffd093d1d94,329566904,0,0x0,8
tick,0x7ffd093d1d94,329582488,0,0x0,8
tick,0x7ffd093d1d94,329598471,0,0x0,8
tick,0x7ffd093d1d94,329614365,0,0x0,8
tick,0x7ffd093d1d94,329629586,0,0x0,8
tick,0x7ffd093d1d94,329644562,0,0x0,8
tick,0x7ffd093d1d94,329660395,0,0x0,8
tick,0x7ffd093d1d94,329676814,0,0x0,8
tick,0x7ffd093d1d94,329692107,0,0x0,8
tick,0x7ffd093d1d94,329707214,0,0x0,8
tick,0x7ffd093d1d94,329722482,0,0x0,8
tick,0x7ffd093d1d94,329738566,0,0x0,8
tick,0x7ffd093d1d94,329753880,0,0x0,8
tick,0x7ffd093d1d94,329769313,0,0x0,8
tick,0x7ffd093d1d94,329785206,0,0x0,8
tick,0x7ffd093d1d94,329800219,0,0x0,8
tick,0x7ffd093d1d94,329816260,0,0x0,8
tick,0x7ffd093d1d94,329832203,0,0x0,8
tick,0x7ffd093d1d94,329847296,0,0x0,8
tick,0x7ffd093d1d94,329862846,0,0x0,8
tick,0x7ffd093d1d94,329878495,0,0x0,8
tick,0x7ffd093d1d94,329894617,0,0x0,8
tick,0x7ffd093d1d94,329909541,0,0x0,8
tick,0x7ffd093d1d94,329924347,0,0x0,8
tick,0x7ffd093d1d94,329939939,0,0x0,8
tick,0x7ffd093d1d94,329955225,0,0x0,8
tick,0x7ffd093d1d94,329970463,0,0x0,8
tick,0x7ffd093d1d94,329985915,0,0x0,8
tick,0x7ffd093d1d94,330000848,0,0x0,8
tick,0x7ffd093d1d94,330016385,0,0x0,8
tick,0x7ffd093d1d94,330031810,0,0x0,8
tick,0x7ffd093d1d94,330047897,0,0x0,8
tick,0x7ffd093d1d94,330062579,0,0x0,8
tick,0x7ffd093d1d94,330078131,0,0x0,8
tick,0x7ffd093d1d94,330094607,0,0x0,8
tick,0x7ffd093d1d94,330109922,0,0x0,8
tick,0x7ffd093d1d94,330125124,0,0x0,8
tick,0x7ffd093d1d94,330140003,0,0x0,8
tick,0x7ffd093d1d94,330154930,0,0x0,8
tick,0x7ffd093d1d94,330170847,0,0x0,8
tick,0x7ffd093d1d94,330185789,0,0x0,8
tick,0x7ffd093d1d94,330200549,0,0x0,8
tick,0x7ffd093d1d94,330215390,0,0x0,8
tick,0x7ffd093d1d94,330230671,0,0x0,8
tick,0x7ffd093d1d94,330246070,0,0x0,8
tick,0x7ffd093d1d94,330261302,0,0x0,8
tick,0x7ffd093d1d94,330277399,0,0x0,8
tick,0x7ffd093d1d94,330293263,0,0x0,8
tick,0x7ffd093d1d94,330309055,0,0x0,8
tick,0x7ffd093d1d94,330324986,0,0x0,8
tick,0x7ffd093d1d94,330340094,0,0x0,8
tick,0x7ffd093d1d94,330355651,0,0x0,8
tick,0x7ffd093d1d94,330371207,0,0x0,8
tick,0x7ffd093d1d94,330386770,0,0x0,8
tick,0x7ffd093d1d94,330402185,0,0x0,8
tick,0x7ffd093d1d94,330417362,0,0x0,8
tick,0x7ffd093d1d94,330432969,0,0x0,8
tick,0x7ffd093d1d94,330448382,0,0x0,8
tick,0x7ffd093d1d94,330464329,0,0x0,8
tick,0x7ffd093d1d94,330480354,0,0x0,8
tick,0x7ffd093d1d94,330496309,0,0x0,8
tick,0x7ffd093d1d94,330512770,0,0x0,8
tick,0x7ffd093d1d94,330528387,0,0x0,8
tick,0x7ffd093d1d94,330543847,0,0x0,8
tick,0x7ffd093d1d94,330559808,0,0x0,8
tick,0x7ffd093d1d94,330575858,0,0x0,8
tick,0x7ffd093d1d94,330591817,0,0x0,8
tick,0x7ffd093d1d94,330607794,0,0x0,8
tick,0x7ffd093d1d94,330624283,0,0x0,8
tick,0x7ffd093d1d94,330640003,0,0x0,8
tick,0x7ffd093d1d94,330655449,0,0x0,8
tick,0x7ffd093d1d94,330671361,0,0x0,8
tick,0x7ffd093d1d94,330687343,0,0x0,8
tick,0x7ffd093d1d94,330702443,0,0x0,8
tick,0x7ffd093d1d94,330717659,0,0x0,8
tick,0x7ffd093d1d94,330733149,0,0x0,8
tick,0x7ffd093d1d94,330748971,0,0x0,8
tick,0x7ffd093d1d94,330764088,0,0x0,8
tick,0x7ffd093d1d94,330779744,0,0x0,8
tick,0x7ffd093d1d94,330794956,0,0x0,8
tick,0x7ffd093d1d94,330811098,0,0x0,8
tick,0x7ffd093d1d94,330826802,0,0x0,8
tick,0x7ffd093d1d94,330842177,0,0x0,8
tick,0x7ffd093d1d94,330858023,0,0x0,8
tick,0x7ffd093d1d94,330874047,0,0x0,8
tick,0x7ffd093d1d94,330890041,0,0x0,8
tick,0x7ffd093d1d94,330906153,0,0x0,8
tick,0x7ffd093d1d94,330922162,0,0x0,8
tick,0x7ffd093d1d94,330938138,0,0x0,8
tick,0x7ffd093d1d94,330953414,0,0x0,8
tick,0x7ffd093d1d94,330968762,0,0x0,8
tick,0x7ffd093d1d94,330984157,0,0x0,8
tick,0x7ffd093d1d94,330999564,0,0x0,8
tick,0x7ffd093d1d94,331014835,0,0x0,8
tick,0x7ffd093d1d94,331030174,0,0x0,8
tick,0x7ffd093d1d94,331045379,0,0x0,8
tick,0x7ffd093d1d94,331061053,0,0x0,8
tick,0x7ffd093d1d94,331077167,0,0x0,8
tick,0x7ffd093d1d94,331092690,0,0x0,8
tick,0x7ffd093d1d94,331108749,0,0x0,8
tick,0x7ffd093d1d94,331124414,0,0x0,8
tick,0x7ffd093d1d94,331139573,0,0x0,8
tick,0x7ffd093d1d94,331155375,0,0x0,8
tick,0x7ffd093d1d94,331171799,0,0x0,8
tick,0x7ffd093d1d94,331186592,0,0x0,8
tick,0x7ffd093d1d94,331201425,0,0x0,8
tick,0x7ffd093d1d94,331216874,0,0x0,8
tick,0x7ffd093d1d94,331232377,0,0x0,8
tick,0x7ffd093d1d94,331247433,0,0x0,8
tick,0x7ffd093d1d94,331263240,0,0x0,8
tick,0x7ffd093d1d94,331278754,0,0x0,8
tick,0x7ffd093d1d94,331294007,0,0x0,8
tick,0x7ffd093d1d94,331309842,0,0x0,8
tick,0x7ffd093d1d94,331324751,0,0x0,8
tick,0x7ffd093d1d94,331339923,0,0x0,8
tick,0x7ffd093d1d94,331355754,0,0x0,8
tick,0x7ffd093d1d94,331370966,0,0x0,8
tick,0x7ffd093d1d94,331386150,0,0x0,8
tick,0x7ffd093d1d94,331401324,0,0x0,8
tick,0x7ffd093d1d94,331416865,0,0x0,8
tick,0x7ffd093d1d94,331432789,0,0x0,8
tick,0x7ffd093d1d94,331447774,0,0x0,8
tick,0x7ffd093d1d94,331462894,0,0x0,8
tick,0x7ffd093d1d94,331478270,0,0x0,8
tick,0x7ffd093d1d94,331494186,0,0x0,8
tick,0x7ffd093d1d94,331509720,0,0x0,8
tick,0x7ffd093d1d94,331525321,0,0x0,8
tick,0x7ffd093d1d94,331540644,0,0x0,8
tick,0x7ffd093d1d94,331556432,0,0x0,8
tick,0x7ffd093d1d94,331571615,0,0x0,8
tick,0x7ffd093d1d94,331586953,0,0x0,8
tick,0x7ffd093d1d94,331602133,0,0x0,8
tick,0x7ffd093d1d94,331617877,0,0x0,8
tick,0x7ffd093d1d94,331632839,0,0x0,8
tick,0x7ffd093d1d94,331648397,0,0x0,8
tick,0x7ffd093d1d94,331663337,0,0x0,8
tick,0x7ffd093d1d94,331679310,0,0x0,8
tick,0x7ffd093d1d94,331695560,0,0x0,8
tick,0x7ffd093d1d94,331711410,0,0x0,8
tick,0x7ffd093d1d94,331727399,0,0x0,8
tick,0x7ffd093d1d94,331743340,0,0x0,8
tick,0x7ffd093d1d94,331758850,0,0x0,8
tick,0x7ffd093d1d94,331775130,0,0x0,8
tick,0x7ffd093d1d94,331789923,0,0x0,8
tick,0x7ffd093d1d94,331805870,0,0x0,8
tick,0x7ffd093d1d94,331821355,0,0x0,8
tick,0x7ffd093d1d94,331837548,0,0x0,8
tick,0x7ffd093d1d94,331853338,0,0x0,8
tick,0x7ffd093d1d94,331868998,0,0x0,8
tick,0x7ffd093d1d94,331884008,0,0x0,8
tick,0x7ffd093d1d94,331899519,0,0x0,8
tick,0x7ffd093d1d94,331915832,0,0x0,8
tick,0x7ffd093d1d94,331931058,0,0x0,8
tick,0x7ffd093d1d94,331947068,0,0x0,8
tick,0x7ffd093d1d94,331962962,0,0x0,8
tick,0x7ffd093d1d94,331978170,0,0x0,8
tick,0x7ffd093d1d94,331993910,0,0x0,8
tick,0x7ffd093d1d94,332009037,0,0x0,8
tick,0x7ffd093d1d94,332025099,0,0x0,8
tick,0x7ffd093d1d94,332040586,0,0x0,8
tick,0x7ffd093d1d94,332055562,0,0x0,8
tick,0x7ffd093d1d94,332071346,0,0x0,8
tick,0x7ffd093d1d94,332086779,0,0x0,8
tick,0x7ffd093d1d94,332102732,0,0x0,8
tick,0x7ffd093d1d94,332118218,0,0x0,8
tick,0x7ffd093d1d94,332134098,0,0x0,8
tick,0x7ffd093d1d94,332149915,0,0x0,8
tick,0x7ffd093d1d94,332165642,0,0x0,8
tick,0x7ffd093d1d94,332181748,0,0x0,8
tick,0x7ffd093d1d94,332197088,0,0x0,8
tick,0x7ffd093d1d94,332212890,0,0x0,8
tick,0x7ffd093d1d94,332228459,0,0x0,8
tick,0x7ffd093d1d94,332243850,0,0x0,8
tick,0x7ffd093d1d94,332259739,0,0x0,8
tick,0x7ffd093d1d94,332275254,0,0x0,8
tick,0x7ffd093d1d94,332291000,0,0x0,8
tick,0x7ffd093d1d94,332306556,0,0x0,8
tick,0x7ffd093d1d94,332322235,0,0x0,8
tick,0x7ffd093d1d94,332338225,0,0x0,8
tick,0x7ffd093d1d94,332353873,0,0x0,8
tick,0x7ffd093d1d94,332369788,0,0x0,8
tick,0x7ffd093d1d94,332385794,0,0x0,8
tick,0x7ffd093d1d94,332401025,0,0x0,8
tick,0x7ffd093d1d94,332416334,0,0x0,8
tick,0x7ffd093d1d94,332432564,0,0x0,8
tick,0x7ffd093d1d94,332448179,0,0x0,8
tick,0x7ffd093d1d94,332464208,0,0x0,8
tick,0x7ffd093d1d94,332479568,0,0x0,8
tick,0x7ffd093d1d94,332495644,0,0x0,8
tick,0x7ffd093d1d94,332511504,0,0x0,8
tick,0x7ffd093d1d94,332527041,0,0x0,8
tick,0x7ffd093d1d94,332542426,0,0x0,8
tick,0x7ffd093d1d94,332557734,0,0x0,8
tick,0x7ffd093d1d94,332573588,0,0x0,8
tick,0x7ffd093d1d94,332588790,0,0x0,8
tick,0x7ffd093d1d94,332604345,0,0x0,8
tick,0x7ffd093d1d94,332620351,0,0x0,8
tick,0x7ffd093d1d94,332636796,0,0x0,8
tick,0x7ffd093d1d94,332653013,0,0x0,8
tick,0x7ffd093d1d94,332668627,0,0x0,8
tick,0x7ffd093d1d94,332684884,0,0x0,8
tick,0x7ffd093d1d94,332700546,0,0x0,8
tick,0x7ffd093d1d94,332715470,0,0x0,8
tick,0x7ffd093d1d94,332730583,0,0x0,8
tick,0x7ffd093d1d94,332745921,0,0x0,8
tick,0x7ffd093d1d94,332761806,0,0x0,8
tick,0x7ffd093d1d94,332776997,0,0x0,8
tick,0x7ffd093d1d94,332792552,0,0x0,8
tick,0x7ffd093d1d94,332808247,0,0x0,8
tick,0x7ffd093d1d94,332823856,0,0x0,8
tick,0x7ffd093d1d94,332840098,0,0x0,8
tick,0x7ffd093d1d94,332855154,0,0x0,8
tick,0x7ffd093d1d94,332870481,0,0x0,8
tick,0x7ffd093d1d94,332886154,0,0x0,8
tick,0x7ffd093d1d94,332901136,0,0x0,8
tick,0x7ffd093d1d94,332917607,0,0x0,8
tick,0x7ffd093d1d94,332933092,0,0x0,8
tick,0x7ffd093d1d94,332949249,0,0x0,8
tick,0x7ffd093d1d94,332964721,0,0x0,8
tick,0x7ffd093d1d94,332979719,0,0x0,8
tick,0x7ffd093d1d94,332995742,0,0x0,8
tick,0x7ffd093d1d94,333010869,0,0x0,8
tick,0x7ffd093d1d94,333026859,0,0x0,8
tick,0x7ffd093d1d94,333042669,0,0x0,8
tick,0x7ffd093d1d94,333058620,0,0x0,8
tick,0x7ffd093d1d94,333073847,0,0x0,8
tick,0x7ffd093d1d94,333089261,0,0x0,8
tick,0x7ffd093d1d94,333104547,0,0x0,8
tick,0x7ffd093d1d94,333120022,0,0x0,8
tick,0x7ffd093d1d94,333135067,0,0x0,8
tick,0x7ffd093d1d94,333150273,0,0x0,8
tick,0x7ffd093d1d94,333166279,0,0x0,8
tick,0x7ffd093d1d94,333182147,0,0x0,8
tick,0x7ffd093d1d94,333197661,0,0x0,8
tick,0x7ffd093d1d94,333212665,0,0x0,8
tick,0x7ffd093d1d94,333228652,0,0x0,8
tick,0x7ffd093d1d94,333243661,0,0x0,8
tick,0x7ffd093d1d94,333259790,0,0x0,8
tick,0x7ffd093d1d94,333274954,0,0x0,8
tick,0x7ffd093d1d94,333290941,0,0x0,8
tick,0x7ffd093d1d94,333306955,0,0x0,8
tick,0x7ffd093d1d94,333322693,0,0x0,8
tick,0x7ffd093d1d94,333338599,0,0x0,8
tick,0x7ffd093d1d94,333353910,0,0x0,8
tick,0x7ffd093d1d94,333369369,0,0x0,8
tick,0x7ffd093d1d94,333385575,0,0x0,8
tick,0x7ffd093d1d94,333400994,0,0x0,8
tick,0x7ffd093d1d94,333415670,0,0x0,8
tick,0x7ffd093d1d94,333431553,0,0x0,8
tick,0x7ffd093d1d94,333447133,0,0x0,8
tick,0x7ffd093d1d94,333463114,0,0x0,8
tick,0x7ffd093d1d94,333479016,0,0x0,8
tick,0x7ffd093d1d94,333494308,0,0x0,8
tick,0x7ffd093d1d94,333509223,0,0x0,8
tick,0x7ffd093d1d94,333524641,0,0x0,8
tick,0x7ffd093d1d94,333540050,0,0x0,8
tick,0x7ffd093d1d94,333555523,0,0x0,8
tick,0x7ffd093d1d94,333570502,0,0x0,8
tick,0x7ffd093d1d94,333586435,0,0x0,8
tick,0x7ffd093d1d94,333601938,0,0x0,8
tick,0x7ffd093d1d94,333617377,0,0x0,8
tick,0x7ffd093d1d94,333633005,0,0x0,8
tick,0x7ffd093d1d94,333648270,0,0x0,8
tick,0x7ffd093d1d94,333664205,0,0x0,8
tick,0x7ffd093d1d94,333680838,0,0x0,8
tick,0x7ffd093d1d94,333695742,0,0x0,8
tick,0x7ffd093d1d94,333711511,0,0x0,8
tick,0x7ffd093d1d94,333726829,0,0x0,8
tick,0x7ffd093d1d94,333742835,0,0x0,8
tick,0x7ffd093d1d94,333759021,0,0x0,8
tick,0x7ffd093d1d94,333775047,0,0x0,8
tick,0x7ffd093d1d94,333790871,0,0x0,8
tick,0x7ffd093d1d94,333806536,0,0x0,8
tick,0x7ffd093d1d94,333822030,0,0x0,8
tick,0x7ffd093d1d94,333836965,0,0x0,8
tick,0x7ffd093d1d94,333852433,0,0x0,8
tick,0x7ffd093d1d94,333868414,0,0x0,8
tick,0x7ffd093d1d94,333884447,0,0x0,8
tick,0x7ffd093d1d94,333900472,0,0x0,8
tick,0x7ffd093d1d94,333916615,0,0x0,8
tick,0x7ffd093d1d94,333932462,0,0x0,8
tick,0x7ffd093d1d94,333947746,0,0x0,8
tick,0x7ffd093d1d94,333964000,0,0x0,8
tick,0x7ffd093d1d94,333978817,0,0x0,8
tick,0x7ffd093d1d94,333994286,0,0x0,8
tick,0x7ffd093d1d94,334010304,0,0x0,8
tick,0x7ffd093d1d94,334025290,0,0x0,8
tick,0x7ffd093d1d94,334040550,0,0x0,8
tick,0x7ffd093d1d94,334056330,0,0x0,8
tick,0x7ffd093d1d94,334071970,0,0x0,8
tick,0x7ffd093d1d94,334088174,0,0x0,8
tick,0x7ffd093d1d94,334103449,0,0x0,8
tick,0x7ffd093d1d94,334119386,0,0x0,8
tick,0x7ffd093d1d94,334135532,0,0x0,8
tick,0x7ffd093d1d94,334150285,0,0x0,8
tick,0x7ffd093d1d94,334165293,0,0x0,8
tick,0x7ffd093d1d94,334180799,0,0x0,8
tick,0x7ffd093d1d94,334196701,0,0x0,8
tick,0x7ffd093d1d94,334212213,0,0x0,8
tick,0x7ffd093d1d94,334227181,0,0x0,8
tick,0x7ffd093d1d94,334242198,0,0x0,8
tick,0x7ffd093d1d94,334257196,0,0x0,8
tick,0x7ffd093d1d94,334273195,0,0x0,8
tick,0x7ffd093d1d94,334289117,0,0x0,8
tick,0x7ffd093d1d94,334304867,0,0x0,8
tick,0x7ffd093d1d94,334320042,0,0x0,8
tick,0x7ffd093d1d94,334334899,0,0x0,8
tick,0x7ffd093d1d94,334350320,0,0x0,8
tick,0x7ffd093d1d94,334365938,0,0x0,8
tick,0x7ffd093d1d94,334381109,0,0x0,8
tick,0x7ffd093d1d94,334397107,0,0x0,8
tick,0x7ffd093d1d94,334413112,0,0x0,8
tick,0x7ffd093d1d94,334429105,0,0x0,8
tick,0x7ffd093d1d94,334445190,0,0x0,8
tick,0x7ffd093d1d94,334461293,0,0x0,8
tick,0x7ffd093d1d94,334477283,0,0x0,8
tick,0x7ffd093d1d94,334493303,0,0x0,8
tick,0x7ffd093d1d94,334509308,0,0x0,8
tick,0x7ffd093d1d94,334524845,0,0x0,8
tick,0x7ffd093d1d94,334540769,0,0x0,8
tick,0x7ffd093d1d94,334555855,0,0x0,8
tick,0x7ffd093d1d94,334571601,0,0x0,8
tick,0x7ffd093d1d94,334587003,0,0x0,8
tick,0x7ffd093d1d94,334602899,0,0x0,8
tick,0x7ffd093d1d94,334618428,0,0x0,8
tick,0x7ffd093d1d94,334633449,0,0x0,8
tick,0x7ffd093d1d94,334648479,0,0x0,8
tick,0x7ffd093d1d94,334663677,0,0x0,8
tick,0x7ffd093d1d94,334679340,0,0x0,8
tick,0x7ffd093d1d94,334695533,0,0x0,8
tick,0x7ffd093d1d94,334710386,0,0x0,8
tick,0x7ffd093d1d94,334725285,0,0x0,8
tick,0x7ffd093d1d94,334741481,0,0x0,8
tick,0x7ffd093d1d94,334757001,0,0x0,8
tick,0x7ffd093d1d94,334772515,0,0x0,8
tick,0x7ffd093d1d94,334787870,0,0x0,8
tick,0x7ffd093d1d94,334803913,0,0x0,8
tick,0x7ffd093d1d94,334820605,0,0x0,8
tick,0x7ffd093d1d94,334835102,0,0x0,8
tick,0x7ffd093d1d94,334851017,0,0x0,8
tick,0x7ffd093d1d94,334866575,0,0x0,8
tick,0x7ffd093d1d94,334882474,0,0x0,8
tick,0x7ffd093d1d94,334896990,0,0x0,8
tick,0x7ffd093d1d94,334913088,0,0x0,8
tick,0x7ffd093d1d94,334929065,0,0x0,8
tick,0x7ffd093d1d94,334944566,0,0x0,8
tick,0x7ffd093d1d94,334961142,0,0x0,8
tick,0x7ffd093d1d94,334977553,0,0x0,8
tick,0x7ffd093d1d94,334993444,0,0x0,8
tick,0x7ffd093d1d94,335008004,0,0x0,8
tick,0x7ffd093d1d94,335024430,0,0x0,8
tick,0x7ffd093d1d94,335039899,0,0x0,8
tick,0x7ffd093d1d94,335055064,0,0x0,8
tick,0x7ffd093d1d94,335070560,0,0x0,8
tick,0x7ffd093d1d94,335085821,0,0x0,8
tick,0x7ffd093d1d94,335101926,0,0x0,8
tick,0x7ffd093d1d94,335116857,0,0x0,8
tick,0x7ffd093d1d94,335132309,0,0x0,8
tick,0x7ffd093d1d94,335147984,0,0x0,8
tick,0x7ffd093d1d94,335163410,0,0x0,8
tick,0x7ffd093d1d94,335178616,0,0x0,8
tick,0x7ffd093d1d94,335193984,0,0x0,8
tick,0x7ffd093d1d94,335210429,0,0x0,8
tick,0x7ffd093d1d94,335225795,0,0x0,8
tick,0x7ffd093d1d94,335241964,0,0x0,8
tick,0x7ffd093d1d94,335257631,0,0x0,8
tick,0x7ffd093d1d94,335273366,0,0x0,8
tick,0x7ffd093d1d94,335289079,0,0x0,8
tick,0x7ffd093d1d94,335304205,0,0x0,8
tick,0x7ffd093d1d94,335319664,0,0x0,8
tick,0x7ffd093d1d94,335335850,0,0x0,8
tick,0x7ffd093d1d94,335350965,0,0x0,8
tick,0x7ffd093d1d94,335365945,0,0x0,8
tick,0x7ffd093d1d94,335381902,0,0x0,8
tick,0x7ffd093d1d94,335397447,0,0x0,8
tick,0x7ffd093d1d94,335413997,0,0x0,8
tick,0x7ffd093d1d94,335429588,0,0x0,8
tick,0x7ffd093d1d94,335444727,0,0x0,8
tick,0x7ffd093d1d94,335460277,0,0x0,8
tick,0x7ffd093d1d94,335476277,0,0x0,8
tick,0x7ffd093d1d94,335491590,0,0x0,8
tick,0x7ffd093d1d94,335506948,0,0x0,8
tick,0x7ffd093d1d94,335522328,0,0x0,8
tick,0x7ffd093d1d94,335538172,0,0x0,8
tick,0x7ffd093d1d94,335554206,0,0x0,8
tick,0x7ffd093d1d94,335569722,0,0x0,8
tick,0x7ffd093d1d94,335585097,0,0x0,8
tick,0x7ffd093d1d94,335599957,0,0x0,8
tick,0x7ffd093d1d94,335616000,0,0x0,8
tick,0x7ffd093d1d94,335631572,0,0x0,8
tick,0x7ffd093d1d94,335646936,0,0x0,8
tick,0x7ffd093d1d94,335661841,0,0x0,8
tick,0x7ffd093d1d94,335676936,0,0x0,8
tick,0x7ffd093d1d94,335692669,0,0x0,8
tick,0x7ffd093d1d94,335708700,0,0x0,8
tick,0x7ffd093d1d94,335724662,0,0x0,8
tick,0x7ffd093d1d94,335740696,0,0x0,8
tick,0x7ffd093d1d94,335755821,0,0x0,8
tick,0x7ffd093d1d94,335771911,0,0x0,8
tick,0x7ffd093d1d94,335786919,0,0x0,8
tick,0x7ffd093d1d94,335802943,0,0x0,8
tick,0x7ffd093d1d94,335818470,0,0x0,8
tick,0x7ffd093d1d94,335832947,0,0x0,8
tick,0x7ffd093d1d94,335849667,0,0x0,8
tick,0x7ffd093d1d94,335864587,0,0x0,8
tick,0x7ffd093d1d94,335880351,0,0x0,8
tick,0x7ffd093d1d94,335896315,0,0x0,8
tick,0x7ffd093d1d94,335912319,0,0x0,8
tick,0x7ffd093d1d94,335928305,0,0x0,8
tick,0x7ffd093d1d94,335944380,0,0x0,8
tick,0x7ffd093d1d94,335959724,0,0x0,8
tick,0x7ffd093d1d94,335975732,0,0x0,8
tick,0x7ffd093d1d94,335991732,0,0x0,8
tick,0x7ffd093d1d94,336007714,0,0x0,8
tick,0x7ffd093d1d94,336022683,0,0x0,8
tick,0x7ffd093d1d94,336037674,0,0x0,8
tick,0x7ffd093d1d94,336053172,0,0x0,8
tick,0x7ffd093d1d94,336069118,0,0x0,8
tick,0x7ffd093d1d94,336085146,0,0x0,8
tick,0x7ffd093d1d94,336101112,0,0x0,8
tick,0x7ffd093d1d94,336117187,0,0x0,8
tick,0x7ffd093d1d94,336132710,0,0x0,8
tick,0x7ffd093d1d94,336148747,0,0x0,8
tick,0x7ffd093d1d94,336164273,0,0x0,8
tick,0x7ffd093d1d94,336180226,0,0x0,8
tick,0x7ffd093d1d94,336195196,0,0x0,8
tick,0x7ffd093d1d94,336210908,0,0x0,8
tick,0x7ffd093d1d94,336226680,0,0x0,8
tick,0x7ffd093d1d94,336242670,0,0x0,8
tick,0x7ffd093d1d94,336258936,0,0x0,8
tick,0x7ffd093d1d94,336275102,0,0x0,8
tick,0x7ffd093d1d94,336289852,0,0x0,8
tick,0x7ffd093d1d94,336304636,0,0x0,8
tick,0x7ffd093d1d94,336320555,0,0x0,8
tick,0x7ffd093d1d94,336335782,0,0x0,8
tick,0x7ffd093d1d94,336351516,0,0x0,8
tick,0x7ffd093d1d94,336367205,0,0x0,8
tick,0x7ffd093d1d94,336382598,0,0x0,8
tick,0x7ffd093d1d94,336397930,0,0x0,8
tick,0x7ffd093d1d94,336412928,0,0x0,8
tick,0x7ffd093d1d94,336428980,0,0x0,8
tick,0x7ffd093d1d94,336444964,0,0x0,8
tick,0x7ffd093d1d94,336460507,0,0x0,8
tick,0x7ffd093d1d94,336476465,0,0x0,8
tick,0x7ffd093d1d94,336491613,0,0x0,8
tick,0x7ffd093d1d94,336507501,0,0x0,8
tick,0x7ffd093d1d94,336522515,0,0x0,8
tick,0x7ffd093d1d94,336537563,0,0x0,8
tick,0x7ffd093d1d94,336552939,0,0x0,8
tick,0x7ffd093d1d94,336568000,0,0x0,8
tick,0x7ffd093d1d94,336582958,0,0x0,8
tick,0x7ffd093d1d94,336598962,0,0x0,8
tick,0x7ffd093d1d94,336614011,0,0x0,8
tick,0x7ffd093d1d94,336629179,0,0x0,8
tick,0x7ffd093d1d94,336645277,0,0x0,8
tick,0x7ffd093d1d94,336660918,0,0x0,8
tick,0x7ffd093d1d94,336676867,0,0x0,8
tick,0x7ffd093d1d94,336692866,0,0x0,8
tick,0x7ffd093d1d94,336708876,0,0x0,8
tick,0x7ffd093d1d94,336724133,0,0x0,8
tick,0x7ffd093d1d94,336740586,0,0x0,8
tick,0x7ffd093d1d94,336756135,0,0x0,8
tick,0x7ffd093d1d94,336771838,0,0x0,8
tick,0x7ffd093d1d94,336787600,0,0x0,8
tick,0x7ffd093d1d94,336802839,0,0x0,8
tick,0x7ffd093d1d94,336818321,0,0x0,8
tick,0x7ffd093d1d94,336834157,0,0x0,8
tick,0x7ffd093d1d94,336849605,0,0x0,8
tick,0x7ffd093d1d94,336864818,0,0x0,8
tick,0x7ffd093d1d94,336880056,0,0x0,8
tick,0x7ffd093d1d94,336894801,0,0x0,8
tick,0x7ffd093d1d94,336910110,0,0x0,8
tick,0x7ffd093d1d94,336925513,0,0x0,8
tick,0x7ffd093d1d94,336941561,0,0x0,8
tick,0x7ffd093d1d94,336957202,0,0x0,8
tick,0x7ffd093d1d94,336972654,0,0x0,8
tick,0x7ffd093d1d94,336988686,0,0x0,8
tick,0x7ffd093d1d94,337005038,0,0x0,8
tick,0x7ffd093d1d94,337020679,0,0x0,8
tick,0x7ffd093d1d94,337036777,0,0x0,8
tick,0x7ffd093d1d94,337052305,0,0x0,8
tick,0x7ffd093d1d94,337068296,0,0x0,8
tick,0x7ffd093d1d94,337084231,0,0x0,8
tick,0x7ffd093d1d94,337099265,0,0x0,8
tick,0x7ffd093d1d94,337114631,0,0x0,8
tick,0x7ffd093d1d94,337130273,0,0x0,8
tick,0x7ffd093d1d94,337145589,0,0x0,8
tick,0x7ffd093d1d94,337160744,0,0x0,8
tick,0x7ffd093d1d94,337177040,0,0x0,8
tick,0x7ffd093d1d94,337192780,0,0x0,8
tick,0x7ffd093d1d94,337208141,0,0x0,8
tick,0x7ffd093d1d94,337223952,0,0x0,8
tick,0x7ffd093d1d94,337239611,0,0x0,8
tick,0x7ffd093d1d94,337255587,0,0x0,8
tick,0x7ffd093d1d94,337271476,0,0x0,8
tick,0x7ffd093d1d94,337287037,0,0x0,8
tick,0x7ffd093d1d94,337302259,0,0x0,8
tick,0x7ffd093d1d94,337318240,0,0x0,8
tick,0x7ffd093d1d94,337334329,0,0x0,8
tick,0x7ffd093d1d94,337350054,0,0x0,8
tick,0x7ffd093d1d94,337365533,0,0x0,8
tick,0x7ffd093d1d94,337380683,0,0x0,8
tick,0x7ffd093d1d94,337396274,0,0x0,8
tick,0x7ffd093d1d94,337412309,0,0x0,8
tick,0x7ffd093d1d94,337428312,0,0x0,8
tick,0x7ffd093d1d94,337444243,0,0x0,8
tick,0x7ffd093d1d94,337460158,0,0x0,8
tick,0x7ffd093d1d94,337475563,0,0x0,8
tick,0x7ffd093d1d94,337491185,0,0x0,8
tick,0x7ffd093d1d94,337506388,0,0x0,8
tick,0x7ffd093d1d94,337521641,0,0x0,8
tick,0x7ffd093d1d94,337537340,0,0x0,8
tick,0x7ffd093d1d94,337552645,0,0x0,8
tick,0x7ffd093d1d94,337567936,0,0x0,8
tick,0x7ffd093d1d94,337583134,0,0x0,8
tick,0x7ffd093d1d94,337597945,0,0x0,8
tick,0x7ffd093d1d94,337613987,0,0x0,8
tick,0x7ffd093d1d94,337629563,0,0x0,8
tick,0x7ffd093d1d94,337644900,0,0x0,8
tick,0x7ffd093d1d94,337660347,0,0x0,8
tick,0x7ffd093d1d94,337675660,0,0x0,8
tick,0x7ffd093d1d94,337691398,0,0x0,8
tick,0x7ffd093d1d94,337707169,0,0x0,8
tick,0x7ffd093d1d94,337721724,0,0x0,8
tick,0x7ffd093d1d94,337736671,0,0x0,8
tick,0x7ffd093d1d94,337753098,0,0x0,8
tick,0x7ffd093d1d94,337768376,0,0x0,8
tick,0x7ffd093d1d94,337783902,0,0x0,8
tick,0x7ffd093d1d94,337799325,0,0x0,8
tick,0x7ffd093d1d94,337815173,0,0x0,8
tick,0x7ffd093d1d94,337830642,0,0x0,8
tick,0x7ffd093d1d94,337845966,0,0x0,8
tick,0x7ffd093d1d94,337861676,0,0x0,8
tick,0x7ffd093d1d94,337876575,0,0x0,8
tick,0x7ffd093d1d94,337892395,0,0x0,8
tick,0x7ffd093d1d94,337908410,0,0x0,8
tick,0x7ffd093d1d94,337924543,0,0x0,8
tick,0x7ffd093d1d94,337939849,0,0x0,8
tick,0x7ffd093d1d94,337955697,0,0x0,8
tick,0x7ffd093d1d94,337971655,0,0x0,8
tick,0x7ffd093d1d94,337986945,0,0x0,8
tick,0x7ffd093d1d94,338002089,0,0x0,8
tick,0x7ffd093d1d94,338017986,0,0x0,8
tick,0x7ffd093d1d94,338034061,0,0x0,8
tick,0x7ffd093d1d94,338049342,0,0x0,8
tick,0x7ffd093d1d94,338064841,0,0x0,8
tick,0x7ffd093d1d94,338081048,0,0x0,8
tick,0x7ffd093d1d94,338096483,0,0x0,8
tick,0x7ffd093d1d94,338111172,0,0x0,8
tick,0x7ffd093d1d94,338127035,0,0x0,8
tick,0x7ffd093d1d94,338142036,0,0x0,8
tick,0x7ffd093d1d94,338157583,0,0x0,8
tick,0x7ffd093d1d94,338173579,0,0x0,8
tick,0x7ffd093d1d94,338189714,0,0x0,8
tick,0x7ffd093d1d94,338204850,0,0x0,8
tick,0x7ffd093d1d94,338220197,0,0x0,8
tick,0x7ffd093d1d94,338235486,0,0x0,8
tick,0x7ffd093d1d94,338251359,0,0x0,8
tick,0x7ffd093d1d94,338267026,0,0x0,8
tick,0x7ffd093d1d94,338282964,0,0x0,8
tick,0x7ffd093d1d94,338298851,0,0x0,8
tick,0x7ffd093d1d94,338314795,0,0x0,8
tick,0x7ffd093d1d94,338330191,0,0x0,8
tick,0x7ffd093d1d94,338345348,0,0x0,8
tick,0x7ffd093d1d94,338360677,0,0x0,8
tick,0x7ffd093d1d94,338376501,0,0x0,8
tick,0x7ffd093d1d94,338392121,0,0x0,8
tick,0x7ffd093d1d94,338407800,0,0x0,8
tick,0x7ffd093d1d94,338423542,0,0x0,8
tick,0x7ffd093d1d94,338438778,0,0x0,8
tick,0x7ffd093d1d94,338454799,0,0x0,8
tick,0x7ffd093d1d94,338469959,0,0x0,8
tick,0x7ffd093d1d94,338485667,0,0x0,8
tick,0x7ffd093d1d94,338500410,0,0x0,8
tick,0x7ffd093d1d94,338516479,0,0x0,8
tick,0x7ffd093d1d94,338532439,0,0x0,8
tick,0x7ffd093d1d94,338547441,0,0x0,8
tick,0x7ffd093d1d94,338563853,0,0x0,8
tick,0x7ffd093d1d94,338578886,0,0x0,8
tick,0x7ffd093d1d94,338593635,0,0x0,8
tick,0x7ffd093d1d94,338609079,0,0x0,8
tick,0x7ffd093d1d94,338625127,0,0x0,8
tick,0x7ffd093d1d94,338640371,0,0x0,8
tick,0x7ffd093d1d94,338656274,0,0x0,8
tick,0x7ffd093d1d94,338671873,0,0x0,8
tick,0x7ffd093d1d94,338687438,0,0x0,8
tick,0x7ffd093d1d94,338702701,0,0x0,8
tick,0x7ffd093d1d94,338718513,0,0x0,8
tick,0x7ffd093d1d94,338733783,0,0x0,8
tick,0x7ffd093d1d94,338749180,0,0x0,8
tick,0x7ffd093d1d94,338764966,0,0x0,8
tick,0x7ffd093d1d94,338780540,0,0x0,8
tick,0x7ffd093d1d94,338795896,0,0x0,8
tick,0x7ffd093d1d94,338811721,0,0x0,8
tick,0x7ffd093d1d94,338826634,0,0x0,8
tick,0x7ffd093d1d94,338842279,0,0x0,8
tick,0x7ffd093d1d94,338857766,0,0x0,8
tick,0x7ffd093d1d94,338873943,0,0x0,8
tick,0x7ffd093d1d94,338889306,0,0x0,8
tick,0x7ffd093d1d94,338905056,0,0x0,8
tick,0x7ffd093d1d94,338921260,0,0x0,8
tick,0x7ffd093d1d94,338936134,0,0x0,8
tick,0x7ffd093d1d94,338951867,0,0x0,8
tick,0x7ffd093d1d94,338968184,0,0x0,8
tick,0x7ffd093d1d94,338984185,0,0x0,8
tick,0x7ffd093d1d94,339000534,0,0x0,8
tick,0x7ffd093d1d94,339016556,0,0x0,8
tick,0x7ffd093d1d94,339031548,0,0x0,8
tick,0x7ffd093d1d94,339047580,0,0x0,8
tick,0x7ffd093d1d94,339062882,0,0x0,8
tick,0x7ffd093d1d94,339078512,0,0x0,8
tick,0x7ffd093d1d94,339094171,0,0x0,8
tick,0x7ffd093d1d94,339109255,0,0x0,8
tick,0x7ffd093d1d94,339125172,0,0x0,8
tick,0x7ffd093d1d94,339140221,0,0x0,8
tick,0x7ffd093d1d94,339156141,0,0x0,8
tick,0x7ffd093d1d94,339171308,0,0x0,8
tick,0x7ffd093d1d94,339186296,0,0x0,8
tick,0x7ffd093d1d94,339202342,0,0x0,8
tick,0x7ffd093d1d94,339218037,0,0x0,8
tick,0x7ffd093d1d94,339233837,0,0x0,8
tick,0x7ffd093d1d94,339250023,0,0x0,8
tick,0x7ffd093d1d94,339266075,0,0x0,8
tick,0x7ffd093d1d94,339281115,0,0x0,8
tick,0x7ffd093d1d94,339296415,0,0x0,8
tick,0x7ffd093d1d94,339312475,0,0x0,8
tick,0x7ffd093d1d94,339327602,0,0x0,8
tick,0x7ffd093d1d94,339343270,0,0x0,8
tick,0x7ffd093d1d94,339358212,0,0x0,8
tick,0x7ffd093d1d94,339374045,0,0x0,8
tick,0x7ffd093d1d94,339389415,0,0x0,8
tick,0x7ffd093d1d94,339404460,0,0x0,8
tick,0x7ffd093d1d94,339420320,0,0x0,8
tick,0x7ffd093d1d94,339436005,0,0x0,8
tick,0x7ffd093d1d94,339451333,0,0x0,8
tick,0x7ffd093d1d94,339466750,0,0x0,8
tick,0x7ffd093d1d94,339481685,0,0x0,8
tick,0x7ffd093d1d94,339497856,0,0x0,8
tick,0x7ffd093d1d94,339513033,0,0x0,8
tick,0x7ffd093d1d94,339528359,0,0x0,8
tick,0x7ffd093d1d94,339543387,0,0x0,8
tick,0x7ffd093d1d94,339559185,0,0x0,8
tick,0x7ffd093d1d94,339574935,0,0x0,8
tick,0x7ffd093d1d94,339591216,0,0x0,8
tick,0x7ffd093d1d94,339607176,0,0x0,8
tick,0x7ffd093d1d94,339622319,0,0x0,8
tick,0x7ffd093d1d94,339638268,0,0x0,8
tick,0x7ffd093d1d94,339654121,0,0x0,8
tick,0x7ffd093d1d94,339669792,0,0x0,8
tick,0x7ffd093d1d94,339685631,0,0x0,8
tick,0x7ffd093d1d94,339701473,0,0x0,8
tick,0x7ffd093d1d94,339717279,0,0x0,8
tick,0x7ffd093d1d94,339732636,0,0x0,8
tick,0x7ffd093d1d94,339748737,0,0x0,8
tick,0x7ffd093d1d94,339764035,0,0x0,8
tick,0x7ffd093d1d94,339779842,0,0x0,8
tick,0x7ffd093d1d94,339794852,0,0x0,8
tick,0x7ffd093d1d94,339810393,0,0x0,8
tick,0x7ffd093d1d94,339826521,0,0x0,8
tick,0x7ffd093d1d94,339841414,0,0x0,8
tick,0x7ffd093d1d94,339857293,0,0x0,8
tick,0x7ffd093d1d94,339873644,0,0x0,8
tick,0x7ffd093d1d94,339889454,0,0x0,8
tick,0x7ffd093d1d94,339905117,0,0x0,8
tick,0x7ffd093d1d94,339920074,0,0x0,8
tick,0x7ffd093d1d94,339935006,0,0x0,8
tick,0x7ffd093d1d94,339950917,0,0x0,8
tick,0x7ffd093d1d94,339967130,0,0x0,8
tick,0x7ffd093d1d94,339982944,0,0x0,8
tick,0x7ffd093d1d94,339998302,0,0x0,8
tick,0x7ffd093d1d94,340013501,0,0x0,8
tick,0x7ffd093d1d94,340029859,0,0x0,8
tick,0x7ffd093d1d94,340045443,0,0x0,8
tick,0x7ffd093d1d94,340060843,0,0x0,8
tick,0x7ffd093d1d94,340076329,0,0x0,8
tick,0x7ffd093d1d94,340091843,0,0x0,8
tick,0x7ffd093d1d94,340107244,0,0x0,8
tick,0x7ffd093d1d94,340123217,0,0x0,8
tick,0x7ffd093d1d94,340139187,0,0x0,8
tick,0x7ffd093d1d94,340155221,0,0x0,8
tick,0x7ffd093d1d94,340171170,0,0x0,8
tick,0x7ffd093d1d94,340186755,0,0x0,8
tick,0x7ffd093d1d94,340202401,0,0x0,8
tick,0x7ffd093d1d94,340217497,0,0x0,8
tick,0x7ffd093d1d94,340232758,0,0x0,8
tick,0x7ffd093d1d94,340248591,0,0x0,8
tick,0x7ffd093d1d94,340263479,0,0x0,8
tick,0x7ffd093d1d94,340278369,0,0x0,8
tick,0x7ffd093d1d94,340294126,0,0x0,8
tick,0x7ffd093d1d94,340309402,0,0x0,8
tick,0x7ffd093d1d94,340324425,0,0x0,8
tick,0x7ffd093d1d94,340340628,0,0x0,8
tick,0x7ffd093d1d94,340355522,0,0x0,8
tick,0x7ffd093d1d94,340370905,0,0x0,8
tick,0x7ffd093d1d94,340386632,0,0x0,8
tick,0x7ffd093d1d94,340401719,0,0x0,8
tick,0x7ffd093d1d94,340417882,0,0x0,8
tick,0x7ffd093d1d94,340433066,0,0x0,8
tick,0x7ffd093d1d94,340448101,0,0x0,8
tick,0x7ffd093d1d94,340464101,0,0x0,8
tick,0x7ffd093d1d94,340478909,0,0x0,8
tick,0x7ffd093d1d94,340494882,0,0x0,8
tick,0x7ffd093d1d94,340510641,0,0x0,8
tick,0x7ffd093d1d94,340526620,0,0x0,8
tick,0x7ffd093d1d94,340542894,0,0x0,8
tick,0x7ffd093d1d94,340558582,0,0x0,8
tick,0x7ffd093d1d94,340574068,0,0x0,8
tick,0x7ffd093d1d94,340589442,0,0x0,8
tick,0x7ffd093d1d94,340604609,0,0x0,8
tick,0x7ffd093d1d94,340620267,0,0x0,8
tick,0x7ffd093d1d94,340635716,0,0x0,8
tick,0x7ffd093d1d94,340652017,0,0x0,8
tick,0x7ffd093d1d94,340667120,0,0x0,8
tick,0x7ffd093d1d94,340682331,0,0x0,8
tick,0x7ffd093d1d94,340698329,0,0x0,8
tick,0x7ffd093d1d94,340713992,0,0x0,8
tick,0x7ffd093d1d94,340728955,0,0x0,8
tick,0x7ffd093d1d94,340744955,0,0x0,8
tick,0x7ffd093d1d94,340760342,0,0x0,8
tick,0x7ffd093d1d94,340775507,0,0x0,8
tick,0x7ffd093d1d94,340790949,0,0x0,8
tick,0x7ffd093d1d94,340806577,0,0x0,8
tick,0x7ffd093d1d94,340821813,0,0x0,8
tick,0x7ffd093d1d94,340836983,0,0x0,8
tick,0x7ffd093d1d94,340851921,0,0x0,8
tick,0x7ffd093d1d94,340866936,0,0x0,8
tick,0x7ffd093d1d94,340882701,0,0x0,8
tick,0x7ffd093d1d94,340897455,0,0x0,8
tick,0x7ffd093d1d94,340913292,0,0x0,8
tick,0x7ffd093d1d94,340928981,0,0x0,8
tick,0x7ffd093d1d94,340944546,0,0x0,8
tick,0x7ffd093d1d94,340959410,0,0x0,8
tick,0x7ffd093d1d94,340975274,0,0x0,8
tick,0x7ffd093d1d94,340990486,0,0x0,8
tick,0x7ffd093d1d94,341005683,0,0x0,8
tick,0x7ffd093d1d94,341021384,0,0x0,8
tick,0x7ffd093d1d94,341037391,0,0x0,8
tick,0x7ffd093d1d94,341053336,0,0x0,8
tick,0x7ffd093d1d94,341068189,0,0x0,8
tick,0x7ffd093d1d94,341083825,0,0x0,8
tick,0x7ffd093d1d94,341099662,0,0x0,8
tick,0x7ffd093d1d94,341115212,0,0x0,8
tick,0x7ffd093d1d94,341130814,0,0x0,8
tick,0x7ffd093d1d94,341146285,0,0x0,8
tick,0x7ffd093d1d94,341161976,0,0x0,8
tick,0x7ffd093d1d94,341178122,0,0x0,8
tick,0x7ffd093d1d94,341193193,0,0x0,8
tick,0x7ffd093d1d94,341208978,0,0x0,8
tick,0x7ffd093d1d94,341224397,0,0x0,8
tick,0x7ffd093d1d94,341239857,0,0x0,8
tick,0x7ffd093d1d94,341255335,0,0x0,8
tick,0x7ffd093d1d94,341271135,0,0x0,8
tick,0x7ffd093d1d94,341287054,0,0x0,8
tick,0x7ffd093d1d94,341302513,0,0x0,8
tick,0x7ffd093d1d94,341317948,0,0x0,8
tick,0x7ffd093d1d94,341334256,0,0x0,8
tick,0x7ffd093d1d94,341349481,0,0x0,8
tick,0x7ffd093d1d94,341364693,0,0x0,8
tick,0x7ffd093d1d94,341380003,0,0x0,8
tick,0x7ffd093d1d94,341395534,0,0x0,8
tick,0x7ffd093d1d94,341410427,0,0x0,8
tick,0x7ffd093d1d94,341425639,0,0x0,8
tick,0x7ffd093d1d94,341440773,0,0x0,8
tick,0x7ffd093d1d94,341456745,0,0x0,8
tick,0x7ffd093d1d94,341471517,0,0x0,8
tick,0x7ffd093d1d94,341487067,0,0x0,8
tick,0x7ffd093d1d94,341503127,0,0x0,8
tick,0x7ffd093d1d94,341518498,0,0x0,8
tick,0x7ffd093d1d94,341534653,0,0x0,8
tick,0x7ffd093d1d94,341549841,0,0x0,8
tick,0x7ffd093d1d94,341565890,0,0x0,8
tick,0x7ffd093d1d94,341581091,0,0x0,8
tick,0x7ffd093d1d94,341596846,0,0x0,8
tick,0x7ffd093d1d94,341612203,0,0x0,8
tick,0x7ffd093d1d94,341627470,0,0x0,8
tick,0x7ffd093d1d94,341643059,0,0x0,8
tick,0x7ffd093d1d94,341658807,0,0x0,8
tick,0x7ffd093d1d94,341674057,0,0x0,8
tick,0x7ffd093d1d94,341689765,0,0x0,8
tick,0x7ffd093d1d94,341704625,0,0x0,8
tick,0x7ffd093d1d94,341720093,0,0x0,8
tick,0x7ffd093d1d94,341735994,0,0x0,8
tick,0x7ffd093d1d94,341750902,0,0x0,8
tick,0x7ffd093d1d94,341766424,0,0x0,8
tick,0x7ffd093d1d94,341782340,0,0x0,8
tick,0x7ffd093d1d94,341798323,0,0x0,8
tick,0x7ffd093d1d94,341814353,0,0x0,8
tick,0x7ffd093d1d94,341830255,0,0x0,8
tick,0x7ffd093d1d94,341844938,0,0x0,8
tick,0x7ffd093d1d94,341860502,0,0x0,8
tick,0x7ffd093d1d94,341875710,0,0x0,8
tick,0x7ffd093d1d94,341892101,0,0x0,8
tick,0x7ffd093d1d94,341906469,0,0x0,8
tick,0x7ffd093d1d94,341922707,0,0x0,8
tick,0x7ffd093d1d94,341937892,0,0x0,8
tick,0x7ffd093d1d94,341952898,0,0x0,8
tick,0x7ffd093d1d94,341968711,0,0x0,8
tick,0x7ffd093d1d94,341984599,0,0x0,8
tick,0x7ffd093d1d94,341999774,0,0x0,8
tick,0x7ffd093d1d94,342014824,0,0x0,8
tick,0x7ffd093d1d94,342030625,0,0x0,8
tick,0x7ffd093d1d94,342046122,0,0x0,8
tick,0x7ffd093d1d94,342061720,0,0x0,8
tick,0x7ffd093d1d94,342077571,0,0x0,8
tick,0x7ffd093d1d94,342092920,0,0x0,8
tick,0x7ffd093d1d94,342108856,0,0x0,8
tick,0x7ffd093d1d94,342124499,0,0x0,8
tick,0x7ffd093d1d94,342140406,0,0x0,8
tick,0x7ffd093d1d94,342155943,0,0x0,8
tick,0x7ffd093d1d94,342171314,0,0x0,8
tick,0x7ffd093d1d94,342186851,0,0x0,8
tick,0x7ffd093d1d94,342202279,0,0x0,8
tick,0x7ffd093d1d94,342217284,0,0x0,8
tick,0x7ffd093d1d94,342233314,0,0x0,8
tick,0x7ffd093d1d94,342248602,0,0x0,8
tick,0x7ffd093d1d94,342263997,0,0x0,8
tick,0x7ffd093d1d94,342280184,0,0x0,8
tick,0x7ffd093d1d94,342295409,0,0x0,8
tick,0x7ffd093d1d94,342311833,0,0x0,8
tick,0x7ffd093d1d94,342327485,0,0x0,8
tick,0x7ffd093d1d94,342343335,0,0x0,8
tick,0x7ffd093d1d94,342359347,0,0x0,8
tick,0x7ffd093d1d94,342374718,0,0x0,8
tick,0x7ffd093d1d94,342389761,0,0x0,8
tick,0x7ffd093d1d94,342405337,0,0x0,8
tick,0x7ffd093d1d94,342421317,0,0x0,8
tick,0x7ffd093d1d94,342437677,0,0x0,8
tick,0x7ffd093d1d94,342453650,0,0x0,8
tick,0x7ffd093d1d94,342469647,0,0x0,8
tick,0x7ffd093d1d94,342485886,0,0x0,8
tick,0x7ffd093d1d94,342500983,0,0x0,8
tick,0x7ffd093d1d94,342517071,0,0x0,8
tick,0x7ffd093d1d94,342532831,0,0x0,8
tick,0x7ffd093d1d94,342548395,0,0x0,8
tick,0x7ffd093d1d94,342563945,0,0x0,8
tick,0x7ffd093d1d94,342579763,0,0x0,8
tick,0x7ffd093d1d94,342595878,0,0x0,8
tick,0x7ffd093d1d94,342611199,0,0x0,8
tick,0x7ffd093d1d94,342627016,0,0x0,8
tick,0x7ffd093d1d94,342641962,0,0x0,8
tick,0x7ffd093d1d94,342657717,0,0x0,8
tick,0x7ffd093d1d94,342673614,0,0x0,8
tick,0x7ffd093d1d94,342688481,0,0x0,8
tick,0x7ffd093d1d94,342703791,0,0x0,8
tick,0x7ffd093d1d94,342719353,0,0x0,8
tick,0x7ffd093d1d94,342734972,0,0x0,8
tick,0x7ffd093d1d94,342749789,0,0x0,8
tick,0x7ffd093d1d94,342765618,0,0x0,8
tick,0x7ffd093d1d94,342780745,0,0x0,8
tick,0x7ffd093d1d94,342796859,0,0x0,8
tick,0x7ffd093d1d94,342812336,0,0x0,8
tick,0x7ffd093d1d94,342828134,0,0x0,8
tick,0x7ffd093d1d94,342843395,0,0x0,8
tick,0x7ffd093d1d94,342859170,0,0x0,8
tick,0x7ffd093d1d94,342874983,0,0x0,8
tick,0x7ffd093d1d94,342890099,0,0x0,8
tick,0x7ffd093d1d94,342905537,0,0x0,8
tick,0x7ffd093d1d94,342920888,0,0x0,8
tick,0x7ffd093d1d94,342936686,0,0x0,8
tick,0x7ffd093d1d94,342951941,0,0x0,8
tick,0x7ffd093d1d94,342967622,0,0x0,8
tick,0x7ffd093d1d94,342982798,0,0x0,8
tick,0x7ffd093d1d94,342998824,0,0x0,8
tick,0x7ffd093d1d94,343014218,0,0x0,8
tick,0x7ffd093d1d94,343029916,0,0x0,8
tick,0x7ffd093d1d94,343045683,0,0x0,8
tick,0x7ffd093d1d94,343061061,0,0x0,8
tick,0x7ffd093d1d94,343076367,0,0x0,8
tick,0x7ffd093d1d94,343091623,0,0x0,8
tick,0x7ffd093d1d94,343107773,0,0x0,8
tick,0x7ffd093d1d94,343124061,0,0x0,8
tick,0x7ffd093d1d94,343139670,0,0x0,8
tick,0x7ffd093d1d94,343155650,0,0x0,8
tick,0x7ffd093d1d94,343171727,0,0x0,8
tick,0x7ffd093d1d94,343187333,0,0x0,8
tick,0x7ffd093d1d94,343203068,0,0x0,8
tick,0x7ffd093d1d94,343218787,0,0x0,8
tick,0x7ffd093d1d94,343234563,0,0x0,8
tick,0x7ffd093d1d94,343250982,0,0x0,8
tick,0x7ffd093d1d94,343266097,0,0x0,8
tick,0x7ffd093d1d94,343280626,0,0x0,8
tick,0x7ffd093d1d94,343296124,0,0x0,8
tick,0x7ffd093d1d94,343311139,0,0x0,8
tick,0x7ffd093d1d94,343326668,0,0x0,8
tick,0x7ffd093d1d94,343342246,0,0x0,8
tick,0x7ffd093d1d94,343358016,0,0x0,8
tick,0x7ffd093d1d94,343373599,0,0x0,8
tick,0x7ffd093d1d94,343389325,0,0x0,8
tick,0x7ffd093d1d94,343404990,0,0x0,8
tick,0x7ffd093d1d94,343420680,0,0x0,8
tick,0x7ffd093d1d94,343436298,0,0x0,8
tick,0x7ffd093d1d94,343451409,0,0x0,8
tick,0x7ffd093d1d94,343467368,0,0x0,8
tick,0x7ffd093d1d94,343482551,0,0x0,8
tick,0x7ffd093d1d94,343498199,0,0x0,8
tick,0x7ffd093d1d94,343513319,0,0x0,8
tick,0x7ffd093d1d94,343528089,0,0x0,8
tick,0x7ffd093d1d94,343543246,0,0x0,8
tick,0x7ffd093d1d94,343559134,0,0x0,8
tick,0x7ffd093d1d94,343574473,0,0x0,8
tick,0x7ffd093d1d94,343589189,0,0x0,8
tick,0x7ffd093d1d94,343604781,0,0x0,8
tick,0x7ffd093d1d94,343620407,0,0x0,8
tick,0x7ffd093d1d94,343635993,0,0x0,8
tick,0x7ffd093d1d94,343651711,0,0x0,8
tick,0x7ffd093d1d94,343667533,0,0x0,8
tick,0x7ffd093d1d94,343682718,0,0x0,8
tick,0x7ffd093d1d94,343698367,0,0x0,8
tick,0x7ffd093d1d94,343713883,0,0x0,8
tick,0x7ffd093d1d94,343729074,0,0x0,8
tick,0x7ffd093d1d94,343745014,0,0x0,8
tick,0x7ffd093d1d94,343760969,0,0x0,8
tick,0x7ffd093d1d94,343776837,0,0x0,8
tick,0x7ffd093d1d94,343792999,0,0x0,8
tick,0x7ffd093d1d94,343808591,0,0x0,8
tick,0x7ffd093d1d94,343824126,0,0x0,8
tick,0x7ffd093d1d94,343839534,0,0x0,8
tick,0x7ffd093d1d94,343855185,0,0x0,8
tick,0x7ffd093d1d94,343870478,0,0x0,8
tick,0x7ffd093d1d94,343885977,0,0x0,8
tick,0x7ffd093d1d94,343901877,0,0x0,8
tick,0x7ffd093d1d94,343917062,0,0x0,8
tick,0x7ffd093d1d94,343932870,0,0x0,8
tick,0x7ffd093d1d94,343947751,0,0x0,8
tick,0x7ffd093d1d94,343963851,0,0x0,8
tick,0x7ffd093d1d94,343979509,0,0x0,8
tick,0x7ffd093d1d94,343994566,0,0x0,8
tick,0x7ffd093d1d94,344010239,0,0x0,8
tick,0x7ffd093d1d94,344026011,0,0x0,8
tick,0x7ffd093d1d94,344042366,0,0x0,8
tick,0x7ffd093d1d94,344057446,0,0x0,8
tick,0x7ffd093d1d94,344072503,0,0x0,8
tick,0x7ffd093d1d94,344088226,0,0x0,8
tick,0x7ffd093d1d94,344103894,0,0x0,8
tick,0x7ffd093d1d94,344119483,0,0x0,8
tick,0x7ffd093d1d94,344134821,0,0x0,8
tick,0x7ffd093d1d94,344150137,0,0x0,8
tick,0x7ffd093d1d94,344165504,0,0x0,8
tick,0x7ffd093d1d94,344180974,0,0x0,8
tick,0x7ffd093d1d94,344196632,0,0x0,8
tick,0x7ffd093d1d94,344212206,0,0x0,8
tick,0x7ffd093d1d94,344227452,0,0x0,8
tick,0x7ffd093d1d94,344242747,0,0x0,8
tick,0x7ffd093d1d94,344258694,0,0x0,8
tick,0x7ffd093d1d94,344273924,0,0x0,8
tick,0x7ffd093d1d94,344289027,0,0x0,8
tick,0x7ffd093d1d94,344304604,0,0x0,8
tick,0x7ffd093d1d94,344320243,0,0x0,8
tick,0x7ffd093d1d94,344334866,0,0x0,8
tick,0x7ffd093d1d94,344350893,0,0x0,8
tick,0x7ffd093d1d94,344366314,0,0x0,8
tick,0x7ffd093d1d94,344382129,0,0x0,8
tick,0x7ffd093d1d94,344396829,0,0x0,8
tick,0x7ffd093d1d94,344412384,0,0x0,8
tick,0x7ffd093d1d94,344427789,0,0x0,8
tick,0x7ffd093d1d94,344442937,0,0x0,8
tick,0x7ffd093d1d94,344458631,0,0x0,8
tick,0x7ffd093d1d94,344474318,0,0x0,8
tick,0x7ffd093d1d94,344489858,0,0x0,8
tick,0x7ffd093d1d94,344505758,0,0x0,8
tick,0x7ffd093d1d94,344520696,0,0x0,8
tick,0x7ffd093d1d94,344535617,0,0x0,8
tick,0x7ffd093d1d94,344551616,0,0x0,8
tick,0x7ffd093d1d94,344567120,0,0x0,8
tick,0x7ffd093d1d94,344583403,0,0x0,8
tick,0x7ffd093d1d94,344599149,0,0x0,8
tick,0x7ffd093d1d94,344615140,0,0x0,8
tick,0x7ffd093d1d94,344630767,0,0x0,8
tick,0x7ffd093d1d94,344645888,0,0x0,8
tick,0x7ffd093d1d94,344661899,0,0x0,8
tick,0x7ffd093d1d94,344677411,0,0x0,8
tick,0x7ffd093d1d94,344693032,0,0x0,8
tick,0x7ffd093d1d94,344708666,0,0x0,8
tick,0x7ffd093d1d94,344724766,0,0x0,8
tick,0x7ffd093d1d94,344739959,0,0x0,8
tick,0x7ffd093d1d94,344754734,0,0x0,8
tick,0x7ffd093d1d94,344770447,0,0x0,8
tick,0x7ffd093d1d94,344786463,0,0x0,8
tick,0x7ffd093d1d94,344802230,0,0x0,8
tick,0x7ffd093d1d94,344817786,0,0x0,8
tick,0x7ffd093d1d94,344833359,0,0x0,8
tick,0x7ffd093d1d94,344848622,0,0x0,8
tick,0x7ffd093d1d94,344864374,0,0x0,8
tick,0x7ffd093d1d94,344879925,0,0x0,8
tick,0x7ffd093d1d94,344895144,0,0x0,8
tick,0x7ffd093d1d94,344910967,0,0x0,8
tick,0x7ffd093d1d94,344926406,0,0x0,8
tick,0x7ffd093d1d94,344942073,0,0x0,8
tick,0x7ffd093d1d94,344957616,0,0x0,8
tick,0x7ffd093d1d94,344972828,0,0x0,8
tick,0x7ffd093d1d94,344988107,0,0x0,8
tick,0x7ffd093d1d94,345004165,0,0x0,8
tick,0x7ffd093d1d94,345018998,0,0x0,8
tick,0x7ffd093d1d94,345034710,0,0x0,8
tick,0x7ffd093d1d94,345050233,0,0x0,8
tick,0x7ffd093d1d94,345065315,0,0x0,8
tick,0x7ffd093d1d94,345080496,0,0x0,8
tick,0x7ffd093d1d94,345096188,0,0x0,8
tick,0x7ffd093d1d94,345112204,0,0x0,8
tick,0x7ffd093d1d94,345126663,0,0x0,8
tick,0x7ffd093d1d94,345142137,0,0x0,8
tick,0x7ffd093d1d94,345158287,0,0x0,8
tick,0x7ffd093d1d94,345174089,0,0x0,8
tick,0x7ffd093d1d94,345189959,0,0x0,8
tick,0x7ffd093d1d94,345205139,0,0x0,8
tick,0x7ffd093d1d94,345220165,0,0x0,8
tick,0x7ffd093d1d94,345236067,0,0x0,8
tick,0x7ffd093d1d94,345251432,0,0x0,8
tick,0x7ffd093d1d94,345266170,0,0x0,8
tick,0x7ffd093d1d94,345281469,0,0x0,8
tick,0x7ffd093d1d94,345296937,0,0x0,8
tick,0x7ffd093d1d94,345312755,0,0x0,8
tick,0x7ffd093d1d94,345328661,0,0x0,8
tick,0x7ffd093d1d94,345344093,0,0x0,8
tick,0x7ffd093d1d94,345359582,0,0x0,8
tick,0x7ffd093d1d94,345374584,0,0x0,8
tick,0x7ffd093d1d94,345390249,0,0x0,8
tick,0x7ffd093d1d94,345405470,0,0x0,8
tick,0x7ffd093d1d94,345420926,0,0x0,8
tick,0x7ffd093d1d94,345436056,0,0x0,8
tick,0x7ffd093d1d94,345451649,0,0x0,8
tick,0x7ffd093d1d94,345468159,0,0x0,8
tick,0x7ffd093d1d94,345484012,0,0x0,8
tick,0x7ffd093d1d94,345499341,0,0x0,8
tick,0x7ffd093d1d94,345514544,0,0x0,8
tick,0x7ffd093d1d94,345530036,0,0x0,8
tick,0x7ffd093d1d94,345545387,0,0x0,8
tick,0x7ffd093d1d94,345560946,0,0x0,8
tick,0x7ffd093d1d94,345576817,0,0x0,8
tick,0x7ffd093d1d94,345592636,0,0x0,8
tick,0x7ffd093d1d94,345608024,0,0x0,8
tick,0x7ffd093d1d94,345623698,0,0x0,8
tick,0x7ffd093d1d94,345639749,0,0x0,8
tick,0x7ffd093d1d94,345655594,0,0x0,8
tick,0x7ffd093d1d94,345671814,0,0x0,8
tick,0x7ffd093d1d94,345687651,0,0x0,8
tick,0x7ffd093d1d94,345703183,0,0x0,8
tick,0x7ffd093d1d94,345718958,0,0x0,8
tick,0x7ffd093d1d94,345734744,0,0x0,8
tick,0x7ffd093d1d94,345749794,0,0x0,8
tick,0x7ffd093d1d94,345765459,0,0x0,8
tick,0x7ffd093d1d94,345780688,0,0x0,8
tick,0x7ffd093d1d94,345796622,0,0x0,8
tick,0x7ffd093d1d94,345812604,0,0x0,8
tick,0x7ffd093d1d94,345828231,0,0x0,8
tick,0x7ffd093d1d94,345843670,0,0x0,8
tick,0x7ffd093d1d94,345858775,0,0x0,8
tick,0x7ffd093d1d94,345874403,0,0x0,8
tick,0x7ffd093d1d94,345890294,0,0x0,8
tick,0x7ffd093d1d94,345906238,0,0x0,8
tick,0x7ffd093d1d94,345922221,0,0x0,8
tick,0x7ffd093d1d94,345937185,0,0x0,8
tick,0x7ffd093d1d94,345953163,0,0x0,8
tick,0x7ffd093d1d94,345968218,0,0x0,8
tick,0x7ffd093d1d94,345983727,0,0x0,8
tick,0x7ffd093d1d94,345998838,0,0x0,8
tick,0x7ffd093d1d94,346014708,0,0x0,8
tick,0x7ffd093d1d94,346030714,0,0x0,8
tick,0x7ffd093d1d94,346046720,0,0x0,8
tick,0x7ffd093d1d94,346062714,0,0x0,8
tick,0x7ffd093d1d94,346078620,0,0x0,8
tick,0x7ffd093d1d94,346094686,0,0x0,8
tick,0x7ffd093d1d94,346110256,0,0x0,8
tick,0x7ffd093d1d94,346125720,0,0x0,8
tick,0x7ffd093d1d94,346141777,0,0x0,8
tick,0x7ffd093d1d94,346156444,0,0x0,8
tick,0x7ffd093d1d94,346171793,0,0x0,8
tick,0x7ffd093d1d94,346187022,0,0x0,8
tick,0x7ffd093d1d94,346202424,0,0x0,8
tick,0x7ffd093d1d94,346218434,0,0x0,8
tick,0x7ffd093d1d94,346234204,0,0x0,8
tick,0x7ffd093d1d94,346249721,0,0x0,8
tick,0x7ffd093d1d94,346265452,0,0x0,8
tick,0x7ffd093d1d94,346281023,0,0x0,8
tick,0x7ffd093d1d94,346296637,0,0x0,8
tick,0x7ffd093d1d94,346311740,0,0x0,8
tick,0x7ffd093d1d94,346327051,0,0x0,8
tick,0x7ffd093d1d94,346342804,0,0x0,8
tick,0x7ffd093d1d94,346358530,0,0x0,8
tick,0x7ffd093d1d94,346374280,0,0x0,8
tick,0x7ffd093d1d94,346390157,0,0x0,8
tick,0x7ffd093d1d94,346405702,0,0x0,8
tick,0x7ffd093d1d94,346421766,0,0x0,8
tick,0x7ffd093d1d94,346437755,0,0x0,8
tick,0x7ffd093d1d94,346452758,0,0x0,8
tick,0x7ffd093d1d94,346467893,0,0x0,8
tick,0x7ffd093d1d94,346483936,0,0x0,8
tick,0x7ffd093d1d94,346499338,0,0x0,8
tick,0x7ffd093d1d94,346514892,0,0x0,8
tick,0x7ffd093d1d94,346531018,0,0x0,8
tick,0x7ffd093d1d94,346545924,0,0x0,8
tick,0x7ffd093d1d94,346561057,0,0x0,8
tick,0x7ffd093d1d94,346577020,0,0x0,8
tick,0x7ffd093d1d94,346592599,0,0x0,8
tick,0x7ffd093d1d94,346608135,0,0x0,8
tick,0x7ffd093d1d94,346623930,0,0x0,8
tick,0x7ffd093d1d94,346639428,0,0x0,8
tick,0x7ffd093d1d94,346654956,0,0x0,8
tick,0x7ffd093d1d94,346670737,0,0x0,8
tick,0x7ffd093d1d94,346686280,0,0x0,8
tick,0x7ffd093d1d94,346702104,0,0x0,8
tick,0x7ffd093d1d94,346717538,0,0x0,8
tick,0x7ffd093d1d94,346732983,0,0x0,8
tick,0x7ffd093d1d94,346748290,0,0x0,8
tick,0x7ffd093d1d94,346764124,0,0x0,8
tick,0x7ffd093d1d94,346779658,0,0x0,8
tick,0x7ffd093d1d94,346795519,0,0x0,8
tick,0x7ffd093d1d94,346810645,0,0x0,8
tick,0x7ffd093d1d94,346825856,0,0x0,8
tick,0x7ffd093d1d94,346841707,0,0x0,8
tick,0x7ffd093d1d94,346857023,0,0x0,8
tick,0x7ffd093d1d94,346872490,0,0x0,8
tick,0x7ffd093d1d94,346887818,0,0x0,8
tick,0x7ffd093d1d94,346903316,0,0x0,8
tick,0x7ffd093d1d94,346919086,0,0x0,8
tick,0x7ffd093d1d94,346934707,0,0x0,8
tick,0x7ffd093d1d94,346950520,0,0x0,8
tick,0x7ffd093d1d94,346966257,0,0x0,8
tick,0x7ffd093d1d94,346981690,0,0x0,8
tick,0x7ffd093d1d94,346997560,0,0x0,8
tick,0x7ffd093d1d94,347013225,0,0x0,8
tick,0x7ffd093d1d94,347028978,0,0x0,8
tick,0x7ffd093d1d94,347044335,0,0x0,8
tick,0x7ffd093d1d94,347059616,0,0x0,8
tick,0x7ffd093d1d94,347075394,0,0x0,8
tick,0x7ffd093d1d94,347091455,0,0x0,8
tick,0x7ffd093d1d94,347107051,0,0x0,8
tick,0x7ffd093d1d94,347122969,0,0x0,8
tick,0x7ffd093d1d94,347138585,0,0x0,8
tick,0x7ffd093d1d94,347153951,0,0x0,8
tick,0x7ffd093d1d94,347170330,0,0x0,8
tick,0x7ffd093d1d94,347185704,0,0x0,8
tick,0x7ffd093d1d94,347201901,0,0x0,8
tick,0x7ffd093d1d94,347217196,0,0x0,8
tick,0x7ffd093d1d94,347232764,0,0x0,8
tick,0x7ffd093d1d94,347248897,0,0x0,8
tick,0x7ffd093d1d94,347263650,0,0x0,8
tick,0x7ffd093d1d94,347279225,0,0x0,8
tick,0x7ffd093d1d94,347294180,0,0x0,8
tick,0x7ffd093d1d94,347309602,0,0x0,8
tick,0x7ffd093d1d94,347325381,0,0x0,8
tick,0x7ffd093d1d94,347340203,0,0x0,8
tick,0x7ffd093d1d94,347355623,0,0x0,8
tick,0x7ffd093d1d94,347371022,0,0x0,8
tick,0x7ffd093d1d94,347387080,0,0x0,8
tick,0x7ffd093d1d94,347402951,0,0x0,8
tick,0x7ffd093d1d94,347418515,0,0x0,8
tick,0x7ffd093d1d94,347434430,0,0x0,8
tick,0x7ffd093d1d94,347450373,0,0x0,8
tick,0x7ffd093d1d94,347466174,0,0x0,8
tick,0x7ffd093d1d94,347481893,0,0x0,8
tick,0x7ffd093d1d94,347497764,0,0x0,8
tick,0x7ffd093d1d94,347513552,0,0x0,8
tick,0x7ffd093d1d94,347528995,0,0x0,8
tick,0x7ffd093d1d94,347544052,0,0x0,8
tick,0x7ffd093d1d94,347559485,0,0x0,8
tick,0x7ffd093d1d94,347574967,0,0x0,8
tick,0x7ffd093d1d94,347590976,0,0x0,8
tick,0x7ffd093d1d94,347605970,0,0x0,8
tick,0x7ffd093d1d94,347621302,0,0x0,8
tick,0x7ffd093d1d94,347636501,0,0x0,8
tick,0x7ffd093d1d94,347652699,0,0x0,8
tick,0x7ffd093d1d94,347668267,0,0x0,8
tick,0x7ffd093d1d94,347683877,0,0x0,8
tick,0x7ffd093d1d94,347699396,0,0x0,8
tick,0x7ffd093d1d94,347714331,0,0x0,8
tick,0x7ffd093d1d94,347729457,0,0x0,8
tick,0x7ffd093d1d94,347744653,0,0x0,8
tick,0x7ffd093d1d94,347759861,0,0x0,8
tick,0x7ffd093d1d94,347775316,0,0x0,8
tick,0x7ffd093d1d94,347791111,0,0x0,8
tick,0x7ffd093d1d94,347806542,0,0x0,8
tick,0x7ffd093d1d94,347821948,0,0x0,8
tick,0x7ffd093d1d94,347837231,0,0x0,8
tick,0x7ffd093d1d94,347853085,0,0x0,8
tick,0x7ffd093d1d94,347868444,0,0x0,8
tick,0x7ffd093d1d94,347883918,0,0x0,8
tick,0x7ffd093d1d94,347899037,0,0x0,8
tick,0x7ffd093d1d94,347914767,0,0x0,8
tick,0x7ffd093d1d94,347929567,0,0x0,8
tick,0x7ffd093d1d94,347945059,0,0x0,8
tick,0x7ffd093d1d94,347959949,0,0x0,8
tick,0x7ffd093d1d94,347976070,0,0x0,8
tick,0x7ffd093d1d94,347991384,0,0x0,8
tick,0x7ffd093d1d94,348006839,0,0x0,8
tick,0x7ffd093d1d94,348022487,0,0x0,8
tick,0x7ffd093d1d94,348037512,0,0x0,8
tick,0x7ffd093d1d94,348053257,0,0x0,8
tick,0x7ffd093d1d94,348068351,0,0x0,8
tick,0x7ffd093d1d94,348083910,0,0x0,8
tick,0x7ffd093d1d94,348099991,0,0x0,8
tick,0x7ffd093d1d94,348115603,0,0x0,8
tick,0x7ffd093d1d94,348131631,0,0x0,8
tick,0x7ffd093d1d94,348147547,0,0x0,8
tick,0x7ffd093d1d94,348163592,0,0x0,8
tick,0x7ffd093d1d94,348179139,0,0x0,8
tick,0x7ffd093d1d94,348195092,0,0x0,8
tick,0x7ffd093d1d94,348210934,0,0x0,8
tick,0x7ffd093d1d94,348226270,0,0x0,8
tick,0x7ffd093d1d94,348241940,0,0x0,8
tick,0x7ffd093d1d94,348257247,0,0x0,8
tick,0x7ffd093d1d94,348273075,0,0x0,8
tick,0x7ffd093d1d94,348289112,0,0x0,8
tick,0x7ffd093d1d94,348304158,0,0x0,8
tick,0x7ffd093d1d94,348320296,0,0x0,8
tick,0x7ffd093d1d94,348335467,0,0x0,8
tick,0x7ffd093d1d94,348351048,0,0x0,8
tick,0x7ffd093d1d94,348366270,0,0x0,8
tick,0x7ffd093d1d94,348382442,0,0x0,8
tick,0x7ffd093d1d94,348398357,0,0x0,8
tick,0x7ffd093d1d94,348414029,0,0x0,8
tick,0x7ffd093d1d94,348430023,0,0x0,8
tick,0x7ffd093d1d94,348445339,0,0x0,8
tick,0x7ffd093d1d94,348461056,0,0x0,8
tick,0x7ffd093d1d94,348477578,0,0x0,8
tick,0x7ffd093d1d94,348493215,0,0x0,8
tick,0x7ffd093d1d94,348508500,0,0x0,8
tick,0x7ffd093d1d94,348524508,0,0x0,8
tick,0x7ffd093d1d94,348540180,0,0x0,8
tick,0x7ffd093d1d94,348556254,0,0x0,8
tick,0x7ffd093d1d94,348571425,0,0x0,8
tick,0x7ffd093d1d94,348586863,0,0x0,8
tick,0x7ffd093d1d94,348602755,0,0x0,8
tick,0x7ffd093d1d94,348618995,0,0x0,8
tick,0x7ffd093d1d94,348634517,0,0x0,8
tick,0x7ffd093d1d94,348650354,0,0x0,8
tick,0x7ffd093d1d94,348666415,0,0x0,8
tick,0x7ffd093d1d94,348681351,0,0x0,8
tick,0x7ffd093d1d94,348696699,0,0x0,8
tick,0x7ffd093d1d94,348712052,0,0x0,8
tick,0x7ffd093d1d94,348727533,0,0x0,8
tick,0x7ffd093d1d94,348743823,0,0x0,8
tick,0x7ffd093d1d94,348759505,0,0x0,8
tick,0x7ffd093d1d94,348775032,0,0x0,8
tick,0x7ffd093d1d94,348790724,0,0x0,8
tick,0x7ffd093d1d94,348806280,0,0x0,8
tick,0x7ffd093d1d94,348821622,0,0x0,8
tick,0x7ffd093d1d94,348837711,0,0x0,8
tick,0x7ffd093d1d94,348852735,0,0x0,8
tick,0x7ffd093d1d94,348868031,0,0x0,8
tick,0x7ffd093d1d94,348883570,0,0x0,8
tick,0x7ffd093d1d94,348899462,0,0x0,8
tick,0x7ffd093d1d94,348914646,0,0x0,8
tick,0x7ffd093d1d94,348929899,0,0x0,8
tick,0x7ffd093d1d94,348945874,0,0x0,8
tick,0x7ffd093d1d94,348961520,0,0x0,8
tick,0x7ffd093d1d94,348976970,0,0x0,8
tick,0x7ffd093d1d94,348992044,0,0x0,8
tick,0x7ffd093d1d94,349007938,0,0x0,8
tick,0x7ffd093d1d94,349024104,0,0x0,8
tick,0x7ffd093d1d94,349039469,0,0x0,8
tick,0x7ffd093d1d94,349055208,0,0x0,8
tick,0x7ffd093d1d94,349070812,0,0x0,8
tick,0x7ffd093d1d94,349086225,0,0x0,8
tick,0x7ffd093d1d94,349102355,0,0x0,8
tick,0x7ffd093d1d94,349118190,0,0x0,8
tick,0x7ffd093d1d94,349133872,0,0x0,8
tick,0x7ffd093d1d94,349148933,0,0x0,8
tick,0x7ffd093d1d94,349163942,0,0x0,8
tick,0x7ffd093d1d94,349180207,0,0x0,8
tick,0x7ffd093d1d94,349195030,0,0x0,8
tick,0x7ffd093d1d94,349210523,0,0x0,8
tick,0x7ffd093d1d94,349226136,0,0x0,8
tick,0x7ffd093d1d94,349241729,0,0x0,8
tick,0x7ffd093d1d94,349257135,0,0x0,8
tick,0x7ffd093d1d94,349272150,0,0x0,8
tick,0x7ffd093d1d94,349287649,0,0x0,8
tick,0x7ffd093d1d94,349303085,0,0x0,8
tick,0x7ffd093d1d94,349318375,0,0x0,8
tick,0x7ffd093d1d94,349333688,0,0x0,8
tick,0x7ffd093d1d94,349349267,0,0x0,8
tick,0x7ffd093d1d94,349364585,0,0x0,8
tick,0x7ffd093d1d94,349380237,0,0x0,8
tick,0x7ffd093d1d94,349395937,0,0x0,8
tick,0x7ffd093d1d94,349411151,0,0x0,8
tick,0x7ffd093d1d94,349426615,0,0x0,8
tick,0x7ffd093d1d94,349442289,0,0x0,8
tick,0x7ffd093d1d94,349456942,0,0x0,8
tick,0x7ffd093d1d94,349472218,0,0x0,8
tick,0x7ffd093d1d94,349488219,0,0x0,8
tick,0x7ffd093d1d94,349503410,0,0x0,8
tick,0x7ffd093d1d94,349519148,0,0x0,8
tick,0x7ffd093d1d94,349534929,0,0x0,8
tick,0x7ffd093d1d94,349550936,0,0x0,8
tick,0x7ffd093d1d94,349566987,0,0x0,8
tick,0x7ffd093d1d94,349582334,0,0x0,8
tick,0x7ffd093d1d94,349597949,0,0x0,8
tick,0x7ffd093d1d94,349613303,0,0x0,8
tick,0x7ffd093d1d94,349628499,0,0x0,8
tick,0x7ffd093d1d94,349643538,0,0x0,8
tick,0x7ffd093d1d94,349658793,0,0x0,8
tick,0x7ffd093d1d94,349675159,0,0x0,8
tick,0x7ffd093d1d94,349690509,0,0x0,8
tick,0x7ffd093d1d94,349706787,0,0x0,8
tick,0x7ffd093d1d94,349722089,0,0x0,8
tick,0x7ffd093d1d94,349738251,0,0x0,8
tick,0x7ffd093d1d94,349754033,0,0x0,8
tick,0x7ffd093d1d94,349769655,0,0x0,8
tick,0x7ffd093d1d94,349785299,0,0x0,8
tick,0x7ffd093d1d94,349800251,0,0x0,8
tick,0x7ffd093d1d94,349815740,0,0x0,8
tick,0x7ffd093d1d94,349830670,0,0x0,8
tick,0x7ffd093d1d94,349846184,0,0x0,8
tick,0x7ffd093d1d94,349862165,0,0x0,8
tick,0x7ffd093d1d94,349877485,0,0x0,8
tick,0x7ffd093d1d94,349893354,0,0x0,8
tick,0x7ffd093d1d94,349909118,0,0x0,8
tick,0x7ffd093d1d94,349924735,0,0x0,8
tick,0x7ffd093d1d94,349940873,0,0x0,8
tick,0x7ffd093d1d94,349956071,0,0x0,8
tick,0x7ffd093d1d94,349971535,0,0x0,8
tick,0x7ffd093d1d94,349987537,0,0x0,8
tick,0x7ffd093d1d94,350002576,0,0x0,8
tick,0x7ffd093d1d94,350018524,0,0x0,8
tick,0x7ffd093d1d94,350033390,0,0x0,8
tick,0x7ffd093d1d94,350049018,0,0x0,8
tick,0x7ffd093d1d94,350064497,0,0x0,8
tick,0x7ffd093d1d94,350079447,0,0x0,8
tick,0x7ffd093d1d94,350094473,0,0x0,8
tick,0x7ffd093d1d94,350109857,0,0x0,8
tick,0x7ffd093d1d94,350125681,0,0x0,8
tick,0x7ffd093d1d94,350141148,0,0x0,8
tick,0x7ffd093d1d94,350157777,0,0x0,8
tick,0x7ffd093d1d94,350173121,0,0x0,8
tick,0x7ffd093d1d94,350188587,0,0x0,8
tick,0x7ffd093d1d94,350204410,0,0x0,8
tick,0x7ffd093d1d94,350219355,0,0x0,8
tick,0x7ffd093d1d94,350234045,0,0x0,8
tick,0x7ffd093d1d94,350250007,0,0x0,8
tick,0x7ffd093d1d94,350265487,0,0x0,8
tick,0x7ffd093d1d94,350281424,0,0x0,8
tick,0x7ffd093d1d94,350297221,0,0x0,8
tick,0x7ffd093d1d94,350312196,0,0x0,8
tick,0x7ffd093d1d94,350327340,0,0x0,8
tick,0x7ffd093d1d94,350343406,0,0x0,8
tick,0x7ffd093d1d94,350358488,0,0x0,8
tick,0x7ffd093d1d94,350374327,0,0x0,8
tick,0x7ffd093d1d94,350390187,0,0x0,8
tick,0x7ffd093d1d94,350405265,0,0x0,8
tick,0x7ffd093d1d94,350420769,0,0x0,8
tick,0x7ffd093d1d94,350436114,0,0x0,8
tick,0x7ffd093d1d94,350451664,0,0x0,8
tick,0x7ffd093d1d94,350467609,0,0x0,8
tick,0x7ffd093d1d94,350483345,0,0x0,8
tick,0x7ffd093d1d94,350498722,0,0x0,8
tick,0x7ffd093d1d94,350514138,0,0x0,8
tick,0x7ffd093d1d94,350530401,0,0x0,8
tick,0x7ffd093d1d94,350546642,0,0x0,8
tick,0x7ffd093d1d94,350561934,0,0x0,8
tick,0x7ffd093d1d94,350578620,0,0x0,8
tick,0x7ffd093d1d94,350593764,0,0x0,8
tick,0x7ffd093d1d94,350610369,0,0x0,8
tick,0x7ffd093d1d94,350625477,0,0x0,8
tick,0x7ffd093d1d94,350640274,0,0x0,8
tick,0x7ffd093d1d94,350655465,0,0x0,8
tick,0x7ffd093d1d94,350671513,0,0x0,8
tick,0x7ffd093d1d94,350687134,0,0x0,8
tick,0x7ffd093d1d94,350702873,0,0x0,8
tick,0x7ffd093d1d94,350718050,0,0x0,8
tick,0x7ffd093d1d94,350732996,0,0x0,8
tick,0x7ffd093d1d94,350749012,0,0x0,8
tick,0x7ffd093d1d94,350764616,0,0x0,8
tick,0x7ffd093d1d94,350781119,0,0x0,8
tick,0x7ffd093d1d94,350796531,0,0x0,8
tick,0x7ffd093d1d94,350811780,0,0x0,8
tick,0x7ffd093d1d94,350827302,0,0x0,8
tick,0x7ffd093d1d94,350842674,0,0x0,8
tick,0x7ffd093d1d94,350858563,0,0x0,8
tick,0x7ffd093d1d94,350874656,0,0x0,8
tick,0x7ffd093d1d94,350890253,0,0x0,8
tick,0x7ffd093d1d94,350906358,0,0x0,8
tick,0x7ffd093d1d94,350921534,0,0x0,8
tick,0x7ffd093d1d94,350936938,0,0x0,8
tick,0x7ffd093d1d94,350952201,0,0x0,8
tick,0x7ffd093d1d94,350967529,0,0x0,8
tick,0x7ffd093d1d94,350982934,0,0x0,8
tick,0x7ffd093d1d94,350998836,0,0x0,8
tick,0x7ffd093d1d94,351014524,0,0x0,8
tick,0x7ffd093d1d94,351030149,0,0x0,8
tick,0x7ffd093d1d94,351045670,0,0x0,8
tick,0x7ffd093d1d94,351060772,0,0x0,8
tick,0x7ffd093d1d94,351076858,0,0x0,8
tick,0x7ffd093d1d94,351092662,0,0x0,8
tick,0x7ffd093d1d94,351108086,0,0x0,8
tick,0x7ffd093d1d94,351123386,0,0x0,8
tick,0x7ffd093d1d94,351138805,0,0x0,8
tick,0x7ffd093d1d94,351154360,0,0x0,8
tick,0x7ffd093d1d94,351169923,0,0x0,8
tick,0x7ffd093d1d94,351185524,0,0x0,8
tick,0x7ffd093d1d94,351201235,0,0x0,8
tick,0x7ffd093d1d94,351217154,0,0x0,8
tick,0x7ffd093d1d94,351232592,0,0x0,8
tick,0x7ffd093d1d94,351248255,0,0x0,8
tick,0x7ffd093d1d94,351263664,0,0x0,8
tick,0x7ffd093d1d94,351279646,0,0x0,8
tick,0x7ffd093d1d94,351295219,0,0x0,8
tick,0x7ffd093d1d94,351311585,0,0x0,8
tick,0x7ffd093d1d94,351326705,0,0x0,8
tick,0x7ffd093d1d94,351342465,0,0x0,8
tick,0x7ffd093d1d94,351357478,0,0x0,8
tick,0x7ffd093d1d94,351372704,0,0x0,8
tick,0x7ffd093d1d94,351388357,0,0x0,8
tick,0x7ffd093d1d94,351404062,0,0x0,8
tick,0x7ffd093d1d94,351420003,0,0x0,8
tick,0x7ffd093d1d94,351435506,0,0x0,8
tick,0x7ffd093d1d94,351450870,0,0x0,8
tick,0x7ffd093d1d94,351466107,0,0x0,8
tick,0x7ffd093d1d94,351481593,0,0x0,8
tick,0x7ffd093d1d94,351497277,0,0x0,8
tick,0x7ffd093d1d94,351513274,0,0x0,8
tick,0x7ffd093d1d94,351528565,0,0x0,8
tick,0x7ffd093d1d94,351543827,0,0x0,8
tick,0x7ffd093d1d94,351559402,0,0x0,8
tick,0x7ffd093d1d94,351575684,0,0x0,8
tick,0x7ffd093d1d94,351591257,0,0x0,8
tick,0x7ffd093d1d94,351607310,0,0x0,8
tick,0x7ffd093d1d94,351622214,0,0x0,8
tick,0x7ffd093d1d94,351637434,0,0x0,8
tick,0x7ffd093d1d94,351652988,0,0x0,8
tick,0x7ffd093d1d94,351668612,0,0x0,8
tick,0x7ffd093d1d94,351684313,0,0x0,8
tick,0x7ffd093d1d94,351699310,0,0x0,8
tick,0x7ffd093d1d94,351714386,0,0x0,8
tick,0x7ffd093d1d94,351730478,0,0x0,8
tick,0x7ffd093d1d94,351746041,0,0x0,8
tick,0x7ffd093d1d94,351762034,0,0x0,8
tick,0x7ffd093d1d94,351777868,0,0x0,8
tick,0x7ffd093d1d94,351793175,0,0x0,8
tick,0x7ffd093d1d94,351809306,0,0x0,8
tick,0x7ffd093d1d94,351825390,0,0x0,8
tick,0x7ffd093d1d94,351840885,0,0x0,8
tick,0x7ffd093d1d94,351856310,0,0x0,8
tick,0x7ffd093d1d94,351871505,0,0x0,8
tick,0x7ffd093d1d94,351887368,0,0x0,8
tick,0x7ffd093d1d94,351902535,0,0x0,8
tick,0x7ffd093d1d94,351917890,0,0x0,8
tick,0x7ffd093d1d94,351933373,0,0x0,8
tick,0x7ffd093d1d94,351949284,0,0x0,8
tick,0x7ffd093d1d94,351965262,0,0x0,8
tick,0x7ffd093d1d94,351981299,0,0x0,8
tick,0x7ffd093d1d94,351995971,0,0x0,8
tick,0x7ffd093d1d94,352011483,0,0x0,8
tick,0x7ffd093d1d94,352026542,0,0x0,8
tick,0x7ffd093d1d94,352042411,0,0x0,8
tick,0x7ffd093d1d94,352058254,0,0x0,8
tick,0x7ffd093d1d94,352073939,0,0x0,8
tick,0x7ffd093d1d94,352090051,0,0x0,8
tick,0x7ffd093d1d94,352105876,0,0x0,8
tick,0x7ffd093d1d94,352121199,0,0x0,8
tick,0x7ffd093d1d94,352137119,0,0x0,8
tick,0x7ffd093d1d94,352152653,0,0x0,8
tick,0x7ffd093d1d94,352168118,0,0x0,8
tick,0x7ffd093d1d94,352183525,0,0x0,8
tick,0x7ffd093d1d94,352199249,0,0x0,8
tick,0x7ffd093d1d94,352214691,0,0x0,8
tick,0x7ffd093d1d94,352230485,0,0x0,8
tick,0x7ffd093d1d94,352246415,0,0x0,8
tick,0x7ffd093d1d94,352262090,0,0x0,8
tick,0x7ffd093d1d94,352277029,0,0x0,8
tick,0x7ffd093d1d94,352292886,0,0x0,8
tick,0x7ffd093d1d94,352307477,0,0x0,8
tick,0x7ffd093d1d94,352323400,0,0x0,8
tick,0x7ffd093d1d94,352339282,0,0x0,8
tick,0x7ffd093d1d94,352355312,0,0x0,8
tick,0x7ffd093d1d94,352370352,0,0x0,8
tick,0x7ffd093d1d94,352385789,0,0x0,8
tick,0x7ffd093d1d94,352401719,0,0x0,8
tick,0x7ffd093d1d94,352417809,0,0x0,8
tick,0x7ffd093d1d94,352433769,0,0x0,8
tick,0x7ffd093d1d94,352449759,0,0x0,8
tick,0x7ffd093d1d94,352465967,0,0x0,8
tick,0x7ffd093d1d94,352482615,0,0x0,8
tick,0x7ffd093d1d94,352498506,0,0x0,8
tick,0x7ffd093d1d94,352514405,0,0x0,8
tick,0x7ffd093d1d94,352530380,0,0x0,8
tick,0x7ffd093d1d94,352545857,0,0x0,8
tick,0x7ffd093d1d94,352561122,0,0x0,8
tick,0x7ffd093d1d94,352576985,0,0x0,8
tick,0x7ffd093d1d94,352591845,0,0x0,8
tick,0x7ffd093d1d94,352607562,0,0x0,8
tick,0x7ffd093d1d94,352623252,0,0x0,8
tick,0x7ffd093d1d94,352638157,0,0x0,8
tick,0x7ffd093d1d94,352653297,0,0x0,8
tick,0x7ffd093d1d94,352669304,0,0x0,8
tick,0x7ffd093d1d94,352684926,0,0x0,8
tick,0x7ffd093d1d94,352700506,0,0x0,8
tick,0x7ffd093d1d94,352715178,0,0x0,8
tick,0x7ffd093d1d94,352731028,0,0x0,8
tick,0x7ffd093d1d94,352746448,0,0x0,8
tick,0x7ffd093d1d94,352761950,0,0x0,8
tick,0x7ffd093d1d94,352777437,0,0x0,8
tick,0x7ffd093d1d94,352792516,0,0x0,8
tick,0x7ffd093d1d94,352807498,0,0x0,8
tick,0x7ffd093d1d94,352823297,0,0x0,8
tick,0x7ffd093d1d94,352839355,0,0x0,8
tick,0x7ffd093d1d94,352854262,0,0x0,8
tick,0x7ffd093d1d94,352869715,0,0x0,8
tick,0x7ffd093d1d94,352884629,0,0x0,8
tick,0x7ffd093d1d94,352900328,0,0x0,8
tick,0x7ffd093d1d94,352916214,0,0x0,8
tick,0x7ffd093d1d94,352931934,0,0x0,8
tick,0x7ffd093d1d94,352947561,0,0x0,8
tick,0x7ffd093d1d94,352963884,0,0x0,8
tick,0x7ffd093d1d94,352980045,0,0x0,8
tick,0x7ffd093d1d94,352995124,0,0x0,8
tick,0x7ffd093d1d94,353011129,0,0x0,8
tick,0x7ffd093d1d94,353027141,0,0x0,8
tick,0x7ffd093d1d94,353042683,0,0x0,8
tick,0x7ffd093d1d94,353058450,0,0x0,8
tick,0x7ffd093d1d94,353073900,0,0x0,8
tick,0x7ffd093d1d94,353089375,0,0x0,8
tick,0x7ffd093d1d94,353105172,0,0x0,8
tick,0x7ffd093d1d94,353120545,0,0x0,8
tick,0x7ffd093d1d94,353136507,0,0x0,8
tick,0x7ffd093d1d94,353152184,0,0x0,8
tick,0x7ffd093d1d94,353167917,0,0x0,8
tick,0x7ffd093d1d94,353183455,0,0x0,8
tick,0x7ffd093d1d94,353198590,0,0x0,8
tick,0x7ffd093d1d94,353214248,0,0x0,8
tick,0x7ffd093d1d94,353230109,0,0x0,8
tick,0x7ffd093d1d94,353245867,0,0x0,8
tick,0x7ffd093d1d94,353260907,0,0x0,8
tick,0x7ffd093d1d94,353276485,0,0x0,8
tick,0x7ffd093d1d94,353291507,0,0x0,8
tick,0x7ffd093d1d94,353307056,0,0x0,8
tick,0x7ffd093d1d94,353322966,0,0x0,8
tick,0x7ffd093d1d94,353338781,0,0x0,8
tick,0x7ffd093d1d94,353354949,0,0x0,8
tick,0x7ffd093d1d94,353370569,0,0x0,8
tick,0x7ffd093d1d94,353386675,0,0x0,8
tick,0x7ffd093d1d94,353401837,0,0x0,8
tick,0x7ffd093d1d94,353417398,0,0x0,8
tick,0x7ffd093d1d94,353433186,0,0x0,8
tick,0x7ffd093d1d94,353448645,0,0x0,8
tick,0x7ffd093d1d94,353464558,0,0x0,8
tick,0x7ffd093d1d94,353480194,0,0x0,8
tick,0x7ffd093d1d94,353495933,0,0x0,8
tick,0x7ffd093d1d94,353511403,0,0x0,8
tick,0x7ffd093d1d94,353526812,0,0x0,8
tick,0x7ffd093d1d94,353541717,0,0x0,8
tick,0x7ffd093d1d94,353558156,0,0x0,8
tick,0x7ffd093d1d94,353573424,0,0x0,8
tick,0x7ffd093d1d94,353589779,0,0x0,8
tick,0x7ffd093d1d94,353605990,0,0x0,8
tick,0x7ffd093d1d94,353621220,0,0x0,8
tick,0x7ffd093d1d94,353636766,0,0x0,8
tick,0x7ffd093d1d94,353652727,0,0x0,8
tick,0x7ffd093d1d94,353668732,0,0x0,8
tick,0x7ffd093d1d94,353684556,0,0x0,8
tick,0x7ffd093d1d94,353700350,0,0x0,8
tick,0x7ffd093d1d94,353714794,0,0x0,8
tick,0x7ffd093d1d94,353729857,0,0x0,8
tick,0x7ffd093d1d94,353745015,0,0x0,8
tick,0x7ffd093d1d94,353759927,0,0x0,8
tick,0x7ffd093d1d94,353775834,0,0x0,8
tick,0x7ffd093d1d94,353791189,0,0x0,8
tick,0x7ffd093d1d94,353807404,0,0x0,8
tick,0x7ffd093d1d94,353821833,0,0x0,8
tick,0x7ffd093d1d94,353837164,0,0x0,8
tick,0x7ffd093d1d94,353853338,0,0x0,8
tick,0x7ffd093d1d94,353869305,0,0x0,8
tick,0x7ffd093d1d94,353885023,0,0x0,8
tick,0x7ffd093d1d94,353899939,0,0x0,8
tick,0x7ffd093d1d94,353915986,0,0x0,8
tick,0x7ffd093d1d94,353931843,0,0x0,8
tick,0x7ffd093d1d94,353946677,0,0x0,8
tick,0x7ffd093d1d94,353962552,0,0x0,8
tick,0x7ffd093d1d94,353977563,0,0x0,8
tick,0x7ffd093d1d94,353992909,0,0x0,8
tick,0x7ffd093d1d94,354008646,0,0x0,8
tick,0x7ffd093d1d94,354023992,0,0x0,8
tick,0x7ffd093d1d94,354039254,0,0x0,8
tick,0x7ffd093d1d94,354055276,0,0x0,8
tick,0x7ffd093d1d94,354070476,0,0x0,8
tick,0x7ffd093d1d94,354085680,0,0x0,8
tick,0x7ffd093d1d94,354100995,0,0x0,8
tick,0x7ffd093d1d94,354117090,0,0x0,8
tick,0x7ffd093d1d94,354132673,0,0x0,8
tick,0x7ffd093d1d94,354148507,0,0x0,8
tick,0x7ffd093d1d94,354163980,0,0x0,8
tick,0x7ffd093d1d94,354179575,0,0x0,8
tick,0x7ffd093d1d94,354195622,0,0x0,8
tick,0x7ffd093d1d94,354210365,0,0x0,8
tick,0x7ffd093d1d94,354225607,0,0x0,8
tick,0x7ffd093d1d94,354240814,0,0x0,8
tick,0x7ffd093d1d94,354256569,0,0x0,8
tick,0x7ffd093d1d94,354272866,0,0x0,8
tick,0x7ffd093d1d94,354287904,0,0x0,8
tick,0x7ffd093d1d94,354303541,0,0x0,8
tick,0x7ffd093d1d94,354318638,0,0x0,8
tick,0x7ffd093d1d94,354334584,0,0x0,8
tick,0x7ffd093d1d94,354349745,0,0x0,8
tick,0x7ffd093d1d94,354365396,0,0x0,8
tick,0x7ffd093d1d94,354380830,0,0x0,8
tick,0x7ffd093d1d94,354396473,0,0x0,8
tick,0x7ffd093d1d94,354411865,0,0x0,8
tick,0x7ffd093d1d94,354427470,0,0x0,8
tick,0x7ffd093d1d94,354443417,0,0x0,8
tick,0x7ffd093d1d94,354458855,0,0x0,8
tick,0x7ffd093d1d94,354474292,0,0x0,8
tick,0x7ffd093d1d94,354489509,0,0x0,8
tick,0x7ffd093d1d94,354505117,0,0x0,8
tick,0x7ffd093d1d94,354520296,0,0x0,8
tick,0x7ffd093d1d94,354535541,0,0x0,8
tick,0x7ffd093d1d94,354550759,0,0x0,8
tick,0x7ffd093d1d94,354566004,0,0x0,8
tick,0x7ffd093d1d94,354581630,0,0x0,8
tick,0x7ffd093d1d94,354596770,0,0x0,8
tick,0x7ffd093d1d94,354612167,0,0x0,8
tick,0x7ffd093d1d94,354627879,0,0x0,8
tick,0x7ffd093d1d94,354642943,0,0x0,8
tick,0x7ffd093d1d94,354658647,0,0x0,8
tick,0x7ffd093d1d94,354673499,0,0x0,8
tick,0x7ffd093d1d94,354689120,0,0x0,8
tick,0x7ffd093d1d94,354704710,0,0x0,8
tick,0x7ffd093d1d94,354720605,0,0x0,8
tick,0x7ffd093d1d94,354736318,0,0x0,8
tick,0x7ffd093d1d94,354752032,0,0x0,8
tick,0x7ffd093d1d94,354767830,0,0x0,8
tick,0x7ffd093d1d94,354783222,0,0x0,8
tick,0x7ffd093d1d94,354799465,0,0x0,8
tick,0x7ffd093d1d94,354815142,0,0x0,8
tick,0x7ffd093d1d94,354830970,0,0x0,8
tick,0x7ffd093d1d94,354846132,0,0x0,8
tick,0x7ffd093d1d94,354861377,0,0x0,8
tick,0x7ffd093d1d94,354876686,0,0x0,8
tick,0x7ffd093d1d94,354892347,0,0x0,8
tick,0x7ffd093d1d94,354907829,0,0x0,8
tick,0x7ffd093d1d94,354922865,0,0x0,8
tick,0x7ffd093d1d94,354938837,0,0x0,8
tick,0x7ffd093d1d94,354954663,0,0x0,8
tick,0x7ffd093d1d94,354970370,0,0x0,8
tick,0x7ffd093d1d94,354986119,0,0x0,8
tick,0x7ffd093d1d94,355001212,0,0x0,8
tick,0x7ffd093d1d94,355016875,0,0x0,8
tick,0x7ffd093d1d94,355032672,0,0x0,8
tick,0x7ffd093d1d94,355048401,0,0x0,8
tick,0x7ffd093d1d94,355063846,0,0x0,8
tick,0x7ffd093d1d94,355079809,0,0x0,8
tick,0x7ffd093d1d94,355094693,0,0x0,8
tick,0x7ffd093d1d94,355110023,0,0x0,8
tick,0x7ffd093d1d94,355124924,0,0x0,8
tick,0x7ffd093d1d94,355140671,0,0x0,8
tick,0x7ffd093d1d94,355155347,0,0x0,8
tick,0x7ffd093d1d94,355171013,0,0x0,8
tick,0x7ffd093d1d94,355186999,0,0x0,8
tick,0x7ffd093d1d94,355202903,0,0x0,8
tick,0x7ffd093d1d94,355218879,0,0x0,8
tick,0x7ffd093d1d94,355234697,0,0x0,8
tick,0x7ffd093d1d94,355249500,0,0x0,8
tick,0x7ffd093d1d94,355264878,0,0x0,8
tick,0x7ffd093d1d94,355280856,0,0x0,8
tick,0x7ffd093d1d94,355297069,0,0x0,8
tick,0x7ffd093d1d94,355313003,0,0x0,8
tick,0x7ffd093d1d94,355328053,0,0x0,8
tick,0x7ffd093d1d94,355343553,0,0x0,8
tick,0x7ffd093d1d94,355359530,0,0x0,8
tick,0x7ffd093d1d94,355375302,0,0x0,8
tick,0x7ffd093d1d94,355391042,0,0x0,8
tick,0x7ffd093d1d94,355406709,0,0x0,8
tick,0x7ffd093d1d94,355422673,0,0x0,8
tick,0x7ffd093d1d94,355437778,0,0x0,8
tick,0x7ffd093d1d94,355453017,0,0x0,8
tick,0x7ffd093d1d94,355468486,0,0x0,8
tick,0x7ffd093d1d94,355483670,0,0x0,8
tick,0x7ffd093d1d94,355499622,0,0x0,8
tick,0x7ffd093d1d94,355515625,0,0x0,8
tick,0x7ffd093d1d94,355531061,0,0x0,8
tick,0x7ffd093d1d94,355546970,0,0x0,8
tick,0x7ffd093d1d94,355562144,0,0x0,8
tick,0x7ffd093d1d94,355577711,0,0x0,8
tick,0x7ffd093d1d94,355593031,0,0x0,8
tick,0x7ffd093d1d94,355609105,0,0x0,8
tick,0x7ffd093d1d94,355624866,0,0x0,8
tick,0x7ffd093d1d94,355640668,0,0x0,8
tick,0x7ffd093d1d94,355655663,0,0x0,8
tick,0x7ffd093d1d94,355670863,0,0x0,8
tick,0x7ffd093d1d94,355686070,0,0x0,8
tick,0x7ffd093d1d94,355701598,0,0x0,8
tick,0x7ffd093d1d94,355716612,0,0x0,8
tick,0x7ffd093d1d94,355731855,0,0x0,8
tick,0x7ffd093d1d94,355746673,0,0x0,8
tick,0x7ffd093d1d94,355761761,0,0x0,8
tick,0x7ffd093d1d94,355777135,0,0x0,8
tick,0x7ffd093d1d94,355792703,0,0x0,8
tick,0x7ffd093d1d94,355808626,0,0x0,8
tick,0x7ffd093d1d94,355824069,0,0x0,8
tick,0x7ffd093d1d94,355839066,0,0x0,8
tick,0x7ffd093d1d94,355854355,0,0x0,8
tick,0x7ffd093d1d94,355870488,0,0x0,8
tick,0x7ffd093d1d94,355885948,0,0x0,8
tick,0x7ffd093d1d94,355902078,0,0x0,8
tick,0x7ffd093d1d94,355916780,0,0x0,8
tick,0x7ffd093d1d94,355931908,0,0x0,8
tick,0x7ffd093d1d94,355947161,0,0x0,8
tick,0x7ffd093d1d94,355963140,0,0x0,8
tick,0x7ffd093d1d94,355978878,0,0x0,8
tick,0x7ffd093d1d94,355994249,0,0x0,8
tick,0x7ffd093d1d94,356009666,0,0x0,8
tick,0x7ffd093d1d94,356024307,0,0x0,8
tick,0x7ffd093d1d94,356040195,0,0x0,8
tick,0x7ffd093d1d94,356060002,0,0x0,8
tick,0x7ffd093d1d94,356072180,0,0x0,8
tick,0x7ffd093d1d94,356087759,0,0x0,8
tick,0x7ffd093d1d94,356102903,0,0x0,8
tick,0x7ffd093d1d94,356119315,0,0x0,8
tick,0x7ffd093d1d94,356134685,0,0x0,8
tick,0x7ffd093d1d94,356150295,0,0x0,8
tick,0x7ffd093d1d94,356164912,0,0x0,8
tick,0x7ffd093d1d94,356180752,0,0x0,8
tick,0x7ffd093d1d94,356196857,0,0x0,8
tick,0x7ffd093d1d94,356212462,0,0x0,8
tick,0x7ffd093d1d94,356228359,0,0x0,8
tick,0x7ffd093d1d94,356243635,0,0x0,8
tick,0x7ffd093d1d94,356259164,0,0x0,8
tick,0x7ffd093d1d94,356274140,0,0x0,8
tick,0x7ffd093d1d94,356290202,0,0x0,8
tick,0x7ffd093d1d94,356305878,0,0x0,8
tick,0x7ffd093d1d94,356321293,0,0x0,8
tick,0x7ffd093d1d94,356336817,0,0x0,8
tick,0x7ffd093d1d94,356352593,0,0x0,8
tick,0x7ffd093d1d94,356368419,0,0x0,8
tick,0x7ffd093d1d94,356384217,0,0x0,8
tick,0x7ffd093d1d94,356398956,0,0x0,8
tick,0x7ffd093d1d94,356414211,0,0x0,8
tick,0x7ffd093d1d94,356430157,0,0x0,8
tick,0x7ffd093d1d94,356446211,0,0x0,8
tick,0x7ffd093d1d94,356461463,0,0x0,8
tick,0x7ffd093d1d94,356476962,0,0x0,8
tick,0x7ffd093d1d94,356492842,0,0x0,8
tick,0x7ffd093d1d94,356508954,0,0x0,8
tick,0x7ffd093d1d94,356524772,0,0x0,8
tick,0x7ffd093d1d94,356540603,0,0x0,8
tick,0x7ffd093d1d94,356556748,0,0x0,8
tick,0x7ffd093d1d94,356572104,0,0x0,8
tick,0x7ffd093d1d94,356588408,0,0x0,8
tick,0x7ffd093d1d94,356604266,0,0x0,8
tick,0x7ffd093d1d94,356619348,0,0x0,8
tick,0x7ffd093d1d94,356634557,0,0x0,8
tick,0x7ffd093d1d94,356650404,0,0x0,8
tick,0x7ffd093d1d94,356665569,0,0x0,8
tick,0x7ffd093d1d94,356680441,0,0x0,8
tick,0x7ffd093d1d94,356696409,0,0x0,8
tick,0x7ffd093d1d94,356711528,0,0x0,8
tick,0x7ffd093d1d94,356726895,0,0x0,8
tick,0x7ffd093d1d94,356741983,0,0x0,8
tick,0x7ffd093d1d94,356757001,0,0x0,8
tick,0x7ffd093d1d94,356773060,0,0x0,8
tick,0x7ffd093d1d94,356788425,0,0x0,8
tick,0x7ffd093d1d94,356803988,0,0x0,8
tick,0x7ffd093d1d94,356819155,0,0x0,8
tick,0x7ffd093d1d94,356834297,0,0x0,8
tick,0x7ffd093d1d94,356850123,0,0x0,8
tick,0x7ffd093d1d94,356864854,0,0x0,8
tick,0x7ffd093d1d94,356879850,0,0x0,8
tick,0x7ffd093d1d94,356895809,0,0x0,8
tick,0x7ffd093d1d94,356911468,0,0x0,8
tick,0x7ffd093d1d94,356926957,0,0x0,8
tick,0x7ffd093d1d94,356942968,0,0x0,8
tick,0x7ffd093d1d94,356958294,0,0x0,8
tick,0x7ffd093d1d94,356973415,0,0x0,8
tick,0x7ffd093d1d94,356990030,0,0x0,8
tick,0x7ffd093d1d94,357005141,0,0x0,8
tick,0x7ffd093d1d94,357020797,0,0x0,8
tick,0x7ffd093d1d94,357036630,0,0x0,8
tick,0x7ffd093d1d94,357052037,0,0x0,8
tick,0x7ffd093d1d94,357067368,0,0x0,8
tick,0x7ffd093d1d94,357083164,0,0x0,8
tick,0x7ffd093d1d94,357098523,0,0x0,8
tick,0x7ffd093d1d94,357114552,0,0x0,8
tick,0x7ffd093d1d94,357130443,0,0x0,8
tick,0x7ffd093d1d94,357146892,0,0x0,8
tick,0x7ffd093d1d94,357161783,0,0x0,8
tick,0x7ffd093d1d94,357176599,0,0x0,8
tick,0x7ffd093d1d94,357192377,0,0x0,8
tick,0x7ffd093d1d94,357208351,0,0x0,8
tick,0x7ffd093d1d94,357224532,0,0x0,8
tick,0x7ffd093d1d94,357239795,0,0x0,8
tick,0x7ffd093d1d94,357255588,0,0x0,8
tick,0x7ffd093d1d94,357271254,0,0x0,8
tick,0x7ffd093d1d94,357286850,0,0x0,8
tick,0x7ffd093d1d94,357302246,0,0x0,8
tick,0x7ffd093d1d94,357318007,0,0x0,8
tick,0x7ffd093d1d94,357333696,0,0x0,8
tick,0x7ffd093d1d94,357349862,0,0x0,8
tick,0x7ffd093d1d94,357365785,0,0x0,8
tick,0x7ffd093d1d94,357381577,0,0x0,8
tick,0x7ffd093d1d94,357397538,0,0x0,8
tick,0x7ffd093d1d94,357413689,0,0x0,8
tick,0x7ffd093d1d94,357428736,0,0x0,8
tick,0x7ffd093d1d94,357443597,0,0x0,8
tick,0x7ffd093d1d94,357459018,0,0x0,8
tick,0x7ffd093d1d94,357474275,0,0x0,8
tick,0x7ffd093d1d94,357490811,0,0x0,8
tick,0x7ffd093d1d94,357505895,0,0x0,8
tick,0x7ffd093d1d94,357521174,0,0x0,8
tick,0x7ffd093d1d94,357536410,0,0x0,8
tick,0x7ffd093d1d94,357551521,0,0x0,8
tick,0x7ffd093d1d94,357566944,0,0x0,8
tick,0x7ffd093d1d94,357583070,0,0x0,8
tick,0x7ffd093d1d94,357598727,0,0x0,8
tick,0x7ffd093d1d94,357614046,0,0x0,8
tick,0x7ffd093d1d94,357629507,0,0x0,8
tick,0x7ffd093d1d94,357644793,0,0x0,8
tick,0x7ffd093d1d94,357660977,0,0x0,8
tick,0x7ffd093d1d94,357676961,0,0x0,8
tick,0x7ffd093d1d94,357692627,0,0x0,8
tick,0x7ffd093d1d94,357707697,0,0x0,8
tick,0x7ffd093d1d94,357723761,0,0x0,8
tick,0x7ffd093d1d94,357738511,0,0x0,8
tick,0x7ffd093d1d94,357753778,0,0x0,8
tick,0x7ffd093d1d94,357769958,0,0x0,8
tick,0x7ffd093d1d94,357784992,0,0x0,8
tick,0x7ffd093d1d94,357800483,0,0x0,8
tick,0x7ffd093d1d94,357816998,0,0x0,8
tick,0x7ffd093d1d94,357832849,0,0x0,8
tick,0x7ffd093d1d94,357848922,0,0x0,8
tick,0x7ffd093d1d94,357863912,0,0x0,8
tick,0x7ffd093d1d94,357879060,0,0x0,8
tick,0x7ffd093d1d94,357895175,0,0x0,8
tick,0x7ffd093d1d94,357911724,0,0x0,8
tick,0x7ffd093d1d94,357927064,0,0x0,8
tick,0x7ffd093d1d94,357942617,0,0x0,8
tick,0x7ffd093d1d94,357957950,0,0x0,8
tick,0x7ffd093d1d94,357973125,0,0x0,8
tick,0x7ffd093d1d94,357988668,0,0x0,8
tick,0x7ffd093d1d94,358004725,0,0x0,8
tick,0x7ffd093d1d94,358040649,0,0x0,8
tick,0x7ffd093d1d94,358040775,0,0x0,8
tick,0x7ffd093d1d94,358053962,0,0x0,8
tick,0x7ffd093d1d94,358069663,0,0x0,8
tick,0x7ffd093d1d94,358084168,0,0x0,8
tick,0x7ffd093d1d94,358099295,0,0x0,8
tick,0x7ffd093d1d94,358115176,0,0x0,8
tick,0x7ffd093d1d94,358130397,0,0x0,8
tick,0x7ffd093d1d94,358145475,0,0x0,8
tick,0x7ffd093d1d94,358160769,0,0x0,8
tick,0x7ffd093d1d94,358178314,0,0x0,8
tick,0x7ffd093d1d94,358192159,0,0x0,8
tick,0x7ffd093d1d94,358207151,0,0x0,8
tick,0x7ffd093d1d94,358222911,0,0x0,8
tick,0x7ffd093d1d94,358238549,0,0x0,8
tick,0x7ffd093d1d94,358253806,0,0x0,8
tick,0x7ffd093d1d94,358268682,0,0x0,8
tick,0x7ffd093d1d94,358284158,0,0x0,8
tick,0x7ffd093d1d94,358300611,0,0x0,8
tick,0x7ffd093d1d94,358318040,0,0x0,8
tick,0x7ffd093d1d94,358331354,0,0x0,8
tick,0x7ffd093d1d94,358346589,0,0x0,8
tick,0x7ffd093d1d94,358362812,0,0x0,8
tick,0x7ffd093d1d94,358378513,0,0x0,8
tick,0x7ffd093d1d94,358394161,0,0x0,8
tick,0x7ffd093d1d94,358409979,0,0x0,8
tick,0x7ffd093d1d94,358426183,0,0x0,8
tick,0x7ffd093d1d94,358441563,0,0x0,8
tick,0x7ffd093d1d94,358457233,0,0x0,8
tick,0x7ffd093d1d94,358472547,0,0x0,8
tick,0x7ffd093d1d94,358488094,0,0x0,8
tick,0x7ffd093d1d94,358503929,0,0x0,8
tick,0x7ffd093d1d94,358519405,0,0x0,8
tick,0x7ffd093d1d94,358534869,0,0x0,8
tick,0x7ffd093d1d94,358550469,0,0x0,8
tick,0x7ffd093d1d94,358565499,0,0x0,8
tick,0x7ffd093d1d94,358581535,0,0x0,8
tick,0x7ffd093d1d94,358597516,0,0x0,8
tick,0x7ffd093d1d94,358612814,0,0x0,8
tick,0x7ffd093d1d94,358629308,0,0x0,8
tick,0x7ffd093d1d94,358644814,0,0x0,8
tick,0x7ffd093d1d94,358660516,0,0x0,8
tick,0x7ffd093d1d94,358676089,0,0x0,8
tick,0x7ffd093d1d94,358691382,0,0x0,8
tick,0x7ffd093d1d94,358706413,0,0x0,8
tick,0x7ffd093d1d94,358722172,0,0x0,8
tick,0x7ffd093d1d94,358737963,0,0x0,8
tick,0x7ffd093d1d94,358753391,0,0x0,8
tick,0x7ffd093d1d94,358769428,0,0x0,8
tick,0x7ffd093d1d94,358785091,0,0x0,8
tick,0x7ffd093d1d94,358799496,0,0x0,8
tick,0x7ffd093d1d94,358814256,0,0x0,8
tick,0x7ffd093d1d94,358830152,0,0x0,8
tick,0x7ffd093d1d94,358845934,0,0x0,8
tick,0x7ffd093d1d94,358861449,0,0x0,8
tick,0x7ffd093d1d94,358877613,0,0x0,8
tick,0x7ffd093d1d94,358893265,0,0x0,8
tick,0x7ffd093d1d94,358908736,0,0x0,8
tick,0x7ffd093d1d94,358923976,0,0x0,8
tick,0x7ffd093d1d94,358939397,0,0x0,8
tick,0x7ffd093d1d94,358954647,0,0x0,8
tick,0x7ffd093d1d94,358971495,0,0x0,8
tick,0x7ffd093d1d94,358986313,0,0x0,8
tick,0x7ffd093d1d94,359002290,0,0x0,8
tick,0x7ffd093d1d94,359017469,0,0x0,8
tick,0x7ffd093d1d94,359033510,0,0x0,8
tick,0x7ffd093d1d94,359048894,0,0x0,8
tick,0x7ffd093d1d94,359064987,0,0x0,8
tick,0x7ffd093d1d94,359080102,0,0x0,8
tick,0x7ffd093d1d94,359095467,0,0x0,8
tick,0x7ffd093d1d94,359110546,0,0x0,8
tick,0x7ffd093d1d94,359126610,0,0x0,8
tick,0x7ffd093d1d94,359142261,0,0x0,8
tick,0x7ffd093d1d94,359158562,0,0x0,8
tick,0x7ffd093d1d94,359173774,0,0x0,8
tick,0x7ffd093d1d94,359188950,0,0x0,8
tick,0x7ffd093d1d94,359205196,0,0x0,8
tick,0x7ffd093d1d94,359220726,0,0x0,8
tick,0x7ffd093d1d94,359236397,0,0x0,8
tick,0x7ffd093d1d94,359251763,0,0x0,8
tick,0x7ffd093d1d94,359267033,0,0x0,8
tick,0x7ffd093d1d94,359282722,0,0x0,8
tick,0x7ffd093d1d94,359298211,0,0x0,8
tick,0x7ffd093d1d94,359313134,0,0x0,8
tick,0x7ffd093d1d94,359328667,0,0x0,8
tick,0x7ffd093d1d94,359344623,0,0x0,8
tick,0x7ffd093d1d94,359360095,0,0x0,8
tick,0x7ffd093d1d94,359375876,0,0x0,8
tick,0x7ffd093d1d94,359391385,0,0x0,8
tick,0x7ffd093d1d94,359407579,0,0x0,8
tick,0x7ffd093d1d94,359423122,0,0x0,8
tick,0x7ffd093d1d94,359439047,0,0x0,8
tick,0x7ffd093d1d94,359454242,0,0x0,8
tick,0x7ffd093d1d94,359469134,0,0x0,8
tick,0x7ffd093d1d94,359484616,0,0x0,8
tick,0x7ffd093d1d94,359500145,0,0x0,8
tick,0x7ffd093d1d94,359515986,0,0x0,8
tick,0x7ffd093d1d94,359531364,0,0x0,8
tick,0x7ffd093d1d94,359547296,0,0x0,8
tick,0x7ffd093d1d94,359561891,0,0x0,8
tick,0x7ffd093d1d94,359577721,0,0x0,8
tick,0x7ffd093d1d94,359593088,0,0x0,8
tick,0x7ffd093d1d94,359608464,0,0x0,8
tick,0x7ffd093d1d94,359623978,0,0x0,8
tick,0x7ffd093d1d94,359639248,0,0x0,8
tick,0x7ffd093d1d94,359654978,0,0x0,8
tick,0x7ffd093d1d94,359670253,0,0x0,8
tick,0x7ffd093d1d94,359685434,0,0x0,8
tick,0x7ffd093d1d94,359701261,0,0x0,8
tick,0x7ffd093d1d94,359717068,0,0x0,8
tick,0x7ffd093d1d94,359733000,0,0x0,8
tick,0x7ffd093d1d94,359749046,0,0x0,8
tick,0x7ffd093d1d94,359763871,0,0x0,8
tick,0x7ffd093d1d94,359779107,0,0x0,8
tick,0x7ffd093d1d94,359794537,0,0x0,8
tick,0x7ffd093d1d94,359810243,0,0x0,8
tick,0x7ffd093d1d94,359825947,0,0x0,8
tick,0x7ffd093d1d94,359842424,0,0x0,8
tick,0x7ffd093d1d94,359858023,0,0x0,8
tick,0x7ffd093d1d94,359873644,0,0x0,8
tick,0x7ffd093d1d94,359888946,0,0x0,8
tick,0x7ffd093d1d94,359904074,0,0x0,8
tick,0x7ffd093d1d94,359920226,0,0x0,8
tick,0x7ffd093d1d94,359935729,0,0x0,8
tick,0x7ffd093d1d94,359951632,0,0x0,8
tick,0x7ffd093d1d94,359966731,0,0x0,8
tick,0x7ffd093d1d94,359982151,0,0x0,8
tick,0x7ffd093d1d94,359997963,0,0x0,8
tick,0x7ffd093d1d94,360013760,0,0x0,8
tick,0x7ffd093d1d94,360029301,0,0x0,8
tick,0x7ffd093d1d94,360044220,0,0x0,8
tick,0x7ffd093d1d94,360059583,0,0x0,8
tick,0x7ffd093d1d94,360074919,0,0x0,8
tick,0x7ffd093d1d94,360090464,0,0x0,8
tick,0x7ffd093d1d94,360106402,0,0x0,8
tick,0x7ffd093d1d94,360122340,0,0x0,8
tick,0x7ffd093d1d94,360138193,0,0x0,8
tick,0x7ffd093d1d94,360153489,0,0x0,8
tick,0x7ffd093d1d94,360168986,0,0x0,8
tick,0x7ffd093d1d94,360184808,0,0x0,8
tick,0x7ffd093d1d94,360200181,0,0x0,8
tick,0x7ffd093d1d94,360216086,0,0x0,8
tick,0x7ffd093d1d94,360231918,0,0x0,8
tick,0x7ffd093d1d94,360247763,0,0x0,8
tick,0x7ffd093d1d94,360263814,0,0x0,8
tick,0x7ffd093d1d94,360279615,0,0x0,8
tick,0x7ffd093d1d94,360295739,0,0x0,8
tick,0x7ffd093d1d94,360311124,0,0x0,8
tick,0x7ffd093d1d94,360326608,0,0x0,8
tick,0x7ffd093d1d94,360342340,0,0x0,8
tick,0x7ffd093d1d94,360357462,0,0x0,8
tick,0x7ffd093d1d94,360372522,0,0x0,8
tick,0x7ffd093d1d94,360388309,0,0x0,8
tick,0x7ffd093d1d94,360404030,0,0x0,8
tick,0x7ffd093d1d94,360419895,0,0x0,8
tick,0x7ffd093d1d94,360435465,0,0x0,8
tick,0x7ffd093d1d94,360480870,0,0x0,8
tick,0x7ffd093d1d94,360483594,0,0x0,8
tick,0x7ffd093d1d94,360499735,0,0x0,8
tick,0x7ffd093d1d94,360515086,0,0x0,8
tick,0x7ffd093d1d94,360531277,0,0x0,8
tick,0x7ffd093d1d94,360546750,0,0x0,8
tick,0x7ffd093d1d94,360562071,0,0x0,8
tick,0x7ffd093d1d94,360577452,0,0x0,8
tick,0x7ffd093d1d94,360593524,0,0x0,8
tick,0x7ffd093d1d94,360609129,0,0x0,8
tick,0x7ffd093d1d94,360625210,0,0x0,8
tick,0x7ffd093d1d94,360641041,0,0x0,8
tick,0x7ffd093d1d94,360656480,0,0x0,8
tick,0x7ffd093d1d94,360671727,0,0x0,8
tick,0x7ffd093d1d94,360687912,0,0x0,8
tick,0x7ffd093d1d94,360703375,0,0x0,8
tick,0x7ffd093d1d94,360719147,0,0x0,8
tick,0x7ffd093d1d94,360734504,0,0x0,8
tick,0x7ffd093d1d94,360750370,0,0x0,8
tick,0x7ffd093d1d94,360765536,0,0x0,8
tick,0x7ffd093d1d94,360780890,0,0x0,8
tick,0x7ffd093d1d94,360795783,0,0x0,8
tick,0x7ffd093d1d94,360811780,0,0x0,8
tick,0x7ffd093d1d94,360827558,0,0x0,8
tick,0x7ffd093d1d94,360842928,0,0x0,8
tick,0x7ffd093d1d94,360858834,0,0x0,8
tick,0x7ffd093d1d94,360874529,0,0x0,8
tick,0x7ffd093d1d94,360890660,0,0x0,8
tick,0x7ffd093d1d94,360906337,0,0x0,8
tick,0x7ffd093d1d94,360921894,0,0x0,8
tick,0x7ffd093d1d94,360937504,0,0x0,8
tick,0x7ffd093d1d94,360953277,0,0x0,8
tick,0x7ffd093d1d94,360968726,0,0x0,8
tick,0x7ffd093d1d94,360984548,0,0x0,8
tick,0x7ffd093d1d94,361000006,0,0x0,8
tick,0x7ffd093d1d94,361015920,0,0x0,8
tick,0x7ffd093d1d94,361030880,0,0x0,8
tick,0x7ffd093d1d94,361045905,0,0x0,8
tick,0x7ffd093d1d94,361061759,0,0x0,8
tick,0x7ffd093d1d94,361077784,0,0x0,8
tick,0x7ffd093d1d94,361093092,0,0x0,8
tick,0x7ffd093d1d94,361108616,0,0x0,8
tick,0x7ffd093d1d94,361125699,0,0x0,8
tick,0x7ffd093d1d94,361139860,0,0x0,8
tick,0x7ffd093d1d94,361155342,0,0x0,8
tick,0x7ffd093d1d94,361171316,0,0x0,8
tick,0x7ffd093d1d94,361186456,0,0x0,8
tick,0x7ffd093d1d94,361201774,0,0x0,8
tick,0x7ffd093d1d94,361218373,0,0x0,8
tick,0x7ffd093d1d94,361233616,0,0x0,8
tick,0x7ffd093d1d94,361248398,0,0x0,8
tick,0x7ffd093d1d94,361263792,0,0x0,8
tick,0x7ffd093d1d94,361279316,0,0x0,8
tick,0x7ffd093d1d94,361294918,0,0x0,8
tick,0x7ffd093d1d94,361310157,0,0x0,8
tick,0x7ffd093d1d94,361325357,0,0x0,8
tick,0x7ffd093d1d94,361341392,0,0x0,8
tick,0x7ffd093d1d94,361356718,0,0x0,8
tick,0x7ffd093d1d94,361371816,0,0x0,8
tick,0x7ffd093d1d94,361387756,0,0x0,8
tick,0x7ffd093d1d94,361403343,0,0x0,8
tick,0x7ffd093d1d94,361419220,0,0x0,8
tick,0x7ffd093d1d94,361434304,0,0x0,8
tick,0x7ffd093d1d94,361449473,0,0x0,8
tick,0x7ffd093d1d94,361464945,0,0x0,8
tick,0x7ffd093d1d94,361480901,0,0x0,8
tick,0x7ffd093d1d94,361495574,0,0x0,8
tick,0x7ffd093d1d94,361512126,0,0x0,8
tick,0x7ffd093d1d94,361527748,0,0x0,8
tick,0x7ffd093d1d94,361543778,0,0x0,8
tick,0x7ffd093d1d94,361559264,0,0x0,8
tick,0x7ffd093d1d94,361574279,0,0x0,8
tick,0x7ffd093d1d94,361589905,0,0x0,8
tick,0x7ffd093d1d94,361605333,0,0x0,8
tick,0x7ffd093d1d94,361620542,0,0x0,8
tick,0x7ffd093d1d94,361636209,0,0x0,8
tick,0x7ffd093d1d94,361652059,0,0x0,8
tick,0x7ffd093d1d94,361666999,0,0x0,8
tick,0x7ffd093d1d94,361682829,0,0x0,8
tick,0x7ffd093d1d94,361698644,0,0x0,8
tick,0x7ffd093d1d94,361714531,0,0x0,8
tick,0x7ffd093d1d94,361730351,0,0x0,8
tick,0x7ffd093d1d94,361745915,0,0x0,8
tick,0x7ffd093d1d94,361761163,0,0x0,8
tick,0x7ffd093d1d94,361776475,0,0x0,8
tick,0x7ffd093d1d94,361791673,0,0x0,8
tick,0x7ffd093d1d94,361806820,0,0x0,8
tick,0x7ffd093d1d94,361822958,0,0x0,8
tick,0x7ffd093d1d94,361838535,0,0x0,8
tick,0x7ffd093d1d94,361854855,0,0x0,8
tick,0x7ffd093d1d94,361869982,0,0x0,8
tick,0x7ffd093d1d94,361885139,0,0x0,8
tick,0x7ffd093d1d94,361899943,0,0x0,8
tick,0x7ffd093d1d94,361915586,0,0x0,8
tick,0x7ffd093d1d94,361931607,0,0x0,8
tick,0x7ffd093d1d94,361947136,0,0x0,8
tick,0x7ffd093d1d94,361963350,0,0x0,8
tick,0x7ffd093d1d94,361979235,0,0x0,8
tick,0x7ffd093d1d94,361995208,0,0x0,8
tick,0x7ffd093d1d94,362010563,0,0x0,8
tick,0x7ffd093d1d94,362026517,0,0x0,8
tick,0x7ffd093d1d94,362042260,0,0x0,8
tick,0x7ffd093d1d94,362058089,0,0x0,8
tick,0x7ffd093d1d94,362073974,0,0x0,8
tick,0x7ffd093d1d94,362089038,0,0x0,8
tick,0x7ffd093d1d94,362105229,0,0x0,8
tick,0x7ffd093d1d94,362120489,0,0x0,8
tick,0x7ffd093d1d94,362135902,0,0x0,8
tick,0x7ffd093d1d94,362151299,0,0x0,8
tick,0x7ffd093d1d94,362166518,0,0x0,8
tick,0x7ffd093d1d94,362182192,0,0x0,8
tick,0x7ffd093d1d94,362198130,0,0x0,8
tick,0x7ffd093d1d94,362214183,0,0x0,8
tick,0x7ffd093d1d94,362229480,0,0x0,8
tick,0x7ffd093d1d94,362245431,0,0x0,8
tick,0x7ffd093d1d94,362261456,0,0x0,8
tick,0x7ffd093d1d94,362276678,0,0x0,8
tick,0x7ffd093d1d94,362292230,0,0x0,8
tick,0x7ffd093d1d94,362307818,0,0x0,8
tick,0x7ffd093d1d94,362323478,0,0x0,8
tick,0x7ffd093d1d94,362339381,0,0x0,8
tick,0x7ffd093d1d94,362354010,0,0x0,8
tick,0x7ffd093d1d94,362369136,0,0x0,8
tick,0x7ffd093d1d94,362385374,0,0x0,8
tick,0x7ffd093d1d94,362400911,0,0x0,8
tick,0x7ffd093d1d94,362416632,0,0x0,8
tick,0x7ffd093d1d94,362432929,0,0x0,8
tick,0x7ffd093d1d94,362449529,0,0x0,8
tick,0x7ffd093d1d94,362463994,0,0x0,8
tick,0x7ffd093d1d94,362478773,0,0x0,8
tick,0x7ffd093d1d94,362494472,0,0x0,8
tick,0x7ffd093d1d94,362509836,0,0x0,8
tick,0x7ffd093d1d94,362526933,0,0x0,8
tick,0x7ffd093d1d94,362541358,0,0x0,8
tick,0x7ffd093d1d94,362557008,0,0x0,8
tick,0x7ffd093d1d94,362572551,0,0x0,8
tick,0x7ffd093d1d94,362588758,0,0x0,8
tick,0x7ffd093d1d94,362604721,0,0x0,8
tick,0x7ffd093d1d94,362620423,0,0x0,8
tick,0x7ffd093d1d94,362635573,0,0x0,8
tick,0x7ffd093d1d94,362650964,0,0x0,8
tick,0x7ffd093d1d94,362666994,0,0x0,8
tick,0x7ffd093d1d94,362682170,0,0x0,8
tick,0x7ffd093d1d94,362697444,0,0x0,8
tick,0x7ffd093d1d94,362713277,0,0x0,8
tick,0x7ffd093d1d94,362729076,0,0x0,8
tick,0x7ffd093d1d94,362745058,0,0x0,8
tick,0x7ffd093d1d94,362760185,0,0x0,8
tick,0x7ffd093d1d94,362775539,0,0x0,8
tick,0x7ffd093d1d94,362790999,0,0x0,8
tick,0x7ffd093d1d94,362806693,0,0x0,8
tick,0x7ffd093d1d94,362822279,0,0x0,8
tick,0x7ffd093d1d94,362838287,0,0x0,8
tick,0x7ffd093d1d94,362854299,0,0x0,8
tick,0x7ffd093d1d94,362869717,0,0x0,8
tick,0x7ffd093d1d94,362884887,0,0x0,8
tick,0x7ffd093d1d94,362900784,0,0x0,8
tick,0x7ffd093d1d94,362916463,0,0x0,8
tick,0x7ffd093d1d94,362931839,0,0x0,8
tick,0x7ffd093d1d94,362947448,0,0x0,8
tick,0x7ffd093d1d94,362962460,0,0x0,8
tick,0x7ffd093d1d94,362978334,0,0x0,8
tick,0x7ffd093d1d94,362994393,0,0x0,8
tick,0x7ffd093d1d94,363009951,0,0x0,8
tick,0x7ffd093d1d94,363025642,0,0x0,8
tick,0x7ffd093d1d94,363040935,0,0x0,8
tick,0x7ffd093d1d94,363056559,0,0x0,8
tick,0x7ffd093d1d94,363071930,0,0x0,8
tick,0x7ffd093d1d94,363087557,0,0x0,8
tick,0x7ffd093d1d94,363102913,0,0x0,8
tick,0x7ffd093d1d94,363117987,0,0x0,8
tick,0x7ffd093d1d94,363133966,0,0x0,8
tick,0x7ffd093d1d94,363149921,0,0x0,8
tick,0x7ffd093d1d94,363165445,0,0x0,8
tick,0x7ffd093d1d94,363180938,0,0x0,8
tick,0x7ffd093d1d94,363195906,0,0x0,8
tick,0x7ffd093d1d94,363211109,0,0x0,8
tick,0x7ffd093d1d94,363226537,0,0x0,8
tick,0x7ffd093d1d94,363242089,0,0x0,8
tick,0x7ffd093d1d94,363257584,0,0x0,8
tick,0x7ffd093d1d94,363273714,0,0x0,8
tick,0x7ffd093d1d94,363289080,0,0x0,8
tick,0x7ffd093d1d94,363304555,0,0x0,8
tick,0x7ffd093d1d94,363320112,0,0x0,8
tick,0x7ffd093d1d94,363335781,0,0x0,8
tick,0x7ffd093d1d94,363351502,0,0x0,8
tick,0x7ffd093d1d94,363367093,0,0x0,8
tick,0x7ffd093d1d94,363382755,0,0x0,8
tick,0x7ffd093d1d94,363397379,0,0x0,8
tick,0x7ffd093d1d94,363413210,0,0x0,8
tick,0x7ffd093d1d94,363428883,0,0x0,8
tick,0x7ffd093d1d94,363444720,0,0x0,8
tick,0x7ffd093d1d94,363460324,0,0x0,8
tick,0x7ffd093d1d94,363476119,0,0x0,8
tick,0x7ffd093d1d94,363492182,0,0x0,8
tick,0x7ffd093d1d94,363507614,0,0x0,8
tick,0x7ffd093d1d94,363522628,0,0x0,8
tick,0x7ffd093d1d94,363538645,0,0x0,8
tick,0x7ffd093d1d94,363553986,0,0x0,8
tick,0x7ffd093d1d94,363569733,0,0x0,8
tick,0x7ffd093d1d94,363584688,0,0x0,8
tick,0x7ffd093d1d94,363600382,0,0x0,8
tick,0x7ffd093d1d94,363616877,0,0x0,8
tick,0x7ffd093d1d94,363631697,0,0x0,8
tick,0x7ffd093d1d94,363647616,0,0x0,8
tick,0x7ffd093d1d94,363662739,0,0x0,8
tick,0x7ffd093d1d94,363678552,0,0x0,8
tick,0x7ffd093d1d94,363694065,0,0x0,8
tick,0x7ffd093d1d94,363709499,0,0x0,8
tick,0x7ffd093d1d94,363727194,0,0x0,8
tick,0x7ffd093d1d94,363740684,0,0x0,8
tick,0x7ffd093d1d94,363755644,0,0x0,8
tick,0x7ffd093d1d94,363771185,0,0x0,8
tick,0x7ffd093d1d94,363787346,0,0x0,8
tick,0x7ffd093d1d94,363803389,0,0x0,8
tick,0x7ffd093d1d94,363818564,0,0x0,8
tick,0x7ffd093d1d94,363833274,0,0x0,8
tick,0x7ffd093d1d94,363849615,0,0x0,8
tick,0x7ffd093d1d94,363865685,0,0x0,8
tick,0x7ffd093d1d94,363881284,0,0x0,8
tick,0x7ffd093d1d94,363897214,0,0x0,8
tick,0x7ffd093d1d94,363912064,0,0x0,8
tick,0x7ffd093d1d94,363927968,0,0x0,8
tick,0x7ffd093d1d94,363943601,0,0x0,8
tick,0x7ffd093d1d94,363959462,0,0x0,8
tick,0x7ffd093d1d94,363975797,0,0x0,8
tick,0x7ffd093d1d94,363991415,0,0x0,8
tick,0x7ffd093d1d94,364006888,0,0x0,8
tick,0x7ffd093d1d94,364022212,0,0x0,8
tick,0x7ffd093d1d94,364037571,0,0x0,8
tick,0x7ffd093d1d94,364053653,0,0x0,8
tick,0x7ffd093d1d94,364069460,0,0x0,8
tick,0x7ffd093d1d94,364084609,0,0x0,8
tick,0x7ffd093d1d94,364099712,0,0x0,8
tick,0x7ffd093d1d94,364116524,0,0x0,8
tick,0x7ffd093d1d94,364130518,0,0x0,8
tick,0x7ffd093d1d94,364145747,0,0x0,8
tick,0x7ffd093d1d94,364161516,0,0x0,8
tick,0x7ffd093d1d94,364176761,0,0x0,8
tick,0x7ffd093d1d94,364192910,0,0x0,8
tick,0x7ffd093d1d94,364207706,0,0x0,8
tick,0x7ffd093d1d94,364223196,0,0x0,8
tick,0x7ffd093d1d94,364238853,0,0x0,8
tick,0x7ffd093d1d94,364254894,0,0x0,8
tick,0x7ffd093d1d94,364270575,0,0x0,8
tick,0x7ffd093d1d94,364286122,0,0x0,8
tick,0x7ffd093d1d94,364301256,0,0x0,8
tick,0x7ffd093d1d94,364317113,0,0x0,8
tick,0x7ffd093d1d94,364332862,0,0x0,8
tick,0x7ffd093d1d94,364348802,0,0x0,8
tick,0x7ffd093d1d94,364364089,0,0x0,8
tick,0x7ffd093d1d94,364379035,0,0x0,8
tick,0x7ffd093d1d94,364394733,0,0x0,8
tick,0x7ffd093d1d94,364409817,0,0x0,8
tick,0x7ffd093d1d94,364425361,0,0x0,8
tick,0x7ffd093d1d94,364441241,0,0x0,8
tick,0x7ffd093d1d94,364456531,0,0x0,8
tick,0x7ffd093d1d94,364472081,0,0x0,8
tick,0x7ffd093d1d94,364486980,0,0x0,8
tick,0x7ffd093d1d94,364502623,0,0x0,8
tick,0x7ffd093d1d94,364517925,0,0x0,8
tick,0x7ffd093d1d94,364533015,0,0x0,8
tick,0x7ffd093d1d94,364549043,0,0x0,8
tick,0x7ffd093d1d94,364564148,0,0x0,8
tick,0x7ffd093d1d94,364579700,0,0x0,8
tick,0x7ffd093d1d94,364595573,0,0x0,8
tick,0x7ffd093d1d94,364611242,0,0x0,8
tick,0x7ffd093d1d94,364627011,0,0x0,8
tick,0x7ffd093d1d94,364643064,0,0x0,8
tick,0x7ffd093d1d94,364659226,0,0x0,8
tick,0x7ffd093d1d94,364674262,0,0x0,8
tick,0x7ffd093d1d94,364690355,0,0x0,8
tick,0x7ffd093d1d94,364705924,0,0x0,8
tick,0x7ffd093d1d94,364720902,0,0x0,8
tick,0x7ffd093d1d94,364736609,0,0x0,8
tick,0x7ffd093d1d94,364751889,0,0x0,8
tick,0x7ffd093d1d94,364767811,0,0x0,8
tick,0x7ffd093d1d94,364783666,0,0x0,8
tick,0x7ffd093d1d94,364799525,0,0x0,8
tick,0x7ffd093d1d94,364814728,0,0x0,8
tick,0x7ffd093d1d94,364830023,0,0x0,8
tick,0x7ffd093d1d94,364845334,0,0x0,8
tick,0x7ffd093d1d94,364860754,0,0x0,8
tick,0x7ffd093d1d94,364876692,0,0x0,8
tick,0x7ffd093d1d94,364891799,0,0x0,8
tick,0x7ffd093d1d94,364907450,0,0x0,8
tick,0x7ffd093d1d94,364922879,0,0x0,8
tick,0x7ffd093d1d94,364938273,0,0x0,8
tick,0x7ffd093d1d94,364953818,0,0x0,8
tick,0x7ffd093d1d94,364968682,0,0x0,8
tick,0x7ffd093d1d94,364984476,0,0x0,8
tick,0x7ffd093d1d94,364999627,0,0x0,8
tick,0x7ffd093d1d94,365015272,0,0x0,8
tick,0x7ffd093d1d94,365031067,0,0x0,8
tick,0x7ffd093d1d94,365046313,0,0x0,8
tick,0x7ffd093d1d94,365062116,0,0x0,8
tick,0x7ffd093d1d94,365077765,0,0x0,8
tick,0x7ffd093d1d94,365092708,0,0x0,8
tick,0x7ffd093d1d94,365108369,0,0x0,8
tick,0x7ffd093d1d94,365123236,0,0x0,8
tick,0x7ffd093d1d94,365138533,0,0x0,8
tick,0x7ffd093d1d94,365154503,0,0x0,8
tick,0x7ffd093d1d94,365169743,0,0x0,8
tick,0x7ffd093d1d94,365186191,0,0x0,8
tick,0x7ffd093d1d94,365201875,0,0x0,8
tick,0x7ffd093d1d94,365217192,0,0x0,8
tick,0x7ffd093d1d94,365232191,0,0x0,8
tick,0x7ffd093d1d94,365247469,0,0x0,8
tick,0x7ffd093d1d94,365263564,0,0x0,8
tick,0x7ffd093d1d94,365278524,0,0x0,8
tick,0x7ffd093d1d94,365293971,0,0x0,8
tick,0x7ffd093d1d94,365309209,0,0x0,8
tick,0x7ffd093d1d94,365324244,0,0x0,8
tick,0x7ffd093d1d94,365340371,0,0x0,8
tick,0x7ffd093d1d94,365356212,0,0x0,8
tick,0x7ffd093d1d94,365371344,0,0x0,8
tick,0x7ffd093d1d94,365387208,0,0x0,8
tick,0x7ffd093d1d94,365402237,0,0x0,8
tick,0x7ffd093d1d94,365417771,0,0x0,8
tick,0x7ffd093d1d94,365432921,0,0x0,8
tick,0x7ffd093d1d94,365448149,0,0x0,8
tick,0x7ffd093d1d94,365463564,0,0x0,8
tick,0x7ffd093d1d94,365479639,0,0x0,8
tick,0x7ffd093d1d94,365494916,0,0x0,8
tick,0x7ffd093d1d94,365510793,0,0x0,8
tick,0x7ffd093d1d94,365525780,0,0x0,8
tick,0x7ffd093d1d94,365541218,0,0x0,8
tick,0x7ffd093d1d94,365556589,0,0x0,8
tick,0x7ffd093d1d94,365572235,0,0x0,8
tick,0x7ffd093d1d94,365587601,0,0x0,8
tick,0x7ffd093d1d94,365602810,0,0x0,8
tick,0x7ffd093d1d94,365617845,0,0x0,8
tick,0x7ffd093d1d94,365632720,0,0x0,8
tick,0x7ffd093d1d94,365648022,0,0x0,8
tick,0x7ffd093d1d94,365663204,0,0x0,8
tick,0x7ffd093d1d94,365679224,0,0x0,8
tick,0x7ffd093d1d94,365694352,0,0x0,8
tick,0x7ffd093d1d94,365710002,0,0x0,8
tick,0x7ffd093d1d94,365725389,0,0x0,8
tick,0x7ffd093d1d94,365741286,0,0x0,8
tick,0x7ffd093d1d94,365756892,0,0x0,8
tick,0x7ffd093d1d94,365772164,0,0x0,8
tick,0x7ffd093d1d94,365787871,0,0x0,8
tick,0x7ffd093d1d94,365803167,0,0x0,8
tick,0x7ffd093d1d94,365818797,0,0x0,8
tick,0x7ffd093d1d94,365834296,0,0x0,8
tick,0x7ffd093d1d94,365850038,0,0x0,8
tick,0x7ffd093d1d94,365865445,0,0x0,8
tick,0x7ffd093d1d94,365881137,0,0x0,8
tick,0x7ffd093d1d94,365896011,0,0x0,8
tick,0x7ffd093d1d94,365912102,0,0x0,8
tick,0x7ffd093d1d94,365930801,0,0x0,8
tick,0x7ffd093d1d94,365943458,0,0x0,8
tick,0x7ffd093d1d94,365958491,0,0x0,8
tick,0x7ffd093d1d94,365974394,0,0x0,8
tick,0x7ffd093d1d94,365989165,0,0x0,8
tick,0x7ffd093d1d94,366004712,0,0x0,8
tick,0x7ffd093d1d94,366019961,0,0x0,8
tick,0x7ffd093d1d94,366035391,0,0x0,8
tick,0x7ffd093d1d94,366050762,0,0x0,8
tick,0x7ffd093d1d94,366066616,0,0x0,8
tick,0x7ffd093d1d94,366081696,0,0x0,8
tick,0x7ffd093d1d94,366097651,0,0x0,8
tick,0x7ffd093d1d94,366112728,0,0x0,8
tick,0x7ffd093d1d94,366128145,0,0x0,8
tick,0x7ffd093d1d94,366143367,0,0x0,8
tick,0x7ffd093d1d94,366159393,0,0x0,8
tick,0x7ffd093d1d94,366174648,0,0x0,8
tick,0x7ffd093d1d94,366190289,0,0x0,8
tick,0x7ffd093d1d94,366205463,0,0x0,8
tick,0x7ffd093d1d94,366221116,0,0x0,8
tick,0x7ffd093d1d94,366236856,0,0x0,8
tick,0x7ffd093d1d94,366252181,0,0x0,8
tick,0x7ffd093d1d94,366267492,0,0x0,8
tick,0x7ffd093d1d94,366283064,0,0x0,8
tick,0x7ffd093d1d94,366298871,0,0x0,8
tick,0x7ffd093d1d94,366314191,0,0x0,8
tick,0x7ffd093d1d94,366330227,0,0x0,8
tick,0x7ffd093d1d94,366344936,0,0x0,8
tick,0x7ffd093d1d94,366360511,0,0x0,8
tick,0x7ffd093d1d94,366375751,0,0x0,8
tick,0x7ffd093d1d94,366391175,0,0x0,8
tick,0x7ffd093d1d94,366406733,0,0x0,8
tick,0x7ffd093d1d94,366422674,0,0x0,8
tick,0x7ffd093d1d94,366439460,0,0x0,8
tick,0x7ffd093d1d94,366453829,0,0x0,8
tick,0x7ffd093d1d94,366468763,0,0x0,8
tick,0x7ffd093d1d94,366484142,0,0x0,8
tick,0x7ffd093d1d94,366500010,0,0x0,8
tick,0x7ffd093d1d94,366515274,0,0x0,8
tick,0x7ffd093d1d94,366530255,0,0x0,8
tick,0x7ffd093d1d94,366545368,0,0x0,8
tick,0x7ffd093d1d94,366561616,0,0x0,8
tick,0x7ffd093d1d94,366576907,0,0x0,8
tick,0x7ffd093d1d94,366592076,0,0x0,8
tick,0x7ffd093d1d94,366607871,0,0x0,8
tick,0x7ffd093d1d94,366623890,0,0x0,8
tick,0x7ffd093d1d94,366639742,0,0x0,8
tick,0x7ffd093d1d94,366655707,0,0x0,8
tick,0x7ffd093d1d94,366671236,0,0x0,8
tick,0x7ffd093d1d94,366686757,0,0x0,8
tick,0x7ffd093d1d94,366701900,0,0x0,8
tick,0x7ffd093d1d94,366717173,0,0x0,8
tick,0x7ffd093d1d94,366732713,0,0x0,8
tick,0x7ffd093d1d94,366747926,0,0x0,8
tick,0x7ffd093d1d94,366764380,0,0x0,8
tick,0x7ffd093d1d94,366779943,0,0x0,8
tick,0x7ffd093d1d94,366795425,0,0x0,8
tick,0x7ffd093d1d94,366810857,0,0x0,8
tick,0x7ffd093d1d94,366826541,0,0x0,8
tick,0x7ffd093d1d94,366842343,0,0x0,8
tick,0x7ffd093d1d94,366857176,0,0x0,8
tick,0x7ffd093d1d94,366873131,0,0x0,8
tick,0x7ffd093d1d94,366888136,0,0x0,8
tick,0x7ffd093d1d94,366904764,0,0x0,8
tick,0x7ffd093d1d94,366920833,0,0x0,8
tick,0x7ffd093d1d94,366936806,0,0x0,8
tick,0x7ffd093d1d94,366952721,0,0x0,8
tick,0x7ffd093d1d94,366968040,0,0x0,8
tick,0x7ffd093d1d94,366983358,0,0x0,8
tick,0x7ffd093d1d94,366999613,0,0x0,8
tick,0x7ffd093d1d94,367015028,0,0x0,8
tick,0x7ffd093d1d94,367029779,0,0x0,8
tick,0x7ffd093d1d94,367044797,0,0x0,8
tick,0x7ffd093d1d94,367061295,0,0x0,8
tick,0x7ffd093d1d94,367076888,0,0x0,8
tick,0x7ffd093d1d94,367092843,0,0x0,8
tick,0x7ffd093d1d94,367108307,0,0x0,8
tick,0x7ffd093d1d94,367124287,0,0x0,8
tick,0x7ffd093d1d94,367140295,0,0x0,8
tick,0x7ffd093d1d94,367156306,0,0x0,8
tick,0x7ffd093d1d94,367172495,0,0x0,8
tick,0x7ffd093d1d94,367187878,0,0x0,8
tick,0x7ffd093d1d94,367203761,0,0x0,8
tick,0x7ffd093d1d94,367219147,0,0x0,8
tick,0x7ffd093d1d94,367234932,0,0x0,8
tick,0x7ffd093d1d94,367250912,0,0x0,8
tick,0x7ffd093d1d94,367266798,0,0x0,8
tick,0x7ffd093d1d94,367282722,0,0x0,8
tick,0x7ffd093d1d94,367297975,0,0x0,8
tick,0x7ffd093d1d94,367313457,0,0x0,8
tick,0x7ffd093d1d94,367329123,0,0x0,8
tick,0x7ffd093d1d94,367345082,0,0x0,8
tick,0x7ffd093d1d94,367360968,0,0x0,8
tick,0x7ffd093d1d94,367376923,0,0x0,8
tick,0x7ffd093d1d94,367392923,0,0x0,8
tick,0x7ffd093d1d94,367408424,0,0x0,8
tick,0x7ffd093d1d94,367424104,0,0x0,8
tick,0x7ffd093d1d94,367439667,0,0x0,8
tick,0x7ffd093d1d94,367455369,0,0x0,8
tick,0x7ffd093d1d94,367470841,0,0x0,8
tick,0x7ffd093d1d94,367485853,0,0x0,8
tick,0x7ffd093d1d94,367502379,0,0x0,8
tick,0x7ffd093d1d94,367517468,0,0x0,8
tick,0x7ffd093d1d94,367533085,0,0x0,8
tick,0x7ffd093d1d94,367549096,0,0x0,8
tick,0x7ffd093d1d94,367565116,0,0x0,8
tick,0x7ffd093d1d94,367581111,0,0x0,8
tick,0x7ffd093d1d94,367597034,0,0x0,8
tick,0x7ffd093d1d94,367612111,0,0x0,8
tick,0x7ffd093d1d94,367627469,0,0x0,8
tick,0x7ffd093d1d94,367642558,0,0x0,8
tick,0x7ffd093d1d94,367658181,0,0x0,8
tick,0x7ffd093d1d94,367673181,0,0x0,8
tick,0x7ffd093d1d94,367689336,0,0x0,8
tick,0x7ffd093d1d94,367704544,0,0x0,8
tick,0x7ffd093d1d94,367719627,0,0x0,8
tick,0x7ffd093d1d94,367736016,0,0x0,8
tick,0x7ffd093d1d94,367751397,0,0x0,8
tick,0x7ffd093d1d94,367766959,0,0x0,8
tick,0x7ffd093d1d94,367781932,0,0x0,8
tick,0x7ffd093d1d94,367797160,0,0x0,8
tick,0x7ffd093d1d94,367812338,0,0x0,8
tick,0x7ffd093d1d94,367827318,0,0x0,8
tick,0x7ffd093d1d94,367842445,0,0x0,8
tick,0x7ffd093d1d94,367858377,0,0x0,8
tick,0x7ffd093d1d94,367873501,0,0x0,8
tick,0x7ffd093d1d94,367889706,0,0x0,8
tick,0x7ffd093d1d94,367905788,0,0x0,8
tick,0x7ffd093d1d94,367921981,0,0x0,8
tick,0x7ffd093d1d94,367937178,0,0x0,8
tick,0x7ffd093d1d94,367952979,0,0x0,8
tick,0x7ffd093d1d94,367968298,0,0x0,8
tick,0x7ffd093d1d94,367984094,0,0x0,8
tick,0x7ffd093d1d94,367999852,0,0x0,8
tick,0x7ffd093d1d94,368015438,0,0x0,8
tick,0x7ffd093d1d94,368031152,0,0x0,8
tick,0x7ffd093d1d94,368047186,0,0x0,8
tick,0x7ffd093d1d94,368063265,0,0x0,8
tick,0x7ffd093d1d94,368078995,0,0x0,8
tick,0x7ffd093d1d94,368094739,0,0x0,8
tick,0x7ffd093d1d94,368110325,0,0x0,8
tick,0x7ffd093d1d94,368126239,0,0x0,8
tick,0x7ffd093d1d94,368142282,0,0x0,8
tick,0x7ffd093d1d94,368158272,0,0x0,8
tick,0x7ffd093d1d94,368174308,0,0x0,8
tick,0x7ffd093d1d94,368189686,0,0x0,8
tick,0x7ffd093d1d94,368204875,0,0x0,8
tick,0x7ffd093d1d94,368220331,0,0x0,8
tick,0x7ffd093d1d94,368236032,0,0x0,8
tick,0x7ffd093d1d94,368250629,0,0x0,8
tick,0x7ffd093d1d94,368266258,0,0x0,8
tick,0x7ffd093d1d94,368281853,0,0x0,8
tick,0x7ffd093d1d94,368296611,0,0x0,8
tick,0x7ffd093d1d94,368312360,0,0x0,8
tick,0x7ffd093d1d94,368328486,0,0x0,8
tick,0x7ffd093d1d94,368343388,0,0x0,8
tick,0x7ffd093d1d94,368359409,0,0x0,8
tick,0x7ffd093d1d94,368374338,0,0x0,8
tick,0x7ffd093d1d94,368390276,0,0x0,8
tick,0x7ffd093d1d94,368406682,0,0x0,8
tick,0x7ffd093d1d94,368422292,0,0x0,8
tick,0x7ffd093d1d94,368437949,0,0x0,8
tick,0x7ffd093d1d94,368454063,0,0x0,8
tick,0x7ffd093d1d94,368469625,0,0x0,8
tick,0x7ffd093d1d94,368484274,0,0x0,8
tick,0x7ffd093d1d94,368499981,0,0x0,8
tick,0x7ffd093d1d94,368515343,0,0x0,8
tick,0x7ffd093d1d94,368530589,0,0x0,8
tick,0x7ffd093d1d94,368546057,0,0x0,8
tick,0x7ffd093d1d94,368562122,0,0x0,8
tick,0x7ffd093d1d94,368577592,0,0x0,8
tick,0x7ffd093d1d94,368592600,0,0x0,8
tick,0x7ffd093d1d94,368608473,0,0x0,8
tick,0x7ffd093d1d94,368623596,0,0x0,8
tick,0x7ffd093d1d94,368639609,0,0x0,8
tick,0x7ffd093d1d94,368654476,0,0x0,8
tick,0x7ffd093d1d94,368670599,0,0x0,8
tick,0x7ffd093d1d94,368686526,0,0x0,8
tick,0x7ffd093d1d94,368702715,0,0x0,8
tick,0x7ffd093d1d94,368718127,0,0x0,8
tick,0x7ffd093d1d94,368734154,0,0x0,8
tick,0x7ffd093d1d94,368749161,0,0x0,8
tick,0x7ffd093d1d94,368764448,0,0x0,8
tick,0x7ffd093d1d94,368779345,0,0x0,8
tick,0x7ffd093d1d94,368794491,0,0x0,8
tick,0x7ffd093d1d94,368809618,0,0x0,8
tick,0x7ffd093d1d94,368826013,0,0x0,8
tick,0x7ffd093d1d94,368841801,0,0x0,8
tick,0x7ffd093d1d94,368857539,0,0x0,8
tick,0x7ffd093d1d94,368873603,0,0x0,8
tick,0x7ffd093d1d94,368888787,0,0x0,8
tick,0x7ffd093d1d94,368904136,0,0x0,8
tick,0x7ffd093d1d94,368919917,0,0x0,8
tick,0x7ffd093d1d94,368935625,0,0x0,8
tick,0x7ffd093d1d94,368951013,0,0x0,8
tick,0x7ffd093d1d94,368966406,0,0x0,8
tick,0x7ffd093d1d94,368981931,0,0x0,8
tick,0x7ffd093d1d94,368997653,0,0x0,8
tick,0x7ffd093d1d94,369012707,0,0x0,8
tick,0x7ffd093d1d94,369028806,0,0x0,8
tick,0x7ffd093d1d94,369044363,0,0x0,8
tick,0x7ffd093d1d94,369060739,0,0x0,8
tick,0x7ffd093d1d94,369076249,0,0x0,8
tick,0x7ffd093d1d94,369091795,0,0x0,8
tick,0x7ffd093d1d94,369107301,0,0x0,8
tick,0x7ffd093d1d94,369122337,0,0x0,8
tick,0x7ffd093d1d94,369137971,0,0x0,8
tick,0x7ffd093d1d94,369153396,0,0x0,8
tick,0x7ffd093d1d94,369168377,0,0x0,8
tick,0x7ffd093d1d94,369184112,0,0x0,8
tick,0x7ffd093d1d94,369199538,0,0x0,8
tick,0x7ffd093d1d94,369215237,0,0x0,8
tick,0x7ffd093d1d94,369230208,0,0x0,8
tick,0x7ffd093d1d94,369246211,0,0x0,8
tick,0x7ffd093d1d94,369262197,0,0x0,8
tick,0x7ffd093d1d94,369277665,0,0x0,8
tick,0x7ffd093d1d94,369292324,0,0x0,8
tick,0x7ffd093d1d94,369308503,0,0x0,8
tick,0x7ffd093d1d94,369323755,0,0x0,8
tick,0x7ffd093d1d94,369339755,0,0x0,8
tick,0x7ffd093d1d94,369355748,0,0x0,8
tick,0x7ffd093d1d94,369371705,0,0x0,8
tick,0x7ffd093d1d94,369387698,0,0x0,8
tick,0x7ffd093d1d94,369403916,0,0x0,8
tick,0x7ffd093d1d94,369419316,0,0x0,8
tick,0x7ffd093d1d94,369435334,0,0x0,8
tick,0x7ffd093d1d94,369450293,0,0x0,8
tick,0x7ffd093d1d94,369465504,0,0x0,8
tick,0x7ffd093d1d94,369481522,0,0x0,8
tick,0x7ffd093d1d94,369496890,0,0x0,8
tick,0x7ffd093d1d94,369512811,0,0x0,8
tick,0x7ffd093d1d94,369528742,0,0x0,8
tick,0x7ffd093d1d94,369543897,0,0x0,8
tick,0x7ffd093d1d94,369559403,0,0x0,8
tick,0x7ffd093d1d94,369575434,0,0x0,8
tick,0x7ffd093d1d94,369591060,0,0x0,8
tick,0x7ffd093d1d94,369607125,0,0x0,8
tick,0x7ffd093d1d94,369622132,0,0x0,8
tick,0x7ffd093d1d94,369637549,0,0x0,8
tick,0x7ffd093d1d94,369653146,0,0x0,8
tick,0x7ffd093d1d94,369668696,0,0x0,8
tick,0x7ffd093d1d94,369684603,0,0x0,8
tick,0x7ffd093d1d94,369700490,0,0x0,8
tick,0x7ffd093d1d94,369715947,0,0x0,8
tick,0x7ffd093d1d94,369730988,0,0x0,8
tick,0x7ffd093d1d94,369747049,0,0x0,8
tick,0x7ffd093d1d94,369762983,0,0x0,8
tick,0x7ffd093d1d94,369778271,0,0x0,8
tick,0x7ffd093d1d94,369793234,0,0x0,8
tick,0x7ffd093d1d94,369809017,0,0x0,8
tick,0x7ffd093d1d94,369824302,0,0x0,8
tick,0x7ffd093d1d94,369839545,0,0x0,8
tick,0x7ffd093d1d94,369855505,0,0x0,8
tick,0x7ffd093d1d94,369870922,0,0x0,8
tick,0x7ffd093d1d94,369886167,0,0x0,8
tick,0x7ffd093d1d94,369901925,0,0x0,8
tick,0x7ffd093d1d94,369917601,0,0x0,8
tick,0x7ffd093d1d94,369933539,0,0x0,8
tick,0x7ffd093d1d94,369949453,0,0x0,8
tick,0x7ffd093d1d94,369964985,0,0x0,8
tick,0x7ffd093d1d94,369980721,0,0x0,8
tick,0x7ffd093d1d94,369996143,0,0x0,8
tick,0x7ffd093d1d94,370012229,0,0x0,8
tick,0x7ffd093d1d94,370027633,0,0x0,8
tick,0x7ffd093d1d94,370042717,0,0x0,8
tick,0x7ffd093d1d94,370058421,0,0x0,8
tick,0x7ffd093d1d94,370074265,0,0x0,8
tick,0x7ffd093d1d94,370089510,0,0x0,8
tick,0x7ffd093d1d94,370104966,0,0x0,8
tick,0x7ffd093d1d94,370120590,0,0x0,8
tick,0x7ffd093d1d94,370136048,0,0x0,8
tick,0x7ffd093d1d94,370151021,0,0x0,8
tick,0x7ffd093d1d94,370165982,0,0x0,8
tick,0x7ffd093d1d94,370181820,0,0x0,8
tick,0x7ffd093d1d94,370197647,0,0x0,8
tick,0x7ffd093d1d94,370212909,0,0x0,8
tick,0x7ffd093d1d94,370228062,0,0x0,8
tick,0x7ffd093d1d94,370244283,0,0x0,8
tick,0x7ffd093d1d94,370259998,0,0x0,8
tick,0x7ffd093d1d94,370275221,0,0x0,8
tick,0x7ffd093d1d94,370290293,0,0x0,8
tick,0x7ffd093d1d94,370305991,0,0x0,8
tick,0x7ffd093d1d94,370321755,0,0x0,8
tick,0x7ffd093d1d94,370337008,0,0x0,8
tick,0x7ffd093d1d94,370352747,0,0x0,8
tick,0x7ffd093d1d94,370368520,0,0x0,8
tick,0x7ffd093d1d94,370383799,0,0x0,8
tick,0x7ffd093d1d94,370399063,0,0x0,8
tick,0x7ffd093d1d94,370415065,0,0x0,8
tick,0x7ffd093d1d94,370430478,0,0x0,8
tick,0x7ffd093d1d94,370445772,0,0x0,8
tick,0x7ffd093d1d94,370461147,0,0x0,8
tick,0x7ffd093d1d94,370477050,0,0x0,8
tick,0x7ffd093d1d94,370493076,0,0x0,8
tick,0x7ffd093d1d94,370508411,0,0x0,8
tick,0x7ffd093d1d94,370524194,0,0x0,8
tick,0x7ffd093d1d94,370539375,0,0x0,8
tick,0x7ffd093d1d94,370554736,0,0x0,8
tick,0x7ffd093d1d94,370570365,0,0x0,8
tick,0x7ffd093d1d94,370585974,0,0x0,8
tick,0x7ffd093d1d94,370601106,0,0x0,8
tick,0x7ffd093d1d94,370616903,0,0x0,8
tick,0x7ffd093d1d94,370632970,0,0x0,8
tick,0x7ffd093d1d94,370647812,0,0x0,8
tick,0x7ffd093d1d94,370663430,0,0x0,8
tick,0x7ffd093d1d94,370679408,0,0x0,8
tick,0x7ffd093d1d94,370695048,0,0x0,8
tick,0x7ffd093d1d94,370711219,0,0x0,8
tick,0x7ffd093d1d94,370727182,0,0x0,8
tick,0x7ffd093d1d94,370742890,0,0x0,8
tick,0x7ffd093d1d94,370758313,0,0x0,8
tick,0x7ffd093d1d94,370773930,0,0x0,8
tick,0x7ffd093d1d94,370789847,0,0x0,8
tick,0x7ffd093d1d94,370805457,0,0x0,8
tick,0x7ffd093d1d94,370821348,0,0x0,8
tick,0x7ffd093d1d94,370837432,0,0x0,8
tick,0x7ffd093d1d94,370852471,0,0x0,8
tick,0x7ffd093d1d94,370867606,0,0x0,8
tick,0x7ffd093d1d94,370883283,0,0x0,8
tick,0x7ffd093d1d94,370898366,0,0x0,8
tick,0x7ffd093d1d94,370913858,0,0x0,8
tick,0x7ffd093d1d94,370929308,0,0x0,8
tick,0x7ffd093d1d94,370945138,0,0x0,8
tick,0x7ffd093d1d94,370960818,0,0x0,8
tick,0x7ffd093d1d94,370975820,0,0x0,8
tick,0x7ffd093d1d94,370991563,0,0x0,8
tick,0x7ffd093d1d94,371006403,0,0x0,8
tick,0x7ffd093d1d94,371021636,0,0x0,8
tick,0x7ffd093d1d94,371037640,0,0x0,8
tick,0x7ffd093d1d94,371053270,0,0x0,8
tick,0x7ffd093d1d94,371069250,0,0x0,8
tick,0x7ffd093d1d94,371084774,0,0x0,8
tick,0x7ffd093d1d94,371100267,0,0x0,8
tick,0x7ffd093d1d94,371116072,0,0x0,8
tick,0x7ffd093d1d94,371131536,0,0x0,8
tick,0x7ffd093d1d94,371147497,0,0x0,8
tick,0x7ffd093d1d94,371163197,0,0x0,8
tick,0x7ffd093d1d94,371179474,0,0x0,8
tick,0x7ffd093d1d94,371194856,0,0x0,8
tick,0x7ffd093d1d94,371210624,0,0x0,8
tick,0x7ffd093d1d94,371225298,0,0x0,8
tick,0x7ffd093d1d94,371240844,0,0x0,8
tick,0x7ffd093d1d94,371256724,0,0x0,8
tick,0x7ffd093d1d94,371272272,0,0x0,8
tick,0x7ffd093d1d94,371287580,0,0x0,8
tick,0x7ffd093d1d94,371302707,0,0x0,8
tick,0x7ffd093d1d94,371318269,0,0x0,8
tick,0x7ffd093d1d94,371334344,0,0x0,8
tick,0x7ffd093d1d94,371349967,0,0x0,8
tick,0x7ffd093d1d94,371365387,0,0x0,8
tick,0x7ffd093d1d94,371380420,0,0x0,8
tick,0x7ffd093d1d94,371395601,0,0x0,8
tick,0x7ffd093d1d94,371411198,0,0x0,8
tick,0x7ffd093d1d94,371427406,0,0x0,8
tick,0x7ffd093d1d94,371442862,0,0x0,8
tick,0x7ffd093d1d94,371457963,0,0x0,8
tick,0x7ffd093d1d94,371473236,0,0x0,8
tick,0x7ffd093d1d94,371489069,0,0x0,8
tick,0x7ffd093d1d94,371504972,0,0x0,8
tick,0x7ffd093d1d94,371520488,0,0x0,8
tick,0x7ffd093d1d94,371536118,0,0x0,8
tick,0x7ffd093d1d94,371550894,0,0x0,8
tick,0x7ffd093d1d94,371565952,0,0x0,8
tick,0x7ffd093d1d94,371581898,0,0x0,8
tick,0x7ffd093d1d94,371596864,0,0x0,8
tick,0x7ffd093d1d94,371612949,0,0x0,8
tick,0x7ffd093d1d94,371628356,0,0x0,8
tick,0x7ffd093d1d94,371643778,0,0x0,8
tick,0x7ffd093d1d94,371659890,0,0x0,8
tick,0x7ffd093d1d94,371675751,0,0x0,8
tick,0x7ffd093d1d94,371691779,0,0x0,8
tick,0x7ffd093d1d94,371707730,0,0x0,8
tick,0x7ffd093d1d94,371723225,0,0x0,8
tick,0x7ffd093d1d94,371739552,0,0x0,8
tick,0x7ffd093d1d94,371755600,0,0x0,8
tick,0x7ffd093d1d94,371771295,0,0x0,8
tick,0x7ffd093d1d94,371787296,0,0x0,8
tick,0x7ffd093d1d94,371803386,0,0x0,8
tick,0x7ffd093d1d94,371818579,0,0x0,8
tick,0x7ffd093d1d94,371834666,0,0x0,8
tick,0x7ffd093d1d94,371850240,0,0x0,8
tick,0x7ffd093d1d94,371866288,0,0x0,8
tick,0x7ffd093d1d94,371881789,0,0x0,8
tick,0x7ffd093d1d94,371897824,0,0x0,8
tick,0x7ffd093d1d94,371913816,0,0x0,8
tick,0x7ffd093d1d94,371929450,0,0x0,8
tick,0x7ffd093d1d94,371944700,0,0x0,8
tick,0x7ffd093d1d94,371959783,0,0x0,8
tick,0x7ffd093d1d94,371975294,0,0x0,8
tick,0x7ffd093d1d94,371990644,0,0x0,8
tick,0x7ffd093d1d94,372006237,0,0x0,8
tick,0x7ffd093d1d94,372021832,0,0x0,8
tick,0x7ffd093d1d94,372036917,0,0x0,8
tick,0x7ffd093d1d94,372052464,0,0x0,8
tick,0x7ffd093d1d94,372067716,0,0x0,8
tick,0x7ffd093d1d94,372082848,0,0x0,8
tick,0x7ffd093d1d94,372098633,0,0x0,8
tick,0x7ffd093d1d94,372114437,0,0x0,8
tick,0x7ffd093d1d94,372129886,0,0x0,8
tick,0x7ffd093d1d94,372146332,0,0x0,8
tick,0x7ffd093d1d94,372162235,0,0x0,8
tick,0x7ffd093d1d94,372177495,0,0x0,8
tick,0x7ffd093d1d94,372192710,0,0x0,8
tick,0x7ffd093d1d94,372207884,0,0x0,8
tick,0x7ffd093d1d94,372223545,0,0x0,8
tick,0x7ffd093d1d94,372238691,0,0x0,8
tick,0x7ffd093d1d94,372254608,0,0x0,8
tick,0x7ffd093d1d94,372270832,0,0x0,8
tick,0x7ffd093d1d94,372286314,0,0x0,8
tick,0x7ffd093d1d94,372301491,0,0x0,8
tick,0x7ffd093d1d94,372317665,0,0x0,8
tick,0x7ffd093d1d94,372332871,0,0x0,8
tick,0x7ffd093d1d94,372348434,0,0x0,8
tick,0x7ffd093d1d94,372364057,0,0x0,8
tick,0x7ffd093d1d94,372379353,0,0x0,8
tick,0x7ffd093d1d94,372394986,0,0x0,8
tick,0x7ffd093d1d94,372410586,0,0x0,8
tick,0x7ffd093d1d94,372425446,0,0x0,8
tick,0x7ffd093d1d94,372441516,0,0x0,8
tick,0x7ffd093d1d94,372456882,0,0x0,8
tick,0x7ffd093d1d94,372472320,0,0x0,8
tick,0x7ffd093d1d94,372487687,0,0x0,8
tick,0x7ffd093d1d94,372503158,0,0x0,8
tick,0x7ffd093d1d94,372518857,0,0x0,8
tick,0x7ffd093d1d94,372534606,0,0x0,8
tick,0x7ffd093d1d94,372550521,0,0x0,8
tick,0x7ffd093d1d94,372566412,0,0x0,8
tick,0x7ffd093d1d94,372582242,0,0x0,8
tick,0x7ffd093d1d94,372597334,0,0x0,8
tick,0x7ffd093d1d94,372612691,0,0x0,8
tick,0x7ffd093d1d94,372628392,0,0x0,8
tick,0x7ffd093d1d94,372643879,0,0x0,8
tick,0x7ffd093d1d94,372659671,0,0x0,8
tick,0x7ffd093d1d94,372675434,0,0x0,8
tick,0x7ffd093d1d94,372691128,0,0x0,8
tick,0x7ffd093d1d94,372706932,0,0x0,8
tick,0x7ffd093d1d94,372722764,0,0x0,8
tick,0x7ffd093d1d94,372738609,0,0x0,8
tick,0x7ffd093d1d94,372754472,0,0x0,8
tick,0x7ffd093d1d94,372769540,0,0x0,8
tick,0x7ffd093d1d94,372785747,0,0x0,8
tick,0x7ffd093d1d94,372800492,0,0x0,8
tick,0x7ffd093d1d94,372816978,0,0x0,8
tick,0x7ffd093d1d94,372832022,0,0x0,8
tick,0x7ffd093d1d94,372848410,0,0x0,8
tick,0x7ffd093d1d94,372864322,0,0x0,8
tick,0x7ffd093d1d94,372879719,0,0x0,8
tick,0x7ffd093d1d94,372895574,0,0x0,8
tick,0x7ffd093d1d94,372911412,0,0x0,8
tick,0x7ffd093d1d94,372926763,0,0x0,8
tick,0x7ffd093d1d94,372941642,0,0x0,8
tick,0x7ffd093d1d94,372957523,0,0x0,8
tick,0x7ffd093d1d94,372973582,0,0x0,8
tick,0x7ffd093d1d94,372989487,0,0x0,8
tick,0x7ffd093d1d94,373004981,0,0x0,8
tick,0x7ffd093d1d94,373019916,0,0x0,8
tick,0x7ffd093d1d94,373035141,0,0x0,8
tick,0x7ffd093d1d94,373051068,0,0x0,8
tick,0x7ffd093d1d94,373066482,0,0x0,8
tick,0x7ffd093d1d94,373082199,0,0x0,8
tick,0x7ffd093d1d94,373098042,0,0x0,8
tick,0x7ffd093d1d94,373113518,0,0x0,8
tick,0x7ffd093d1d94,373128379,0,0x0,8
tick,0x7ffd093d1d94,373144665,0,0x0,8
tick,0x7ffd093d1d94,373160615,0,0x0,8
tick,0x7ffd093d1d94,373176949,0,0x0,8
tick,0x7ffd093d1d94,373192126,0,0x0,8
tick,0x7ffd093d1d94,373206616,0,0x0,8
tick,0x7ffd093d1d94,373221692,0,0x0,8
tick,0x7ffd093d1d94,373237160,0,0x0,8
tick,0x7ffd093d1d94,373252858,0,0x0,8
tick,0x7ffd093d1d94,373268308,0,0x0,8
tick,0x7ffd093d1d94,373284064,0,0x0,8
tick,0x7ffd093d1d94,373299253,0,0x0,8
tick,0x7ffd093d1d94,373315119,0,0x0,8
tick,0x7ffd093d1d94,373331174,0,0x0,8
tick,0x7ffd093d1d94,373346972,0,0x0,8
tick,0x7ffd093d1d94,373362182,0,0x0,8
tick,0x7ffd093d1d94,373376979,0,0x0,8
tick,0x7ffd093d1d94,373392483,0,0x0,8
tick,0x7ffd093d1d94,373407929,0,0x0,8
tick,0x7ffd093d1d94,373423879,0,0x0,8
tick,0x7ffd093d1d94,373439258,0,0x0,8
tick,0x7ffd093d1d94,373454686,0,0x0,8
tick,0x7ffd093d1d94,373470362,0,0x0,8
tick,0x7ffd093d1d94,373485452,0,0x0,8
tick,0x7ffd093d1d94,373501477,0,0x0,8
tick,0x7ffd093d1d94,373517255,0,0x0,8
tick,0x7ffd093d1d94,373533231,0,0x0,8
tick,0x7ffd093d1d94,373548529,0,0x0,8
tick,0x7ffd093d1d94,373564366,0,0x0,8
tick,0x7ffd093d1d94,373579573,0,0x0,8
tick,0x7ffd093d1d94,373595606,0,0x0,8
tick,0x7ffd093d1d94,373610517,0,0x0,8
tick,0x7ffd093d1d94,373626221,0,0x0,8
tick,0x7ffd093d1d94,373642258,0,0x0,8
tick,0x7ffd093d1d94,373658262,0,0x0,8
tick,0x7ffd093d1d94,373674284,0,0x0,8
tick,0x7ffd093d1d94,373690591,0,0x0,8
tick,0x7ffd093d1d94,373706342,0,0x0,8
tick,0x7ffd093d1d94,373721528,0,0x0,8
tick,0x7ffd093d1d94,373737280,0,0x0,8
tick,0x7ffd093d1d94,373752194,0,0x0,8
tick,0x7ffd093d1d94,373767794,0,0x0,8
tick,0x7ffd093d1d94,373782814,0,0x0,8
tick,0x7ffd093d1d94,373798832,0,0x0,8
tick,0x7ffd093d1d94,373814941,0,0x0,8
tick,0x7ffd093d1d94,373830328,0,0x0,8
tick,0x7ffd093d1d94,373846354,0,0x0,8
tick,0x7ffd093d1d94,373862404,0,0x0,8
tick,0x7ffd093d1d94,373878343,0,0x0,8
tick,0x7ffd093d1d94,373893628,0,0x0,8
tick,0x7ffd093d1d94,373908952,0,0x0,8
tick,0x7ffd093d1d94,373924685,0,0x0,8
tick,0x7ffd093d1d94,373939702,0,0x0,8
tick,0x7ffd093d1d94,373955626,0,0x0,8
tick,0x7ffd093d1d94,373970942,0,0x0,8
tick,0x7ffd093d1d94,373986691,0,0x0,8
tick,0x7ffd093d1d94,374002405,0,0x0,8
tick,0x7ffd093d1d94,374017828,0,0x0,8
tick,0x7ffd093d1d94,374033749,0,0x0,8
tick,0x7ffd093d1d94,374049066,0,0x0,8
tick,0x7ffd093d1d94,374064777,0,0x0,8
tick,0x7ffd093d1d94,374080219,0,0x0,8
tick,0x7ffd093d1d94,374095579,0,0x0,8
tick,0x7ffd093d1d94,374111318,0,0x0,8
tick,0x7ffd093d1d94,374126909,0,0x0,8
tick,0x7ffd093d1d94,374142980,0,0x0,8
tick,0x7ffd093d1d94,374158762,0,0x0,8
tick,0x7ffd093d1d94,374174618,0,0x0,8
tick,0x7ffd093d1d94,374190314,0,0x0,8
tick,0x7ffd093d1d94,374205975,0,0x0,8
tick,0x7ffd093d1d94,374221115,0,0x0,8
tick,0x7ffd093d1d94,374237071,0,0x0,8
tick,0x7ffd093d1d94,374253059,0,0x0,8
tick,0x7ffd093d1d94,374268819,0,0x0,8
tick,0x7ffd093d1d94,374284519,0,0x0,8
tick,0x7ffd093d1d94,374299504,0,0x0,8
tick,0x7ffd093d1d94,374315574,0,0x0,8
tick,0x7ffd093d1d94,374331009,0,0x0,8
tick,0x7ffd093d1d94,374346889,0,0x0,8
tick,0x7ffd093d1d94,374362018,0,0x0,8
tick,0x7ffd093d1d94,374377651,0,0x0,8
tick,0x7ffd093d1d94,374393696,0,0x0,8
tick,0x7ffd093d1d94,374409626,0,0x0,8
tick,0x7ffd093d1d94,374425029,0,0x0,8
tick,0x7ffd093d1d94,374440882,0,0x0,8
tick,0x7ffd093d1d94,374456516,0,0x0,8
tick,0x7ffd093d1d94,374471784,0,0x0,8
tick,0x7ffd093d1d94,374487071,0,0x0,8
tick,0x7ffd093d1d94,374502711,0,0x0,8
tick,0x7ffd093d1d94,374518612,0,0x0,8
tick,0x7ffd093d1d94,374533913,0,0x0,8
tick,0x7ffd093d1d94,374548855,0,0x0,8
tick,0x7ffd093d1d94,374564545,0,0x0,8
tick,0x7ffd093d1d94,374579718,0,0x0,8
tick,0x7ffd093d1d94,374594711,0,0x0,8
tick,0x7ffd093d1d94,374610415,0,0x0,8
tick,0x7ffd093d1d94,374626283,0,0x0,8
tick,0x7ffd093d1d94,374642313,0,0x0,8
tick,0x7ffd093d1d94,374658356,0,0x0,8
tick,0x7ffd093d1d94,374673997,0,0x0,8
tick,0x7ffd093d1d94,374689795,0,0x0,8
tick,0x7ffd093d1d94,374705176,0,0x0,8
tick,0x7ffd093d1d94,374720853,0,0x0,8
tick,0x7ffd093d1d94,374736208,0,0x0,8
tick,0x7ffd093d1d94,374752301,0,0x0,8
tick,0x7ffd093d1d94,374768042,0,0x0,8
tick,0x7ffd093d1d94,374783553,0,0x0,8
tick,0x7ffd093d1d94,374798125,0,0x0,8
tick,0x7ffd093d1d94,374814182,0,0x0,8
tick,0x7ffd093d1d94,374830167,0,0x0,8
tick,0x7ffd093d1d94,374846084,0,0x0,8
tick,0x7ffd093d1d94,374860912,0,0x0,8
tick,0x7ffd093d1d94,374876173,0,0x0,8
tick,0x7ffd093d1d94,374892010,0,0x0,8
tick,0x7ffd093d1d94,374907894,0,0x0,8
tick,0x7ffd093d1d94,374923445,0,0x0,8
tick,0x7ffd093d1d94,374938967,0,0x0,8
tick,0x7ffd093d1d94,374954997,0,0x0,8
tick,0x7ffd093d1d94,374970778,0,0x0,8
tick,0x7ffd093d1d94,374986504,0,0x0,8
tick,0x7ffd093d1d94,375002809,0,0x0,8
tick,0x7ffd093d1d94,375017538,0,0x0,8
tick,0x7ffd093d1d94,375032353,0,0x0,8
tick,0x7ffd093d1d94,375048754,0,0x0,8
tick,0x7ffd093d1d94,375064841,0,0x0,8
tick,0x7ffd093d1d94,375079942,0,0x0,8
tick,0x7ffd093d1d94,375094847,0,0x0,8
tick,0x7ffd093d1d94,375110803,0,0x0,8
tick,0x7ffd093d1d94,375126833,0,0x0,8
tick,0x7ffd093d1d94,375141895,0,0x0,8
tick,0x7ffd093d1d94,375157087,0,0x0,8
tick,0x7ffd093d1d94,375172711,0,0x0,8
tick,0x7ffd093d1d94,375187888,0,0x0,8
tick,0x7ffd093d1d94,375203105,0,0x0,8
tick,0x7ffd093d1d94,375219208,0,0x0,8
tick,0x7ffd093d1d94,375234189,0,0x0,8
tick,0x7ffd093d1d94,375249549,0,0x0,8
tick,0x7ffd093d1d94,375264773,0,0x0,8
tick,0x7ffd093d1d94,375280989,0,0x0,8
tick,0x7ffd093d1d94,375296278,0,0x0,8
tick,0x7ffd093d1d94,375311844,0,0x0,8
tick,0x7ffd093d1d94,375327780,0,0x0,8
tick,0x7ffd093d1d94,375343317,0,0x0,8
tick,0x7ffd093d1d94,375359553,0,0x0,8
tick,0x7ffd093d1d94,375374950,0,0x0,8
tick,0x7ffd093d1d94,375390689,0,0x0,8
tick,0x7ffd093d1d94,375405977,0,0x0,8
tick,0x7ffd093d1d94,375421491,0,0x0,8
tick,0x7ffd093d1d94,375436545,0,0x0,8
tick,0x7ffd093d1d94,375451810,0,0x0,8
tick,0x7ffd093d1d94,375467757,0,0x0,8
tick,0x7ffd093d1d94,375483393,0,0x0,8
tick,0x7ffd093d1d94,375499265,0,0x0,8
tick,0x7ffd093d1d94,375515185,0,0x0,8
tick,0x7ffd093d1d94,375530965,0,0x0,8
tick,0x7ffd093d1d94,375547070,0,0x0,8
tick,0x7ffd093d1d94,375562074,0,0x0,8
tick,0x7ffd093d1d94,375576491,0,0x0,8
tick,0x7ffd093d1d94,375592112,0,0x0,8
tick,0x7ffd093d1d94,375608554,0,0x0,8
tick,0x7ffd093d1d94,375623474,0,0x0,8
tick,0x7ffd093d1d94,375638437,0,0x0,8
tick,0x7ffd093d1d94,375654396,0,0x0,8
tick,0x7ffd093d1d94,375670449,0,0x0,8
tick,0x7ffd093d1d94,375686379,0,0x0,8
tick,0x7ffd093d1d94,375702048,0,0x0,8
tick,0x7ffd093d1d94,375717467,0,0x0,8
tick,0x7ffd093d1d94,375733407,0,0x0,8
tick,0x7ffd093d1d94,375748796,0,0x0,8
tick,0x7ffd093d1d94,375765132,0,0x0,8
tick,0x7ffd093d1d94,375780420,0,0x0,8
tick,0x7ffd093d1d94,375796178,0,0x0,8
tick,0x7ffd093d1d94,375811609,0,0x0,8
tick,0x7ffd093d1d94,375827213,0,0x0,8
tick,0x7ffd093d1d94,375842525,0,0x0,8
tick,0x7ffd093d1d94,375857982,0,0x0,8
tick,0x7ffd093d1d94,375873044,0,0x0,8
tick,0x7ffd093d1d94,375888531,0,0x0,8
tick,0x7ffd093d1d94,375904530,0,0x0,8
tick,0x7ffd093d1d94,375920384,0,0x0,8
tick,0x7ffd093d1d94,375936221,0,0x0,8
tick,0x7ffd093d1d94,375951428,0,0x0,8
tick,0x7ffd093d1d94,375966689,0,0x0,8
tick,0x7ffd093d1d94,375982365,0,0x0,8
tick,0x7ffd093d1d94,375997564,0,0x0,8
tick,0x7ffd093d1d94,376013340,0,0x0,8
tick,0x7ffd093d1d94,376028305,0,0x0,8
tick,0x7ffd093d1d94,376043679,0,0x0,8
tick,0x7ffd093d1d94,376059771,0,0x0,8
tick,0x7ffd093d1d94,376075635,0,0x0,8
tick,0x7ffd093d1d94,376091617,0,0x0,8
tick,0x7ffd093d1d94,376106973,0,0x0,8
tick,0x7ffd093d1d94,376123302,0,0x0,8
tick,0x7ffd093d1d94,376139090,0,0x0,8
tick,0x7ffd093d1d94,376155012,0,0x0,8
tick,0x7ffd093d1d94,376170405,0,0x0,8
tick,0x7ffd093d1d94,376185616,0,0x0,8
tick,0x7ffd093d1d94,376200688,0,0x0,8
tick,0x7ffd093d1d94,376216064,0,0x0,8
tick,0x7ffd093d1d94,376231921,0,0x0,8
tick,0x7ffd093d1d94,376247510,0,0x0,8
tick,0x7ffd093d1d94,376263416,0,0x0,8
tick,0x7ffd093d1d94,376278955,0,0x0,8
tick,0x7ffd093d1d94,376294335,0,0x0,8
tick,0x7ffd093d1d94,376310423,0,0x0,8
tick,0x7ffd093d1d94,376325298,0,0x0,8
tick,0x7ffd093d1d94,376340637,0,0x0,8
tick,0x7ffd093d1d94,376356200,0,0x0,8
tick,0x7ffd093d1d94,376372149,0,0x0,8
tick,0x7ffd093d1d94,376387355,0,0x0,8
tick,0x7ffd093d1d94,376402634,0,0x0,8
tick,0x7ffd093d1d94,376418281,0,0x0,8
tick,0x7ffd093d1d94,376433525,0,0x0,8
tick,0x7ffd093d1d94,376448628,0,0x0,8
tick,0x7ffd093d1d94,376463992,0,0x0,8
tick,0x7ffd093d1d94,376480044,0,0x0,8
tick,0x7ffd093d1d94,376496253,0,0x0,8
tick,0x7ffd093d1d94,376511747,0,0x0,8
tick,0x7ffd093d1d94,376527681,0,0x0,8
tick,0x7ffd093d1d94,376542444,0,0x0,8
tick,0x7ffd093d1d94,376557906,0,0x0,8
tick,0x7ffd093d1d94,376573275,0,0x0,8
tick,0x7ffd093d1d94,376588644,0,0x0,8
tick,0x7ffd093d1d94,376604256,0,0x0,8
tick,0x7ffd093d1d94,376619878,0,0x0,8
tick,0x7ffd093d1d94,376634989,0,0x0,8
tick,0x7ffd093d1d94,376651031,0,0x0,8
tick,0x7ffd093d1d94,376665969,0,0x0,8
tick,0x7ffd093d1d94,376681341,0,0x0,8
tick,0x7ffd093d1d94,376697043,0,0x0,8
tick,0x7ffd093d1d94,376712316,0,0x0,8
tick,0x7ffd093d1d94,376727817,0,0x0,8
tick,0x7ffd093d1d94,376743597,0,0x0,8
tick,0x7ffd093d1d94,376758588,0,0x0,8
tick,0x7ffd093d1d94,376774102,0,0x0,8
tick,0x7ffd093d1d94,376788980,0,0x0,8
tick,0x7ffd093d1d94,376804730,0,0x0,8
tick,0x7ffd093d1d94,376820478,0,0x0,8
tick,0x7ffd093d1d94,376835958,0,0x0,8
tick,0x7ffd093d1d94,376851618,0,0x0,8
tick,0x7ffd093d1d94,376867233,0,0x0,8
tick,0x7ffd093d1d94,376882961,0,0x0,8
tick,0x7ffd093d1d94,376899273,0,0x0,8
tick,0x7ffd093d1d94,376914366,0,0x0,8
tick,0x7ffd093d1d94,376929476,0,0x0,8
tick,0x7ffd093d1d94,376945100,0,0x0,8
tick,0x7ffd093d1d94,376960787,0,0x0,8
tick,0x7ffd093d1d94,376976561,0,0x0,8
tick,0x7ffd093d1d94,376992571,0,0x0,8
tick,0x7ffd093d1d94,377008493,0,0x0,8
tick,0x7ffd093d1d94,377023386,0,0x0,8
tick,0x7ffd093d1d94,377038851,0,0x0,8
tick,0x7ffd093d1d94,377055020,0,0x0,8
tick,0x7ffd093d1d94,377070260,0,0x0,8
tick,0x7ffd093d1d94,377085430,0,0x0,8
tick,0x7ffd093d1d94,377100449,0,0x0,8
tick,0x7ffd093d1d94,377116251,0,0x0,8
tick,0x7ffd093d1d94,377131872,0,0x0,8
tick,0x7ffd093d1d94,377147628,0,0x0,8
tick,0x7ffd093d1d94,377163419,0,0x0,8
tick,0x7ffd093d1d94,377179301,0,0x0,8
tick,0x7ffd093d1d94,377194763,0,0x0,8
tick,0x7ffd093d1d94,377210610,0,0x0,8
tick,0x7ffd093d1d94,377225865,0,0x0,8
tick,0x7ffd093d1d94,377241702,0,0x0,8
tick,0x7ffd093d1d94,377257104,0,0x0,8
tick,0x7ffd093d1d94,377272962,0,0x0,8
tick,0x7ffd093d1d94,377288791,0,0x0,8
tick,0x7ffd093d1d94,377304424,0,0x0,8
tick,0x7ffd093d1d94,377319468,0,0x0,8
tick,0x7ffd093d1d94,377334940,0,0x0,8
tick,0x7ffd093d1d94,377350296,0,0x0,8
tick,0x7ffd093d1d94,377365584,0,0x0,8
tick,0x7ffd093d1d94,377380845,0,0x0,8
tick,0x7ffd093d1d94,377396527,0,0x0,8
tick,0x7ffd093d1d94,377411837,0,0x0,8
tick,0x7ffd093d1d94,377427621,0,0x0,8
tick,0x7ffd093d1d94,377444049,0,0x0,8
tick,0x7ffd093d1d94,377459344,0,0x0,8
tick,0x7ffd093d1d94,377474404,0,0x0,8
tick,0x7ffd093d1d94,377490443,0,0x0,8
tick,0x7ffd093d1d94,377506230,0,0x0,8
tick,0x7ffd093d1d94,377521883,0,0x0,8
tick,0x7ffd093d1d94,377537868,0,0x0,8
tick,0x7ffd093d1d94,377553099,0,0x0,8
tick,0x7ffd093d1d94,377568866,0,0x0,8
tick,0x7ffd093d1d94,377583660,0,0x0,8
tick,0x7ffd093d1d94,377599333,0,0x0,8
tick,0x7ffd093d1d94,377614659,0,0x0,8
tick,0x7ffd093d1d94,377629974,0,0x0,8
tick,0x7ffd093d1d94,377646044,0,0x0,8
tick,0x7ffd093d1d94,377660847,0,0x0,8
tick,0x7ffd093d1d94,377676744,0,0x0,8
tick,0x7ffd093d1d94,377691394,0,0x0,8
tick,0x7ffd093d1d94,377707288,0,0x0,8
tick,0x7ffd093d1d94,377723107,0,0x0,8
tick,0x7ffd093d1d94,377738549,0,0x0,8
tick,0x7ffd093d1d94,377754512,0,0x0,8
tick,0x7ffd093d1d94,377770123,0,0x0,8
tick,0x7ffd093d1d94,377785712,0,0x0,8
tick,0x7ffd093d1d94,377800743,0,0x0,8
tick,0x7ffd093d1d94,377816895,0,0x0,8
tick,0x7ffd093d1d94,377832793,0,0x0,8
tick,0x7ffd093d1d94,377848653,0,0x0,8
tick,0x7ffd093d1d94,377864111,0,0x0,8
tick,0x7ffd093d1d94,377879874,0,0x0,8
tick,0x7ffd093d1d94,377895216,0,0x0,8
tick,0x7ffd093d1d94,377910902,0,0x0,8
tick,0x7ffd093d1d94,377926365,0,0x0,8
tick,0x7ffd093d1d94,377942267,0,0x0,8
tick,0x7ffd093d1d94,377958532,0,0x0,8
tick,0x7ffd093d1d94,377973584,0,0x0,8
tick,0x7ffd093d1d94,377989149,0,0x0,8
tick,0x7ffd093d1d94,378005015,0,0x0,8
tick,0x7ffd093d1d94,378020952,0,0x0,8
tick,0x7ffd093d1d94,378036473,0,0x0,8
tick,0x7ffd093d1d94,378052459,0,0x0,8
tick,0x7ffd093d1d94,378068010,0,0x0,8
tick,0x7ffd093d1d94,378084021,0,0x0,8
tick,0x7ffd093d1d94,378098700,0,0x0,8
tick,0x7ffd093d1d94,378114025,0,0x0,8
tick,0x7ffd093d1d94,378129332,0,0x0,8
tick,0x7ffd093d1d94,378145049,0,0x0,8
tick,0x7ffd093d1d94,378161278,0,0x0,8
tick,0x7ffd093d1d94,378176320,0,0x0,8
tick,0x7ffd093d1d94,378191649,0,0x0,8
tick,0x7ffd093d1d94,378207591,0,0x0,8
tick,0x7ffd093d1d94,378223761,0,0x0,8
tick,0x7ffd093d1d94,378239920,0,0x0,8
tick,0x7ffd093d1d94,378255863,0,0x0,8
tick,0x7ffd093d1d94,378271856,0,0x0,8
tick,0x7ffd093d1d94,378287875,0,0x0,8
tick,0x7ffd093d1d94,378303601,0,0x0,8
tick,0x7ffd093d1d94,378318607,0,0x0,8
tick,0x7ffd093d1d94,378333690,0,0x0,8
tick,0x7ffd093d1d94,378349373,0,0x0,8
tick,0x7ffd093d1d94,378365459,0,0x0,8
tick,0x7ffd093d1d94,378380889,0,0x0,8
tick,0x7ffd093d1d94,378396584,0,0x0,8
tick,0x7ffd093d1d94,378411536,0,0x0,8
tick,0x7ffd093d1d94,378427163,0,0x0,8
tick,0x7ffd093d1d94,378442809,0,0x0,8
tick,0x7ffd093d1d94,378458709,0,0x0,8
tick,0x7ffd093d1d94,378473937,0,0x0,8
tick,0x7ffd093d1d94,378489383,0,0x0,8
tick,0x7ffd093d1d94,378504820,0,0x0,8
tick,0x7ffd093d1d94,378519880,0,0x0,8
tick,0x7ffd093d1d94,378535567,0,0x0,8
tick,0x7ffd093d1d94,378551580,0,0x0,8
tick,0x7ffd093d1d94,378566075,0,0x0,8
tick,0x7ffd093d1d94,378582250,0,0x0,8
tick,0x7ffd093d1d94,378597650,0,0x0,8
tick,0x7ffd093d1d94,378612809,0,0x0,8
tick,0x7ffd093d1d94,378628592,0,0x0,8
tick,0x7ffd093d1d94,378643434,0,0x0,8
tick,0x7ffd093d1d94,378659191,0,0x0,8
tick,0x7ffd093d1d94,378674874,0,0x0,8
tick,0x7ffd093d1d94,378690467,0,0x0,8
tick,0x7ffd093d1d94,378706110,0,0x0,8
tick,0x7ffd093d1d94,378720963,0,0x0,8
tick,0x7ffd093d1d94,378736293,0,0x0,8
tick,0x7ffd093d1d94,378751086,0,0x0,8
tick,0x7ffd093d1d94,378766415,0,0x0,8
tick,0x7ffd093d1d94,378781788,0,0x0,8
tick,0x7ffd093d1d94,378796662,0,0x0,8
tick,0x7ffd093d1d94,378812240,0,0x0,8
tick,0x7ffd093d1d94,378827778,0,0x0,8
tick,0x7ffd093d1d94,378843781,0,0x0,8
tick,0x7ffd093d1d94,378859523,0,0x0,8
tick,0x7ffd093d1d94,378874977,0,0x0,8
tick,0x7ffd093d1d94,378890329,0,0x0,8
tick,0x7ffd093d1d94,378905855,0,0x0,8
tick,0x7ffd093d1d94,378922043,0,0x0,8
tick,0x7ffd093d1d94,378937460,0,0x0,8
tick,0x7ffd093d1d94,378953247,0,0x0,8
tick,0x7ffd093d1d94,378968967,0,0x0,8
tick,0x7ffd093d1d94,378984490,0,0x0,8
tick,0x7ffd093d1d94,378999581,0,0x0,8
tick,0x7ffd093d1d94,379014882,0,0x0,8
tick,0x7ffd093d1d94,379030129,0,0x0,8
tick,0x7ffd093d1d94,379046171,0,0x0,8
tick,0x7ffd093d1d94,379062353,0,0x0,8
tick,0x7ffd093d1d94,379077531,0,0x0,8
tick,0x7ffd093d1d94,379092467,0,0x0,8
tick,0x7ffd093d1d94,379108229,0,0x0,8
tick,0x7ffd093d1d94,379124250,0,0x0,8
tick,0x7ffd093d1d94,379140071,0,0x0,8
tick,0x7ffd093d1d94,379155488,0,0x0,8
tick,0x7ffd093d1d94,379170435,0,0x0,8
tick,0x7ffd093d1d94,379186236,0,0x0,8
tick,0x7ffd093d1d94,379202234,0,0x0,8
tick,0x7ffd093d1d94,379217679,0,0x0,8
tick,0x7ffd093d1d94,379233577,0,0x0,8
tick,0x7ffd093d1d94,379249182,0,0x0,8
tick,0x7ffd093d1d94,379264111,0,0x0,8
tick,0x7ffd093d1d94,379279773,0,0x0,8
tick,0x7ffd093d1d94,379295162,0,0x0,8
tick,0x7ffd093d1d94,379311061,0,0x0,8
tick,0x7ffd093d1d94,379326420,0,0x0,8
tick,0x7ffd093d1d94,379341435,0,0x0,8
tick,0x7ffd093d1d94,379357213,0,0x0,8
tick,0x7ffd093d1d94,379372328,0,0x0,8
tick,0x7ffd093d1d94,379387359,0,0x0,8
tick,0x7ffd093d1d94,379403711,0,0x0,8
tick,0x7ffd093d1d94,379419325,0,0x0,8
tick,0x7ffd093d1d94,379435151,0,0x0,8
tick,0x7ffd093d1d94,379450850,0,0x0,8
tick,0x7ffd093d1d94,379465955,0,0x0,8
tick,0x7ffd093d1d94,379481338,0,0x0,8
tick,0x7ffd093d1d94,379497280,0,0x0,8
tick,0x7ffd093d1d94,379512899,0,0x0,8
tick,0x7ffd093d1d94,379528307,0,0x0,8
tick,0x7ffd093d1d94,379543526,0,0x0,8
tick,0x7ffd093d1d94,379559646,0,0x0,8
tick,0x7ffd093d1d94,379575574,0,0x0,8
tick,0x7ffd093d1d94,379591242,0,0x0,8
tick,0x7ffd093d1d94,379606906,0,0x0,8
tick,0x7ffd093d1d94,379622241,0,0x0,8
tick,0x7ffd093d1d94,379638339,0,0x0,8
tick,0x7ffd093d1d94,379653969,0,0x0,8
tick,0x7ffd093d1d94,379669542,0,0x0,8
tick,0x7ffd093d1d94,379684991,0,0x0,8
tick,0x7ffd093d1d94,379700321,0,0x0,8
tick,0x7ffd093d1d94,379716248,0,0x0,8
tick,0x7ffd093d1d94,379731895,0,0x0,8
tick,0x7ffd093d1d94,379747522,0,0x0,8
tick,0x7ffd093d1d94,379762712,0,0x0,8
tick,0x7ffd093d1d94,379778265,0,0x0,8
tick,0x7ffd093d1d94,379792954,0,0x0,8
tick,0x7ffd093d1d94,379808621,0,0x0,8
tick,0x7ffd093d1d94,379824198,0,0x0,8
tick,0x7ffd093d1d94,379840530,0,0x0,8
tick,0x7ffd093d1d94,379856257,0,0x0,8
tick,0x7ffd093d1d94,379871886,0,0x0,8
tick,0x7ffd093d1d94,379887582,0,0x0,8
tick,0x7ffd093d1d94,379902226,0,0x0,8
tick,0x7ffd093d1d94,379917432,0,0x0,8
tick,0x7ffd093d1d94,379932531,0,0x0,8
tick,0x7ffd093d1d94,379948406,0,0x0,8
tick,0x7ffd093d1d94,379963745,0,0x0,8
tick,0x7ffd093d1d94,379979839,0,0x0,8
tick,0x7ffd093d1d94,379995182,0,0x0,8
tick,0x7ffd093d1d94,380010204,0,0x0,8
tick,0x7ffd093d1d94,380026194,0,0x0,8
tick,0x7ffd093d1d94,380041515,0,0x0,8
tick,0x7ffd093d1d94,380056788,0,0x0,8
tick,0x7ffd093d1d94,380072038,0,0x0,8
tick,0x7ffd093d1d94,380086944,0,0x0,8
tick,0x7ffd093d1d94,380102259,0,0x0,8
tick,0x7ffd093d1d94,380118814,0,0x0,8
tick,0x7ffd093d1d94,380133882,0,0x0,8
tick,0x7ffd093d1d94,380149924,0,0x0,8
tick,0x7ffd093d1d94,380165675,0,0x0,8
tick,0x7ffd093d1d94,380181043,0,0x0,8
tick,0x7ffd093d1d94,380196808,0,0x0,8
tick,0x7ffd093d1d94,380212558,0,0x0,8
tick,0x7ffd093d1d94,380228215,0,0x0,8
tick,0x7ffd093d1d94,380242752,0,0x0,8
tick,0x7ffd093d1d94,380258461,0,0x0,8
tick,0x7ffd093d1d94,380274453,0,0x0,8
tick,0x7ffd093d1d94,380289993,0,0x0,8
tick,0x7ffd093d1d94,380306018,0,0x0,8
tick,0x7ffd093d1d94,380322031,0,0x0,8
tick,0x7ffd093d1d94,380337531,0,0x0,8
tick,0x7ffd093d1d94,380353471,0,0x0,8
tick,0x7ffd093d1d94,380369200,0,0x0,8
tick,0x7ffd093d1d94,380384997,0,0x0,8
tick,0x7ffd093d1d94,380401137,0,0x0,8
tick,0x7ffd093d1d94,380417046,0,0x0,8
tick,0x7ffd093d1d94,380432629,0,0x0,8
tick,0x7ffd093d1d94,380447938,0,0x0,8
tick,0x7ffd093d1d94,380463605,0,0x0,8
tick,0x7ffd093d1d94,380478930,0,0x0,8
tick,0x7ffd093d1d94,380495052,0,0x0,8
tick,0x7ffd093d1d94,380510966,0,0x0,8
tick,0x7ffd093d1d94,380526854,0,0x0,8
tick,0x7ffd093d1d94,380542806,0,0x0,8
tick,0x7ffd093d1d94,380558562,0,0x0,8
tick,0x7ffd093d1d94,380574562,0,0x0,8
tick,0x7ffd093d1d94,380590867,0,0x0,8
tick,0x7ffd093d1d94,380605566,0,0x0,8
tick,0x7ffd093d1d94,380620948,0,0x0,8
tick,0x7ffd093d1d94,380636769,0,0x0,8
tick,0x7ffd093d1d94,380652167,0,0x0,8
tick,0x7ffd093d1d94,380667825,0,0x0,8
tick,0x7ffd093d1d94,380683270,0,0x0,8
tick,0x7ffd093d1d94,380698941,0,0x0,8
tick,0x7ffd093d1d94,380714452,0,0x0,8
tick,0x7ffd093d1d94,380729591,0,0x0,8
tick,0x7ffd093d1d94,380746039,0,0x0,8
tick,0x7ffd093d1d94,380762040,0,0x0,8
tick,0x7ffd093d1d94,380777621,0,0x0,8
tick,0x7ffd093d1d94,380793792,0,0x0,8
tick,0x7ffd093d1d94,380809569,0,0x0,8
tick,0x7ffd093d1d94,380824720,0,0x0,8
tick,0x7ffd093d1d94,380840778,0,0x0,8
tick,0x7ffd093d1d94,380855678,0,0x0,8
tick,0x7ffd093d1d94,380872122,0,0x0,8
tick,0x7ffd093d1d94,380887960,0,0x0,8
tick,0x7ffd093d1d94,380903391,0,0x0,8
tick,0x7ffd093d1d94,380919055,0,0x0,8
tick,0x7ffd093d1d94,380934309,0,0x0,8
tick,0x7ffd093d1d94,380949620,0,0x0,8
tick,0x7ffd093d1d94,380965069,0,0x0,8
tick,0x7ffd093d1d94,380980347,0,0x0,8
tick,0x7ffd093d1d94,380996114,0,0x0,8
tick,0x7ffd093d1d94,381011836,0,0x0,8
tick,0x7ffd093d1d94,381027344,0,0x0,8
tick,0x7ffd093d1d94,381042566,0,0x0,8
tick,0x7ffd093d1d94,381058626,0,0x0,8
tick,0x7ffd093d1d94,381073487,0,0x0,8
tick,0x7ffd093d1d94,381088446,0,0x0,8
tick,0x7ffd093d1d94,381104381,0,0x0,8
tick,0x7ffd093d1d94,381119286,0,0x0,8
tick,0x7ffd093d1d94,381134340,0,0x0,8
tick,0x7ffd093d1d94,381149629,0,0x0,8
tick,0x7ffd093d1d94,381165106,0,0x0,8
tick,0x7ffd093d1d94,381180149,0,0x0,8
tick,0x7ffd093d1d94,381195703,0,0x0,8
tick,0x7ffd093d1d94,381211364,0,0x0,8
tick,0x7ffd093d1d94,381226610,0,0x0,8
tick,0x7ffd093d1d94,381241977,0,0x0,8
tick,0x7ffd093d1d94,381257263,0,0x0,8
tick,0x7ffd093d1d94,381272996,0,0x0,8
tick,0x7ffd093d1d94,381288430,0,0x0,8
tick,0x7ffd093d1d94,381303823,0,0x0,8
tick,0x7ffd093d1d94,381319675,0,0x0,8
tick,0x7ffd093d1d94,381335678,0,0x0,8
tick,0x7ffd093d1d94,381351099,0,0x0,8
tick,0x7ffd093d1d94,381367090,0,0x0,8
tick,0x7ffd093d1d94,381382701,0,0x0,8
tick,0x7ffd093d1d94,381397623,0,0x0,8
tick,0x7ffd093d1d94,381413078,0,0x0,8
tick,0x7ffd093d1d94,381429410,0,0x0,8
tick,0x7ffd093d1d94,381445390,0,0x0,8
tick,0x7ffd093d1d94,381460688,0,0x0,8
tick,0x7ffd093d1d94,381476296,0,0x0,8
tick,0x7ffd093d1d94,381491444,0,0x0,8
tick,0x7ffd093d1d94,381506995,0,0x0,8
tick,0x7ffd093d1d94,381522178,0,0x0,8
tick,0x7ffd093d1d94,381537733,0,0x0,8
tick,0x7ffd093d1d94,381553366,0,0x0,8
tick,0x7ffd093d1d94,381569232,0,0x0,8
tick,0x7ffd093d1d94,381584701,0,0x0,8
tick,0x7ffd093d1d94,381600025,0,0x0,8
tick,0x7ffd093d1d94,381615699,0,0x0,8
tick,0x7ffd093d1d94,381631819,0,0x0,8
tick,0x7ffd093d1d94,381647418,0,0x0,8
tick,0x7ffd093d1d94,381662657,0,0x0,8
tick,0x7ffd093d1d94,381677743,0,0x0,8
tick,0x7ffd093d1d94,381693123,0,0x0,8
tick,0x7ffd093d1d94,381708859,0,0x0,8
tick,0x7ffd093d1d94,381724881,0,0x0,8
tick,0x7ffd093d1d94,381740369,0,0x0,8
tick,0x7ffd093d1d94,381756367,0,0x0,8
tick,0x7ffd093d1d94,381772364,0,0x0,8
tick,0x7ffd093d1d94,381788679,0,0x0,8
tick,0x7ffd093d1d94,381804465,0,0x0,8
tick,0x7ffd093d1d94,381819982,0,0x0,8
tick,0x7ffd093d1d94,381835397,0,0x0,8
tick,0x7ffd093d1d94,381850393,0,0x0,8
tick,0x7ffd093d1d94,381866394,0,0x0,8
tick,0x7ffd093d1d94,381882583,0,0x0,8
tick,0x7ffd093d1d94,381898534,0,0x0,8
tick,0x7ffd093d1d94,381913454,0,0x0,8
tick,0x7ffd093d1d94,381928420,0,0x0,8
tick,0x7ffd093d1d94,381943887,0,0x0,8
tick,0x7ffd093d1d94,381959914,0,0x0,8
tick,0x7ffd093d1d94,381975547,0,0x0,8
tick,0x7ffd093d1d94,381990828,0,0x0,8
tick,0x7ffd093d1d94,382005969,0,0x0,8
tick,0x7ffd093d1d94,382021963,0,0x0,8
tick,0x7ffd093d1d94,382037390,0,0x0,8
tick,0x7ffd093d1d94,382052580,0,0x0,8
tick,0x7ffd093d1d94,382067490,0,0x0,8
tick,0x7ffd093d1d94,382082939,0,0x0,8
tick,0x7ffd093d1d94,382098057,0,0x0,8
tick,0x7ffd093d1d94,382113380,0,0x0,8
tick,0x7ffd093d1d94,382129133,0,0x0,8
tick,0x7ffd093d1d94,382144611,0,0x0,8
tick,0x7ffd093d1d94,382160160,0,0x0,8
tick,0x7ffd093d1d94,382175181,0,0x0,8
tick,0x7ffd093d1d94,382190950,0,0x0,8
tick,0x7ffd093d1d94,382206827,0,0x0,8
tick,0x7ffd093d1d94,382222113,0,0x0,8
tick,0x7ffd093d1d94,382237417,0,0x0,8
tick,0x7ffd093d1d94,382253107,0,0x0,8
tick,0x7ffd093d1d94,382269039,0,0x0,8
tick,0x7ffd093d1d94,382283770,0,0x0,8
tick,0x7ffd093d1d94,382299077,0,0x0,8
tick,0x7ffd093d1d94,382314459,0,0x0,8
tick,0x7ffd093d1d94,382330260,0,0x0,8
tick,0x7ffd093d1d94,382345070,0,0x0,8
tick,0x7ffd093d1d94,382360972,0,0x0,8
tick,0x7ffd093d1d94,382376447,0,0x0,8
tick,0x7ffd093d1d94,382391699,0,0x0,8
tick,0x7ffd093d1d94,382407516,0,0x0,8
tick,0x7ffd093d1d94,382423024,0,0x0,8
tick,0x7ffd093d1d94,382438481,0,0x0,8
tick,0x7ffd093d1d94,382454508,0,0x0,8
tick,0x7ffd093d1d94,382470218,0,0x0,8
tick,0x7ffd093d1d94,382485811,0,0x0,8
tick,0x7ffd093d1d94,382501875,0,0x0,8
tick,0x7ffd093d1d94,382517855,0,0x0,8
tick,0x7ffd093d1d94,382533588,0,0x0,8
tick,0x7ffd093d1d94,382549090,0,0x0,8
tick,0x7ffd093d1d94,382564511,0,0x0,8
tick,0x7ffd093d1d94,382580684,0,0x0,8
tick,0x7ffd093d1d94,382596219,0,0x0,8
tick,0x7ffd093d1d94,382612319,0,0x0,8
tick,0x7ffd093d1d94,382628221,0,0x0,8
tick,0x7ffd093d1d94,382642909,0,0x0,8
tick,0x7ffd093d1d94,382658724,0,0x0,8
tick,0x7ffd093d1d94,382674771,0,0x0,8
tick,0x7ffd093d1d94,382690841,0,0x0,8
tick,0x7ffd093d1d94,382706195,0,0x0,8
tick,0x7ffd093d1d94,382722319,0,0x0,8
tick,0x7ffd093d1d94,382738161,0,0x0,8
tick,0x7ffd093d1d94,382753838,0,0x0,8
tick,0x7ffd093d1d94,382770161,0,0x0,8
tick,0x7ffd093d1d94,382785791,0,0x0,8
tick,0x7ffd093d1d94,382801266,0,0x0,8
tick,0x7ffd093d1d94,382816412,0,0x0,8
tick,0x7ffd093d1d94,382832078,0,0x0,8
tick,0x7ffd093d1d94,382847144,0,0x0,8
tick,0x7ffd093d1d94,382862341,0,0x0,8
tick,0x7ffd093d1d94,382878263,0,0x0,8
tick,0x7ffd093d1d94,382893940,0,0x0,8
tick,0x7ffd093d1d94,382910218,0,0x0,8
tick,0x7ffd093d1d94,382925133,0,0x0,8
tick,0x7ffd093d1d94,382940436,0,0x0,8
tick,0x7ffd093d1d94,382956107,0,0x0,8
tick,0x7ffd093d1d94,382971830,0,0x0,8
tick,0x7ffd093d1d94,382987509,0,0x0,8
tick,0x7ffd093d1d94,383003545,0,0x0,8
tick,0x7ffd093d1d94,383018824,0,0x0,8
tick,0x7ffd093d1d94,383034151,0,0x0,8
tick,0x7ffd093d1d94,383049992,0,0x0,8
tick,0x7ffd093d1d94,383065667,0,0x0,8
tick,0x7ffd093d1d94,383081957,0,0x0,8
tick,0x7ffd093d1d94,383097591,0,0x0,8
tick,0x7ffd093d1d94,383112975,0,0x0,8
tick,0x7ffd093d1d94,383128448,0,0x0,8
tick,0x7ffd093d1d94,383144028,0,0x0,8
tick,0x7ffd093d1d94,383159475,0,0x0,8
tick,0x7ffd093d1d94,383174355,0,0x0,8
tick,0x7ffd093d1d94,383190605,0,0x0,8
tick,0x7ffd093d1d94,383205871,0,0x0,8
tick,0x7ffd093d1d94,383221297,0,0x0,8
tick,0x7ffd093d1d94,383236206,0,0x0,8
tick,0x7ffd093d1d94,383252072,0,0x0,8
tick,0x7ffd093d1d94,383267881,0,0x0,8
tick,0x7ffd093d1d94,383283809,0,0x0,8
tick,0x7ffd093d1d94,383299103,0,0x0,8
tick,0x7ffd093d1d94,383314815,0,0x0,8
tick,0x7ffd093d1d94,383329857,0,0x0,8
tick,0x7ffd093d1d94,383345484,0,0x0,8
tick,0x7ffd093d1d94,383361459,0,0x0,8
tick,0x7ffd093d1d94,383377230,0,0x0,8
tick,0x7ffd093d1d94,383393018,0,0x0,8
tick,0x7ffd093d1d94,383408185,0,0x0,8
tick,0x7ffd093d1d94,383424107,0,0x0,8
tick,0x7ffd093d1d94,383440027,0,0x0,8
tick,0x7ffd093d1d94,383455391,0,0x0,8
tick,0x7ffd093d1d94,383471005,0,0x0,8
tick,0x7ffd093d1d94,383487173,0,0x0,8
tick,0x7ffd093d1d94,383502384,0,0x0,8
tick,0x7ffd093d1d94,383517714,0,0x0,8
tick,0x7ffd093d1d94,383533339,0,0x0,8
tick,0x7ffd093d1d94,383548431,0,0x0,8
tick,0x7ffd093d1d94,383564081,0,0x0,8
tick,0x7ffd093d1d94,383579701,0,0x0,8
tick,0x7ffd093d1d94,383595269,0,0x0,8
tick,0x7ffd093d1d94,383611475,0,0x0,8
tick,0x7ffd093d1d94,383626724,0,0x0,8
tick,0x7ffd093d1d94,383642200,0,0x0,8
tick,0x7ffd093d1d94,383658180,0,0x0,8
tick,0x7ffd093d1d94,383673629,0,0x0,8
tick,0x7ffd093d1d94,383688684,0,0x0,8
tick,0x7ffd093d1d94,383704016,0,0x0,8
tick,0x7ffd093d1d94,383719807,0,0x0,8
tick,0x7ffd093d1d94,383735752,0,0x0,8
tick,0x7ffd093d1d94,383751210,0,0x0,8
tick,0x7ffd093d1d94,383767278,0,0x0,8
tick,0x7ffd093d1d94,383782338,0,0x0,8
tick,0x7ffd093d1d94,383798211,0,0x0,8
tick,0x7ffd093d1d94,383813241,0,0x0,8
tick,0x7ffd093d1d94,383828841,0,0x0,8
tick,0x7ffd093d1d94,383844446,0,0x0,8
tick,0x7ffd093d1d94,383859235,0,0x0,8
tick,0x7ffd093d1d94,383874937,0,0x0,8
tick,0x7ffd093d1d94,383890368,0,0x0,8
tick,0x7ffd093d1d94,383905650,0,0x0,8
tick,0x7ffd093d1d94,383921438,0,0x0,8
tick,0x7ffd093d1d94,383937668,0,0x0,8
tick,0x7ffd093d1d94,383953022,0,0x0,8
tick,0x7ffd093d1d94,383968503,0,0x0,8
tick,0x7ffd093d1d94,383983448,0,0x0,8
tick,0x7ffd093d1d94,383998729,0,0x0,8
tick,0x7ffd093d1d94,384014666,0,0x0,8
tick,0x7ffd093d1d94,384029722,0,0x0,8
tick,0x7ffd093d1d94,384045847,0,0x0,8
tick,0x7ffd093d1d94,384060770,0,0x0,8
tick,0x7ffd093d1d94,384076298,0,0x0,8
tick,0x7ffd093d1d94,384092151,0,0x0,8
tick,0x7ffd093d1d94,384107606,0,0x0,8
tick,0x7ffd093d1d94,384123183,0,0x0,8
tick,0x7ffd093d1d94,384138424,0,0x0,8
tick,0x7ffd093d1d94,384153908,0,0x0,8
tick,0x7ffd093d1d94,384169431,0,0x0,8
tick,0x7ffd093d1d94,384184572,0,0x0,8
tick,0x7ffd093d1d94,384199557,0,0x0,8
tick,0x7ffd093d1d94,384214962,0,0x0,8
tick,0x7ffd093d1d94,384230962,0,0x0,8
tick,0x7ffd093d1d94,384246360,0,0x0,8
tick,0x7ffd093d1d94,384261739,0,0x0,8
tick,0x7ffd093d1d94,384276778,0,0x0,8
tick,0x7ffd093d1d94,384292615,0,0x0,8
tick,0x7ffd093d1d94,384308063,0,0x0,8
tick,0x7ffd093d1d94,384323856,0,0x0,8
tick,0x7ffd093d1d94,384340617,0,0x0,8
tick,0x7ffd093d1d94,384356305,0,0x0,8
tick,0x7ffd093d1d94,384372149,0,0x0,8
tick,0x7ffd093d1d94,384387872,0,0x0,8
tick,0x7ffd093d1d94,384403650,0,0x0,8
tick,0x7ffd093d1d94,384419236,0,0x0,8
tick,0x7ffd093d1d94,384435035,0,0x0,8
tick,0x7ffd093d1d94,384449730,0,0x0,8
tick,0x7ffd093d1d94,384465341,0,0x0,8
tick,0x7ffd093d1d94,384481085,0,0x0,8
tick,0x7ffd093d1d94,384496955,0,0x0,8
tick,0x7ffd093d1d94,384512449,0,0x0,8
tick,0x7ffd093d1d94,384527630,0,0x0,8
tick,0x7ffd093d1d94,384542786,0,0x0,8
tick,0x7ffd093d1d94,384558221,0,0x0,8
tick,0x7ffd093d1d94,384574091,0,0x0,8
tick,0x7ffd093d1d94,384590343,0,0x0,8
tick,0x7ffd093d1d94,384606251,0,0x0,8
tick,0x7ffd093d1d94,384622053,0,0x0,8
tick,0x7ffd093d1d94,384637919,0,0x0,8
tick,0x7ffd093d1d94,384653563,0,0x0,8
tick,0x7ffd093d1d94,384669029,0,0x0,8
tick,0x7ffd093d1d94,384684764,0,0x0,8
tick,0x7ffd093d1d94,384699501,0,0x0,8
tick,0x7ffd093d1d94,384714527,0,0x0,8
tick,0x7ffd093d1d94,384730573,0,0x0,8
tick,0x7ffd093d1d94,384745932,0,0x0,8
tick,0x7ffd093d1d94,384761633,0,0x0,8
tick,0x7ffd093d1d94,384777363,0,0x0,8
tick,0x7ffd093d1d94,384793580,0,0x0,8
tick,0x7ffd093d1d94,384809411,0,0x0,8
tick,0x7ffd093d1d94,384825219,0,0x0,8
tick,0x7ffd093d1d94,384840509,0,0x0,8
tick,0x7ffd093d1d94,384855620,0,0x0,8
tick,0x7ffd093d1d94,384870971,0,0x0,8
tick,0x7ffd093d1d94,384886131,0,0x0,8
tick,0x7ffd093d1d94,384901814,0,0x0,8
tick,0x7ffd093d1d94,384917590,0,0x0,8
tick,0x7ffd093d1d94,384933428,0,0x0,8
tick,0x7ffd093d1d94,384948463,0,0x0,8
tick,0x7ffd093d1d94,384964719,0,0x0,8
tick,0x7ffd093d1d94,384979854,0,0x0,8
tick,0x7ffd093d1d94,384995323,0,0x0,8
tick,0x7ffd093d1d94,385010960,0,0x0,8
tick,0x7ffd093d1d94,385025791,0,0x0,8
tick,0x7ffd093d1d94,385040843,0,0x0,8
tick,0x7ffd093d1d94,385056557,0,0x0,8
tick,0x7ffd093d1d94,385072131,0,0x0,8
tick,0x7ffd093d1d94,385088294,0,0x0,8
tick,0x7ffd093d1d94,385104227,0,0x0,8
tick,0x7ffd093d1d94,385119722,0,0x0,8
tick,0x7ffd093d1d94,385135151,0,0x0,8
tick,0x7ffd093d1d94,385149780,0,0x0,8
tick,0x7ffd093d1d94,385165328,0,0x0,8
tick,0x7ffd093d1d94,385180956,0,0x0,8
tick,0x7ffd093d1d94,385196622,0,0x0,8
tick,0x7ffd093d1d94,385211850,0,0x0,8
tick,0x7ffd093d1d94,385227634,0,0x0,8
tick,0x7ffd093d1d94,385242697,0,0x0,8
tick,0x7ffd093d1d94,385258347,0,0x0,8
tick,0x7ffd093d1d94,385274052,0,0x0,8
tick,0x7ffd093d1d94,385289446,0,0x0,8
tick,0x7ffd093d1d94,385304933,0,0x0,8
tick,0x7ffd093d1d94,385320144,0,0x0,8
tick,0x7ffd093d1d94,385335831,0,0x0,8
tick,0x7ffd093d1d94,385351644,0,0x0,8
tick,0x7ffd093d1d94,385367725,0,0x0,8
tick,0x7ffd093d1d94,385383632,0,0x0,8
tick,0x7ffd093d1d94,385399521,0,0x0,8
tick,0x7ffd093d1d94,385414215,0,0x0,8
tick,0x7ffd093d1d94,385429554,0,0x0,8
tick,0x7ffd093d1d94,385445375,0,0x0,8
tick,0x7ffd093d1d94,385461248,0,0x0,8
tick,0x7ffd093d1d94,385476893,0,0x0,8
tick,0x7ffd093d1d94,385492501,0,0x0,8
tick,0x7ffd093d1d94,385507527,0,0x0,8
tick,0x7ffd093d1d94,385522782,0,0x0,8
tick,0x7ffd093d1d94,385538336,0,0x0,8
tick,0x7ffd093d1d94,385553981,0,0x0,8
tick,0x7ffd093d1d94,385569999,0,0x0,8
tick,0x7ffd093d1d94,385585417,0,0x0,8
tick,0x7ffd093d1d94,385600657,0,0x0,8
tick,0x7ffd093d1d94,385615876,0,0x0,8
tick,0x7ffd093d1d94,385631612,0,0x0,8
tick,0x7ffd093d1d94,385646459,0,0x0,8
tick,0x7ffd093d1d94,385661744,0,0x0,8
tick,0x7ffd093d1d94,385676885,0,0x0,8
tick,0x7ffd093d1d94,385693029,0,0x0,8
tick,0x7ffd093d1d94,385708362,0,0x0,8
tick,0x7ffd093d1d94,385724252,0,0x0,8
tick,0x7ffd093d1d94,385739589,0,0x0,8
tick,0x7ffd093d1d94,385755044,0,0x0,8
tick,0x7ffd093d1d94,385769998,0,0x0,8
tick,0x7ffd093d1d94,385785359,0,0x0,8
tick,0x7ffd093d1d94,385800152,0,0x0,8
tick,0x7ffd093d1d94,385815941,0,0x0,8
tick,0x7ffd093d1d94,385831645,0,0x0,8
tick,0x7ffd093d1d94,385847330,0,0x0,8
tick,0x7ffd093d1d94,385864255,0,0x0,8
tick,0x7ffd093d1d94,385878130,0,0x0,8
tick,0x7ffd093d1d94,385893958,0,0x0,8
tick,0x7ffd093d1d94,385909915,0,0x0,8
tick,0x7ffd093d1d94,385925392,0,0x0,8
tick,0x7ffd093d1d94,385940489,0,0x0,8
tick,0x7ffd093d1d94,385955853,0,0x0,8
tick,0x7ffd093d1d94,385970559,0,0x0,8
tick,0x7ffd093d1d94,385986175,0,0x0,8
tick,0x7ffd093d1d94,386001709,0,0x0,8
tick,0x7ffd093d1d94,386017768,0,0x0,8
tick,0x7ffd093d1d94,386033949,0,0x0,8
tick,0x7ffd093d1d94,386049246,0,0x0,8
tick,0x7ffd093d1d94,386064459,0,0x0,8
tick,0x7ffd093d1d94,386079644,0,0x0,8
tick,0x7ffd093d1d94,386095063,0,0x0,8
tick,0x7ffd093d1d94,386110542,0,0x0,8
tick,0x7ffd093d1d94,386126239,0,0x0,8
tick,0x7ffd093d1d94,386141688,0,0x0,8
tick,0x7ffd093d1d94,386157592,0,0x0,8
tick,0x7ffd093d1d94,386172962,0,0x0,8
tick,0x7ffd093d1d94,386188189,0,0x0,8
tick,0x7ffd093d1d94,386203232,0,0x0,8
tick,0x7ffd093d1d94,386219166,0,0x0,8
tick,0x7ffd093d1d94,386235074,0,0x0,8
tick,0x7ffd093d1d94,386251055,0,0x0,8
tick,0x7ffd093d1d94,386266550,0,0x0,8
tick,0x7ffd093d1d94,386282285,0,0x0,8
tick,0x7ffd093d1d94,386298166,0,0x0,8
tick,0x7ffd093d1d94,386314218,0,0x0,8
tick,0x7ffd093d1d94,386330319,0,0x0,8
tick,0x7ffd093d1d94,386345655,0,0x0,8
tick,0x7ffd093d1d94,386360889,0,0x0,8
tick,0x7ffd093d1d94,386377092,0,0x0,8
tick,0x7ffd093d1d94,386392168,0,0x0,8
tick,0x7ffd093d1d94,386407315,0,0x0,8
tick,0x7ffd093d1d94,386423020,0,0x0,8
tick,0x7ffd093d1d94,386438044,0,0x0,8
tick,0x7ffd093d1d94,386454002,0,0x0,8
tick,0x7ffd093d1d94,386469232,0,0x0,8
tick,0x7ffd093d1d94,386485312,0,0x0,8
tick,0x7ffd093d1d94,386501044,0,0x0,8
tick,0x7ffd093d1d94,386516623,0,0x0,8
tick,0x7ffd093d1d94,386532463,0,0x0,8
tick,0x7ffd093d1d94,386547762,0,0x0,8
tick,0x7ffd093d1d94,386563523,0,0x0,8
tick,0x7ffd093d1d94,386579340,0,0x0,8
tick,0x7ffd093d1d94,386594377,0,0x0,8
tick,0x7ffd093d1d94,386610072,0,0x0,8
tick,0x7ffd093d1d94,386625225,0,0x0,8
tick,0x7ffd093d1d94,386641108,0,0x0,8
tick,0x7ffd093d1d94,386656760,0,0x0,8
tick,0x7ffd093d1d94,386672310,0,0x0,8
tick,0x7ffd093d1d94,386688500,0,0x0,8
tick,0x7ffd093d1d94,386704335,0,0x0,8
tick,0x7ffd093d1d94,386719970,0,0x0,8
tick,0x7ffd093d1d94,386736387,0,0x0,8
tick,0x7ffd093d1d94,386752537,0,0x0,8
tick,0x7ffd093d1d94,386768167,0,0x0,8
tick,0x7ffd093d1d94,386783978,0,0x0,8
tick,0x7ffd093d1d94,386799309,0,0x0,8
tick,0x7ffd093d1d94,386814168,0,0x0,8
tick,0x7ffd093d1d94,386829360,0,0x0,8
tick,0x7ffd093d1d94,386845281,0,0x0,8
tick,0x7ffd093d1d94,386861322,0,0x0,8
tick,0x7ffd093d1d94,386876395,0,0x0,8
tick,0x7ffd093d1d94,386892138,0,0x0,8
tick,0x7ffd093d1d94,386908148,0,0x0,8
tick,0x7ffd093d1d94,386924211,0,0x0,8
tick,0x7ffd093d1d94,386939618,0,0x0,8
tick,0x7ffd093d1d94,386954930,0,0x0,8
tick,0x7ffd093d1d94,386971247,0,0x0,8
tick,0x7ffd093d1d94,386986937,0,0x0,8
tick,0x7ffd093d1d94,387003093,0,0x0,8
tick,0x7ffd093d1d94,387018278,0,0x0,8
tick,0x7ffd093d1d94,387033877,0,0x0,8
tick,0x7ffd093d1d94,387050677,0,0x0,8
tick,0x7ffd093d1d94,387065809,0,0x0,8
tick,0x7ffd093d1d94,387081272,0,0x0,8
tick,0x7ffd093d1d94,387096754,0,0x0,8
tick,0x7ffd093d1d94,387112489,0,0x0,8
tick,0x7ffd093d1d94,387127417,0,0x0,8
tick,0x7ffd093d1d94,387143682,0,0x0,8
tick,0x7ffd093d1d94,387159168,0,0x0,8
tick,0x7ffd093d1d94,387174335,0,0x0,8
tick,0x7ffd093d1d94,387189602,0,0x0,8
tick,0x7ffd093d1d94,387205385,0,0x0,8
tick,0x7ffd093d1d94,387220780,0,0x0,8
tick,0x7ffd093d1d94,387235776,0,0x0,8
tick,0x7ffd093d1d94,387251443,0,0x0,8
tick,0x7ffd093d1d94,387267196,0,0x0,8
tick,0x7ffd093d1d94,387282653,0,0x0,8
tick,0x7ffd093d1d94,387297990,0,0x0,8
tick,0x7ffd093d1d94,387312769,0,0x0,8
tick,0x7ffd093d1d94,387328761,0,0x0,8
tick,0x7ffd093d1d94,387344705,0,0x0,8
tick,0x7ffd093d1d94,387360472,0,0x0,8
tick,0x7ffd093d1d94,387375895,0,0x0,8
tick,0x7ffd093d1d94,387391297,0,0x0,8
tick,0x7ffd093d1d94,387406908,0,0x0,8
tick,0x7ffd093d1d94,387422326,0,0x0,8
tick,0x7ffd093d1d94,387438055,0,0x0,8
tick,0x7ffd093d1d94,387454010,0,0x0,8
tick,0x7ffd093d1d94,387469848,0,0x0,8
tick,0x7ffd093d1d94,387485204,0,0x0,8
tick,0x7ffd093d1d94,387500458,0,0x0,8
tick,0x7ffd093d1d94,387515631,0,0x0,8
tick,0x7ffd093d1d94,387530869,0,0x0,8
tick,0x7ffd093d1d94,387546328,0,0x0,8
tick,0x7ffd093d1d94,387562430,0,0x0,8
tick,0x7ffd093d1d94,387578100,0,0x0,8
tick,0x7ffd093d1d94,387593704,0,0x0,8
tick,0x7ffd093d1d94,387608728,0,0x0,8
tick,0x7ffd093d1d94,387623961,0,0x0,8
tick,0x7ffd093d1d94,387639734,0,0x0,8
tick,0x7ffd093d1d94,387655105,0,0x0,8
tick,0x7ffd093d1d94,387670433,0,0x0,8
tick,0x7ffd093d1d94,387685644,0,0x0,8
tick,0x7ffd093d1d94,387701110,0,0x0,8
tick,0x7ffd093d1d94,387716370,0,0x0,8
tick,0x7ffd093d1d94,387732465,0,0x0,8
tick,0x7ffd093d1d94,387747585,0,0x0,8
tick,0x7ffd093d1d94,387762990,0,0x0,8
tick,0x7ffd093d1d94,387778549,0,0x0,8
tick,0x7ffd093d1d94,387794094,0,0x0,8
tick,0x7ffd093d1d94,387809349,0,0x0,8
tick,0x7ffd093d1d94,387824695,0,0x0,8
tick,0x7ffd093d1d94,387840480,0,0x0,8
tick,0x7ffd093d1d94,387855713,0,0x0,8
tick,0x7ffd093d1d94,387871480,0,0x0,8
tick,0x7ffd093d1d94,387886855,0,0x0,8
tick,0x7ffd093d1d94,387902364,0,0x0,8
tick,0x7ffd093d1d94,387917829,0,0x0,8
tick,0x7ffd093d1d94,387933605,0,0x0,8
tick,0x7ffd093d1d94,387948845,0,0x0,8
tick,0x7ffd093d1d94,387964657,0,0x0,8
tick,0x7ffd093d1d94,387979802,0,0x0,8
tick,0x7ffd093d1d94,387996115,0,0x0,8
tick,0x7ffd093d1d94,388011374,0,0x0,8
tick,0x7ffd093d1d94,388027607,0,0x0,8
